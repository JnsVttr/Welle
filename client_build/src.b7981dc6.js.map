{"version":3,"sources":["../node_modules/parseuri/index.js","../node_modules/ms/index.js","../node_modules/socket.io-client/node_modules/debug/src/common.js","../node_modules/process/browser.js","../node_modules/socket.io-client/node_modules/debug/src/browser.js","../node_modules/socket.io-client/build/url.js","../node_modules/has-cors/index.js","../node_modules/engine.io-client/lib/globalThis.browser.js","../node_modules/engine.io-client/lib/xmlhttprequest.js","../node_modules/engine.io-parser/lib/commons.js","../node_modules/engine.io-parser/lib/encodePacket.browser.js","../node_modules/base64-arraybuffer/lib/base64-arraybuffer.js","../node_modules/engine.io-parser/lib/decodePacket.browser.js","../node_modules/engine.io-parser/lib/index.js","../node_modules/component-emitter/index.js","../node_modules/engine.io-client/node_modules/debug/src/common.js","../node_modules/engine.io-client/node_modules/debug/src/browser.js","../node_modules/engine.io-client/lib/transport.js","../node_modules/parseqs/index.js","../node_modules/yeast/index.js","../node_modules/engine.io-client/lib/transports/polling.js","../node_modules/engine.io-client/lib/util.js","../node_modules/engine.io-client/lib/transports/polling-xhr.js","../node_modules/engine.io-client/lib/transports/polling-jsonp.js","../node_modules/engine.io-client/lib/transports/websocket-constructor.browser.js","../node_modules/base64-js/index.js","../node_modules/ieee754/index.js","../node_modules/isarray/index.js","../node_modules/buffer/index.js","../node_modules/engine.io-client/lib/transports/websocket.js","../node_modules/engine.io-client/lib/transports/index.js","../node_modules/engine.io-client/lib/socket.js","../node_modules/engine.io-client/lib/index.js","../node_modules/socket.io-parser/dist/is-binary.js","../node_modules/socket.io-parser/dist/binary.js","../node_modules/socket.io-parser/node_modules/debug/src/common.js","../node_modules/socket.io-parser/node_modules/debug/src/browser.js","../node_modules/socket.io-parser/dist/index.js","../node_modules/socket.io-client/build/on.js","../node_modules/socket.io-client/build/typed-events.js","../node_modules/socket.io-client/build/socket.js","../node_modules/backo2/index.js","../node_modules/socket.io-client/build/manager.js","../node_modules/socket.io-client/build/index.js","../node_modules/regenerator-runtime/runtime.js","../../Tone/version.ts","../node_modules/@babel/runtime/helpers/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/arrayLikeToArray.js","../node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js","../node_modules/@babel/runtime/helpers/nonIterableRest.js","../node_modules/@babel/runtime/helpers/slicedToArray.js","../node_modules/@babel/runtime/helpers/classCallCheck.js","../node_modules/@babel/runtime/helpers/createClass.js","../node_modules/automation-events/build/es5/bundle.js","../../../src/factories/abort-error.ts","../../../src/factories/add-active-input-connection-to-audio-node.ts","../../../src/factories/add-audio-node-connections.ts","../../../src/factories/add-audio-param-connections.ts","../../src/globals.ts","../../../src/helpers/is-constructible.ts","../../../src/helpers/split-import-statements.ts","../../../src/factories/add-audio-worklet-module.ts","../../../src/helpers/get-value-for-key.ts","../../../src/helpers/pick-element-from-set.ts","../../../src/helpers/delete-passive-input-connection-to-audio-node.ts","../../../src/helpers/get-event-listeners-of-audio-node.ts","../../../src/helpers/set-internal-state-to-active.ts","../../../src/guards/audio-worklet-node.ts","../../../src/helpers/set-internal-state-to-passive.ts","../../../src/helpers/set-internal-state-to-passive-when-necessary.ts","../../../src/factories/add-connection-to-audio-node.ts","../../../src/factories/add-passive-input-connection-to-audio-node.ts","../../../src/factories/add-silent-connection.ts","../../../src/factories/add-unrendered-audio-worklet-node.ts","../../../src/factories/analyser-node-constructor.ts","../../../src/helpers/is-owned-by-context.ts","../../../src/factories/analyser-node-renderer-factory.ts","../../../src/helpers/test-audio-buffer-copy-channel-methods-out-of-bounds-support.ts","../../../src/factories/index-size-error.ts","../../../src/helpers/wrap-audio-buffer-get-channel-data-method.ts","../../../src/factories/audio-buffer-constructor.ts","../../src/constants.ts","../../../src/helpers/is-active-audio-node.ts","../../../src/factories/audio-buffer-source-node-constructor.ts","../../../src/factories/audio-buffer-source-node-renderer-factory.ts","../../../src/guards/audio-buffer-source-node.ts","../../../src/guards/biquad-filter-node.ts","../../../src/guards/constant-source-node.ts","../../../src/guards/gain-node.ts","../../../src/guards/oscillator-node.ts","../../../src/guards/stereo-panner-node.ts","../../../src/helpers/get-audio-node-connections.ts","../../../src/helpers/get-audio-param-connections.ts","../../../src/helpers/deactivate-active-audio-node-input-connections.ts","../../../src/helpers/deactivate-audio-graph.ts","../../../src/helpers/is-valid-latency-hint.ts","../../../src/factories/audio-context-constructor.ts","../../../src/factories/audio-destination-node-constructor.ts","../../../src/factories/audio-destination-node-renderer-factory.ts","../../../src/factories/audio-listener-factory.ts","../../../src/guards/audio-node.ts","../../../src/guards/audio-node-output-connection.ts","../../../src/helpers/insert-element-in-set.ts","../../../src/helpers/add-active-input-connection-to-audio-param.ts","../../../src/helpers/add-passive-input-connection-to-audio-param.ts","../../../src/guards/native-audio-node-faker.ts","../../../src/helpers/connect-native-audio-node-to-native-audio-node.ts","../../../src/helpers/delete-active-input-connection.ts","../../../src/helpers/delete-active-input-connection-to-audio-param.ts","../../../src/helpers/delete-event-listeners-of-audio-node.ts","../../../src/helpers/delete-passive-input-connection-to-audio-param.ts","../../../src/helpers/disconnect-native-audio-node-from-native-audio-node.ts","../../../src/helpers/get-native-audio-node.ts","../../../src/helpers/get-native-audio-param.ts","../../../src/helpers/is-part-of-a-cycle.ts","../../../src/helpers/is-passive-audio-node.ts","../../../src/helpers/test-audio-node-disconnect-method-support.ts","../../../src/helpers/visit-each-audio-node-once.ts","../../../src/guards/native-audio-node.ts","../../../src/helpers/wrap-audio-node-disconnect-method.ts","../../../src/factories/audio-node-constructor.ts","../../../src/factories/audio-param-factory.ts","../../../src/factories/audio-param-renderer.ts","../../src/read-only-map.ts","../../../src/factories/audio-worklet-node-constructor.ts","../../../src/helpers/copy-from-channel.ts","../../../src/helpers/copy-to-channel.ts","../../../src/helpers/create-nested-arrays.ts","../../../src/helpers/get-audio-worklet-processor.ts","../../../src/factories/audio-worklet-node-renderer-factory.ts","../../../src/factories/base-audio-context-constructor.ts","../../../src/factories/biquad-filter-node-constructor.ts","../../../src/factories/biquad-filter-node-renderer-factory.ts","../../../src/factories/cache-test-result.ts","../../../src/factories/channel-merger-node-constructor.ts","../../../src/factories/channel-merger-node-renderer-factory.ts","../../../src/factories/channel-splitter-node-constructor.ts","../../../src/factories/channel-splitter-node-renderer-factory.ts","../../../src/factories/connect-audio-param.ts","../../../src/factories/connect-multiple-outputs.ts","../../../src/factories/connected-native-audio-buffer-source-node-factory.ts","../../../src/factories/constant-source-node-constructor.ts","../../../src/factories/constant-source-node-renderer-factory.ts","../../../src/factories/convert-number-to-unsigned-long.ts","../../../src/factories/convolver-node-constructor.ts","../../../src/factories/convolver-node-renderer-factory.ts","../../../src/factories/create-native-offline-audio-context.ts","../../../src/factories/data-clone-error.ts","../../../src/helpers/detach-array-buffer.ts","../../../src/factories/decode-audio-data.ts","../../../src/factories/decrement-cycle-counter.ts","../../../src/factories/delay-node-constructor.ts","../../../src/factories/delay-node-renderer-factory.ts","../../../src/factories/delete-active-input-connection-to-audio-node.ts","../../../src/factories/delete-unrendered-audio-worklet-node.ts","../../../src/guards/delay-node.ts","../../../src/factories/detect-cycles.ts","../../../src/factories/disconnect-multiple-outputs.ts","../../../src/factories/dynamics-compressor-node-constructor.ts","../../../src/factories/dynamics-compressor-node-renderer-factory.ts","../../../src/factories/encoding-error.ts","../../../src/factories/evaluate-source.ts","../../../src/factories/event-target-constructor.ts","../../../src/factories/expose-current-frame-and-current-time.ts","../../../src/factories/fetch-source.ts","../../../src/factories/gain-node-constructor.ts","../../../src/factories/gain-node-renderer-factory.ts","../../../src/factories/get-active-audio-worklet-node-inputs.ts","../../../src/factories/get-audio-node-renderer.ts","../../../src/factories/get-audio-node-tail-time.ts","../../../src/factories/get-audio-param-renderer.ts","../../../src/factories/get-backup-offline-audio-context.ts","../../../src/factories/invalid-state-error.ts","../../../src/factories/get-native-context.ts","../../../src/factories/get-or-create-backup-offline-audio-context.ts","../../../src/factories/get-unrendered-audio-worklet-nodes.ts","../../../src/factories/invalid-access-error.ts","../../../src/helpers/wrap-iir-filter-node-get-frequency-response-method.ts","../../../src/factories/iir-filter-node-constructor.ts","../../../src/helpers/filter-buffer.ts","../../../src/factories/iir-filter-node-renderer-factory.ts","../../../src/factories/increment-cycle-counter-factory.ts","../../../src/factories/is-any-audio-context.ts","../../../src/factories/is-any-audio-node.ts","../../../src/factories/is-any-audio-param.ts","../../../src/factories/is-any-offline-audio-context.ts","../../../src/factories/is-native-audio-context.ts","../../../src/factories/is-native-audio-node.ts","../../../src/factories/is-native-audio-param.ts","../../../src/factories/is-native-context.ts","../../../src/factories/is-native-offline-audio-context.ts","../../../src/factories/is-secure-context.ts","../../../src/factories/is-supported-promise.ts","../../../src/factories/media-element-audio-source-node-constructor.ts","../../../src/factories/media-stream-audio-destination-node-constructor.ts","../../../src/factories/media-stream-audio-source-node-constructor.ts","../../../src/factories/media-stream-track-audio-source-node-constructor.ts","../../../src/factories/minimal-audio-context-constructor.ts","../../../src/factories/minimal-base-audio-context-constructor.ts","../../../src/helpers/test-promise-support.ts","../../../src/factories/minimal-offline-audio-context-constructor.ts","../../../src/factories/monitor-connections.ts","../../../src/helpers/assign-native-audio-node-option.ts","../../../src/helpers/assign-native-audio-node-options.ts","../../../src/helpers/test-analyser-node-get-float-time-domain-data-method-support.ts","../../../src/helpers/wrap-analyser-node-get-float-time-domain-data-method.ts","../../../src/factories/native-analyser-node-factory.ts","../../../src/factories/native-audio-buffer-constructor.ts","../../../src/helpers/assign-native-audio-node-audio-param-value.ts","../../../src/helpers/wrap-audio-buffer-source-node-start-method-consecutive-calls.ts","../../../src/helpers/wrap-audio-scheduled-source-node-start-method-negative-parameters.ts","../../../src/helpers/wrap-audio-scheduled-source-node-stop-method-negative-parameters.ts","../../../src/factories/native-audio-buffer-source-node-factory.ts","../../../src/factories/native-audio-context-constructor.ts","../../../src/factories/native-audio-destination-node.ts","../../../src/factories/native-audio-worklet-node-constructor.ts","../../../src/helpers/test-clonability-of-audio-worklet-node-options.ts","../../../src/factories/native-audio-worklet-node-factory.ts","../../../src/helpers/compute-buffer-size.ts","../../../src/helpers/clone-audio-worklet-node-options.ts","../../../src/helpers/create-audio-worklet-processor-promise.ts","../../../src/helpers/create-audio-worklet-processor.ts","../../../src/factories/native-audio-worklet-node-faker-factory.ts","../../../src/factories/native-biquad-filter-node.ts","../../../src/factories/native-channel-merger-node-factory.ts","../../../src/helpers/wrap-channel-splitter-node.ts","../../../src/factories/native-channel-splitter-node.ts","../../../src/factories/native-constant-source-node-factory.ts","../../../src/helpers/intercept-connections.ts","../../../src/factories/native-constant-source-node-faker-factory.ts","../../../src/factories/native-convolver-node-factory.ts","../../../src/factories/native-delay-node.ts","../../../src/factories/native-dynamics-compressor-node-factory.ts","../../../src/factories/native-gain-node.ts","../../../src/factories/native-iir-filter-node-factory.ts","../../../src/factories/native-iir-filter-node-faker-factory.ts","../../../src/factories/native-media-element-audio-source-node.ts","../../../src/factories/native-media-stream-audio-destination-node.ts","../../../src/factories/native-media-stream-audio-source-node.ts","../../../src/factories/native-media-stream-track-audio-source-node-factory.ts","../../../src/factories/native-offline-audio-context-constructor.ts","../../../src/factories/native-oscillator-node-factory.ts","../../../src/factories/native-panner-node-factory.ts","../../../src/factories/native-panner-node-faker-factory.ts","../../../src/factories/native-periodic-wave-factory.ts","../../../src/factories/native-script-processor-node.ts","../../../src/factories/native-stereo-panner-node-factory.ts","../../../src/factories/native-stereo-panner-node-faker-factory.ts","../../../src/factories/native-wave-shaper-node-factory.ts","../../../src/factories/native-wave-shaper-node-faker-factory.ts","../../../src/factories/not-supported-error.ts","../../../src/factories/offline-audio-context-constructor.ts","../../../src/factories/oscillator-node-constructor.ts","../../../src/factories/oscillator-node-renderer-factory.ts","../../../src/factories/panner-node-constructor.ts","../../../src/factories/panner-node-renderer-factory.ts","../../../src/factories/periodic-wave-constructor.ts","../../../src/factories/render-automation.ts","../../../src/factories/render-inputs-of-audio-node.ts","../../../src/factories/render-inputs-of-audio-param.ts","../../../src/factories/render-native-offline-audio-context.ts","../../../src/factories/set-active-audio-worklet-node-inputs.ts","../../../src/factories/set-audio-node-tail-time.ts","../../../src/factories/start-rendering.ts","../../../src/factories/stereo-panner-node-constructor.ts","../../../src/factories/stereo-panner-node-renderer-factory.ts","../../../src/factories/test-audio-buffer-constructor-support.ts","../../../src/factories/test-audio-buffer-copy-channel-methods-subarray-support.ts","../../../src/factories/test-audio-context-close-method-support.ts","../../../src/factories/test-audio-context-decode-audio-data-method-type-error-support.ts","../../../src/factories/test-audio-context-options-support.ts","../../../src/factories/test-audio-node-connect-method-support.ts","../../../src/factories/test-audio-worklet-processor-no-outputs-support.ts","../../../src/factories/test-audio-worklet-processor-post-message-support.ts","../../../src/factories/test-channel-merger-node-channel-count-support.ts","../../../src/factories/test-constant-source-node-accurate-scheduling-support.ts","../../../src/factories/test-convolver-node-buffer-reassignability-support.ts","../../../src/factories/test-convolver-node-channel-count-support.ts","../../../src/factories/test-is-secure-context-support.ts","../../../src/factories/test-media-stream-audio-source-node-media-stream-without-audio-track-support.ts","../../../src/factories/test-offline-audio-context-current-time-support.ts","../../../src/factories/test-stereo-panner-node-default-value-support.ts","../../../src/factories/unknown-error.ts","../../../src/factories/wave-shaper-node-constructor.ts","../../../src/factories/wave-shaper-node-renderer-factory.ts","../../../src/factories/window.ts","../../../src/factories/wrap-audio-buffer-copy-channel-methods.ts","../../../src/factories/wrap-audio-buffer-copy-channel-methods-out-of-bounds.ts","../../../src/factories/wrap-audio-buffer-source-node-stop-method-nullified-buffer.ts","../../../src/factories/wrap-channel-merger-node.ts","../../../src/helpers/is-dc-curve.ts","../../../src/helpers/overwrite-accessors.ts","../../../src/helpers/sanitize-audio-worklet-node-options.ts","../../../src/helpers/sanitize-channel-splitter-options.ts","../../../src/helpers/sanitize-periodic-wave-options.ts","../../../src/helpers/set-value-at-time-until-possible.ts","../../../src/helpers/test-audio-buffer-source-node-start-method-consecutive-calls-support.ts","../../../src/helpers/test-audio-buffer-source-node-start-method-offset-clamping-support.ts","../../../src/helpers/test-audio-buffer-source-node-stop-method-nullified-buffer-support.ts","../../../src/helpers/test-audio-scheduled-source-node-start-method-negative-parameters-support.ts","../../../src/helpers/test-audio-scheduled-source-node-stop-method-consecutive-calls-support.ts","../../../src/helpers/test-audio-scheduled-source-node-stop-method-negative-parameters-support.ts","../../../src/helpers/test-dom-exception-constructor-support.ts","../../../src/helpers/test-transferables-support.ts","../../../src/helpers/wrap-audio-buffer-source-node-start-method-offset-clamping.ts","../../../src/helpers/wrap-audio-scheduled-source-node-stop-method-consecutive-calls.ts","../../../src/helpers/wrap-event-listener.ts","../../../src/interfaces/index.ts","../../../src/types/index.ts","../../src/module.ts","../../../../Tone/core/util/Debug.ts","../../../../Tone/core/util/TypeCheck.ts","../../../../Tone/core/context/AudioContext.ts","../node_modules/tslib/tslib.es6.js","../../../../Tone/core/clock/Ticker.ts","../../../../Tone/core/util/AdvancedTypeCheck.ts","../../../../Tone/core/util/Defaults.ts","../../../Tone/core/Tone.ts","../../../../Tone/core/util/Math.ts","../../../../Tone/core/util/Timeline.ts","../../../../Tone/core/context/ContextInitialization.ts","../../../../Tone/core/util/Emitter.ts","../../../../Tone/core/context/BaseContext.ts","../../../../Tone/core/context/Context.ts","../../../../Tone/core/context/DummyContext.ts","../../../../Tone/core/util/Interface.ts","../../../../Tone/core/context/ToneAudioBuffer.ts","../../../../Tone/core/context/OfflineContext.ts","../../../Tone/core/Global.ts","../../../../Tone/core/type/Conversions.ts","../../../../Tone/core/type/TimeBase.ts","../../../../Tone/core/type/Time.ts","../../../../Tone/core/type/Frequency.ts","../../../../Tone/core/type/TransportTime.ts","../../../../Tone/core/context/ToneWithContext.ts","../../../../Tone/core/util/StateTimeline.ts","../../../../Tone/core/context/Param.ts","../../../../Tone/core/context/ToneAudioNode.ts","../../../../Tone/core/context/Gain.ts","../../../Tone/source/OneShotSource.ts","../../../Tone/signal/ToneConstantSource.ts","../../../Tone/signal/Signal.ts","../../../../Tone/core/clock/TickParam.ts","../../../../Tone/core/clock/TickSignal.ts","../../../../Tone/core/clock/TickSource.ts","../../../../Tone/core/clock/Clock.ts","../../../../Tone/core/context/Delay.ts","../../../../Tone/core/context/Offline.ts","../../../../Tone/core/context/ToneAudioBuffers.ts","../../../../Tone/core/type/Midi.ts","../../../../Tone/core/type/Ticks.ts","../../../../Tone/core/util/Draw.ts","../../../../Tone/core/util/IntervalTimeline.ts","../../../../Tone/core/type/Units.ts","../../../Tone/core/index.ts","../../../../Tone/component/channel/Volume.ts","../../../../Tone/core/context/Destination.ts","../../../../Tone/core/util/TimelineValue.ts","../../../../Tone/core/clock/TransportEvent.ts","../../../../Tone/core/clock/TransportRepeatEvent.ts","../../../../Tone/core/clock/Transport.ts","../../../Tone/source/Source.ts","../../../../Tone/source/buffer/ToneBufferSource.ts","../../../Tone/source/Noise.ts","../../../Tone/source/UserMedia.ts","../../../../Tone/source/oscillator/OscillatorInterface.ts","../../../../Tone/source/oscillator/ToneOscillatorNode.ts","../../../../Tone/source/oscillator/Oscillator.ts","../../../Tone/signal/SignalOperator.ts","../../../Tone/signal/WaveShaper.ts","../../../Tone/signal/AudioToGain.ts","../../../Tone/signal/Multiply.ts","../../../../Tone/source/oscillator/AMOscillator.ts","../../../../Tone/source/oscillator/FMOscillator.ts","../../../../Tone/source/oscillator/PulseOscillator.ts","../../../../Tone/source/oscillator/FatOscillator.ts","../../../../Tone/source/oscillator/PWMOscillator.ts","../../../../Tone/source/oscillator/OmniOscillator.ts","../../../Tone/signal/Add.ts","../../../Tone/signal/Scale.ts","../../../Tone/signal/Zero.ts","../../../../Tone/source/oscillator/LFO.ts","../../../../Tone/core/util/Decorator.ts","../../../../Tone/source/buffer/Player.ts","../../../../Tone/source/buffer/Players.ts","../../../../Tone/source/buffer/GrainPlayer.ts","../../../Tone/source/index.ts","../../../Tone/signal/Abs.ts","../../../Tone/signal/GainToAudio.ts","../../../Tone/signal/Negate.ts","../../../Tone/signal/Subtract.ts","../../../Tone/signal/GreaterThanZero.ts","../../../Tone/signal/GreaterThan.ts","../../../Tone/signal/Pow.ts","../../../Tone/signal/ScaleExp.ts","../../../Tone/signal/SyncedSignal.ts","../../../Tone/signal/index.ts","../../../../Tone/component/envelope/Envelope.ts","../../../Tone/instrument/Instrument.ts","../../../Tone/instrument/Monophonic.ts","../../../../Tone/component/envelope/AmplitudeEnvelope.ts","../../../Tone/instrument/Synth.ts","../../../Tone/instrument/ModulationSynth.ts","../../../Tone/instrument/AMSynth.ts","../../../../Tone/component/filter/BiquadFilter.ts","../../../../Tone/component/filter/Filter.ts","../../../../Tone/component/envelope/FrequencyEnvelope.ts","../../../Tone/instrument/MonoSynth.ts","../../../Tone/instrument/DuoSynth.ts","../../../Tone/instrument/FMSynth.ts","../../../Tone/instrument/MetalSynth.ts","../../../Tone/instrument/MembraneSynth.ts","../../../Tone/instrument/NoiseSynth.ts","../../../../Tone/core/worklet/WorkletGlobalScope.ts","../../../../Tone/core/worklet/ToneAudioWorklet.ts","../../../../Tone/core/worklet/ToneAudioWorkletProcessor.worklet.ts","../../../../Tone/core/worklet/SingleIOProcessor.worklet.ts","../../../../Tone/core/worklet/DelayLine.worklet.ts","../../../../Tone/component/filter/FeedbackCombFilter.worklet.ts","../../../../Tone/component/filter/FeedbackCombFilter.ts","../../../../Tone/component/filter/OnePoleFilter.ts","../../../../Tone/component/filter/LowpassCombFilter.ts","../../../Tone/instrument/PluckSynth.ts","../../../Tone/instrument/PolySynth.ts","../../../Tone/instrument/Sampler.ts","../../../Tone/instrument/index.ts","../../../Tone/event/ToneEvent.ts","../../../Tone/event/Loop.ts","../../../Tone/event/Part.ts","../../../Tone/event/PatternGenerator.ts","../../../Tone/event/Pattern.ts","../../../Tone/event/Sequence.ts","../../../Tone/event/index.ts","../../../../Tone/component/channel/CrossFade.ts","../../../Tone/effect/Effect.ts","../../../Tone/effect/LFOEffect.ts","../../../Tone/effect/AutoFilter.ts","../../../../Tone/component/channel/Panner.ts","../../../Tone/effect/AutoPanner.ts","../../../../Tone/component/analysis/Follower.ts","../../../Tone/effect/AutoWah.ts","../../../Tone/effect/BitCrusher.worklet.ts","../../../Tone/effect/BitCrusher.ts","../../../Tone/effect/Chebyshev.ts","../../../../Tone/component/channel/Split.ts","../../../../Tone/component/channel/Merge.ts","../../../Tone/effect/StereoEffect.ts","../../../Tone/effect/StereoFeedbackEffect.ts","../../../Tone/effect/Chorus.ts","../../../Tone/effect/Distortion.ts","../../../Tone/effect/FeedbackEffect.ts","../../../Tone/effect/FeedbackDelay.ts","../../../../Tone/component/filter/PhaseShiftAllpass.ts","../../../Tone/effect/FrequencyShifter.ts","../../../Tone/effect/Freeverb.ts","../../../Tone/effect/JCReverb.ts","../../../Tone/effect/StereoXFeedbackEffect.ts","../../../Tone/effect/PingPongDelay.ts","../../../Tone/effect/PitchShift.ts","../../../Tone/effect/Phaser.ts","../../../Tone/effect/Reverb.ts","../../../../Tone/component/channel/MidSideSplit.ts","../../../../Tone/component/channel/MidSideMerge.ts","../../../Tone/effect/MidSideEffect.ts","../../../Tone/effect/StereoWidener.ts","../../../Tone/effect/Tremolo.ts","../../../Tone/effect/Vibrato.ts","../../../Tone/effect/index.ts","../../../../Tone/component/analysis/Analyser.ts","../../../../Tone/component/analysis/MeterBase.ts","../../../../Tone/component/analysis/Meter.ts","../../../../Tone/component/analysis/FFT.ts","../../../../Tone/component/analysis/DCMeter.ts","../../../../Tone/component/analysis/Waveform.ts","../../../../Tone/component/channel/Solo.ts","../../../../Tone/component/channel/PanVol.ts","../../../../Tone/component/channel/Channel.ts","../../../../Tone/component/channel/Mono.ts","../../../../Tone/component/channel/MultibandSplit.ts","../../../../Tone/core/context/Listener.ts","../../../../Tone/component/channel/Panner3D.ts","../../../../Tone/component/channel/Recorder.ts","../../../../Tone/component/dynamics/Compressor.ts","../../../../Tone/component/dynamics/Gate.ts","../../../../Tone/component/dynamics/Limiter.ts","../../../../Tone/component/dynamics/MidSideCompressor.ts","../../../../Tone/component/dynamics/MultibandCompressor.ts","../../../../Tone/component/filter/EQ3.ts","../../../../Tone/component/filter/Convolver.ts","../../../Tone/component/index.ts","../../Tone/classes.ts","../../Tone/index.ts","html/ohm/grammar2021.js","../node_modules/ohm-js/src/Failure.js","../node_modules/inherits/inherits_browser.js","../node_modules/util-extend/extend.js","../node_modules/ohm-js/src/common.js","../node_modules/ohm-js/src/nodes.js","../node_modules/ohm-js/third_party/UnicodeCategories.js","../node_modules/ohm-js/src/pexprs-allowsSkippingPrecedingSpace.js","../node_modules/ohm-js/src/Namespace.js","../node_modules/ohm-js/src/errors.js","../node_modules/ohm-js/src/util.js","../node_modules/ohm-js/src/pexprs-assertAllApplicationsAreValid.js","../node_modules/ohm-js/src/pexprs-assertChoicesHaveUniformArity.js","../node_modules/ohm-js/src/pexprs-assertIteratedExprsAreNotNullable.js","../node_modules/ohm-js/src/pexprs-check.js","../node_modules/ohm-js/src/Interval.js","../node_modules/ohm-js/src/Trace.js","../node_modules/ohm-js/src/pexprs-eval.js","../node_modules/ohm-js/src/pexprs-getArity.js","../node_modules/ohm-js/src/pexprs-generateExample.js","../node_modules/ohm-js/src/pexprs-outputRecipe.js","../node_modules/ohm-js/src/pexprs-introduceParams.js","../node_modules/ohm-js/src/pexprs-isNullable.js","../node_modules/ohm-js/src/pexprs-substituteParams.js","../node_modules/ohm-js/src/pexprs-toDisplayString.js","../node_modules/ohm-js/src/pexprs-toArgumentNameList.js","../node_modules/ohm-js/src/pexprs-toFailure.js","../node_modules/ohm-js/src/pexprs-toString.js","../node_modules/ohm-js/src/pexprs.js","../node_modules/ohm-js/src/CaseInsensitiveTerminal.js","../node_modules/ohm-js/src/InputStream.js","../node_modules/ohm-js/src/MatchResult.js","../node_modules/ohm-js/src/PosInfo.js","../node_modules/ohm-js/src/MatchState.js","../node_modules/ohm-js/src/Matcher.js","../node_modules/ext/global-this/is-implemented.js","../node_modules/ext/global-this/implementation.js","../node_modules/ext/global-this/index.js","../node_modules/es6-symbol/is-implemented.js","../node_modules/type/value/is.js","../node_modules/type/object/is.js","../node_modules/type/prototype/is.js","../node_modules/type/function/is.js","../node_modules/type/plain-function/is.js","../node_modules/es5-ext/object/assign/is-implemented.js","../node_modules/es5-ext/object/keys/is-implemented.js","../node_modules/es5-ext/function/noop.js","../node_modules/es5-ext/object/is-value.js","../node_modules/es5-ext/object/keys/shim.js","../node_modules/es5-ext/object/keys/index.js","../node_modules/es5-ext/object/valid-value.js","../node_modules/es5-ext/object/assign/shim.js","../node_modules/es5-ext/object/assign/index.js","../node_modules/es5-ext/object/normalize-options.js","../node_modules/es5-ext/string/#/contains/is-implemented.js","../node_modules/es5-ext/string/#/contains/shim.js","../node_modules/es5-ext/string/#/contains/index.js","../node_modules/d/index.js","../node_modules/es6-symbol/is-symbol.js","../node_modules/es6-symbol/validate-symbol.js","../node_modules/es6-symbol/lib/private/generate-name.js","../node_modules/es6-symbol/lib/private/setup/standard-symbols.js","../node_modules/es6-symbol/lib/private/setup/symbol-registry.js","../node_modules/es6-symbol/polyfill.js","../node_modules/es6-symbol/index.js","../node_modules/ohm-js/dist/operations-and-attributes.js","../node_modules/ohm-js/src/Semantics.js","../node_modules/ohm-js/src/Grammar.js","../node_modules/ohm-js/src/GrammarDecl.js","../node_modules/ohm-js/src/Builder.js","../node_modules/ohm-js/package.json","../node_modules/ohm-js/src/version.js","../node_modules/is-buffer/index.js","../node_modules/ohm-js/extras/VisitorFamily.js","../node_modules/ohm-js/extras/semantics-toAST.js","../node_modules/ohm-js/extras/index.js","../node_modules/ohm-js/dist/built-in-rules.js","../node_modules/ohm-js/dist/ohm-grammar.js","../node_modules/ohm-js/src/main.js","html/ohm/semantic2021.js","../node_modules/webmidi/webmidi.min.js","js/instrument.js","js/parser.js","js/text.js","js/tutorial.js","js/app.js","index.js"],"names":["setup","env","createDebug","namespace","prevTime","enableOverride","debug","args","enabled","self","curr","Number","Date","ms","diff","prev","coerce","unshift","index","replace","match","format","formatter","formatters","val","call","splice","formatArgs","log","apply","useColors","color","selectColor","extend","destroy","Object","defineProperty","enumerable","configurable","get","set","v","init","delimiter","newDebug","toNamespace","regexp","toString","substring","length","default","Error","stack","message","disable","namespaces","names","map","skips","join","enable","i","save","split","len","push","RegExp","substr","name","test","humanize","require","console","warn","keys","forEach","key","hash","charCodeAt","colors","Math","abs","load","module","exports","cachedSetTimeout","cachedClearTimeout","process","defaultSetTimout","defaultClearTimeout","runTimeout","fun","setTimeout","e","runClearTimeout","marker","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","concat","drainQueue","timeout","run","Item","array","noop","nextTick","Array","arguments","prototype","title","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","dir","umask","window","type","__nwjs","navigator","userAgent","toLowerCase","document","documentElement","style","WebkitAppearance","firebug","exception","table","parseInt","$1","c","lastC","storage","setItem","removeItem","error","r","getItem","localstorage","localStorage","warned","j","JSON","stringify","value","url","parseuri","uri","path","loc","obj","location","protocol","host","charAt","port","ipv6","indexOf","id","href","PACKET_TYPES","create","PACKET_TYPES_REVERSE","ERROR_PACKET","data","withNativeBlob","Blob","withNativeArrayBuffer","ArrayBuffer","isView","buffer","encodePacket","supportsBinary","callback","encodeBlobAsBase64","fileReader","FileReader","onload","content","result","readAsDataURL","chars","encode","arraybuffer","bytes","Uint8Array","base64","decode","bufferLength","encoded1","encoded2","encoded3","encoded4","p","base64decoder","decodePacket","encodedPacket","binaryType","mapBinary","decodeBase64Packet","decoded","SEPARATOR","String","fromCharCode","encodePayload","packets","encodedPackets","count","packet","decodePayload","encodedPayload","decodedPacket","hasBinary","isBinary","withNativeFile","File","toJSON","isArray","l","hasOwnProperty","reconstructPacket","deconstructPacket","is_binary_1","buffers","packetData","pack","_deconstructPacket","attachments","placeholder","_placeholder","num","newData","_reconstructPacket","undefined","Decoder","Encoder","PacketType","Emitter","binary_1","EVENT","ACK","encodeAsString","BINARY_EVENT","BINARY_ACK","encodeAsBinary","str","nsp","deconstruction","decodeString","reconstructor","BinaryReconstructor","takeBinaryData","start","buf","next","payload","tryParse","isPayloadValid","finishedReconstruction","CONNECT","DISCONNECT","CONNECT_ERROR","parse","reconPack","binData","ev","fn","StrictEventEmitter","listener","event","Socket","socket_io_parser_1","on_1","typed_events_1","RESERVED_EVENTS","freeze","connect","connect_error","disconnect","disconnecting","newListener","io","opts","receiveBuffer","sendBuffer","ids","acks","flags","connected","disconnected","auth","_autoConnect","open","subs","onopen","bind","onpacket","onerror","onclose","subEvents","_readyState","options","compress","pop","isTransportWritable","engine","transport","writable","volatile","_packet","err","emitReserved","reason","sid","onconnect","onevent","onack","ondisconnect","ack","emitEvent","_anyListeners","slice","sent","emitBuffered","subDestroy","Manager","eio","socket_1","parser","Backoff","nsps","reconnection","reconnectionAttempts","Infinity","reconnectionDelay","reconnectionDelayMax","randomizationFactor","backoff","min","max","jitter","_parser","encoder","decoder","autoConnect","_reconnection","_reconnectionAttempts","_a","_reconnectionDelay","setMin","_randomizationFactor","setJitter","_reconnectionDelayMax","setMax","_timeout","_reconnecting","attempts","reconnect","socket","skipReconnect","openSubDestroy","errorSub","cleanup","maybeReconnectOnOpen","timer","close","autoUnref","unref","onping","ondata","ondecoded","add","active","_close","write","reset","delay","duration","onreconnect","attempt","url_1","manager_1","lookup","cache","managers","parsed","source","sameNamespace","forceNew","multiplex","query","queryKey","manager_2","global","factory","define","amd","globalThis","automationEvents","_slicedToArray","_classCallCheck","_createClass","_interopDefaultLegacy","_slicedToArray__default","_classCallCheck__default","_createClass__default","createExtendedExponentialRampToValueAutomationEvent","endTime","insertTime","createExtendedLinearRampToValueAutomationEvent","createSetValueAutomationEvent","startTime","createSetValueCurveAutomationEvent","values","getTargetValueAtTime","time","valueAtStartTime","_ref","target","timeConstant","exp","isExponentialRampToValueAutomationEvent","automationEvent","isLinearRampToValueAutomationEvent","isAnyRampToValueAutomationEvent","isSetValueAutomationEvent","isSetValueCurveAutomationEvent","getValueOfAutomationEventAtIndexAtTime","defaultValue","getEndTimeAndValueOfPreviousAutomationEvent","currentAutomationEvent","nextAutomationEvent","isCancelAndHoldAutomationEvent","isCancelScheduledValuesAutomationEvent","getEventTime","cancelTime","getExponentialRampValueAtTime","pow","getLinearRampValueAtTime","getValueCurveValueAtTime","interpolateValue","theoreticIndex","lowerIndex","floor","upperIndex","ceil","isSetTargetAutomationEvent","AutomationEventList","_automationEvents","_currenTime","_defaultValue","Symbol","iterator","eventTime","findIndex","removedAutomationEvent","lastAutomationEvent","startValue","truncatedAutomationEvent","getValue","Float32Array","_index","previousAutomationEvent","persistentAutomationEvent","remainingAutomationEvents","firstRemainingAutomationEvent","indexOfNextEvent","indexOfCurrentEvent","_getEndTimeAndValueOf","_getEndTimeAndValueOf2","_getEndTimeAndValueOf3","_getEndTimeAndValueOf4","_startTime","_value","createCancelAndHoldAutomationEvent","createCancelScheduledValuesAutomationEvent","createExponentialRampToValueAutomationEvent","createLinearRampToValueAutomationEvent","createSetTargetAutomationEvent","extendStatics","d","b","setPrototypeOf","__proto__","__extends","TypeError","__","constructor","__assign","assign","t","s","n","__rest","getOwnPropertySymbols","propertyIsEnumerable","__decorate","decorators","desc","getOwnPropertyDescriptor","Reflect","decorate","__param","paramIndex","decorator","__metadata","metadataKey","metadataValue","metadata","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","rejected","adopt","done","then","__generator","body","_","f","y","g","label","trys","ops","verb","op","__createBinding","o","m","k","k2","__exportStar","__values","__read","ar","__spread","__spreadArrays","il","a","jl","__spreadArray","to","from","__await","__asyncGenerator","asyncIterator","q","resume","fulfill","settle","shift","__asyncDelegator","__asyncValues","__makeTemplateObject","cooked","raw","__setModuleDefault","__importStar","mod","__esModule","__importDefault","__classPrivateFieldGet","receiver","state","kind","has","__classPrivateFieldSet","grammarText","isValidType","Failure","pexpr","text","fluffy","getPExpr","getText","getType","isDescription","isStringTerminal","isCode","isFluffy","makeFluffy","clearFluffy","subsumes","that","clone","failure","toKey","escapeStringFor","abstract","optMethodName","methodName","assert","cond","defineLazyProperty","propName","getterFn","memo","repeatFn","arr","repeatStr","repeat","x","getDuplicates","duplicates","idx","lastIndexOf","copyWithoutDuplicates","noDuplicates","entry","isSyntactic","ruleName","firstChar","toUpperCase","isLexical","padLeft","optChar","ch","StringBuffer","strings","append","contents","escapeChar","optDelim","charCode","unescapeChar","unexpectedObjToString","baseToString","typeName","inherits","common","Node","grammar","ctorName","matchLength","TerminalNode","primitiveValue","NonterminalNode","children","childOffsets","IterationNode","isOptional","optional","numChildren","childAt","indexOfChild","arg","hasChildren","hasNoChildren","onlyChild","firstChild","lastChild","childBefore","child","childIdx","childAfter","isTerminal","isNonterminal","isIteration","Lu","Ll","Lt","Lm","Lo","Nl","Nd","Mn","Mc","Pc","Zs","L","Ltmo","pexprs","PExpr","allowsSkippingPrecedingSpace","any","end","Apply","Terminal","Range","UnicodeChar","Alt","Iter","Lex","Lookahead","Not","Param","Seq","Namespace","asNamespace","objOrNamespace","createNamespace","optProps","ns","createError","optInterval","getLineAndColumnMessage","shortMessage","interval","intervalSourcesDontMatch","grammarSyntaxError","matchFailure","getExpectedText","getInterval","undeclaredGrammar","grammarName","duplicateGrammarDeclaration","undeclaredRule","cannotOverrideUndeclaredRule","optSource","cannotExtendUndeclaredRule","duplicateRuleDeclaration","declGrammarName","wrongNumberOfParameters","expected","actual","wrongNumberOfArguments","expr","duplicateParameterNames","invalidParameter","getArity","applicationOfSyntacticRuleFromLexicalContext","applyExpr","incorrectArgumentType","expectedType","kleeneExprHasNullableOperand","kleeneExpr","operator","inconsistentArity","duplicatePropertyNames","invalidConstructorCall","multipleErrors","errors","messages","missingSemanticAction","stackTrace","info","ans","throwErrors","padNumbersToEqualLength","maxLen","strcpy","dest","src","offset","origDestLen","builtInRulesCallbacks","awaitBuiltInRules","cb","announceBuiltInRules","getLineAndColumn","currOffset","lineNum","colNum","lineStartOffset","nextLine","prevLine","prevLineStartOffset","lineEndOffset","nextLineEndOffset","line","lineAndCol","sb","lineNumbers","appendLine","prefix","lineLen","indicationLine","ranges","startIdx","endIdx","gutterWidth","BuiltInRules","lexifyCount","util","assertAllApplicationsAreValid","_assertAllApplicationsAreValid","terms","factors","ruleInfo","rules","formals","caseInsensitive","assertChoicesHaveUniformArity","arity","term","otherArity","Extend","actualArity","expectedArity","assertIteratedExprsAreNotNullable","isNullable","Opt","nodes","check","vals","pos","factor","columns","rowCount","row","ruleNode","Interval","sourceString","coverage","coverageWith","intervals","collapsedLeft","collapsedRight","range","minus","relativeTo","trimmed","subInterval","newStartIdx","defineProperties","_contents","BALLOT_X","CHECK_MARK","DOT_OPERATOR","RIGHTWARDS_DOUBLE_ARROW","SYMBOL_FOR_HORIZONTAL_TABULATION","SYMBOL_FOR_LINE_FEED","SYMBOL_FOR_CARRIAGE_RETURN","Flags","succeeded","isRootNode","isImplicitSpaces","isMemoized","isHeadOfLeftRecursion","terminatesLR","spaces","getInputExcerpt","input","excerpt","asEscapedString","Trace","pos1","pos2","bindings","optChildren","terminatingLREntry","_flags","SKIP","toDisplayString","mask","cloneWithExpr","recordLRTermination","ruleBodyTrace","walk","visitorObjOrFn","optThisArg","visitor","_walk","node","parent","depth","recurse","enter","exit","displayString","eval","inputStream","origPos","pushBinding","processFailure","atEnd","matchString","currentApplication","enterLexifiedContext","exitLexifiedContext","cols","colOffsets","numMatches","maxNumMatches","_bindings","rowOffsets","_bindingOffsets","minNumMatches","posToOffset","lastCol","lastColOffsets","pushFailuresInfo","popFailuresInfo","caller","actuals","app","substituteParams","posInfo","getCurrentPosInfo","isActive","handleCycle","memoKey","toMemoKey","memoRec","shouldUseMemoizedResult","hasNecessaryInfo","useMemoizedResult","reallyEval","currentLeftRecursion","headApplication","updateInvolvedApplicationMemoKeys","memoize","examinedLength","rightmostFailureOffset","startLeftRecursion","origPosInfo","description","enterApplication","origInputStreamExaminedLength","evalOnce","currentLR","growSeedResult","endLeftRecursion","_getRightmostFailureOffset","isInvolved","failuresAtRightmostPosition","cloneRecordedFailures","isTracing","getTraceEntry","traceEntry","exitApplication","offsets","lrMemoRec","newValue","seedTrace","trace","pattern","flatten","listOfLists","categorizeExamples","examples","examplesNeeded","filter","example","uniqueExamplesNeeded","successfulExamples","item","needHelp","some","generateExample","inSyntacticContext","random","rangeSize","termExamples","categorizedExamples","factorExamples","rangeTimes","numTimes","items","relevantExamples","char","category","getMetaInfo","grammarInterval","metaInfo","adjusted","sourceInterval","outputRecipe","extension","Star","Plus","introduceParams","_isNullable","every","inlined","ps","isRestrictedJSIdentifier","resolveDuplicatedNames","argumentNameList","argName","dupArgName","subscript","toArgumentNameList","firstArgIndex","noDupCheck","termArgNameLists","numArgs","colIdx","col","rowIdx","uniqueNames","factorArgumentNameList","exprArgumentString","toFailure","fs","UnicodeCategories","withSource","superGrammar","origBody","optArgs","POSITIVE_INFINITY","_memoKey","CaseInsensitiveTerminal","param","_getString","terminal","matchStr","toLocaleLowerCase","toLocaleUpperCase","InputStream","optIgnoreCase","sourceSlice","optEndIdx","MatchResult","matcher","startExpr","cst","cstOffset","rightmostFailurePosition","optRecordedFailures","_cst","_cstOffset","_rightmostFailurePosition","_rightmostFailures","failed","detail","getRightmostFailurePosition","errorInfo","getRightmostFailures","setInput","matchResultWithFailures","_match","failures","PosInfo","applicationMemoKeyStack","maxExaminedLength","maxRightmostFailureOffset","application","isLeftRecursion","nextLeftRecursion","indexOfFirstInvolvedRule","involvedApplicationMemoKeys","applicationMemoKey","clearObsoleteEntries","invalidatedIdx","applySpaces","MatchState","optPositionToRecordFailures","memoTable","_applicationStack","_posStack","inLexifiedContextStack","_rightmostFailurePositionStack","_recordedFailuresStack","positionToRecordFailures","recordedFailures","optNode","inLexifiedContext","skipSpaces","popBinding","skipSpacesIfInSyntacticContext","maybeSkipSpacesBefore","numBindings","truncateBindings","newLength","getPosInfo","recordFailure","shouldCloneIfNew","recordFailures","getMemoizedTraceEntry","memoRecRightmostFailurePosition","origRecordedFailures","origNumBindings","origTrace","memoPos","getMatchResult","rightmostFailures","getTrace","matchResult","rootTrace","Matcher","getInput","replaceInputRange","currentInput","restOfMemoTable","optStartApplicationStr","_getStartExpr","tracing","applicationStr","defaultStartRule","startApp","parseApplication","ohm","makeRecipe","prototypeGrammar","prototypeGrammarSemantics","globalActionStack","jsonToJS","output","hex","codePointAt","Wrapper","Semantics","superSemantics","checkedActionDicts","baseInterval","checkActionDictsIfHaventAlready","_semantics","_node","_baseInterval","_childWrappers","super","equals","_inheritsFrom","attributeName","operations","attributes","attributeKeys","parseSignature","signature","newDefaultAction","doIt","formal","Operation","actionDict","builtInDefault","Attribute","initBuiltInSemantics","builtInRules","actions","empty","iteration","nonEmpty","first","rest","BuiltInSemantics","createSemantics","addOperation","emptyListOf","nonemptyListOf","EmptyListOf","NonemptyListOf","initPrototypeParser","AttributeSignature","OperationSignature","optFormals","Formals","oparen","cparen","asIteration","_forgetMemoizedResultFor","childWrapper","childNode","base","wrap","_children","optChildWrappers","childWrappers","childNodes","iter","wrapper","checkActionDicts","checkActionDict","toRecipe","semanticsOnly","hasSuperSemantics","_getSemantics","relatedGrammar","superSemanticsGrammar","semanticOperations","method","srcArray","actionName","addOperationOrAttribute","typePlural","parsedNameAndFormalArgs","assertNewName","realActionDict","_default","thisThing","oldArgs","execute","extendOperationOrAttribute","inheritedFormals","inheritedActionDict","newActionDict","optBaseInterval","optSuperSemantics","proxy","extendOperation","addAttribute","extendAttribute","_getActionDict","operationOrAttributeName","action","_remove","semantic","getOperationNames","getAttributeNames","getGrammar","_checkTopDownActionDict","semantics","nodeWrapper","actionFn","doAction","_nonterminal","optPassChildrenAsArray","operationsAndAttributesGrammar","ohmGrammar","buildGrammar","getSortedRuleValues","sort","Grammar","optDefaultStartRule","initApplicationParser","builderFn","isBuiltIn","ProtoBuiltInRules","myRules","otherRules","rule","optStartApplication","extendSemantics","what","problems","_topDownActionArity","prettyProblems","problem","optVarName","startRule","operation","isDefinition","bodyRecipe","toOperationActionDictionaryTemplate","_toOperationOrAttributeActionDictionaryTemplate","toAttributeActionDictionaryTemplate","addSemanticActionTemplate","primitive","lower","upper","unicodeLtmo","space","GrammarDecl","ensureSuperGrammar","withSuperGrammar","installOverriddenOrExtendedRule","expectedFormals","expectedNumFormals","install","withDefaultStartRule","build","grammarErrors","grammarHasInvalidApplications","override","descIgnored","fragment","Builder","currentDecl","newGrammar","gDecl","fromRecipe","ruleRecipe","alt","seq","star","plus","opt","not","la","lookahead","lex","optParams","recipe","_from","_id","_inBundle","_integrity","_location","_phantomChildren","_requested","registry","escapedName","rawSpec","saveSpec","fetchSpec","_requiredBy","_resolved","_shasum","_spec","_where","author","email","bin","bugs","bundleDependencies","contributors","dependencies","deprecated","devDependencies","browserify","eslint","husky","jsdom","json","markscript","nodemon","tape","typescript","watchify","engines","homepage","keywords","license","main","repository","scripts","bootstrap","clean","lint","postinstall","prebootstrap","precommit","prepublishOnly","pretest","visualizer","watch","types","browserifyGlobalOhmVersion","getProp","thing","mapProp","getPropWalkFn","descriptor","parts","getProps","walkFns","walkFn","getWalkFn","shape","isRestrictedIdentifier","trim","sig","params","VisitorFamily","config","_shapes","shapes","_getTag","getTag","Adapter","family","_adaptee","_family","valueOf","_arities","_getChildren","_wrap","_checkActionDict","dict","tag","defaultOperation","_terminal","mapping","toAST","realChildren","propMap","prop","mappedProp","_iter","sep","res","termName","semanticsForToAST","helper","isBuffer","documentInterface","querySelector","sel","querySelectorAll","isElement","nodeType","isUndefined","MAX_ARRAY_INDEX","isArrayLike","req","XMLHttpRequest","send","status","responseText","optOhmGrammarForTesting","builder","decl","currentRuleName","currentRuleFormals","overriding","helpers","rs","visit","SuperGrammar","superGrammarName","Rule_define","Rule_override","Rule_extend","RuleBody","opointy","cpointy","Params","seqs","TopLevelTerm_inline","inlineRuleName","isNewRuleDeclaration","Iter_star","Iter_plus","Iter_opt","Pred_not","Pred_lookahead","Lex_lex","Base_application","Base_range","Base_terminal","Base_paren","ruleDescr","ruleDescrText","caseName","space1","space2","nameFirst","nameRest","cs","oneCharTerminal","terminalChar","xs","compileAndLoad","getScriptElementContents","el","getAttribute","innerHTML","optNamespace","grammars","grammarNames","secondGrammar","grammarFromScriptElement","nodeList","grammarsFromScriptElements","optNodeOrNodeList","extras","_buildGrammar","_setDocumentInterfaceForTesting","doc","livecode","phrasesToArray","phrases","phrasesArray","Commands_questionEvent","Commands_playMultiEvent","Commands_stopMultiEvent","Commands_savePartEvent","phrase","Commands_deleteEvent","Commands_deleteWordEvent","Commands_saveEvent","Commands_joinEvent","Commands_restartEvent","Commands_storeEvent","Commands_loadEvent","Commands_uploadEvent","Commands_recordEvent","Commands_muteEvent","Commands_unmuteEvent","Commands_playAllEvent","Commands_stopAllEvent","Commands_deleteAllEvent","Assignments_copyPattern","Assignments_assignPattern","volume","patternString","Assignments_setBPM","bpm","Assignments_setVolume","Assignments_plainStartEvent","Assignments_emptyEvent","Pattern","newPattern","Events","Events_soundNote","note","Events_soundPause","floatPos","float","parseFloat","intPos","int","scope","WebMidi","_singleton","_inputs","_outputs","_userHandlers","_stateChangeQueue","_processingStateChange","_midiInterfaceEvents","_nrpnBuffer","_nrpnEventsEnabled","_nrpnTypes","_notes","_semitones","C","D","E","F","G","A","B","MIDI_SYSTEM_MESSAGES","sysex","timecode","songposition","songselect","tuningrequest","sysexend","clock","continue","stop","activesensing","midimessage","unknownsystemmessage","MIDI_CHANNEL_MESSAGES","noteoff","noteon","keyaftertouch","controlchange","channelmode","nrpn","programchange","channelaftertouch","pitchbend","MIDI_REGISTERED_PARAMETER","pitchbendrange","channelfinetuning","channelcoarsetuning","tuningprogram","tuningbank","modulationrange","azimuthangle","elevationangle","gain","distanceratio","maximumdistance","maximumdistancegain","referencedistanceratio","panspreadangle","rollangle","MIDI_CONTROL_CHANGE_MESSAGES","bankselectcoarse","modulationwheelcoarse","breathcontrollercoarse","footcontrollercoarse","portamentotimecoarse","dataentrycoarse","volumecoarse","balancecoarse","pancoarse","expressioncoarse","effectcontrol1coarse","effectcontrol2coarse","generalpurposeslider1","generalpurposeslider2","generalpurposeslider3","generalpurposeslider4","bankselectfine","modulationwheelfine","breathcontrollerfine","footcontrollerfine","portamentotimefine","dataentryfine","volumefine","balancefine","panfine","expressionfine","effectcontrol1fine","effectcontrol2fine","holdpedal","portamento","sustenutopedal","softpedal","legatopedal","hold2pedal","soundvariation","resonance","soundreleasetime","soundattacktime","brightness","soundcontrol6","soundcontrol7","soundcontrol8","soundcontrol9","soundcontrol10","generalpurposebutton1","generalpurposebutton2","generalpurposebutton3","generalpurposebutton4","reverblevel","tremololevel","choruslevel","celestelevel","phaserlevel","databuttonincrement","databuttondecrement","nonregisteredparametercoarse","nonregisteredparameterfine","registeredparametercoarse","registeredparameterfine","MIDI_NRPN_MESSAGES","entrymsb","entrylsb","increment","decrement","paramlsb","parammsb","nullactiveparameter","MIDI_CHANNEL_MODE_MESSAGES","allsoundoff","resetallcontrollers","localcontrol","allnotesoff","omnimodeoff","omnimodeon","monomodeon","polymodeon","octaveOffset","supported","interface","inputs","outputs","sysexEnabled","nrpnEventsEnabled","nrpnTypes","performance","now","wm","Input","midiInput","channel","system","_midiInput","connection","manufacturer","_initializeUserHandlers","onmidimessage","_onMidiMessage","Output","midiOutput","_midiOutput","requestMIDIAccess","midiAccess","promiseTimeout","events","promises","_resetInterfaceUserHandlers","onstatechange","onPortsOpen","_updateInputsAndOutputs","_onInterfaceStateChange","all","catch","hasListener","toMIDIChannels","channels","getInputById","getOutputById","getInputByName","getOctave","number","getOutputByName","guessNoteNumber","toFixed","round","noteNameToNumber","matches","RangeError","semitones","_updateInputs","_updateOutputs","remove","updated","nInput","nOutput","timestamp","timeStamp","handler","chNum","prop1","prop2","_parseChannelEvent","_parseNrpnEvent","_parseSystemEvent","data1","data2","command","channelBufferIndex","ccEvent","controller","getCcNameByNumber","rawData","nrpnNumber","nrpnValue","nrpnControllerType","nrpnEvent","octave","velocity","rawVelocity","getChannelModeByNumber","cc","cm","song","sendSysex","_parseTimeParameter","sendTimecodeQuarterFrame","sendSongPosition","msb","lsb","sendSongSelect","sendTuningRequest","sendClock","sendStart","sendContinue","sendStop","sendActiveSensing","sendReset","stopNote","sendChannelMode","nVelocity","isNaN","_convertNoteToArray","playNote","nRelease","release","sendKeyAftertouch","pressure","nPressure","sendControlChange","_selectRegisteredParameter","parameter","_selectNonRegisteredParameter","_setCurrentRegisteredParameter","_deselectRegisteredParameter","setRegisteredParameter","setNonRegisteredParameter","incrementRegisteredParameter","decrementRegisteredParameter","setPitchBendRange","cents","setModulationRange","setMasterTuning","coarse","fine","setTuningProgram","setTuningBank","sendProgramChange","program","sendChannelAftertouch","sendPitchBend","bend","nLevel","notes","Instrument","midiPattern","baseNote","Tone","Frequency","toNote","synth","Sampler","urls","C3","sequence","patternRaw","rand","chan","envSettings","attack","decay","sustain","samplerEnvSettings","eqSettings","high","highFrequency","mid","lowFrequency","low","mute","beatCounter","randomized","Gain","masterGain","ampEnv","AmplitudeEnvelope","setVolume","slicedArray","fill","sequenceRand","rampTo","object","randomIndex","itemAtIndex","plainStartInstruments","instruments","assignPattern","rawPattern","copyPattern","destinations","playAll","stopAll","stopInstruments","savePart","setBpm","delete","deleteAll","recordAction","App","handleRecord","en","de","headings","files","settings","packs","tutorial","overview","instList","WelleApp","language","valueEN","valueDE","titleEN","titleDE","valueENoff","valueDEoff","titleENoff","titleDEoff","valueENon","valueDEon","titleENon","titleDEon","muteHelper","muteMetronom","play","valueoff","valueon","titleoff","titleon","record","Recorder","vol","eq","x1","y1","x2","y2","synths","samples","rows","instrument","getMute","configLoopStarted","toneID","Transport","scheduleRepeat","grid","makeGrid","beat","midiChan","midiTransmit","triggerAttackRelease","welle","MIDIOutput","nextEventTime","diffTime","Time","toSeconds","playMidiNote","getVolume","updateRandomizer","selected","getSequence","sendMidiSelectedInstState","renderInstruments","metronom1","metronom2","inputString","valid","string","html","pointer","getElementById","printInfo","createMetronom","audioOutput","getDestination","recorder","addEventListener","renderConsole","muteApp","buttons","handleAlerts","startMIDI","selectMIDIdevice","createPreset","selectSamplePack","setLanguage","PluckSynth","dispose","user","samplePacks","selectBox","singlePack","option","createElement","clearSamplePlayer","context","currentSamplePack","samplePack","activeInstruments","cancel","clear","disposeMetronom","renderContent","lang","setAttribute","english","german","file","ToneAudioBuffer","sample","player","Player","autostart","alertName","checked","lookAhead","classList","startTransport","stopTransport","renderBpm","inst","setMute","updateSequence","setSelected","activate","addToConsole","comment","isPart","partName","startPart","running","getStatus","midi","deactivate","part","toDestination","instrumentCollection","instName","getPatternRaw","getRand","getEnvSettings","renderParts","activeName","storedInst","setSequence","setRand","setEnvSettings","isStored","stored","midiTransferOngoing","focus","renderArrows","playAlert","element","renderInstrumentsOverview","bpmDiv","instListDiv","playOnce","instDiv","sequenceRender","isPlaying","stateHtml","selHtml","instHtml","insertAdjacentHTML","partHtml","partDiv","recording","getRecording","URL","createObjectURL","anchorSound","download","click","selectedName","midiOutputs","midiInputs","MIDIInput","addMIDIInputListeners","vel","dur","midiTime","midiChanOutput","midiNum","toMidi","newEnv","midiChanInput","roundFunc","sequenceMidi","sequencePattern","users","session","preset","getPattern","presetData","initMessage","presetRequest","checkDevice","device","platform","display","startTone","code","handleMainInput","arrowUp","arrowDown","getAlertsNum","getSamplesNum","addSamples","makeSynths","configLoop","initPresetData","numPacks","addSamplePacks","addAlerts","updateUsers","handleRemoteInput","anchor","submitComposition","preventDefault","formData","FormData","fetch","response","success","loadPreset"],"mappings":"AeoQA,AoBAA,SpBAA,AoBAA,EpBAA,AoBAA,GpBAA,AoBAA,OpBAA,AoBAA,EpBAA,AoBAA,IpBAA,AoBAA,EpBAA,AoBAA,IpBAA,AoBAA,EpBAA,AoBAA,IpBAA,AoBAA,IpBAA,AoBAA,SpBAA,AoBAA,IpBAA,AoBAA,MpBAA,AoBAA,IpBAA,AoBAA,UpBAA,AoBAA,wIpBAA,AoBAA,SpBAA,AoBAA,EpBAA,AoBAA,EpBAA,AoBAA,GpBAA,AoBAA,GpBAA,AoBAA,EpBAA,AoBAA,CpBAA,AoBAA,GpBAA,AoBAA,iBpBAA,AoBAA,EpBAA,AoBAA,OpBAA,AoBAA,EpBAA,AoBAA,EpBAA,AoBAA,GpBAA,AoBAA,IpBAA,AoBAA,EpBAA,AoBAA,OpBAA,AoBAA,UpBAA,AoBAA,SpBAA,AoBAA,KpBAA,AoBAA,GpBAA,AoBAA,MpBAA,AoBAA,GpBAA,AoBAA,GpBAA,AoBAA,MpBAA,AoBAA,WpBAA,AoBAA,GpBAA,AoBAA,EpBAA,AoBAA,cpBAA,AoBAA,EpBAA,AoBAA,EpBAA,AoBAA,YpBAA,AoBAA,MpBAA,AoBAA,QpBAA,AoBAA,GpBAA,AoBAA,QpBAA,AoBAA,EpBAA,AoBAA,MpBAA,AoBAA,KpBAA,AoBAA,GpBAA,AoBAA,cpBAA,AoBAA,GpBAA,AoBAA,2CpBAA,AoBAA,KpBAA,AoBAA,GpBAA,AoBAA,EpBAA,AoBAA,EpBAA,AoBAA,QpBAA,AoBAA,GpBAA,AoBAA,SpBAA,AoBAA,EpBAA,AoBAA,GpBAA,AoBAA,GpBAA,AoBAA,oBpBAA,AoBAA,QpBAA,AoBAA,OpBAA,AoBAA,YpBAA,AoBAA,OpBAA,AoBAA,GpBAA,AoBAA,OpBAA,AoBAA,MpBAA,AoBAA,KpBAA,AoBAA,GpBAA,AoBAA,SpBAA,AoBAA,EpBAA,AoBAA,GpBAA,AoBAA,GpBAA,AoBAA,MpBAA,AoBAA,QpBAA,AoBAA,GpBAA,AoBAA,OpBAA,AoBAA,EpBAA,AoBAA,GpBAA,AoBAA,SpBAA,AoBAA,EpBAA,AoBAA,EpBAA,AoBAA,IpBAA,AoBAA,MpBAA,AoBAA,GpBAA,AoBAA,EpBAA,AoBAA,EpBAA,AoBAA,UpBAA,AoBAA,EpBAA,AoBAA,EpBAA,AoBAA,QpBAA,AoBAA,IpBAA,AoBAA,IpBAA,AoBAA,EpBAA,AoBAA,EpBAA,AoBAA,EpBAA,AoBAA,IpBAA,AoBAA,MpBAA,AoBAA,GpBAA,AoBAA,EpBAA,AoBAA,EpBAA,AoBAA,IpBAA,AoBAA,EpBAA,AoBAA,GpBAA,AoBAA,EpBAA,AoBAA,GpBAA,AoBAA,OpBAA,AoBAA,EpB9PA,AoBAA,SpBASA,AoBAAA,EpBAMC,AoBAAA,GpBqDLC,AoBAAA,SpBAAA,AoBAAA,EpBAYC,AoBAAA,GpBChBC,AoBAAA,IpBAAA,AoBAAA,EpBCAC,AoBAAA,EpBAiB,AoBAA,KpBEZC,AoBAAA,SpBAAA,AoBAAA,IpBASC,AoBAAA,IpBAAA,AoBAAA,IpBAAA,AoBAAA,EpBAAA,AoBAAA,UpBAAA,AoBAAA,OpBAAA,AoBAAA,EpBAM,AoBAA,IpBAA,AoBAA,MpBAA,AoBAA,GpBAA,AoBAA,EpBAA,AoBAA,EpBAA,AoBAA,EpBAA,AoBAA,EpBAA,AoBAA,IpBANA,AoBAAA,EpBAM,AoBAA,GpBAA,AoBAA,UpBAA,AoBAA,GpBEnB,AoBAA,GpBACD,AoBAAA,EpBAME,AoBAAA,QpBAP,AoBAA,CpBIEC,AoBAAA,IpBAAA,AoBAAA,EpBAOH,AoBAAA,EpBGPI,AoBAAA,EpBAOC,AoBAAA,OpBAO,AoBAA,IpBAIC,AoBAAA,MpBClBC,AoBAAA,EpBAKH,AoBAAA,GpBAQN,AoBAAA,GpBAYM,AoBAAA,GpBC/BD,AoBAAA,EpBAKK,AoBAAA,KpBAOD,AoBAAA,EpBCZJ,AoBAAA,EpBAKM,AoBAAA,KpBAOX,AoBAAA,EpBCZK,AoBAAA,EpBAKC,AoBAAA,KpBAOA,AoBAAA,EpBCZN,AoBAAA,EpBAWM,AoBAAA,EpBEXH,AoBAAA,EpBAK,AoBAA,GpBAKL,AoBAAA,EpBAYc,AoBAAA,OpBAOT,AoBAAA,EpBAK,AoBAA,IpBEX,AoBAA,iBpBAZA,AoBAAA,EpBAK,AoBAA,IpBEfA,AoBAAA,EpBAKU,AoBAAA,QpBAQ,AoBAA,MpBIVC,AoBAAA,IpBAAA,AoBAAA,EpBAQ,AoBAA,EpBCZX,AoBAAA,EpBAK,AoBAA,GpBAKA,AoBAAA,EpBAK,AoBAA,GpBAGY,AoBAAA,QpBAQ,AoBAA,gBpBAiB,AoBAA,SpBACC,AoBAAA,EpBAOC,AoBAAA,GpBE9CD,AoBAAA,GpBAU,AoBAA,OpBAVA,AoBAAA,EpBCI,AoBAA,MpBAA,AoBAA,IpBERF,AoBAAA,IpBCMI,AoBAAA,IpBAAA,AoBAAA,EpBAYpB,AoBAAA,EpBAYqB,AoBAAA,WpBAWF,AoBAAA,GpBCrC,AoBAA,GpBAqB,AoBAA,mBpBAdC,AoBAAA,EpBA0B,AoBAA,CpBC9BE,AoBAAA,IpBAAA,AoBAAA,EpBAMjB,AoBAAA,EpBAKW,AoBAAA,GpBCjBE,AoBAAA,EpBAQE,AoBAAA,EpBAUG,AoBAAA,KpBAKhB,AoBAAA,EpBAMe,AoBAAA,GpBG7BjB,AoBAAA,EpBAKmB,AoBAAA,OpBAOR,AoBAAA,EpBAO,AoBAA,GpBCnBA,AoBAAA,IpBEME,AoBAAA,OpBAAA,AoBAAA,IpBIRlB,AoBAAA,EpBAYyB,AoBAAA,WpBAWF,AoBAAA,KpBAKhB,AoBAAA,EpBAMF,AoBAAA,IpBEpBE,AoBAAA,EpBAKmB,AoBAAA,KpBAO1B,AoBAAA,EpBAY0B,AoBAAA,KpBChCC,AoBAAA,MpBAMpB,AoBAAA,EpBAMF,AoBAAA,IpBuBZD,AoBAAA,OpBpBPA,AoBAAA,EpBAMH,AoBAAA,UpBAYA,AoBAAA,EpBClBG,AoBAAA,EpBAMwB,AoBAAA,UpBAY5B,AoBAAA,EpBAY4B,AoBAAA,YpBC9BxB,AoBAAA,EpBAMyB,AoBAAA,MpBAQ7B,AoBAAA,EpBAY8B,AoBAAA,YpBAY7B,AoBAAA,GpBCtCG,AoBAAA,EpBAM2B,AoBAAA,OpBASA,AoBAAA,EpBCf3B,AoBAAA,EpBAM4B,AoBAAA,QpBAUhC,AoBAAA,EpBAYgC,AoBAAA,QpBE5BC,AoBAAA,OpBAOC,AoBAAA,epBAe9B,AoBAAA,EpBAO,AoBAA,UpBAW,AoBAA,CpBCvC+B,AoBAAA,YpBAY,AoBAA,EpBCZC,AoBAAA,cpBAc,AoBAA,EpBCdC,AoBAAA,IpBAK,AoBAA,WpBAMlC,AoBAAA,OpBAmB,AoBAA,OpBAnBA,AoBAAA,EpBA0BH,AoBAAA,EpBAYM,AoBAAA,QpBAQL,AoBAAA,GpBAaE,AoBAAA,GpBCtEmC,AoBAAA,IpBAK,AoBAA,SpBAAC,AoBAAA,GpBCJpC,AoBAAA,EpBAiBoC,AoBAAA,KpBKa,AoBAA,mBpBArBvC,AoBAAA,EpBAYwC,AoBAAA,MpBCtBxC,AoBAAA,EpBAYwC,AoBAAA,KpBAKpC,AoBAAA,GpBGXA,AoBAAA,EpBGC2B,AoBAAA,SpBAAA,AoBAAA,EpBAO9B,AoBAAA,EpBAWwC,AoBAAA,GpBCpBC,AoBAAA,IpBAAA,AoBAAA,EpBAW1C,AoBAAA,EpBAY,AoBAA,KpBAKC,AoBAAA,gBpBAkC,AoBAA,IpBAdwC,AoBAAA,EpBA4B,AoBAA,IpBAMA,AoBAAA,GpBAaxC,AoBAAA,GpBE9FyC,AoBAAA,OpBDPA,AoBAAA,EpBAShB,AoBAAA,IpBAM,AoBAA,KpBAKA,AoBAAA,IpBCbgB,AoBAAA,EpBwFCC,AoBAAA,SpBAAA,AoBAAA,EpBAYC,AoBAAA,GpBCbA,AoBAAA,OpBAAA,AoBAAA,EpBAOC,AoBAAA,WpBCZC,AoBAAA,UpBAU,AoBAA,EpBAGF,AoBAAA,EpBAOC,AoBAAA,WpBAWE,AoBAAA,OpBAS,AoBAA,GpBCxC9B,AoBAAA,QpBAQ,AoBAA,UpBAW,AoBAA,KpB2BfjB,AoBAAA,OpB1PPA,AoBAAA,EpBAYI,AoBAAA,MpBAQJ,AoBAAA,EpBCpBA,AoBAAA,EpBAYgD,AoBAAA,QpBAUhD,AoBAAA,EpBCtBA,AoBAAA,EpBAYc,AoBAAA,OpBuOHA,AoBAAA,SpBAOQ,AoBAAA,GpBCXA,AoBAAA,GpBAAA,AoBAAA,apBAe2B,AoBAAA,MpBCX3B,AoBAAA,OpBAAA,AoBAAA,EpBAI4B,AoBAAA,OpBAS5B,AoBAAA,EpBAI6B,AoBAAA,QpBElB7B,AoBAAA,OpBAAA,AoBAAA,GpB1ORtB,AoBAAA,EpBAYoD,AoBAAA,QpB2KHA,AoBAAA,WpBCFC,AoBAAA,IpBAAA,AoBAAA,EpBAa,AoBAA,GpBCfrD,AoBAAA,OpBAAA,AoBAAA,EpBAAA,AoBAAA,EpBAYsD,AoBAAA,MpBAMC,AoBAAA,IpBAIZ,AoBAAA,IpBCtB3C,AoBAAA,EpBAAA,AoBAAA,EpBAYwD,AoBAAA,MpBAMD,AoBAAA,IpBAIZ,AoBAAA,GpBAaY,AoBAAA,IpBAI,AoBAA,SpBAAtD,AoBAAA,GpBAa,AoBAA,MpBAA,AoBAA,IpBAMA,AoBAAA,MpBC5DwD,AoBAAA,KpBAK,AoBAA,KpBEAJ,AoBAAA,OpBDPrD,AoBAAA,EpBAY0D,AoBAAA,OpBAO,AoBAA,IpBCZL,AoBAAA,GpBhLRrD,AoBAAA,EpBAY0D,AoBAAA,OpB0IHA,AoBAAA,SpBAOL,AoBAAA,GpBMXM,AoBAAA,IpBAAA,AoBAAA,EpBLJ3D,AoBAAA,EpBAY4D,AoBAAA,KpBAKP,AoBAAA,GpBEjBrD,AoBAAA,EpBAYsD,AoBAAA,MpBAQ,AoBAA,GpBCpBtD,AoBAAA,EpBAYwD,AoBAAA,MpBAQ,AoBAA,GpBGdK,AoBAAA,IpBAAA,AoBAAA,GpBA+B,AoBAA,iBpBAfR,AoBAAA,EpBA0BA,AoBAAA,EpBAa,AoBAA,IpBAIQ,AoBAAA,MpBAM,AoBAA,UpBCjEC,AoBAAA,EpBAMD,AoBAAA,EpBAMd,AoBAAA,OpBEbY,AoBAAA,IpBAAA,AoBAAA,EpBAI,AoBAA,EpBAGA,AoBAAA,EpBAIG,AoBAAA,EpBAKH,AoBAAA,IpBCfE,AoBAAA,EpBAMF,AoBAAA,KpBOW,AoBAA,OpBFtBN,AoBAAA,EpBAaQ,AoBAAA,EpBAMF,AoBAAA,GpBAG1C,AoBAAA,QpBAQ,AoBAA,MpBAO,AoBAA,QpBEtB,AoBAA,GpBCdjB,AoBAAA,EpBAYwD,AoBAAA,MpBAMO,AoBAAA,KpBAK,AoBAA,IpBAIC,AoBAAA,OpBAO,AoBAA,IpBAMX,AoBAAA,EpBAWY,AoBAAA,OpBAO,AoBAA,GpBAK,AoBAA,MpBE/DjE,AoBAAA,EpBAYsD,AoBAAA,MpBAMS,AoBAAA,KpBAK,AoBAA,IpBAIC,AoBAAA,OpBAO,AoBAA,IpBAMX,AoBAAA,EpBAa,AoBAA,QpB9JxDrD,AoBAAA,EpBAYM,AoBAAA,QpByLHA,AoBAAA,SpBAQ4D,AoBAAA,GpBCZA,AoBAAA,GpBA0B,AoBAA,MpBA1BA,AoBAAA,EpBAKA,AoBAAA,EpBAKnB,AoBAAA,OpBAS,AoBAA,GpBCf,AoBAA,OpBAA,AoBAA,EpBGJY,AoBAAA,IpBAAA,AoBAAA,EpBCAG,AoBAAA,EpBECH,AoBAAA,IpBAAA,AoBAAA,EpBAI,AoBAA,EpBAGG,AoBAAA,EpBAM9D,AoBAAA,EpBAYwD,AoBAAA,MpBAMT,AoBAAA,OpBAQY,AoBAAA,EpBAIG,AoBAAA,EpBAKH,AoBAAA,IpBChD3D,AoBAAA,GpBAAA,AoBAAA,EpBAYwD,AoBAAA,MpBAMG,AoBAAA,GpBAGQ,AoBAAA,KpBAKD,AoBAAA,GpBCtB,AoBAA,OpBAA,AoBAA,EpBIJP,AoBAAA,IpBAAA,AoBAAA,EpBAI,AoBAA,EpBAGG,AoBAAA,EpBAM9D,AoBAAA,EpBAYsD,AoBAAA,MpBAMP,AoBAAA,OpBAQY,AoBAAA,EpBAIG,AoBAAA,EpBAKH,AoBAAA,IpBChD3D,AoBAAA,GpBAAA,AoBAAA,EpBAYsD,AoBAAA,MpBAMK,AoBAAA,GpBAGQ,AoBAAA,KpBAKD,AoBAAA,GpBCtB,AoBAA,OpBAA,AoBAA,EpBIF,AoBAA,OpBAA,AoBAA,GpB5MRlE,AoBAAA,EpBAYoE,AoBAAA,SpBAWC,AoBAAA,QpBAQ,AoBAA,MpBC/BrE,AoBAAA,EpBAYgC,AoBAAA,QpB6OHA,AoBAAA,WpBCRsC,AoBAAA,QpBAQC,AoBAAA,KpBAK,AoBAA,0IpB5OdtC,AoBAAA,OpBAOuC,AoBAAA,KpBAKzE,AoBAAA,GpBAK0E,AoBAAA,QpBAQ,AoBAA,SpBAAC,AoBAAA,GpBCxB1E,AoBAAA,EpBAY0E,AoBAAA,GpBAO3E,AoBAAA,EpBAI2E,AoBAAA,KpBOxB1E,AoBAAA,EpBAYsD,AoBAAA,MpBAQ,AoBAA,GpBCpBtD,AoBAAA,EpBAYwD,AoBAAA,MpBAQ,AoBAA,GpBOpBxD,AoBAAA,EpBAYqB,AoBAAA,WpBAa,AoBAA,GpBkBzBrB,AoBAAA,EpBAY8B,AoBAAA,YpBVHA,AoBAAA,SpBAY7B,AoBAAA,GpBGf,AoBAA,IpBFD0E,AoBAAA,IpBAAA,AoBAAA,EpBAO,AoBAA,EpBEFhB,AoBAAA,EpBAI,AoBAA,Ep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","file":"src.b7981dc6.js","sourceRoot":"../src","sourcesContent":["/**\n * Parses an URI\n *\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\n * @api private\n */\n\nvar re = /^(?:(?![^:@]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\n\nvar parts = [\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\n];\n\nmodule.exports = function parseuri(str) {\n    var src = str,\n        b = str.indexOf('['),\n        e = str.indexOf(']');\n\n    if (b != -1 && e != -1) {\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n    }\n\n    var m = re.exec(str || ''),\n        uri = {},\n        i = 14;\n\n    while (i--) {\n        uri[parts[i]] = m[i] || '';\n    }\n\n    if (b != -1 && e != -1) {\n        uri.source = src;\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n        uri.ipv6uri = true;\n    }\n\n    uri.pathNames = pathNames(uri, uri['path']);\n    uri.queryKey = queryKey(uri, uri['query']);\n\n    return uri;\n};\n\nfunction pathNames(obj, path) {\n    var regx = /\\/{2,9}/g,\n        names = path.replace(regx, \"/\").split(\"/\");\n\n    if (path.substr(0, 1) == '/' || path.length === 0) {\n        names.splice(0, 1);\n    }\n    if (path.substr(path.length - 1, 1) == '/') {\n        names.splice(names.length - 1, 1);\n    }\n\n    return names;\n}\n\nfunction queryKey(uri, query) {\n    var data = {};\n\n    query.replace(/(?:^|&)([^&=]*)=?([^&]*)/g, function ($0, $1, $2) {\n        if ($1) {\n            data[$1] = $2;\n        }\n    });\n\n    return data;\n}\n","/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar w = d * 7;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isFinite(val)) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^(-?(?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'weeks':\n    case 'week':\n    case 'w':\n      return n * w;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (msAbs >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (msAbs >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (msAbs >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return plural(ms, msAbs, d, 'day');\n  }\n  if (msAbs >= h) {\n    return plural(ms, msAbs, h, 'hour');\n  }\n  if (msAbs >= m) {\n    return plural(ms, msAbs, m, 'minute');\n  }\n  if (msAbs >= s) {\n    return plural(ms, msAbs, s, 'second');\n  }\n  return ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, msAbs, n, name) {\n  var isPlural = msAbs >= n * 1.5;\n  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');\n}\n","\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n */\n\nfunction setup(env) {\n\tcreateDebug.debug = createDebug;\n\tcreateDebug.default = createDebug;\n\tcreateDebug.coerce = coerce;\n\tcreateDebug.disable = disable;\n\tcreateDebug.enable = enable;\n\tcreateDebug.enabled = enabled;\n\tcreateDebug.humanize = require('ms');\n\tcreateDebug.destroy = destroy;\n\n\tObject.keys(env).forEach(key => {\n\t\tcreateDebug[key] = env[key];\n\t});\n\n\t/**\n\t* The currently active debug mode names, and names to skip.\n\t*/\n\n\tcreateDebug.names = [];\n\tcreateDebug.skips = [];\n\n\t/**\n\t* Map of special \"%n\" handling functions, for the debug \"format\" argument.\n\t*\n\t* Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n\t*/\n\tcreateDebug.formatters = {};\n\n\t/**\n\t* Selects a color for a debug namespace\n\t* @param {String} namespace The namespace string for the for the debug instance to be colored\n\t* @return {Number|String} An ANSI color code for the given namespace\n\t* @api private\n\t*/\n\tfunction selectColor(namespace) {\n\t\tlet hash = 0;\n\n\t\tfor (let i = 0; i < namespace.length; i++) {\n\t\t\thash = ((hash << 5) - hash) + namespace.charCodeAt(i);\n\t\t\thash |= 0; // Convert to 32bit integer\n\t\t}\n\n\t\treturn createDebug.colors[Math.abs(hash) % createDebug.colors.length];\n\t}\n\tcreateDebug.selectColor = selectColor;\n\n\t/**\n\t* Create a debugger with the given `namespace`.\n\t*\n\t* @param {String} namespace\n\t* @return {Function}\n\t* @api public\n\t*/\n\tfunction createDebug(namespace) {\n\t\tlet prevTime;\n\t\tlet enableOverride = null;\n\n\t\tfunction debug(...args) {\n\t\t\t// Disabled?\n\t\t\tif (!debug.enabled) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst self = debug;\n\n\t\t\t// Set `diff` timestamp\n\t\t\tconst curr = Number(new Date());\n\t\t\tconst ms = curr - (prevTime || curr);\n\t\t\tself.diff = ms;\n\t\t\tself.prev = prevTime;\n\t\t\tself.curr = curr;\n\t\t\tprevTime = curr;\n\n\t\t\targs[0] = createDebug.coerce(args[0]);\n\n\t\t\tif (typeof args[0] !== 'string') {\n\t\t\t\t// Anything else let's inspect with %O\n\t\t\t\targs.unshift('%O');\n\t\t\t}\n\n\t\t\t// Apply any `formatters` transformations\n\t\t\tlet index = 0;\n\t\t\targs[0] = args[0].replace(/%([a-zA-Z%])/g, (match, format) => {\n\t\t\t\t// If we encounter an escaped % then don't increase the array index\n\t\t\t\tif (match === '%%') {\n\t\t\t\t\treturn '%';\n\t\t\t\t}\n\t\t\t\tindex++;\n\t\t\t\tconst formatter = createDebug.formatters[format];\n\t\t\t\tif (typeof formatter === 'function') {\n\t\t\t\t\tconst val = args[index];\n\t\t\t\t\tmatch = formatter.call(self, val);\n\n\t\t\t\t\t// Now we need to remove `args[index]` since it's inlined in the `format`\n\t\t\t\t\targs.splice(index, 1);\n\t\t\t\t\tindex--;\n\t\t\t\t}\n\t\t\t\treturn match;\n\t\t\t});\n\n\t\t\t// Apply env-specific formatting (colors, etc.)\n\t\t\tcreateDebug.formatArgs.call(self, args);\n\n\t\t\tconst logFn = self.log || createDebug.log;\n\t\t\tlogFn.apply(self, args);\n\t\t}\n\n\t\tdebug.namespace = namespace;\n\t\tdebug.useColors = createDebug.useColors();\n\t\tdebug.color = createDebug.selectColor(namespace);\n\t\tdebug.extend = extend;\n\t\tdebug.destroy = createDebug.destroy; // XXX Temporary. Will be removed in the next major release.\n\n\t\tObject.defineProperty(debug, 'enabled', {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: false,\n\t\t\tget: () => enableOverride === null ? createDebug.enabled(namespace) : enableOverride,\n\t\t\tset: v => {\n\t\t\t\tenableOverride = v;\n\t\t\t}\n\t\t});\n\n\t\t// Env-specific initialization logic for debug instances\n\t\tif (typeof createDebug.init === 'function') {\n\t\t\tcreateDebug.init(debug);\n\t\t}\n\n\t\treturn debug;\n\t}\n\n\tfunction extend(namespace, delimiter) {\n\t\tconst newDebug = createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);\n\t\tnewDebug.log = this.log;\n\t\treturn newDebug;\n\t}\n\n\t/**\n\t* Enables a debug mode by namespaces. This can include modes\n\t* separated by a colon and wildcards.\n\t*\n\t* @param {String} namespaces\n\t* @api public\n\t*/\n\tfunction enable(namespaces) {\n\t\tcreateDebug.save(namespaces);\n\n\t\tcreateDebug.names = [];\n\t\tcreateDebug.skips = [];\n\n\t\tlet i;\n\t\tconst split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n\t\tconst len = split.length;\n\n\t\tfor (i = 0; i < len; i++) {\n\t\t\tif (!split[i]) {\n\t\t\t\t// ignore empty strings\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tnamespaces = split[i].replace(/\\*/g, '.*?');\n\n\t\t\tif (namespaces[0] === '-') {\n\t\t\t\tcreateDebug.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n\t\t\t} else {\n\t\t\t\tcreateDebug.names.push(new RegExp('^' + namespaces + '$'));\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t* Disable debug output.\n\t*\n\t* @return {String} namespaces\n\t* @api public\n\t*/\n\tfunction disable() {\n\t\tconst namespaces = [\n\t\t\t...createDebug.names.map(toNamespace),\n\t\t\t...createDebug.skips.map(toNamespace).map(namespace => '-' + namespace)\n\t\t].join(',');\n\t\tcreateDebug.enable('');\n\t\treturn namespaces;\n\t}\n\n\t/**\n\t* Returns true if the given mode name is enabled, false otherwise.\n\t*\n\t* @param {String} name\n\t* @return {Boolean}\n\t* @api public\n\t*/\n\tfunction enabled(name) {\n\t\tif (name[name.length - 1] === '*') {\n\t\t\treturn true;\n\t\t}\n\n\t\tlet i;\n\t\tlet len;\n\n\t\tfor (i = 0, len = createDebug.skips.length; i < len; i++) {\n\t\t\tif (createDebug.skips[i].test(name)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tfor (i = 0, len = createDebug.names.length; i < len; i++) {\n\t\t\tif (createDebug.names[i].test(name)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t* Convert regexp to namespace\n\t*\n\t* @param {RegExp} regxep\n\t* @return {String} namespace\n\t* @api private\n\t*/\n\tfunction toNamespace(regexp) {\n\t\treturn regexp.toString()\n\t\t\t.substring(2, regexp.toString().length - 2)\n\t\t\t.replace(/\\.\\*\\?$/, '*');\n\t}\n\n\t/**\n\t* Coerce `val`.\n\t*\n\t* @param {Mixed} val\n\t* @return {Mixed}\n\t* @api private\n\t*/\n\tfunction coerce(val) {\n\t\tif (val instanceof Error) {\n\t\t\treturn val.stack || val.message;\n\t\t}\n\t\treturn val;\n\t}\n\n\t/**\n\t* XXX DO NOT USE. This is a temporary stub function.\n\t* XXX It WILL be removed in the next major release.\n\t*/\n\tfunction destroy() {\n\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t}\n\n\tcreateDebug.enable(createDebug.load());\n\n\treturn createDebug;\n}\n\nmodule.exports = setup;\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","/* eslint-env browser */\n\n/**\n * This is the web browser implementation of `debug()`.\n */\n\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = localstorage();\nexports.destroy = (() => {\n\tlet warned = false;\n\n\treturn () => {\n\t\tif (!warned) {\n\t\t\twarned = true;\n\t\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t\t}\n\t};\n})();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n\t'#0000CC',\n\t'#0000FF',\n\t'#0033CC',\n\t'#0033FF',\n\t'#0066CC',\n\t'#0066FF',\n\t'#0099CC',\n\t'#0099FF',\n\t'#00CC00',\n\t'#00CC33',\n\t'#00CC66',\n\t'#00CC99',\n\t'#00CCCC',\n\t'#00CCFF',\n\t'#3300CC',\n\t'#3300FF',\n\t'#3333CC',\n\t'#3333FF',\n\t'#3366CC',\n\t'#3366FF',\n\t'#3399CC',\n\t'#3399FF',\n\t'#33CC00',\n\t'#33CC33',\n\t'#33CC66',\n\t'#33CC99',\n\t'#33CCCC',\n\t'#33CCFF',\n\t'#6600CC',\n\t'#6600FF',\n\t'#6633CC',\n\t'#6633FF',\n\t'#66CC00',\n\t'#66CC33',\n\t'#9900CC',\n\t'#9900FF',\n\t'#9933CC',\n\t'#9933FF',\n\t'#99CC00',\n\t'#99CC33',\n\t'#CC0000',\n\t'#CC0033',\n\t'#CC0066',\n\t'#CC0099',\n\t'#CC00CC',\n\t'#CC00FF',\n\t'#CC3300',\n\t'#CC3333',\n\t'#CC3366',\n\t'#CC3399',\n\t'#CC33CC',\n\t'#CC33FF',\n\t'#CC6600',\n\t'#CC6633',\n\t'#CC9900',\n\t'#CC9933',\n\t'#CCCC00',\n\t'#CCCC33',\n\t'#FF0000',\n\t'#FF0033',\n\t'#FF0066',\n\t'#FF0099',\n\t'#FF00CC',\n\t'#FF00FF',\n\t'#FF3300',\n\t'#FF3333',\n\t'#FF3366',\n\t'#FF3399',\n\t'#FF33CC',\n\t'#FF33FF',\n\t'#FF6600',\n\t'#FF6633',\n\t'#FF9900',\n\t'#FF9933',\n\t'#FFCC00',\n\t'#FFCC33'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\n// eslint-disable-next-line complexity\nfunction useColors() {\n\t// NB: In an Electron preload script, document will be defined but not fully\n\t// initialized. Since we know we're in Chrome, we'll just detect this case\n\t// explicitly\n\tif (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {\n\t\treturn true;\n\t}\n\n\t// Internet Explorer and Edge do not support colors.\n\tif (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n\t\treturn false;\n\t}\n\n\t// Is webkit? http://stackoverflow.com/a/16459606/376773\n\t// document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n\treturn (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n\t\t// Is firebug? http://stackoverflow.com/a/398120/376773\n\t\t(typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n\t\t// Is firefox >= v31?\n\t\t// https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n\t\t// Double check webkit in userAgent just in case we are in a worker\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n\targs[0] = (this.useColors ? '%c' : '') +\n\t\tthis.namespace +\n\t\t(this.useColors ? ' %c' : ' ') +\n\t\targs[0] +\n\t\t(this.useColors ? '%c ' : ' ') +\n\t\t'+' + module.exports.humanize(this.diff);\n\n\tif (!this.useColors) {\n\t\treturn;\n\t}\n\n\tconst c = 'color: ' + this.color;\n\targs.splice(1, 0, c, 'color: inherit');\n\n\t// The final \"%c\" is somewhat tricky, because there could be other\n\t// arguments passed either before or after the %c, so we need to\n\t// figure out the correct index to insert the CSS into\n\tlet index = 0;\n\tlet lastC = 0;\n\targs[0].replace(/%[a-zA-Z%]/g, match => {\n\t\tif (match === '%%') {\n\t\t\treturn;\n\t\t}\n\t\tindex++;\n\t\tif (match === '%c') {\n\t\t\t// We only are interested in the *last* %c\n\t\t\t// (the user may have provided their own)\n\t\t\tlastC = index;\n\t\t}\n\t});\n\n\targs.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.debug()` when available.\n * No-op when `console.debug` is not a \"function\".\n * If `console.debug` is not available, falls back\n * to `console.log`.\n *\n * @api public\n */\nexports.log = console.debug || console.log || (() => {});\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\nfunction save(namespaces) {\n\ttry {\n\t\tif (namespaces) {\n\t\t\texports.storage.setItem('debug', namespaces);\n\t\t} else {\n\t\t\texports.storage.removeItem('debug');\n\t\t}\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\nfunction load() {\n\tlet r;\n\ttry {\n\t\tr = exports.storage.getItem('debug');\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n\n\t// If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\tif (!r && typeof process !== 'undefined' && 'env' in process) {\n\t\tr = process.env.DEBUG;\n\t}\n\n\treturn r;\n}\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n\ttry {\n\t\t// TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context\n\t\t// The Browser also has localStorage in the global context.\n\t\treturn localStorage;\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\nmodule.exports = require('./common')(exports);\n\nconst {formatters} = module.exports;\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nformatters.j = function (v) {\n\ttry {\n\t\treturn JSON.stringify(v);\n\t} catch (error) {\n\t\treturn '[UnexpectedJSONParseError]: ' + error.message;\n\t}\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.url = void 0;\nconst parseuri = require(\"parseuri\");\nconst debug = require(\"debug\")(\"socket.io-client:url\");\n/**\n * URL parser.\n *\n * @param uri - url\n * @param path - the request path of the connection\n * @param loc - An object meant to mimic window.location.\n *        Defaults to window.location.\n * @public\n */\nfunction url(uri, path = \"\", loc) {\n    let obj = uri;\n    // default to window.location\n    loc = loc || (typeof location !== \"undefined\" && location);\n    if (null == uri)\n        uri = loc.protocol + \"//\" + loc.host;\n    // relative path support\n    if (typeof uri === \"string\") {\n        if (\"/\" === uri.charAt(0)) {\n            if (\"/\" === uri.charAt(1)) {\n                uri = loc.protocol + uri;\n            }\n            else {\n                uri = loc.host + uri;\n            }\n        }\n        if (!/^(https?|wss?):\\/\\//.test(uri)) {\n            debug(\"protocol-less url %s\", uri);\n            if (\"undefined\" !== typeof loc) {\n                uri = loc.protocol + \"//\" + uri;\n            }\n            else {\n                uri = \"https://\" + uri;\n            }\n        }\n        // parse\n        debug(\"parse %s\", uri);\n        obj = parseuri(uri);\n    }\n    // make sure we treat `localhost:80` and `localhost` equally\n    if (!obj.port) {\n        if (/^(http|ws)$/.test(obj.protocol)) {\n            obj.port = \"80\";\n        }\n        else if (/^(http|ws)s$/.test(obj.protocol)) {\n            obj.port = \"443\";\n        }\n    }\n    obj.path = obj.path || \"/\";\n    const ipv6 = obj.host.indexOf(\":\") !== -1;\n    const host = ipv6 ? \"[\" + obj.host + \"]\" : obj.host;\n    // define unique id\n    obj.id = obj.protocol + \"://\" + host + \":\" + obj.port + path;\n    // define href\n    obj.href =\n        obj.protocol +\n            \"://\" +\n            host +\n            (loc && loc.port === obj.port ? \"\" : \":\" + obj.port);\n    return obj;\n}\nexports.url = url;\n","\n/**\n * Module exports.\n *\n * Logic borrowed from Modernizr:\n *\n *   - https://github.com/Modernizr/Modernizr/blob/master/feature-detects/cors.js\n */\n\ntry {\n  module.exports = typeof XMLHttpRequest !== 'undefined' &&\n    'withCredentials' in new XMLHttpRequest();\n} catch (err) {\n  // if XMLHttp support is disabled in IE then it will throw\n  // when trying to create\n  module.exports = false;\n}\n","module.exports = (() => {\n  if (typeof self !== \"undefined\") {\n    return self;\n  } else if (typeof window !== \"undefined\") {\n    return window;\n  } else {\n    return Function(\"return this\")();\n  }\n})();\n","// browser shim for xmlhttprequest module\n\nconst hasCORS = require(\"has-cors\");\nconst globalThis = require(\"./globalThis\");\n\nmodule.exports = function(opts) {\n  const xdomain = opts.xdomain;\n\n  // scheme must be same when usign XDomainRequest\n  // http://blogs.msdn.com/b/ieinternals/archive/2010/05/13/xdomainrequest-restrictions-limitations-and-workarounds.aspx\n  const xscheme = opts.xscheme;\n\n  // XDomainRequest has a flow of not sending cookie, therefore it should be disabled as a default.\n  // https://github.com/Automattic/engine.io-client/pull/217\n  const enablesXDR = opts.enablesXDR;\n\n  // XMLHttpRequest can be disabled on IE\n  try {\n    if (\"undefined\" !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n      return new XMLHttpRequest();\n    }\n  } catch (e) {}\n\n  // Use XDomainRequest for IE8 if enablesXDR is true\n  // because loading bar keeps flashing when using jsonp-polling\n  // https://github.com/yujiosaka/socke.io-ie8-loading-example\n  try {\n    if (\"undefined\" !== typeof XDomainRequest && !xscheme && enablesXDR) {\n      return new XDomainRequest();\n    }\n  } catch (e) {}\n\n  if (!xdomain) {\n    try {\n      return new globalThis[[\"Active\"].concat(\"Object\").join(\"X\")](\n        \"Microsoft.XMLHTTP\"\n      );\n    } catch (e) {}\n  }\n};\n","const PACKET_TYPES = Object.create(null); // no Map = no polyfill\nPACKET_TYPES[\"open\"] = \"0\";\nPACKET_TYPES[\"close\"] = \"1\";\nPACKET_TYPES[\"ping\"] = \"2\";\nPACKET_TYPES[\"pong\"] = \"3\";\nPACKET_TYPES[\"message\"] = \"4\";\nPACKET_TYPES[\"upgrade\"] = \"5\";\nPACKET_TYPES[\"noop\"] = \"6\";\n\nconst PACKET_TYPES_REVERSE = Object.create(null);\nObject.keys(PACKET_TYPES).forEach(key => {\n  PACKET_TYPES_REVERSE[PACKET_TYPES[key]] = key;\n});\n\nconst ERROR_PACKET = { type: \"error\", data: \"parser error\" };\n\nmodule.exports = {\n  PACKET_TYPES,\n  PACKET_TYPES_REVERSE,\n  ERROR_PACKET\n};\n","const { PACKET_TYPES } = require(\"./commons\");\n\nconst withNativeBlob =\n  typeof Blob === \"function\" ||\n  (typeof Blob !== \"undefined\" &&\n    Object.prototype.toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\n\n// ArrayBuffer.isView method is not defined in IE10\nconst isView = obj => {\n  return typeof ArrayBuffer.isView === \"function\"\n    ? ArrayBuffer.isView(obj)\n    : obj && obj.buffer instanceof ArrayBuffer;\n};\n\nconst encodePacket = ({ type, data }, supportsBinary, callback) => {\n  if (withNativeBlob && data instanceof Blob) {\n    if (supportsBinary) {\n      return callback(data);\n    } else {\n      return encodeBlobAsBase64(data, callback);\n    }\n  } else if (\n    withNativeArrayBuffer &&\n    (data instanceof ArrayBuffer || isView(data))\n  ) {\n    if (supportsBinary) {\n      return callback(data instanceof ArrayBuffer ? data : data.buffer);\n    } else {\n      return encodeBlobAsBase64(new Blob([data]), callback);\n    }\n  }\n  // plain string\n  return callback(PACKET_TYPES[type] + (data || \"\"));\n};\n\nconst encodeBlobAsBase64 = (data, callback) => {\n  const fileReader = new FileReader();\n  fileReader.onload = function() {\n    const content = fileReader.result.split(\",\")[1];\n    callback(\"b\" + content);\n  };\n  return fileReader.readAsDataURL(data);\n};\n\nmodule.exports = encodePacket;\n","/*\n * base64-arraybuffer\n * https://github.com/niklasvh/base64-arraybuffer\n *\n * Copyright (c) 2012 Niklas von Hertzen\n * Licensed under the MIT license.\n */\n(function(chars){\n  \"use strict\";\n\n  exports.encode = function(arraybuffer) {\n    var bytes = new Uint8Array(arraybuffer),\n    i, len = bytes.length, base64 = \"\";\n\n    for (i = 0; i < len; i+=3) {\n      base64 += chars[bytes[i] >> 2];\n      base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n      base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n      base64 += chars[bytes[i + 2] & 63];\n    }\n\n    if ((len % 3) === 2) {\n      base64 = base64.substring(0, base64.length - 1) + \"=\";\n    } else if (len % 3 === 1) {\n      base64 = base64.substring(0, base64.length - 2) + \"==\";\n    }\n\n    return base64;\n  };\n\n  exports.decode =  function(base64) {\n    var bufferLength = base64.length * 0.75,\n    len = base64.length, i, p = 0,\n    encoded1, encoded2, encoded3, encoded4;\n\n    if (base64[base64.length - 1] === \"=\") {\n      bufferLength--;\n      if (base64[base64.length - 2] === \"=\") {\n        bufferLength--;\n      }\n    }\n\n    var arraybuffer = new ArrayBuffer(bufferLength),\n    bytes = new Uint8Array(arraybuffer);\n\n    for (i = 0; i < len; i+=4) {\n      encoded1 = chars.indexOf(base64[i]);\n      encoded2 = chars.indexOf(base64[i+1]);\n      encoded3 = chars.indexOf(base64[i+2]);\n      encoded4 = chars.indexOf(base64[i+3]);\n\n      bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n      bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n      bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n\n    return arraybuffer;\n  };\n})(\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\");\n","const { PACKET_TYPES_REVERSE, ERROR_PACKET } = require(\"./commons\");\n\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\n\nlet base64decoder;\nif (withNativeArrayBuffer) {\n  base64decoder = require(\"base64-arraybuffer\");\n}\n\nconst decodePacket = (encodedPacket, binaryType) => {\n  if (typeof encodedPacket !== \"string\") {\n    return {\n      type: \"message\",\n      data: mapBinary(encodedPacket, binaryType)\n    };\n  }\n  const type = encodedPacket.charAt(0);\n  if (type === \"b\") {\n    return {\n      type: \"message\",\n      data: decodeBase64Packet(encodedPacket.substring(1), binaryType)\n    };\n  }\n  const packetType = PACKET_TYPES_REVERSE[type];\n  if (!packetType) {\n    return ERROR_PACKET;\n  }\n  return encodedPacket.length > 1\n    ? {\n        type: PACKET_TYPES_REVERSE[type],\n        data: encodedPacket.substring(1)\n      }\n    : {\n        type: PACKET_TYPES_REVERSE[type]\n      };\n};\n\nconst decodeBase64Packet = (data, binaryType) => {\n  if (base64decoder) {\n    const decoded = base64decoder.decode(data);\n    return mapBinary(decoded, binaryType);\n  } else {\n    return { base64: true, data }; // fallback for old browsers\n  }\n};\n\nconst mapBinary = (data, binaryType) => {\n  switch (binaryType) {\n    case \"blob\":\n      return data instanceof ArrayBuffer ? new Blob([data]) : data;\n    case \"arraybuffer\":\n    default:\n      return data; // assuming the data is already an ArrayBuffer\n  }\n};\n\nmodule.exports = decodePacket;\n","const encodePacket = require(\"./encodePacket\");\nconst decodePacket = require(\"./decodePacket\");\n\nconst SEPARATOR = String.fromCharCode(30); // see https://en.wikipedia.org/wiki/Delimiter#ASCII_delimited_text\n\nconst encodePayload = (packets, callback) => {\n  // some packets may be added to the array while encoding, so the initial length must be saved\n  const length = packets.length;\n  const encodedPackets = new Array(length);\n  let count = 0;\n\n  packets.forEach((packet, i) => {\n    // force base64 encoding for binary packets\n    encodePacket(packet, false, encodedPacket => {\n      encodedPackets[i] = encodedPacket;\n      if (++count === length) {\n        callback(encodedPackets.join(SEPARATOR));\n      }\n    });\n  });\n};\n\nconst decodePayload = (encodedPayload, binaryType) => {\n  const encodedPackets = encodedPayload.split(SEPARATOR);\n  const packets = [];\n  for (let i = 0; i < encodedPackets.length; i++) {\n    const decodedPacket = decodePacket(encodedPackets[i], binaryType);\n    packets.push(decodedPacket);\n    if (decodedPacket.type === \"error\") {\n      break;\n    }\n  }\n  return packets;\n};\n\nmodule.exports = {\n  protocol: 4,\n  encodePacket,\n  encodePayload,\n  decodePacket,\n  decodePayload\n};\n","\r\n/**\r\n * Expose `Emitter`.\r\n */\r\n\r\nif (typeof module !== 'undefined') {\r\n  module.exports = Emitter;\r\n}\r\n\r\n/**\r\n * Initialize a new `Emitter`.\r\n *\r\n * @api public\r\n */\r\n\r\nfunction Emitter(obj) {\r\n  if (obj) return mixin(obj);\r\n};\r\n\r\n/**\r\n * Mixin the emitter properties.\r\n *\r\n * @param {Object} obj\r\n * @return {Object}\r\n * @api private\r\n */\r\n\r\nfunction mixin(obj) {\r\n  for (var key in Emitter.prototype) {\r\n    obj[key] = Emitter.prototype[key];\r\n  }\r\n  return obj;\r\n}\r\n\r\n/**\r\n * Listen on the given `event` with `fn`.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.on =\r\nEmitter.prototype.addEventListener = function(event, fn){\r\n  this._callbacks = this._callbacks || {};\r\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\r\n    .push(fn);\r\n  return this;\r\n};\r\n\r\n/**\r\n * Adds an `event` listener that will be invoked a single\r\n * time then automatically removed.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.once = function(event, fn){\r\n  function on() {\r\n    this.off(event, on);\r\n    fn.apply(this, arguments);\r\n  }\r\n\r\n  on.fn = fn;\r\n  this.on(event, on);\r\n  return this;\r\n};\r\n\r\n/**\r\n * Remove the given callback for `event` or all\r\n * registered callbacks.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.off =\r\nEmitter.prototype.removeListener =\r\nEmitter.prototype.removeAllListeners =\r\nEmitter.prototype.removeEventListener = function(event, fn){\r\n  this._callbacks = this._callbacks || {};\r\n\r\n  // all\r\n  if (0 == arguments.length) {\r\n    this._callbacks = {};\r\n    return this;\r\n  }\r\n\r\n  // specific event\r\n  var callbacks = this._callbacks['$' + event];\r\n  if (!callbacks) return this;\r\n\r\n  // remove all handlers\r\n  if (1 == arguments.length) {\r\n    delete this._callbacks['$' + event];\r\n    return this;\r\n  }\r\n\r\n  // remove specific handler\r\n  var cb;\r\n  for (var i = 0; i < callbacks.length; i++) {\r\n    cb = callbacks[i];\r\n    if (cb === fn || cb.fn === fn) {\r\n      callbacks.splice(i, 1);\r\n      break;\r\n    }\r\n  }\r\n\r\n  // Remove event specific arrays for event types that no\r\n  // one is subscribed for to avoid memory leak.\r\n  if (callbacks.length === 0) {\r\n    delete this._callbacks['$' + event];\r\n  }\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * Emit `event` with the given args.\r\n *\r\n * @param {String} event\r\n * @param {Mixed} ...\r\n * @return {Emitter}\r\n */\r\n\r\nEmitter.prototype.emit = function(event){\r\n  this._callbacks = this._callbacks || {};\r\n\r\n  var args = new Array(arguments.length - 1)\r\n    , callbacks = this._callbacks['$' + event];\r\n\r\n  for (var i = 1; i < arguments.length; i++) {\r\n    args[i - 1] = arguments[i];\r\n  }\r\n\r\n  if (callbacks) {\r\n    callbacks = callbacks.slice(0);\r\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\r\n      callbacks[i].apply(this, args);\r\n    }\r\n  }\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * Return array of callbacks for `event`.\r\n *\r\n * @param {String} event\r\n * @return {Array}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.listeners = function(event){\r\n  this._callbacks = this._callbacks || {};\r\n  return this._callbacks['$' + event] || [];\r\n};\r\n\r\n/**\r\n * Check if this emitter has `event` handlers.\r\n *\r\n * @param {String} event\r\n * @return {Boolean}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.hasListeners = function(event){\r\n  return !! this.listeners(event).length;\r\n};\r\n","\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n */\n\nfunction setup(env) {\n\tcreateDebug.debug = createDebug;\n\tcreateDebug.default = createDebug;\n\tcreateDebug.coerce = coerce;\n\tcreateDebug.disable = disable;\n\tcreateDebug.enable = enable;\n\tcreateDebug.enabled = enabled;\n\tcreateDebug.humanize = require('ms');\n\tcreateDebug.destroy = destroy;\n\n\tObject.keys(env).forEach(key => {\n\t\tcreateDebug[key] = env[key];\n\t});\n\n\t/**\n\t* The currently active debug mode names, and names to skip.\n\t*/\n\n\tcreateDebug.names = [];\n\tcreateDebug.skips = [];\n\n\t/**\n\t* Map of special \"%n\" handling functions, for the debug \"format\" argument.\n\t*\n\t* Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n\t*/\n\tcreateDebug.formatters = {};\n\n\t/**\n\t* Selects a color for a debug namespace\n\t* @param {String} namespace The namespace string for the for the debug instance to be colored\n\t* @return {Number|String} An ANSI color code for the given namespace\n\t* @api private\n\t*/\n\tfunction selectColor(namespace) {\n\t\tlet hash = 0;\n\n\t\tfor (let i = 0; i < namespace.length; i++) {\n\t\t\thash = ((hash << 5) - hash) + namespace.charCodeAt(i);\n\t\t\thash |= 0; // Convert to 32bit integer\n\t\t}\n\n\t\treturn createDebug.colors[Math.abs(hash) % createDebug.colors.length];\n\t}\n\tcreateDebug.selectColor = selectColor;\n\n\t/**\n\t* Create a debugger with the given `namespace`.\n\t*\n\t* @param {String} namespace\n\t* @return {Function}\n\t* @api public\n\t*/\n\tfunction createDebug(namespace) {\n\t\tlet prevTime;\n\t\tlet enableOverride = null;\n\n\t\tfunction debug(...args) {\n\t\t\t// Disabled?\n\t\t\tif (!debug.enabled) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst self = debug;\n\n\t\t\t// Set `diff` timestamp\n\t\t\tconst curr = Number(new Date());\n\t\t\tconst ms = curr - (prevTime || curr);\n\t\t\tself.diff = ms;\n\t\t\tself.prev = prevTime;\n\t\t\tself.curr = curr;\n\t\t\tprevTime = curr;\n\n\t\t\targs[0] = createDebug.coerce(args[0]);\n\n\t\t\tif (typeof args[0] !== 'string') {\n\t\t\t\t// Anything else let's inspect with %O\n\t\t\t\targs.unshift('%O');\n\t\t\t}\n\n\t\t\t// Apply any `formatters` transformations\n\t\t\tlet index = 0;\n\t\t\targs[0] = args[0].replace(/%([a-zA-Z%])/g, (match, format) => {\n\t\t\t\t// If we encounter an escaped % then don't increase the array index\n\t\t\t\tif (match === '%%') {\n\t\t\t\t\treturn '%';\n\t\t\t\t}\n\t\t\t\tindex++;\n\t\t\t\tconst formatter = createDebug.formatters[format];\n\t\t\t\tif (typeof formatter === 'function') {\n\t\t\t\t\tconst val = args[index];\n\t\t\t\t\tmatch = formatter.call(self, val);\n\n\t\t\t\t\t// Now we need to remove `args[index]` since it's inlined in the `format`\n\t\t\t\t\targs.splice(index, 1);\n\t\t\t\t\tindex--;\n\t\t\t\t}\n\t\t\t\treturn match;\n\t\t\t});\n\n\t\t\t// Apply env-specific formatting (colors, etc.)\n\t\t\tcreateDebug.formatArgs.call(self, args);\n\n\t\t\tconst logFn = self.log || createDebug.log;\n\t\t\tlogFn.apply(self, args);\n\t\t}\n\n\t\tdebug.namespace = namespace;\n\t\tdebug.useColors = createDebug.useColors();\n\t\tdebug.color = createDebug.selectColor(namespace);\n\t\tdebug.extend = extend;\n\t\tdebug.destroy = createDebug.destroy; // XXX Temporary. Will be removed in the next major release.\n\n\t\tObject.defineProperty(debug, 'enabled', {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: false,\n\t\t\tget: () => enableOverride === null ? createDebug.enabled(namespace) : enableOverride,\n\t\t\tset: v => {\n\t\t\t\tenableOverride = v;\n\t\t\t}\n\t\t});\n\n\t\t// Env-specific initialization logic for debug instances\n\t\tif (typeof createDebug.init === 'function') {\n\t\t\tcreateDebug.init(debug);\n\t\t}\n\n\t\treturn debug;\n\t}\n\n\tfunction extend(namespace, delimiter) {\n\t\tconst newDebug = createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);\n\t\tnewDebug.log = this.log;\n\t\treturn newDebug;\n\t}\n\n\t/**\n\t* Enables a debug mode by namespaces. This can include modes\n\t* separated by a colon and wildcards.\n\t*\n\t* @param {String} namespaces\n\t* @api public\n\t*/\n\tfunction enable(namespaces) {\n\t\tcreateDebug.save(namespaces);\n\n\t\tcreateDebug.names = [];\n\t\tcreateDebug.skips = [];\n\n\t\tlet i;\n\t\tconst split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n\t\tconst len = split.length;\n\n\t\tfor (i = 0; i < len; i++) {\n\t\t\tif (!split[i]) {\n\t\t\t\t// ignore empty strings\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tnamespaces = split[i].replace(/\\*/g, '.*?');\n\n\t\t\tif (namespaces[0] === '-') {\n\t\t\t\tcreateDebug.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n\t\t\t} else {\n\t\t\t\tcreateDebug.names.push(new RegExp('^' + namespaces + '$'));\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t* Disable debug output.\n\t*\n\t* @return {String} namespaces\n\t* @api public\n\t*/\n\tfunction disable() {\n\t\tconst namespaces = [\n\t\t\t...createDebug.names.map(toNamespace),\n\t\t\t...createDebug.skips.map(toNamespace).map(namespace => '-' + namespace)\n\t\t].join(',');\n\t\tcreateDebug.enable('');\n\t\treturn namespaces;\n\t}\n\n\t/**\n\t* Returns true if the given mode name is enabled, false otherwise.\n\t*\n\t* @param {String} name\n\t* @return {Boolean}\n\t* @api public\n\t*/\n\tfunction enabled(name) {\n\t\tif (name[name.length - 1] === '*') {\n\t\t\treturn true;\n\t\t}\n\n\t\tlet i;\n\t\tlet len;\n\n\t\tfor (i = 0, len = createDebug.skips.length; i < len; i++) {\n\t\t\tif (createDebug.skips[i].test(name)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tfor (i = 0, len = createDebug.names.length; i < len; i++) {\n\t\t\tif (createDebug.names[i].test(name)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t* Convert regexp to namespace\n\t*\n\t* @param {RegExp} regxep\n\t* @return {String} namespace\n\t* @api private\n\t*/\n\tfunction toNamespace(regexp) {\n\t\treturn regexp.toString()\n\t\t\t.substring(2, regexp.toString().length - 2)\n\t\t\t.replace(/\\.\\*\\?$/, '*');\n\t}\n\n\t/**\n\t* Coerce `val`.\n\t*\n\t* @param {Mixed} val\n\t* @return {Mixed}\n\t* @api private\n\t*/\n\tfunction coerce(val) {\n\t\tif (val instanceof Error) {\n\t\t\treturn val.stack || val.message;\n\t\t}\n\t\treturn val;\n\t}\n\n\t/**\n\t* XXX DO NOT USE. This is a temporary stub function.\n\t* XXX It WILL be removed in the next major release.\n\t*/\n\tfunction destroy() {\n\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t}\n\n\tcreateDebug.enable(createDebug.load());\n\n\treturn createDebug;\n}\n\nmodule.exports = setup;\n","/* eslint-env browser */\n\n/**\n * This is the web browser implementation of `debug()`.\n */\n\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = localstorage();\nexports.destroy = (() => {\n\tlet warned = false;\n\n\treturn () => {\n\t\tif (!warned) {\n\t\t\twarned = true;\n\t\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t\t}\n\t};\n})();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n\t'#0000CC',\n\t'#0000FF',\n\t'#0033CC',\n\t'#0033FF',\n\t'#0066CC',\n\t'#0066FF',\n\t'#0099CC',\n\t'#0099FF',\n\t'#00CC00',\n\t'#00CC33',\n\t'#00CC66',\n\t'#00CC99',\n\t'#00CCCC',\n\t'#00CCFF',\n\t'#3300CC',\n\t'#3300FF',\n\t'#3333CC',\n\t'#3333FF',\n\t'#3366CC',\n\t'#3366FF',\n\t'#3399CC',\n\t'#3399FF',\n\t'#33CC00',\n\t'#33CC33',\n\t'#33CC66',\n\t'#33CC99',\n\t'#33CCCC',\n\t'#33CCFF',\n\t'#6600CC',\n\t'#6600FF',\n\t'#6633CC',\n\t'#6633FF',\n\t'#66CC00',\n\t'#66CC33',\n\t'#9900CC',\n\t'#9900FF',\n\t'#9933CC',\n\t'#9933FF',\n\t'#99CC00',\n\t'#99CC33',\n\t'#CC0000',\n\t'#CC0033',\n\t'#CC0066',\n\t'#CC0099',\n\t'#CC00CC',\n\t'#CC00FF',\n\t'#CC3300',\n\t'#CC3333',\n\t'#CC3366',\n\t'#CC3399',\n\t'#CC33CC',\n\t'#CC33FF',\n\t'#CC6600',\n\t'#CC6633',\n\t'#CC9900',\n\t'#CC9933',\n\t'#CCCC00',\n\t'#CCCC33',\n\t'#FF0000',\n\t'#FF0033',\n\t'#FF0066',\n\t'#FF0099',\n\t'#FF00CC',\n\t'#FF00FF',\n\t'#FF3300',\n\t'#FF3333',\n\t'#FF3366',\n\t'#FF3399',\n\t'#FF33CC',\n\t'#FF33FF',\n\t'#FF6600',\n\t'#FF6633',\n\t'#FF9900',\n\t'#FF9933',\n\t'#FFCC00',\n\t'#FFCC33'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\n// eslint-disable-next-line complexity\nfunction useColors() {\n\t// NB: In an Electron preload script, document will be defined but not fully\n\t// initialized. Since we know we're in Chrome, we'll just detect this case\n\t// explicitly\n\tif (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {\n\t\treturn true;\n\t}\n\n\t// Internet Explorer and Edge do not support colors.\n\tif (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n\t\treturn false;\n\t}\n\n\t// Is webkit? http://stackoverflow.com/a/16459606/376773\n\t// document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n\treturn (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n\t\t// Is firebug? http://stackoverflow.com/a/398120/376773\n\t\t(typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n\t\t// Is firefox >= v31?\n\t\t// https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n\t\t// Double check webkit in userAgent just in case we are in a worker\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n\targs[0] = (this.useColors ? '%c' : '') +\n\t\tthis.namespace +\n\t\t(this.useColors ? ' %c' : ' ') +\n\t\targs[0] +\n\t\t(this.useColors ? '%c ' : ' ') +\n\t\t'+' + module.exports.humanize(this.diff);\n\n\tif (!this.useColors) {\n\t\treturn;\n\t}\n\n\tconst c = 'color: ' + this.color;\n\targs.splice(1, 0, c, 'color: inherit');\n\n\t// The final \"%c\" is somewhat tricky, because there could be other\n\t// arguments passed either before or after the %c, so we need to\n\t// figure out the correct index to insert the CSS into\n\tlet index = 0;\n\tlet lastC = 0;\n\targs[0].replace(/%[a-zA-Z%]/g, match => {\n\t\tif (match === '%%') {\n\t\t\treturn;\n\t\t}\n\t\tindex++;\n\t\tif (match === '%c') {\n\t\t\t// We only are interested in the *last* %c\n\t\t\t// (the user may have provided their own)\n\t\t\tlastC = index;\n\t\t}\n\t});\n\n\targs.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.debug()` when available.\n * No-op when `console.debug` is not a \"function\".\n * If `console.debug` is not available, falls back\n * to `console.log`.\n *\n * @api public\n */\nexports.log = console.debug || console.log || (() => {});\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\nfunction save(namespaces) {\n\ttry {\n\t\tif (namespaces) {\n\t\t\texports.storage.setItem('debug', namespaces);\n\t\t} else {\n\t\t\texports.storage.removeItem('debug');\n\t\t}\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\nfunction load() {\n\tlet r;\n\ttry {\n\t\tr = exports.storage.getItem('debug');\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n\n\t// If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\tif (!r && typeof process !== 'undefined' && 'env' in process) {\n\t\tr = process.env.DEBUG;\n\t}\n\n\treturn r;\n}\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n\ttry {\n\t\t// TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context\n\t\t// The Browser also has localStorage in the global context.\n\t\treturn localStorage;\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\nmodule.exports = require('./common')(exports);\n\nconst {formatters} = module.exports;\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nformatters.j = function (v) {\n\ttry {\n\t\treturn JSON.stringify(v);\n\t} catch (error) {\n\t\treturn '[UnexpectedJSONParseError]: ' + error.message;\n\t}\n};\n","const parser = require(\"engine.io-parser\");\nconst Emitter = require(\"component-emitter\");\nconst debug = require(\"debug\")(\"engine.io-client:transport\");\n\nclass Transport extends Emitter {\n  /**\n   * Transport abstract constructor.\n   *\n   * @param {Object} options.\n   * @api private\n   */\n  constructor(opts) {\n    super();\n\n    this.opts = opts;\n    this.query = opts.query;\n    this.readyState = \"\";\n    this.socket = opts.socket;\n  }\n\n  /**\n   * Emits an error.\n   *\n   * @param {String} str\n   * @return {Transport} for chaining\n   * @api public\n   */\n  onError(msg, desc) {\n    const err = new Error(msg);\n    err.type = \"TransportError\";\n    err.description = desc;\n    this.emit(\"error\", err);\n    return this;\n  }\n\n  /**\n   * Opens the transport.\n   *\n   * @api public\n   */\n  open() {\n    if (\"closed\" === this.readyState || \"\" === this.readyState) {\n      this.readyState = \"opening\";\n      this.doOpen();\n    }\n\n    return this;\n  }\n\n  /**\n   * Closes the transport.\n   *\n   * @api private\n   */\n  close() {\n    if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n      this.doClose();\n      this.onClose();\n    }\n\n    return this;\n  }\n\n  /**\n   * Sends multiple packets.\n   *\n   * @param {Array} packets\n   * @api private\n   */\n  send(packets) {\n    if (\"open\" === this.readyState) {\n      this.write(packets);\n    } else {\n      // this might happen if the transport was silently closed in the beforeunload event handler\n      debug(\"transport is not open, discarding packets\");\n    }\n  }\n\n  /**\n   * Called upon open\n   *\n   * @api private\n   */\n  onOpen() {\n    this.readyState = \"open\";\n    this.writable = true;\n    this.emit(\"open\");\n  }\n\n  /**\n   * Called with data.\n   *\n   * @param {String} data\n   * @api private\n   */\n  onData(data) {\n    const packet = parser.decodePacket(data, this.socket.binaryType);\n    this.onPacket(packet);\n  }\n\n  /**\n   * Called with a decoded packet.\n   */\n  onPacket(packet) {\n    this.emit(\"packet\", packet);\n  }\n\n  /**\n   * Called upon close.\n   *\n   * @api private\n   */\n  onClose() {\n    this.readyState = \"closed\";\n    this.emit(\"close\");\n  }\n}\n\nmodule.exports = Transport;\n","/**\n * Compiles a querystring\n * Returns string representation of the object\n *\n * @param {Object}\n * @api private\n */\n\nexports.encode = function (obj) {\n  var str = '';\n\n  for (var i in obj) {\n    if (obj.hasOwnProperty(i)) {\n      if (str.length) str += '&';\n      str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\n    }\n  }\n\n  return str;\n};\n\n/**\n * Parses a simple querystring into an object\n *\n * @param {String} qs\n * @api private\n */\n\nexports.decode = function(qs){\n  var qry = {};\n  var pairs = qs.split('&');\n  for (var i = 0, l = pairs.length; i < l; i++) {\n    var pair = pairs[i].split('=');\n    qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n  }\n  return qry;\n};\n","'use strict';\n\nvar alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split('')\n  , length = 64\n  , map = {}\n  , seed = 0\n  , i = 0\n  , prev;\n\n/**\n * Return a string representing the specified number.\n *\n * @param {Number} num The number to convert.\n * @returns {String} The string representation of the number.\n * @api public\n */\nfunction encode(num) {\n  var encoded = '';\n\n  do {\n    encoded = alphabet[num % length] + encoded;\n    num = Math.floor(num / length);\n  } while (num > 0);\n\n  return encoded;\n}\n\n/**\n * Return the integer value specified by the given string.\n *\n * @param {String} str The string to convert.\n * @returns {Number} The integer value represented by the string.\n * @api public\n */\nfunction decode(str) {\n  var decoded = 0;\n\n  for (i = 0; i < str.length; i++) {\n    decoded = decoded * length + map[str.charAt(i)];\n  }\n\n  return decoded;\n}\n\n/**\n * Yeast: A tiny growing id generator.\n *\n * @returns {String} A unique id.\n * @api public\n */\nfunction yeast() {\n  var now = encode(+new Date());\n\n  if (now !== prev) return seed = 0, prev = now;\n  return now +'.'+ encode(seed++);\n}\n\n//\n// Map each character to its index.\n//\nfor (; i < length; i++) map[alphabet[i]] = i;\n\n//\n// Expose the `yeast`, `encode` and `decode` functions.\n//\nyeast.encode = encode;\nyeast.decode = decode;\nmodule.exports = yeast;\n","const Transport = require(\"../transport\");\nconst parseqs = require(\"parseqs\");\nconst parser = require(\"engine.io-parser\");\nconst yeast = require(\"yeast\");\n\nconst debug = require(\"debug\")(\"engine.io-client:polling\");\n\nclass Polling extends Transport {\n  /**\n   * Transport name.\n   */\n  get name() {\n    return \"polling\";\n  }\n\n  /**\n   * Opens the socket (triggers polling). We write a PING message to determine\n   * when the transport is open.\n   *\n   * @api private\n   */\n  doOpen() {\n    this.poll();\n  }\n\n  /**\n   * Pauses polling.\n   *\n   * @param {Function} callback upon buffers are flushed and transport is paused\n   * @api private\n   */\n  pause(onPause) {\n    this.readyState = \"pausing\";\n\n    const pause = () => {\n      debug(\"paused\");\n      this.readyState = \"paused\";\n      onPause();\n    };\n\n    if (this.polling || !this.writable) {\n      let total = 0;\n\n      if (this.polling) {\n        debug(\"we are currently polling - waiting to pause\");\n        total++;\n        this.once(\"pollComplete\", function() {\n          debug(\"pre-pause polling complete\");\n          --total || pause();\n        });\n      }\n\n      if (!this.writable) {\n        debug(\"we are currently writing - waiting to pause\");\n        total++;\n        this.once(\"drain\", function() {\n          debug(\"pre-pause writing complete\");\n          --total || pause();\n        });\n      }\n    } else {\n      pause();\n    }\n  }\n\n  /**\n   * Starts polling cycle.\n   *\n   * @api public\n   */\n  poll() {\n    debug(\"polling\");\n    this.polling = true;\n    this.doPoll();\n    this.emit(\"poll\");\n  }\n\n  /**\n   * Overloads onData to detect payloads.\n   *\n   * @api private\n   */\n  onData(data) {\n    debug(\"polling got data %s\", data);\n    const callback = packet => {\n      // if its the first message we consider the transport open\n      if (\"opening\" === this.readyState && packet.type === \"open\") {\n        this.onOpen();\n      }\n\n      // if its a close packet, we close the ongoing requests\n      if (\"close\" === packet.type) {\n        this.onClose();\n        return false;\n      }\n\n      // otherwise bypass onData and handle the message\n      this.onPacket(packet);\n    };\n\n    // decode payload\n    parser.decodePayload(data, this.socket.binaryType).forEach(callback);\n\n    // if an event did not trigger closing\n    if (\"closed\" !== this.readyState) {\n      // if we got data we're not polling\n      this.polling = false;\n      this.emit(\"pollComplete\");\n\n      if (\"open\" === this.readyState) {\n        this.poll();\n      } else {\n        debug('ignoring poll - transport state \"%s\"', this.readyState);\n      }\n    }\n  }\n\n  /**\n   * For polling, send a close packet.\n   *\n   * @api private\n   */\n  doClose() {\n    const close = () => {\n      debug(\"writing close packet\");\n      this.write([{ type: \"close\" }]);\n    };\n\n    if (\"open\" === this.readyState) {\n      debug(\"transport open - closing\");\n      close();\n    } else {\n      // in case we're trying to close while\n      // handshaking is in progress (GH-164)\n      debug(\"transport not open - deferring close\");\n      this.once(\"open\", close);\n    }\n  }\n\n  /**\n   * Writes a packets payload.\n   *\n   * @param {Array} data packets\n   * @param {Function} drain callback\n   * @api private\n   */\n  write(packets) {\n    this.writable = false;\n\n    parser.encodePayload(packets, data => {\n      this.doWrite(data, () => {\n        this.writable = true;\n        this.emit(\"drain\");\n      });\n    });\n  }\n\n  /**\n   * Generates uri for connection.\n   *\n   * @api private\n   */\n  uri() {\n    let query = this.query || {};\n    const schema = this.opts.secure ? \"https\" : \"http\";\n    let port = \"\";\n\n    // cache busting is forced\n    if (false !== this.opts.timestampRequests) {\n      query[this.opts.timestampParam] = yeast();\n    }\n\n    if (!this.supportsBinary && !query.sid) {\n      query.b64 = 1;\n    }\n\n    query = parseqs.encode(query);\n\n    // avoid port if default for schema\n    if (\n      this.opts.port &&\n      ((\"https\" === schema && Number(this.opts.port) !== 443) ||\n        (\"http\" === schema && Number(this.opts.port) !== 80))\n    ) {\n      port = \":\" + this.opts.port;\n    }\n\n    // prepend ? to query\n    if (query.length) {\n      query = \"?\" + query;\n    }\n\n    const ipv6 = this.opts.hostname.indexOf(\":\") !== -1;\n    return (\n      schema +\n      \"://\" +\n      (ipv6 ? \"[\" + this.opts.hostname + \"]\" : this.opts.hostname) +\n      port +\n      this.opts.path +\n      query\n    );\n  }\n}\n\nmodule.exports = Polling;\n","module.exports.pick = (obj, ...attr) => {\n  return attr.reduce((acc, k) => {\n    if (obj.hasOwnProperty(k)) {\n      acc[k] = obj[k];\n    }\n    return acc;\n  }, {});\n};\n","/* global attachEvent */\n\nconst XMLHttpRequest = require(\"../../contrib/xmlhttprequest-ssl/XMLHttpRequest\");\nconst Polling = require(\"./polling\");\nconst Emitter = require(\"component-emitter\");\nconst { pick } = require(\"../util\");\nconst globalThis = require(\"../globalThis\");\n\nconst debug = require(\"debug\")(\"engine.io-client:polling-xhr\");\n\n/**\n * Empty function\n */\n\nfunction empty() {}\n\nconst hasXHR2 = (function() {\n  const xhr = new XMLHttpRequest({ xdomain: false });\n  return null != xhr.responseType;\n})();\n\nclass XHR extends Polling {\n  /**\n   * XHR Polling constructor.\n   *\n   * @param {Object} opts\n   * @api public\n   */\n  constructor(opts) {\n    super(opts);\n\n    if (typeof location !== \"undefined\") {\n      const isSSL = \"https:\" === location.protocol;\n      let port = location.port;\n\n      // some user agents have empty `location.port`\n      if (!port) {\n        port = isSSL ? 443 : 80;\n      }\n\n      this.xd =\n        (typeof location !== \"undefined\" &&\n          opts.hostname !== location.hostname) ||\n        port !== opts.port;\n      this.xs = opts.secure !== isSSL;\n    }\n    /**\n     * XHR supports binary\n     */\n    const forceBase64 = opts && opts.forceBase64;\n    this.supportsBinary = hasXHR2 && !forceBase64;\n  }\n\n  /**\n   * Creates a request.\n   *\n   * @param {String} method\n   * @api private\n   */\n  request(opts = {}) {\n    Object.assign(opts, { xd: this.xd, xs: this.xs }, this.opts);\n    return new Request(this.uri(), opts);\n  }\n\n  /**\n   * Sends data.\n   *\n   * @param {String} data to send.\n   * @param {Function} called upon flush.\n   * @api private\n   */\n  doWrite(data, fn) {\n    const req = this.request({\n      method: \"POST\",\n      data: data\n    });\n    req.on(\"success\", fn);\n    req.on(\"error\", err => {\n      this.onError(\"xhr post error\", err);\n    });\n  }\n\n  /**\n   * Starts a poll cycle.\n   *\n   * @api private\n   */\n  doPoll() {\n    debug(\"xhr poll\");\n    const req = this.request();\n    req.on(\"data\", this.onData.bind(this));\n    req.on(\"error\", err => {\n      this.onError(\"xhr poll error\", err);\n    });\n    this.pollXhr = req;\n  }\n}\n\nclass Request extends Emitter {\n  /**\n   * Request constructor\n   *\n   * @param {Object} options\n   * @api public\n   */\n  constructor(uri, opts) {\n    super();\n    this.opts = opts;\n\n    this.method = opts.method || \"GET\";\n    this.uri = uri;\n    this.async = false !== opts.async;\n    this.data = undefined !== opts.data ? opts.data : null;\n\n    this.create();\n  }\n\n  /**\n   * Creates the XHR object and sends the request.\n   *\n   * @api private\n   */\n  create() {\n    const opts = pick(\n      this.opts,\n      \"agent\",\n      \"enablesXDR\",\n      \"pfx\",\n      \"key\",\n      \"passphrase\",\n      \"cert\",\n      \"ca\",\n      \"ciphers\",\n      \"rejectUnauthorized\",\n      \"autoUnref\"\n    );\n    opts.xdomain = !!this.opts.xd;\n    opts.xscheme = !!this.opts.xs;\n\n    const xhr = (this.xhr = new XMLHttpRequest(opts));\n\n    try {\n      debug(\"xhr open %s: %s\", this.method, this.uri);\n      xhr.open(this.method, this.uri, this.async);\n      try {\n        if (this.opts.extraHeaders) {\n          xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n          for (let i in this.opts.extraHeaders) {\n            if (this.opts.extraHeaders.hasOwnProperty(i)) {\n              xhr.setRequestHeader(i, this.opts.extraHeaders[i]);\n            }\n          }\n        }\n      } catch (e) {}\n\n      if (\"POST\" === this.method) {\n        try {\n          xhr.setRequestHeader(\"Content-type\", \"text/plain;charset=UTF-8\");\n        } catch (e) {}\n      }\n\n      try {\n        xhr.setRequestHeader(\"Accept\", \"*/*\");\n      } catch (e) {}\n\n      // ie6 check\n      if (\"withCredentials\" in xhr) {\n        xhr.withCredentials = this.opts.withCredentials;\n      }\n\n      if (this.opts.requestTimeout) {\n        xhr.timeout = this.opts.requestTimeout;\n      }\n\n      if (this.hasXDR()) {\n        xhr.onload = () => {\n          this.onLoad();\n        };\n        xhr.onerror = () => {\n          this.onError(xhr.responseText);\n        };\n      } else {\n        xhr.onreadystatechange = () => {\n          if (4 !== xhr.readyState) return;\n          if (200 === xhr.status || 1223 === xhr.status) {\n            this.onLoad();\n          } else {\n            // make sure the `error` event handler that's user-set\n            // does not throw in the same tick and gets caught here\n            setTimeout(() => {\n              this.onError(typeof xhr.status === \"number\" ? xhr.status : 0);\n            }, 0);\n          }\n        };\n      }\n\n      debug(\"xhr data %s\", this.data);\n      xhr.send(this.data);\n    } catch (e) {\n      // Need to defer since .create() is called directly from the constructor\n      // and thus the 'error' event can only be only bound *after* this exception\n      // occurs.  Therefore, also, we cannot throw here at all.\n      setTimeout(() => {\n        this.onError(e);\n      }, 0);\n      return;\n    }\n\n    if (typeof document !== \"undefined\") {\n      this.index = Request.requestsCount++;\n      Request.requests[this.index] = this;\n    }\n  }\n\n  /**\n   * Called upon successful response.\n   *\n   * @api private\n   */\n  onSuccess() {\n    this.emit(\"success\");\n    this.cleanup();\n  }\n\n  /**\n   * Called if we have data.\n   *\n   * @api private\n   */\n  onData(data) {\n    this.emit(\"data\", data);\n    this.onSuccess();\n  }\n\n  /**\n   * Called upon error.\n   *\n   * @api private\n   */\n  onError(err) {\n    this.emit(\"error\", err);\n    this.cleanup(true);\n  }\n\n  /**\n   * Cleans up house.\n   *\n   * @api private\n   */\n  cleanup(fromError) {\n    if (\"undefined\" === typeof this.xhr || null === this.xhr) {\n      return;\n    }\n    // xmlhttprequest\n    if (this.hasXDR()) {\n      this.xhr.onload = this.xhr.onerror = empty;\n    } else {\n      this.xhr.onreadystatechange = empty;\n    }\n\n    if (fromError) {\n      try {\n        this.xhr.abort();\n      } catch (e) {}\n    }\n\n    if (typeof document !== \"undefined\") {\n      delete Request.requests[this.index];\n    }\n\n    this.xhr = null;\n  }\n\n  /**\n   * Called upon load.\n   *\n   * @api private\n   */\n  onLoad() {\n    const data = this.xhr.responseText;\n    if (data !== null) {\n      this.onData(data);\n    }\n  }\n\n  /**\n   * Check if it has XDomainRequest.\n   *\n   * @api private\n   */\n  hasXDR() {\n    return typeof XDomainRequest !== \"undefined\" && !this.xs && this.enablesXDR;\n  }\n\n  /**\n   * Aborts the request.\n   *\n   * @api public\n   */\n  abort() {\n    this.cleanup();\n  }\n}\n\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\n\nRequest.requestsCount = 0;\nRequest.requests = {};\n\nif (typeof document !== \"undefined\") {\n  if (typeof attachEvent === \"function\") {\n    attachEvent(\"onunload\", unloadHandler);\n  } else if (typeof addEventListener === \"function\") {\n    const terminationEvent = \"onpagehide\" in globalThis ? \"pagehide\" : \"unload\";\n    addEventListener(terminationEvent, unloadHandler, false);\n  }\n}\n\nfunction unloadHandler() {\n  for (let i in Request.requests) {\n    if (Request.requests.hasOwnProperty(i)) {\n      Request.requests[i].abort();\n    }\n  }\n}\n\nmodule.exports = XHR;\nmodule.exports.Request = Request;\n","const Polling = require(\"./polling\");\nconst globalThis = require(\"../globalThis\");\n\nconst rNewline = /\\n/g;\nconst rEscapedNewline = /\\\\n/g;\n\n/**\n * Global JSONP callbacks.\n */\n\nlet callbacks;\n\nclass JSONPPolling extends Polling {\n  /**\n   * JSONP Polling constructor.\n   *\n   * @param {Object} opts.\n   * @api public\n   */\n  constructor(opts) {\n    super(opts);\n\n    this.query = this.query || {};\n\n    // define global callbacks array if not present\n    // we do this here (lazily) to avoid unneeded global pollution\n    if (!callbacks) {\n      // we need to consider multiple engines in the same page\n      callbacks = globalThis.___eio = globalThis.___eio || [];\n    }\n\n    // callback identifier\n    this.index = callbacks.length;\n\n    // add callback to jsonp global\n    callbacks.push(this.onData.bind(this));\n\n    // append to query string\n    this.query.j = this.index;\n  }\n\n  /**\n   * JSONP only supports binary as base64 encoded strings\n   */\n  get supportsBinary() {\n    return false;\n  }\n\n  /**\n   * Closes the socket.\n   *\n   * @api private\n   */\n  doClose() {\n    if (this.script) {\n      // prevent spurious errors from being emitted when the window is unloaded\n      this.script.onerror = () => {};\n      this.script.parentNode.removeChild(this.script);\n      this.script = null;\n    }\n\n    if (this.form) {\n      this.form.parentNode.removeChild(this.form);\n      this.form = null;\n      this.iframe = null;\n    }\n\n    super.doClose();\n  }\n\n  /**\n   * Starts a poll cycle.\n   *\n   * @api private\n   */\n  doPoll() {\n    const script = document.createElement(\"script\");\n\n    if (this.script) {\n      this.script.parentNode.removeChild(this.script);\n      this.script = null;\n    }\n\n    script.async = true;\n    script.src = this.uri();\n    script.onerror = e => {\n      this.onError(\"jsonp poll error\", e);\n    };\n\n    const insertAt = document.getElementsByTagName(\"script\")[0];\n    if (insertAt) {\n      insertAt.parentNode.insertBefore(script, insertAt);\n    } else {\n      (document.head || document.body).appendChild(script);\n    }\n    this.script = script;\n\n    const isUAgecko =\n      \"undefined\" !== typeof navigator && /gecko/i.test(navigator.userAgent);\n\n    if (isUAgecko) {\n      setTimeout(function() {\n        const iframe = document.createElement(\"iframe\");\n        document.body.appendChild(iframe);\n        document.body.removeChild(iframe);\n      }, 100);\n    }\n  }\n\n  /**\n   * Writes with a hidden iframe.\n   *\n   * @param {String} data to send\n   * @param {Function} called upon flush.\n   * @api private\n   */\n  doWrite(data, fn) {\n    let iframe;\n\n    if (!this.form) {\n      const form = document.createElement(\"form\");\n      const area = document.createElement(\"textarea\");\n      const id = (this.iframeId = \"eio_iframe_\" + this.index);\n\n      form.className = \"socketio\";\n      form.style.position = \"absolute\";\n      form.style.top = \"-1000px\";\n      form.style.left = \"-1000px\";\n      form.target = id;\n      form.method = \"POST\";\n      form.setAttribute(\"accept-charset\", \"utf-8\");\n      area.name = \"d\";\n      form.appendChild(area);\n      document.body.appendChild(form);\n\n      this.form = form;\n      this.area = area;\n    }\n\n    this.form.action = this.uri();\n\n    function complete() {\n      initIframe();\n      fn();\n    }\n\n    const initIframe = () => {\n      if (this.iframe) {\n        try {\n          this.form.removeChild(this.iframe);\n        } catch (e) {\n          this.onError(\"jsonp polling iframe removal error\", e);\n        }\n      }\n\n      try {\n        // ie6 dynamic iframes with target=\"\" support (thanks Chris Lambacher)\n        const html = '<iframe src=\"javascript:0\" name=\"' + this.iframeId + '\">';\n        iframe = document.createElement(html);\n      } catch (e) {\n        iframe = document.createElement(\"iframe\");\n        iframe.name = this.iframeId;\n        iframe.src = \"javascript:0\";\n      }\n\n      iframe.id = this.iframeId;\n\n      this.form.appendChild(iframe);\n      this.iframe = iframe;\n    };\n\n    initIframe();\n\n    // escape \\n to prevent it from being converted into \\r\\n by some UAs\n    // double escaping is required for escaped new lines because unescaping of new lines can be done safely on server-side\n    data = data.replace(rEscapedNewline, \"\\\\\\n\");\n    this.area.value = data.replace(rNewline, \"\\\\n\");\n\n    try {\n      this.form.submit();\n    } catch (e) {}\n\n    if (this.iframe.attachEvent) {\n      this.iframe.onreadystatechange = () => {\n        if (this.iframe.readyState === \"complete\") {\n          complete();\n        }\n      };\n    } else {\n      this.iframe.onload = complete;\n    }\n  }\n}\n\nmodule.exports = JSONPPolling;\n","const globalThis = require(\"../globalThis\");\n\nmodule.exports = {\n  WebSocket: globalThis.WebSocket || globalThis.MozWebSocket,\n  usingBrowserWebSocket: true,\n  defaultBinaryType: \"arraybuffer\"\n};\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n","const Transport = require(\"../transport\");\nconst parser = require(\"engine.io-parser\");\nconst parseqs = require(\"parseqs\");\nconst yeast = require(\"yeast\");\nconst { pick } = require(\"../util\");\nconst {\n  WebSocket,\n  usingBrowserWebSocket,\n  defaultBinaryType\n} = require(\"./websocket-constructor\");\n\nconst debug = require(\"debug\")(\"engine.io-client:websocket\");\n\n// detect ReactNative environment\nconst isReactNative =\n  typeof navigator !== \"undefined\" &&\n  typeof navigator.product === \"string\" &&\n  navigator.product.toLowerCase() === \"reactnative\";\n\nclass WS extends Transport {\n  /**\n   * WebSocket transport constructor.\n   *\n   * @api {Object} connection options\n   * @api public\n   */\n  constructor(opts) {\n    super(opts);\n\n    this.supportsBinary = !opts.forceBase64;\n  }\n\n  /**\n   * Transport name.\n   *\n   * @api public\n   */\n  get name() {\n    return \"websocket\";\n  }\n\n  /**\n   * Opens socket.\n   *\n   * @api private\n   */\n  doOpen() {\n    if (!this.check()) {\n      // let probe timeout\n      return;\n    }\n\n    const uri = this.uri();\n    const protocols = this.opts.protocols;\n\n    // React Native only supports the 'headers' option, and will print a warning if anything else is passed\n    const opts = isReactNative\n      ? {}\n      : pick(\n          this.opts,\n          \"agent\",\n          \"perMessageDeflate\",\n          \"pfx\",\n          \"key\",\n          \"passphrase\",\n          \"cert\",\n          \"ca\",\n          \"ciphers\",\n          \"rejectUnauthorized\",\n          \"localAddress\",\n          \"protocolVersion\",\n          \"origin\",\n          \"maxPayload\",\n          \"family\",\n          \"checkServerIdentity\"\n        );\n\n    if (this.opts.extraHeaders) {\n      opts.headers = this.opts.extraHeaders;\n    }\n\n    try {\n      this.ws =\n        usingBrowserWebSocket && !isReactNative\n          ? protocols\n            ? new WebSocket(uri, protocols)\n            : new WebSocket(uri)\n          : new WebSocket(uri, protocols, opts);\n    } catch (err) {\n      return this.emit(\"error\", err);\n    }\n\n    this.ws.binaryType = this.socket.binaryType || defaultBinaryType;\n\n    this.addEventListeners();\n  }\n\n  /**\n   * Adds event listeners to the socket\n   *\n   * @api private\n   */\n  addEventListeners() {\n    this.ws.onopen = () => {\n      if (this.opts.autoUnref) {\n        this.ws._socket.unref();\n      }\n      this.onOpen();\n    };\n    this.ws.onclose = this.onClose.bind(this);\n    this.ws.onmessage = ev => this.onData(ev.data);\n    this.ws.onerror = e => this.onError(\"websocket error\", e);\n  }\n\n  /**\n   * Writes data to socket.\n   *\n   * @param {Array} array of packets.\n   * @api private\n   */\n  write(packets) {\n    this.writable = false;\n\n    // encodePacket efficient as it uses WS framing\n    // no need for encodePayload\n    for (let i = 0; i < packets.length; i++) {\n      const packet = packets[i];\n      const lastPacket = i === packets.length - 1;\n\n      parser.encodePacket(packet, this.supportsBinary, data => {\n        // always create a new object (GH-437)\n        const opts = {};\n        if (!usingBrowserWebSocket) {\n          if (packet.options) {\n            opts.compress = packet.options.compress;\n          }\n\n          if (this.opts.perMessageDeflate) {\n            const len =\n              \"string\" === typeof data ? Buffer.byteLength(data) : data.length;\n            if (len < this.opts.perMessageDeflate.threshold) {\n              opts.compress = false;\n            }\n          }\n        }\n\n        // Sometimes the websocket has already been closed but the browser didn't\n        // have a chance of informing us about it yet, in that case send will\n        // throw an error\n        try {\n          if (usingBrowserWebSocket) {\n            // TypeError is thrown when passing the second argument on Safari\n            this.ws.send(data);\n          } else {\n            this.ws.send(data, opts);\n          }\n        } catch (e) {\n          debug(\"websocket closed before onclose event\");\n        }\n\n        if (lastPacket) {\n          // fake drain\n          // defer to next tick to allow Socket to clear writeBuffer\n          setTimeout(() => {\n            this.writable = true;\n            this.emit(\"drain\");\n          }, 0);\n        }\n      });\n    }\n  }\n\n  /**\n   * Called upon close\n   *\n   * @api private\n   */\n  onClose() {\n    Transport.prototype.onClose.call(this);\n  }\n\n  /**\n   * Closes socket.\n   *\n   * @api private\n   */\n  doClose() {\n    if (typeof this.ws !== \"undefined\") {\n      this.ws.close();\n      this.ws = null;\n    }\n  }\n\n  /**\n   * Generates uri for connection.\n   *\n   * @api private\n   */\n  uri() {\n    let query = this.query || {};\n    const schema = this.opts.secure ? \"wss\" : \"ws\";\n    let port = \"\";\n\n    // avoid port if default for schema\n    if (\n      this.opts.port &&\n      ((\"wss\" === schema && Number(this.opts.port) !== 443) ||\n        (\"ws\" === schema && Number(this.opts.port) !== 80))\n    ) {\n      port = \":\" + this.opts.port;\n    }\n\n    // append timestamp to URI\n    if (this.opts.timestampRequests) {\n      query[this.opts.timestampParam] = yeast();\n    }\n\n    // communicate binary support capabilities\n    if (!this.supportsBinary) {\n      query.b64 = 1;\n    }\n\n    query = parseqs.encode(query);\n\n    // prepend ? to query\n    if (query.length) {\n      query = \"?\" + query;\n    }\n\n    const ipv6 = this.opts.hostname.indexOf(\":\") !== -1;\n    return (\n      schema +\n      \"://\" +\n      (ipv6 ? \"[\" + this.opts.hostname + \"]\" : this.opts.hostname) +\n      port +\n      this.opts.path +\n      query\n    );\n  }\n\n  /**\n   * Feature detection for WebSocket.\n   *\n   * @return {Boolean} whether this transport is available.\n   * @api public\n   */\n  check() {\n    return (\n      !!WebSocket &&\n      !(\"__initialize\" in WebSocket && this.name === WS.prototype.name)\n    );\n  }\n}\n\nmodule.exports = WS;\n","const XMLHttpRequest = require(\"../../contrib/xmlhttprequest-ssl/XMLHttpRequest\");\nconst XHR = require(\"./polling-xhr\");\nconst JSONP = require(\"./polling-jsonp\");\nconst websocket = require(\"./websocket\");\n\nexports.polling = polling;\nexports.websocket = websocket;\n\n/**\n * Polling transport polymorphic constructor.\n * Decides on xhr vs jsonp based on feature detection.\n *\n * @api private\n */\n\nfunction polling(opts) {\n  let xhr;\n  let xd = false;\n  let xs = false;\n  const jsonp = false !== opts.jsonp;\n\n  if (typeof location !== \"undefined\") {\n    const isSSL = \"https:\" === location.protocol;\n    let port = location.port;\n\n    // some user agents have empty `location.port`\n    if (!port) {\n      port = isSSL ? 443 : 80;\n    }\n\n    xd = opts.hostname !== location.hostname || port !== opts.port;\n    xs = opts.secure !== isSSL;\n  }\n\n  opts.xdomain = xd;\n  opts.xscheme = xs;\n  xhr = new XMLHttpRequest(opts);\n\n  if (\"open\" in xhr && !opts.forceJSONP) {\n    return new XHR(opts);\n  } else {\n    if (!jsonp) throw new Error(\"JSONP disabled\");\n    return new JSONP(opts);\n  }\n}\n","const transports = require(\"./transports/index\");\nconst Emitter = require(\"component-emitter\");\nconst debug = require(\"debug\")(\"engine.io-client:socket\");\nconst parser = require(\"engine.io-parser\");\nconst parseuri = require(\"parseuri\");\nconst parseqs = require(\"parseqs\");\n\nclass Socket extends Emitter {\n  /**\n   * Socket constructor.\n   *\n   * @param {String|Object} uri or options\n   * @param {Object} options\n   * @api public\n   */\n  constructor(uri, opts = {}) {\n    super();\n\n    if (uri && \"object\" === typeof uri) {\n      opts = uri;\n      uri = null;\n    }\n\n    if (uri) {\n      uri = parseuri(uri);\n      opts.hostname = uri.host;\n      opts.secure = uri.protocol === \"https\" || uri.protocol === \"wss\";\n      opts.port = uri.port;\n      if (uri.query) opts.query = uri.query;\n    } else if (opts.host) {\n      opts.hostname = parseuri(opts.host).host;\n    }\n\n    this.secure =\n      null != opts.secure\n        ? opts.secure\n        : typeof location !== \"undefined\" && \"https:\" === location.protocol;\n\n    if (opts.hostname && !opts.port) {\n      // if no port is specified manually, use the protocol default\n      opts.port = this.secure ? \"443\" : \"80\";\n    }\n\n    this.hostname =\n      opts.hostname ||\n      (typeof location !== \"undefined\" ? location.hostname : \"localhost\");\n    this.port =\n      opts.port ||\n      (typeof location !== \"undefined\" && location.port\n        ? location.port\n        : this.secure\n        ? 443\n        : 80);\n\n    this.transports = opts.transports || [\"polling\", \"websocket\"];\n    this.readyState = \"\";\n    this.writeBuffer = [];\n    this.prevBufferLen = 0;\n\n    this.opts = Object.assign(\n      {\n        path: \"/engine.io\",\n        agent: false,\n        withCredentials: false,\n        upgrade: true,\n        jsonp: true,\n        timestampParam: \"t\",\n        rememberUpgrade: false,\n        rejectUnauthorized: true,\n        perMessageDeflate: {\n          threshold: 1024\n        },\n        transportOptions: {},\n        closeOnBeforeunload: true\n      },\n      opts\n    );\n\n    this.opts.path = this.opts.path.replace(/\\/$/, \"\") + \"/\";\n\n    if (typeof this.opts.query === \"string\") {\n      this.opts.query = parseqs.decode(this.opts.query);\n    }\n\n    // set on handshake\n    this.id = null;\n    this.upgrades = null;\n    this.pingInterval = null;\n    this.pingTimeout = null;\n\n    // set on heartbeat\n    this.pingTimeoutTimer = null;\n\n    if (typeof addEventListener === \"function\") {\n      if (this.opts.closeOnBeforeunload) {\n        // Firefox closes the connection when the \"beforeunload\" event is emitted but not Chrome. This event listener\n        // ensures every browser behaves the same (no \"disconnect\" event at the Socket.IO level when the page is\n        // closed/reloaded)\n        addEventListener(\n          \"beforeunload\",\n          () => {\n            if (this.transport) {\n              // silently close the transport\n              this.transport.removeAllListeners();\n              this.transport.close();\n            }\n          },\n          false\n        );\n      }\n      if (this.hostname !== \"localhost\") {\n        this.offlineEventListener = () => {\n          this.onClose(\"transport close\");\n        };\n        addEventListener(\"offline\", this.offlineEventListener, false);\n      }\n    }\n\n    this.open();\n  }\n\n  /**\n   * Creates transport of the given type.\n   *\n   * @param {String} transport name\n   * @return {Transport}\n   * @api private\n   */\n  createTransport(name) {\n    debug('creating transport \"%s\"', name);\n    const query = clone(this.opts.query);\n\n    // append engine.io protocol identifier\n    query.EIO = parser.protocol;\n\n    // transport name\n    query.transport = name;\n\n    // session id if we already have one\n    if (this.id) query.sid = this.id;\n\n    const opts = Object.assign(\n      {},\n      this.opts.transportOptions[name],\n      this.opts,\n      {\n        query,\n        socket: this,\n        hostname: this.hostname,\n        secure: this.secure,\n        port: this.port\n      }\n    );\n\n    debug(\"options: %j\", opts);\n\n    return new transports[name](opts);\n  }\n\n  /**\n   * Initializes transport to use and starts probe.\n   *\n   * @api private\n   */\n  open() {\n    let transport;\n    if (\n      this.opts.rememberUpgrade &&\n      Socket.priorWebsocketSuccess &&\n      this.transports.indexOf(\"websocket\") !== -1\n    ) {\n      transport = \"websocket\";\n    } else if (0 === this.transports.length) {\n      // Emit error on next tick so it can be listened to\n      setTimeout(() => {\n        this.emit(\"error\", \"No transports available\");\n      }, 0);\n      return;\n    } else {\n      transport = this.transports[0];\n    }\n    this.readyState = \"opening\";\n\n    // Retry with the next transport if the transport is disabled (jsonp: false)\n    try {\n      transport = this.createTransport(transport);\n    } catch (e) {\n      debug(\"error while creating transport: %s\", e);\n      this.transports.shift();\n      this.open();\n      return;\n    }\n\n    transport.open();\n    this.setTransport(transport);\n  }\n\n  /**\n   * Sets the current transport. Disables the existing one (if any).\n   *\n   * @api private\n   */\n  setTransport(transport) {\n    debug(\"setting transport %s\", transport.name);\n\n    if (this.transport) {\n      debug(\"clearing existing transport %s\", this.transport.name);\n      this.transport.removeAllListeners();\n    }\n\n    // set up transport\n    this.transport = transport;\n\n    // set up transport listeners\n    transport\n      .on(\"drain\", this.onDrain.bind(this))\n      .on(\"packet\", this.onPacket.bind(this))\n      .on(\"error\", this.onError.bind(this))\n      .on(\"close\", () => {\n        this.onClose(\"transport close\");\n      });\n  }\n\n  /**\n   * Probes a transport.\n   *\n   * @param {String} transport name\n   * @api private\n   */\n  probe(name) {\n    debug('probing transport \"%s\"', name);\n    let transport = this.createTransport(name, { probe: 1 });\n    let failed = false;\n\n    Socket.priorWebsocketSuccess = false;\n\n    const onTransportOpen = () => {\n      if (failed) return;\n\n      debug('probe transport \"%s\" opened', name);\n      transport.send([{ type: \"ping\", data: \"probe\" }]);\n      transport.once(\"packet\", msg => {\n        if (failed) return;\n        if (\"pong\" === msg.type && \"probe\" === msg.data) {\n          debug('probe transport \"%s\" pong', name);\n          this.upgrading = true;\n          this.emit(\"upgrading\", transport);\n          if (!transport) return;\n          Socket.priorWebsocketSuccess = \"websocket\" === transport.name;\n\n          debug('pausing current transport \"%s\"', this.transport.name);\n          this.transport.pause(() => {\n            if (failed) return;\n            if (\"closed\" === this.readyState) return;\n            debug(\"changing transport and sending upgrade packet\");\n\n            cleanup();\n\n            this.setTransport(transport);\n            transport.send([{ type: \"upgrade\" }]);\n            this.emit(\"upgrade\", transport);\n            transport = null;\n            this.upgrading = false;\n            this.flush();\n          });\n        } else {\n          debug('probe transport \"%s\" failed', name);\n          const err = new Error(\"probe error\");\n          err.transport = transport.name;\n          this.emit(\"upgradeError\", err);\n        }\n      });\n    };\n\n    function freezeTransport() {\n      if (failed) return;\n\n      // Any callback called by transport should be ignored since now\n      failed = true;\n\n      cleanup();\n\n      transport.close();\n      transport = null;\n    }\n\n    // Handle any error that happens while probing\n    const onerror = err => {\n      const error = new Error(\"probe error: \" + err);\n      error.transport = transport.name;\n\n      freezeTransport();\n\n      debug('probe transport \"%s\" failed because of error: %s', name, err);\n\n      this.emit(\"upgradeError\", error);\n    };\n\n    function onTransportClose() {\n      onerror(\"transport closed\");\n    }\n\n    // When the socket is closed while we're probing\n    function onclose() {\n      onerror(\"socket closed\");\n    }\n\n    // When the socket is upgraded while we're probing\n    function onupgrade(to) {\n      if (transport && to.name !== transport.name) {\n        debug('\"%s\" works - aborting \"%s\"', to.name, transport.name);\n        freezeTransport();\n      }\n    }\n\n    // Remove all listeners on the transport and on self\n    const cleanup = () => {\n      transport.removeListener(\"open\", onTransportOpen);\n      transport.removeListener(\"error\", onerror);\n      transport.removeListener(\"close\", onTransportClose);\n      this.removeListener(\"close\", onclose);\n      this.removeListener(\"upgrading\", onupgrade);\n    };\n\n    transport.once(\"open\", onTransportOpen);\n    transport.once(\"error\", onerror);\n    transport.once(\"close\", onTransportClose);\n\n    this.once(\"close\", onclose);\n    this.once(\"upgrading\", onupgrade);\n\n    transport.open();\n  }\n\n  /**\n   * Called when connection is deemed open.\n   *\n   * @api public\n   */\n  onOpen() {\n    debug(\"socket open\");\n    this.readyState = \"open\";\n    Socket.priorWebsocketSuccess = \"websocket\" === this.transport.name;\n    this.emit(\"open\");\n    this.flush();\n\n    // we check for `readyState` in case an `open`\n    // listener already closed the socket\n    if (\n      \"open\" === this.readyState &&\n      this.opts.upgrade &&\n      this.transport.pause\n    ) {\n      debug(\"starting upgrade probes\");\n      let i = 0;\n      const l = this.upgrades.length;\n      for (; i < l; i++) {\n        this.probe(this.upgrades[i]);\n      }\n    }\n  }\n\n  /**\n   * Handles a packet.\n   *\n   * @api private\n   */\n  onPacket(packet) {\n    if (\n      \"opening\" === this.readyState ||\n      \"open\" === this.readyState ||\n      \"closing\" === this.readyState\n    ) {\n      debug('socket receive: type \"%s\", data \"%s\"', packet.type, packet.data);\n\n      this.emit(\"packet\", packet);\n\n      // Socket is live - any packet counts\n      this.emit(\"heartbeat\");\n\n      switch (packet.type) {\n        case \"open\":\n          this.onHandshake(JSON.parse(packet.data));\n          break;\n\n        case \"ping\":\n          this.resetPingTimeout();\n          this.sendPacket(\"pong\");\n          this.emit(\"pong\");\n          break;\n\n        case \"error\":\n          const err = new Error(\"server error\");\n          err.code = packet.data;\n          this.onError(err);\n          break;\n\n        case \"message\":\n          this.emit(\"data\", packet.data);\n          this.emit(\"message\", packet.data);\n          break;\n      }\n    } else {\n      debug('packet received with socket readyState \"%s\"', this.readyState);\n    }\n  }\n\n  /**\n   * Called upon handshake completion.\n   *\n   * @param {Object} handshake obj\n   * @api private\n   */\n  onHandshake(data) {\n    this.emit(\"handshake\", data);\n    this.id = data.sid;\n    this.transport.query.sid = data.sid;\n    this.upgrades = this.filterUpgrades(data.upgrades);\n    this.pingInterval = data.pingInterval;\n    this.pingTimeout = data.pingTimeout;\n    this.onOpen();\n    // In case open handler closes socket\n    if (\"closed\" === this.readyState) return;\n    this.resetPingTimeout();\n  }\n\n  /**\n   * Sets and resets ping timeout timer based on server pings.\n   *\n   * @api private\n   */\n  resetPingTimeout() {\n    clearTimeout(this.pingTimeoutTimer);\n    this.pingTimeoutTimer = setTimeout(() => {\n      this.onClose(\"ping timeout\");\n    }, this.pingInterval + this.pingTimeout);\n    if (this.opts.autoUnref) {\n      this.pingTimeoutTimer.unref();\n    }\n  }\n\n  /**\n   * Called on `drain` event\n   *\n   * @api private\n   */\n  onDrain() {\n    this.writeBuffer.splice(0, this.prevBufferLen);\n\n    // setting prevBufferLen = 0 is very important\n    // for example, when upgrading, upgrade packet is sent over,\n    // and a nonzero prevBufferLen could cause problems on `drain`\n    this.prevBufferLen = 0;\n\n    if (0 === this.writeBuffer.length) {\n      this.emit(\"drain\");\n    } else {\n      this.flush();\n    }\n  }\n\n  /**\n   * Flush write buffers.\n   *\n   * @api private\n   */\n  flush() {\n    if (\n      \"closed\" !== this.readyState &&\n      this.transport.writable &&\n      !this.upgrading &&\n      this.writeBuffer.length\n    ) {\n      debug(\"flushing %d packets in socket\", this.writeBuffer.length);\n      this.transport.send(this.writeBuffer);\n      // keep track of current length of writeBuffer\n      // splice writeBuffer and callbackBuffer on `drain`\n      this.prevBufferLen = this.writeBuffer.length;\n      this.emit(\"flush\");\n    }\n  }\n\n  /**\n   * Sends a message.\n   *\n   * @param {String} message.\n   * @param {Function} callback function.\n   * @param {Object} options.\n   * @return {Socket} for chaining.\n   * @api public\n   */\n  write(msg, options, fn) {\n    this.sendPacket(\"message\", msg, options, fn);\n    return this;\n  }\n\n  send(msg, options, fn) {\n    this.sendPacket(\"message\", msg, options, fn);\n    return this;\n  }\n\n  /**\n   * Sends a packet.\n   *\n   * @param {String} packet type.\n   * @param {String} data.\n   * @param {Object} options.\n   * @param {Function} callback function.\n   * @api private\n   */\n  sendPacket(type, data, options, fn) {\n    if (\"function\" === typeof data) {\n      fn = data;\n      data = undefined;\n    }\n\n    if (\"function\" === typeof options) {\n      fn = options;\n      options = null;\n    }\n\n    if (\"closing\" === this.readyState || \"closed\" === this.readyState) {\n      return;\n    }\n\n    options = options || {};\n    options.compress = false !== options.compress;\n\n    const packet = {\n      type: type,\n      data: data,\n      options: options\n    };\n    this.emit(\"packetCreate\", packet);\n    this.writeBuffer.push(packet);\n    if (fn) this.once(\"flush\", fn);\n    this.flush();\n  }\n\n  /**\n   * Closes the connection.\n   *\n   * @api private\n   */\n  close() {\n    const close = () => {\n      this.onClose(\"forced close\");\n      debug(\"socket closing - telling transport to close\");\n      this.transport.close();\n    };\n\n    const cleanupAndClose = () => {\n      this.removeListener(\"upgrade\", cleanupAndClose);\n      this.removeListener(\"upgradeError\", cleanupAndClose);\n      close();\n    };\n\n    const waitForUpgrade = () => {\n      // wait for upgrade to finish since we can't send packets while pausing a transport\n      this.once(\"upgrade\", cleanupAndClose);\n      this.once(\"upgradeError\", cleanupAndClose);\n    };\n\n    if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n      this.readyState = \"closing\";\n\n      if (this.writeBuffer.length) {\n        this.once(\"drain\", () => {\n          if (this.upgrading) {\n            waitForUpgrade();\n          } else {\n            close();\n          }\n        });\n      } else if (this.upgrading) {\n        waitForUpgrade();\n      } else {\n        close();\n      }\n    }\n\n    return this;\n  }\n\n  /**\n   * Called upon transport error\n   *\n   * @api private\n   */\n  onError(err) {\n    debug(\"socket error %j\", err);\n    Socket.priorWebsocketSuccess = false;\n    this.emit(\"error\", err);\n    this.onClose(\"transport error\", err);\n  }\n\n  /**\n   * Called upon transport close.\n   *\n   * @api private\n   */\n  onClose(reason, desc) {\n    if (\n      \"opening\" === this.readyState ||\n      \"open\" === this.readyState ||\n      \"closing\" === this.readyState\n    ) {\n      debug('socket close with reason: \"%s\"', reason);\n\n      // clear timers\n      clearTimeout(this.pingIntervalTimer);\n      clearTimeout(this.pingTimeoutTimer);\n\n      // stop event from firing again for transport\n      this.transport.removeAllListeners(\"close\");\n\n      // ensure transport won't stay open\n      this.transport.close();\n\n      // ignore further transport communication\n      this.transport.removeAllListeners();\n\n      if (typeof removeEventListener === \"function\") {\n        removeEventListener(\"offline\", this.offlineEventListener, false);\n      }\n\n      // set ready state\n      this.readyState = \"closed\";\n\n      // clear session id\n      this.id = null;\n\n      // emit close event\n      this.emit(\"close\", reason, desc);\n\n      // clean buffers after, so users can still\n      // grab the buffers on `close` event\n      this.writeBuffer = [];\n      this.prevBufferLen = 0;\n    }\n  }\n\n  /**\n   * Filters upgrades, returning only those matching client transports.\n   *\n   * @param {Array} server upgrades\n   * @api private\n   *\n   */\n  filterUpgrades(upgrades) {\n    const filteredUpgrades = [];\n    let i = 0;\n    const j = upgrades.length;\n    for (; i < j; i++) {\n      if (~this.transports.indexOf(upgrades[i]))\n        filteredUpgrades.push(upgrades[i]);\n    }\n    return filteredUpgrades;\n  }\n}\n\nSocket.priorWebsocketSuccess = false;\n\n/**\n * Protocol version.\n *\n * @api public\n */\n\nSocket.protocol = parser.protocol; // this is an int\n\nfunction clone(obj) {\n  const o = {};\n  for (let i in obj) {\n    if (obj.hasOwnProperty(i)) {\n      o[i] = obj[i];\n    }\n  }\n  return o;\n}\n\nmodule.exports = Socket;\n","const Socket = require(\"./socket\");\n\nmodule.exports = (uri, opts) => new Socket(uri, opts);\n\n/**\n * Expose deps for legacy compatibility\n * and standalone browser access.\n */\n\nmodule.exports.Socket = Socket;\nmodule.exports.protocol = Socket.protocol; // this is an int\nmodule.exports.Transport = require(\"./transport\");\nmodule.exports.transports = require(\"./transports/index\");\nmodule.exports.parser = require(\"engine.io-parser\");\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.hasBinary = exports.isBinary = void 0;\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst isView = (obj) => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj.buffer instanceof ArrayBuffer;\n};\nconst toString = Object.prototype.toString;\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeFile = typeof File === \"function\" ||\n    (typeof File !== \"undefined\" &&\n        toString.call(File) === \"[object FileConstructor]\");\n/**\n * Returns true if obj is a Buffer, an ArrayBuffer, a Blob or a File.\n *\n * @private\n */\nfunction isBinary(obj) {\n    return ((withNativeArrayBuffer && (obj instanceof ArrayBuffer || isView(obj))) ||\n        (withNativeBlob && obj instanceof Blob) ||\n        (withNativeFile && obj instanceof File));\n}\nexports.isBinary = isBinary;\nfunction hasBinary(obj, toJSON) {\n    if (!obj || typeof obj !== \"object\") {\n        return false;\n    }\n    if (Array.isArray(obj)) {\n        for (let i = 0, l = obj.length; i < l; i++) {\n            if (hasBinary(obj[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    if (isBinary(obj)) {\n        return true;\n    }\n    if (obj.toJSON &&\n        typeof obj.toJSON === \"function\" &&\n        arguments.length === 1) {\n        return hasBinary(obj.toJSON(), true);\n    }\n    for (const key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {\n            return true;\n        }\n    }\n    return false;\n}\nexports.hasBinary = hasBinary;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.reconstructPacket = exports.deconstructPacket = void 0;\nconst is_binary_1 = require(\"./is-binary\");\n/**\n * Replaces every Buffer | ArrayBuffer | Blob | File in packet with a numbered placeholder.\n *\n * @param {Object} packet - socket.io event packet\n * @return {Object} with deconstructed packet and list of buffers\n * @public\n */\nfunction deconstructPacket(packet) {\n    const buffers = [];\n    const packetData = packet.data;\n    const pack = packet;\n    pack.data = _deconstructPacket(packetData, buffers);\n    pack.attachments = buffers.length; // number of binary 'attachments'\n    return { packet: pack, buffers: buffers };\n}\nexports.deconstructPacket = deconstructPacket;\nfunction _deconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (is_binary_1.isBinary(data)) {\n        const placeholder = { _placeholder: true, num: buffers.length };\n        buffers.push(data);\n        return placeholder;\n    }\n    else if (Array.isArray(data)) {\n        const newData = new Array(data.length);\n        for (let i = 0; i < data.length; i++) {\n            newData[i] = _deconstructPacket(data[i], buffers);\n        }\n        return newData;\n    }\n    else if (typeof data === \"object\" && !(data instanceof Date)) {\n        const newData = {};\n        for (const key in data) {\n            if (data.hasOwnProperty(key)) {\n                newData[key] = _deconstructPacket(data[key], buffers);\n            }\n        }\n        return newData;\n    }\n    return data;\n}\n/**\n * Reconstructs a binary packet from its placeholder packet and buffers\n *\n * @param {Object} packet - event packet with placeholders\n * @param {Array} buffers - binary buffers to put in placeholder positions\n * @return {Object} reconstructed packet\n * @public\n */\nfunction reconstructPacket(packet, buffers) {\n    packet.data = _reconstructPacket(packet.data, buffers);\n    packet.attachments = undefined; // no longer useful\n    return packet;\n}\nexports.reconstructPacket = reconstructPacket;\nfunction _reconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (data && data._placeholder) {\n        return buffers[data.num]; // appropriate buffer (should be natural order anyway)\n    }\n    else if (Array.isArray(data)) {\n        for (let i = 0; i < data.length; i++) {\n            data[i] = _reconstructPacket(data[i], buffers);\n        }\n    }\n    else if (typeof data === \"object\") {\n        for (const key in data) {\n            if (data.hasOwnProperty(key)) {\n                data[key] = _reconstructPacket(data[key], buffers);\n            }\n        }\n    }\n    return data;\n}\n","\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n */\n\nfunction setup(env) {\n\tcreateDebug.debug = createDebug;\n\tcreateDebug.default = createDebug;\n\tcreateDebug.coerce = coerce;\n\tcreateDebug.disable = disable;\n\tcreateDebug.enable = enable;\n\tcreateDebug.enabled = enabled;\n\tcreateDebug.humanize = require('ms');\n\tcreateDebug.destroy = destroy;\n\n\tObject.keys(env).forEach(key => {\n\t\tcreateDebug[key] = env[key];\n\t});\n\n\t/**\n\t* The currently active debug mode names, and names to skip.\n\t*/\n\n\tcreateDebug.names = [];\n\tcreateDebug.skips = [];\n\n\t/**\n\t* Map of special \"%n\" handling functions, for the debug \"format\" argument.\n\t*\n\t* Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n\t*/\n\tcreateDebug.formatters = {};\n\n\t/**\n\t* Selects a color for a debug namespace\n\t* @param {String} namespace The namespace string for the for the debug instance to be colored\n\t* @return {Number|String} An ANSI color code for the given namespace\n\t* @api private\n\t*/\n\tfunction selectColor(namespace) {\n\t\tlet hash = 0;\n\n\t\tfor (let i = 0; i < namespace.length; i++) {\n\t\t\thash = ((hash << 5) - hash) + namespace.charCodeAt(i);\n\t\t\thash |= 0; // Convert to 32bit integer\n\t\t}\n\n\t\treturn createDebug.colors[Math.abs(hash) % createDebug.colors.length];\n\t}\n\tcreateDebug.selectColor = selectColor;\n\n\t/**\n\t* Create a debugger with the given `namespace`.\n\t*\n\t* @param {String} namespace\n\t* @return {Function}\n\t* @api public\n\t*/\n\tfunction createDebug(namespace) {\n\t\tlet prevTime;\n\t\tlet enableOverride = null;\n\n\t\tfunction debug(...args) {\n\t\t\t// Disabled?\n\t\t\tif (!debug.enabled) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst self = debug;\n\n\t\t\t// Set `diff` timestamp\n\t\t\tconst curr = Number(new Date());\n\t\t\tconst ms = curr - (prevTime || curr);\n\t\t\tself.diff = ms;\n\t\t\tself.prev = prevTime;\n\t\t\tself.curr = curr;\n\t\t\tprevTime = curr;\n\n\t\t\targs[0] = createDebug.coerce(args[0]);\n\n\t\t\tif (typeof args[0] !== 'string') {\n\t\t\t\t// Anything else let's inspect with %O\n\t\t\t\targs.unshift('%O');\n\t\t\t}\n\n\t\t\t// Apply any `formatters` transformations\n\t\t\tlet index = 0;\n\t\t\targs[0] = args[0].replace(/%([a-zA-Z%])/g, (match, format) => {\n\t\t\t\t// If we encounter an escaped % then don't increase the array index\n\t\t\t\tif (match === '%%') {\n\t\t\t\t\treturn '%';\n\t\t\t\t}\n\t\t\t\tindex++;\n\t\t\t\tconst formatter = createDebug.formatters[format];\n\t\t\t\tif (typeof formatter === 'function') {\n\t\t\t\t\tconst val = args[index];\n\t\t\t\t\tmatch = formatter.call(self, val);\n\n\t\t\t\t\t// Now we need to remove `args[index]` since it's inlined in the `format`\n\t\t\t\t\targs.splice(index, 1);\n\t\t\t\t\tindex--;\n\t\t\t\t}\n\t\t\t\treturn match;\n\t\t\t});\n\n\t\t\t// Apply env-specific formatting (colors, etc.)\n\t\t\tcreateDebug.formatArgs.call(self, args);\n\n\t\t\tconst logFn = self.log || createDebug.log;\n\t\t\tlogFn.apply(self, args);\n\t\t}\n\n\t\tdebug.namespace = namespace;\n\t\tdebug.useColors = createDebug.useColors();\n\t\tdebug.color = createDebug.selectColor(namespace);\n\t\tdebug.extend = extend;\n\t\tdebug.destroy = createDebug.destroy; // XXX Temporary. Will be removed in the next major release.\n\n\t\tObject.defineProperty(debug, 'enabled', {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: false,\n\t\t\tget: () => enableOverride === null ? createDebug.enabled(namespace) : enableOverride,\n\t\t\tset: v => {\n\t\t\t\tenableOverride = v;\n\t\t\t}\n\t\t});\n\n\t\t// Env-specific initialization logic for debug instances\n\t\tif (typeof createDebug.init === 'function') {\n\t\t\tcreateDebug.init(debug);\n\t\t}\n\n\t\treturn debug;\n\t}\n\n\tfunction extend(namespace, delimiter) {\n\t\tconst newDebug = createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);\n\t\tnewDebug.log = this.log;\n\t\treturn newDebug;\n\t}\n\n\t/**\n\t* Enables a debug mode by namespaces. This can include modes\n\t* separated by a colon and wildcards.\n\t*\n\t* @param {String} namespaces\n\t* @api public\n\t*/\n\tfunction enable(namespaces) {\n\t\tcreateDebug.save(namespaces);\n\n\t\tcreateDebug.names = [];\n\t\tcreateDebug.skips = [];\n\n\t\tlet i;\n\t\tconst split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n\t\tconst len = split.length;\n\n\t\tfor (i = 0; i < len; i++) {\n\t\t\tif (!split[i]) {\n\t\t\t\t// ignore empty strings\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tnamespaces = split[i].replace(/\\*/g, '.*?');\n\n\t\t\tif (namespaces[0] === '-') {\n\t\t\t\tcreateDebug.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n\t\t\t} else {\n\t\t\t\tcreateDebug.names.push(new RegExp('^' + namespaces + '$'));\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t* Disable debug output.\n\t*\n\t* @return {String} namespaces\n\t* @api public\n\t*/\n\tfunction disable() {\n\t\tconst namespaces = [\n\t\t\t...createDebug.names.map(toNamespace),\n\t\t\t...createDebug.skips.map(toNamespace).map(namespace => '-' + namespace)\n\t\t].join(',');\n\t\tcreateDebug.enable('');\n\t\treturn namespaces;\n\t}\n\n\t/**\n\t* Returns true if the given mode name is enabled, false otherwise.\n\t*\n\t* @param {String} name\n\t* @return {Boolean}\n\t* @api public\n\t*/\n\tfunction enabled(name) {\n\t\tif (name[name.length - 1] === '*') {\n\t\t\treturn true;\n\t\t}\n\n\t\tlet i;\n\t\tlet len;\n\n\t\tfor (i = 0, len = createDebug.skips.length; i < len; i++) {\n\t\t\tif (createDebug.skips[i].test(name)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tfor (i = 0, len = createDebug.names.length; i < len; i++) {\n\t\t\tif (createDebug.names[i].test(name)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t* Convert regexp to namespace\n\t*\n\t* @param {RegExp} regxep\n\t* @return {String} namespace\n\t* @api private\n\t*/\n\tfunction toNamespace(regexp) {\n\t\treturn regexp.toString()\n\t\t\t.substring(2, regexp.toString().length - 2)\n\t\t\t.replace(/\\.\\*\\?$/, '*');\n\t}\n\n\t/**\n\t* Coerce `val`.\n\t*\n\t* @param {Mixed} val\n\t* @return {Mixed}\n\t* @api private\n\t*/\n\tfunction coerce(val) {\n\t\tif (val instanceof Error) {\n\t\t\treturn val.stack || val.message;\n\t\t}\n\t\treturn val;\n\t}\n\n\t/**\n\t* XXX DO NOT USE. This is a temporary stub function.\n\t* XXX It WILL be removed in the next major release.\n\t*/\n\tfunction destroy() {\n\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t}\n\n\tcreateDebug.enable(createDebug.load());\n\n\treturn createDebug;\n}\n\nmodule.exports = setup;\n","/* eslint-env browser */\n\n/**\n * This is the web browser implementation of `debug()`.\n */\n\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = localstorage();\nexports.destroy = (() => {\n\tlet warned = false;\n\n\treturn () => {\n\t\tif (!warned) {\n\t\t\twarned = true;\n\t\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t\t}\n\t};\n})();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n\t'#0000CC',\n\t'#0000FF',\n\t'#0033CC',\n\t'#0033FF',\n\t'#0066CC',\n\t'#0066FF',\n\t'#0099CC',\n\t'#0099FF',\n\t'#00CC00',\n\t'#00CC33',\n\t'#00CC66',\n\t'#00CC99',\n\t'#00CCCC',\n\t'#00CCFF',\n\t'#3300CC',\n\t'#3300FF',\n\t'#3333CC',\n\t'#3333FF',\n\t'#3366CC',\n\t'#3366FF',\n\t'#3399CC',\n\t'#3399FF',\n\t'#33CC00',\n\t'#33CC33',\n\t'#33CC66',\n\t'#33CC99',\n\t'#33CCCC',\n\t'#33CCFF',\n\t'#6600CC',\n\t'#6600FF',\n\t'#6633CC',\n\t'#6633FF',\n\t'#66CC00',\n\t'#66CC33',\n\t'#9900CC',\n\t'#9900FF',\n\t'#9933CC',\n\t'#9933FF',\n\t'#99CC00',\n\t'#99CC33',\n\t'#CC0000',\n\t'#CC0033',\n\t'#CC0066',\n\t'#CC0099',\n\t'#CC00CC',\n\t'#CC00FF',\n\t'#CC3300',\n\t'#CC3333',\n\t'#CC3366',\n\t'#CC3399',\n\t'#CC33CC',\n\t'#CC33FF',\n\t'#CC6600',\n\t'#CC6633',\n\t'#CC9900',\n\t'#CC9933',\n\t'#CCCC00',\n\t'#CCCC33',\n\t'#FF0000',\n\t'#FF0033',\n\t'#FF0066',\n\t'#FF0099',\n\t'#FF00CC',\n\t'#FF00FF',\n\t'#FF3300',\n\t'#FF3333',\n\t'#FF3366',\n\t'#FF3399',\n\t'#FF33CC',\n\t'#FF33FF',\n\t'#FF6600',\n\t'#FF6633',\n\t'#FF9900',\n\t'#FF9933',\n\t'#FFCC00',\n\t'#FFCC33'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\n// eslint-disable-next-line complexity\nfunction useColors() {\n\t// NB: In an Electron preload script, document will be defined but not fully\n\t// initialized. Since we know we're in Chrome, we'll just detect this case\n\t// explicitly\n\tif (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {\n\t\treturn true;\n\t}\n\n\t// Internet Explorer and Edge do not support colors.\n\tif (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n\t\treturn false;\n\t}\n\n\t// Is webkit? http://stackoverflow.com/a/16459606/376773\n\t// document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n\treturn (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n\t\t// Is firebug? http://stackoverflow.com/a/398120/376773\n\t\t(typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n\t\t// Is firefox >= v31?\n\t\t// https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n\t\t// Double check webkit in userAgent just in case we are in a worker\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n\targs[0] = (this.useColors ? '%c' : '') +\n\t\tthis.namespace +\n\t\t(this.useColors ? ' %c' : ' ') +\n\t\targs[0] +\n\t\t(this.useColors ? '%c ' : ' ') +\n\t\t'+' + module.exports.humanize(this.diff);\n\n\tif (!this.useColors) {\n\t\treturn;\n\t}\n\n\tconst c = 'color: ' + this.color;\n\targs.splice(1, 0, c, 'color: inherit');\n\n\t// The final \"%c\" is somewhat tricky, because there could be other\n\t// arguments passed either before or after the %c, so we need to\n\t// figure out the correct index to insert the CSS into\n\tlet index = 0;\n\tlet lastC = 0;\n\targs[0].replace(/%[a-zA-Z%]/g, match => {\n\t\tif (match === '%%') {\n\t\t\treturn;\n\t\t}\n\t\tindex++;\n\t\tif (match === '%c') {\n\t\t\t// We only are interested in the *last* %c\n\t\t\t// (the user may have provided their own)\n\t\t\tlastC = index;\n\t\t}\n\t});\n\n\targs.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.debug()` when available.\n * No-op when `console.debug` is not a \"function\".\n * If `console.debug` is not available, falls back\n * to `console.log`.\n *\n * @api public\n */\nexports.log = console.debug || console.log || (() => {});\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\nfunction save(namespaces) {\n\ttry {\n\t\tif (namespaces) {\n\t\t\texports.storage.setItem('debug', namespaces);\n\t\t} else {\n\t\t\texports.storage.removeItem('debug');\n\t\t}\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\nfunction load() {\n\tlet r;\n\ttry {\n\t\tr = exports.storage.getItem('debug');\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n\n\t// If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\tif (!r && typeof process !== 'undefined' && 'env' in process) {\n\t\tr = process.env.DEBUG;\n\t}\n\n\treturn r;\n}\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n\ttry {\n\t\t// TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context\n\t\t// The Browser also has localStorage in the global context.\n\t\treturn localStorage;\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\nmodule.exports = require('./common')(exports);\n\nconst {formatters} = module.exports;\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nformatters.j = function (v) {\n\ttry {\n\t\treturn JSON.stringify(v);\n\t} catch (error) {\n\t\treturn '[UnexpectedJSONParseError]: ' + error.message;\n\t}\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Decoder = exports.Encoder = exports.PacketType = exports.protocol = void 0;\nconst Emitter = require(\"component-emitter\");\nconst binary_1 = require(\"./binary\");\nconst is_binary_1 = require(\"./is-binary\");\nconst debug = require(\"debug\")(\"socket.io-parser\");\n/**\n * Protocol version.\n *\n * @public\n */\nexports.protocol = 5;\nvar PacketType;\n(function (PacketType) {\n    PacketType[PacketType[\"CONNECT\"] = 0] = \"CONNECT\";\n    PacketType[PacketType[\"DISCONNECT\"] = 1] = \"DISCONNECT\";\n    PacketType[PacketType[\"EVENT\"] = 2] = \"EVENT\";\n    PacketType[PacketType[\"ACK\"] = 3] = \"ACK\";\n    PacketType[PacketType[\"CONNECT_ERROR\"] = 4] = \"CONNECT_ERROR\";\n    PacketType[PacketType[\"BINARY_EVENT\"] = 5] = \"BINARY_EVENT\";\n    PacketType[PacketType[\"BINARY_ACK\"] = 6] = \"BINARY_ACK\";\n})(PacketType = exports.PacketType || (exports.PacketType = {}));\n/**\n * A socket.io Encoder instance\n */\nclass Encoder {\n    /**\n     * Encode a packet as a single string if non-binary, or as a\n     * buffer sequence, depending on packet type.\n     *\n     * @param {Object} obj - packet object\n     */\n    encode(obj) {\n        debug(\"encoding packet %j\", obj);\n        if (obj.type === PacketType.EVENT || obj.type === PacketType.ACK) {\n            if (is_binary_1.hasBinary(obj)) {\n                obj.type =\n                    obj.type === PacketType.EVENT\n                        ? PacketType.BINARY_EVENT\n                        : PacketType.BINARY_ACK;\n                return this.encodeAsBinary(obj);\n            }\n        }\n        return [this.encodeAsString(obj)];\n    }\n    /**\n     * Encode packet as string.\n     */\n    encodeAsString(obj) {\n        // first is type\n        let str = \"\" + obj.type;\n        // attachments if we have them\n        if (obj.type === PacketType.BINARY_EVENT ||\n            obj.type === PacketType.BINARY_ACK) {\n            str += obj.attachments + \"-\";\n        }\n        // if we have a namespace other than `/`\n        // we append it followed by a comma `,`\n        if (obj.nsp && \"/\" !== obj.nsp) {\n            str += obj.nsp + \",\";\n        }\n        // immediately followed by the id\n        if (null != obj.id) {\n            str += obj.id;\n        }\n        // json data\n        if (null != obj.data) {\n            str += JSON.stringify(obj.data);\n        }\n        debug(\"encoded %j as %s\", obj, str);\n        return str;\n    }\n    /**\n     * Encode packet as 'buffer sequence' by removing blobs, and\n     * deconstructing packet into object with placeholders and\n     * a list of buffers.\n     */\n    encodeAsBinary(obj) {\n        const deconstruction = binary_1.deconstructPacket(obj);\n        const pack = this.encodeAsString(deconstruction.packet);\n        const buffers = deconstruction.buffers;\n        buffers.unshift(pack); // add packet info to beginning of data list\n        return buffers; // write all the buffers\n    }\n}\nexports.Encoder = Encoder;\n/**\n * A socket.io Decoder instance\n *\n * @return {Object} decoder\n */\nclass Decoder extends Emitter {\n    constructor() {\n        super();\n    }\n    /**\n     * Decodes an encoded packet string into packet JSON.\n     *\n     * @param {String} obj - encoded packet\n     */\n    add(obj) {\n        let packet;\n        if (typeof obj === \"string\") {\n            packet = this.decodeString(obj);\n            if (packet.type === PacketType.BINARY_EVENT ||\n                packet.type === PacketType.BINARY_ACK) {\n                // binary packet's json\n                this.reconstructor = new BinaryReconstructor(packet);\n                // no attachments, labeled binary but no binary data to follow\n                if (packet.attachments === 0) {\n                    super.emit(\"decoded\", packet);\n                }\n            }\n            else {\n                // non-binary full packet\n                super.emit(\"decoded\", packet);\n            }\n        }\n        else if (is_binary_1.isBinary(obj) || obj.base64) {\n            // raw binary data\n            if (!this.reconstructor) {\n                throw new Error(\"got binary data when not reconstructing a packet\");\n            }\n            else {\n                packet = this.reconstructor.takeBinaryData(obj);\n                if (packet) {\n                    // received final buffer\n                    this.reconstructor = null;\n                    super.emit(\"decoded\", packet);\n                }\n            }\n        }\n        else {\n            throw new Error(\"Unknown type: \" + obj);\n        }\n    }\n    /**\n     * Decode a packet String (JSON data)\n     *\n     * @param {String} str\n     * @return {Object} packet\n     */\n    decodeString(str) {\n        let i = 0;\n        // look up type\n        const p = {\n            type: Number(str.charAt(0)),\n        };\n        if (PacketType[p.type] === undefined) {\n            throw new Error(\"unknown packet type \" + p.type);\n        }\n        // look up attachments if type binary\n        if (p.type === PacketType.BINARY_EVENT ||\n            p.type === PacketType.BINARY_ACK) {\n            const start = i + 1;\n            while (str.charAt(++i) !== \"-\" && i != str.length) { }\n            const buf = str.substring(start, i);\n            if (buf != Number(buf) || str.charAt(i) !== \"-\") {\n                throw new Error(\"Illegal attachments\");\n            }\n            p.attachments = Number(buf);\n        }\n        // look up namespace (if any)\n        if (\"/\" === str.charAt(i + 1)) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (\",\" === c)\n                    break;\n                if (i === str.length)\n                    break;\n            }\n            p.nsp = str.substring(start, i);\n        }\n        else {\n            p.nsp = \"/\";\n        }\n        // look up id\n        const next = str.charAt(i + 1);\n        if (\"\" !== next && Number(next) == next) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (null == c || Number(c) != c) {\n                    --i;\n                    break;\n                }\n                if (i === str.length)\n                    break;\n            }\n            p.id = Number(str.substring(start, i + 1));\n        }\n        // look up json data\n        if (str.charAt(++i)) {\n            const payload = tryParse(str.substr(i));\n            if (Decoder.isPayloadValid(p.type, payload)) {\n                p.data = payload;\n            }\n            else {\n                throw new Error(\"invalid payload\");\n            }\n        }\n        debug(\"decoded %s as %j\", str, p);\n        return p;\n    }\n    static isPayloadValid(type, payload) {\n        switch (type) {\n            case PacketType.CONNECT:\n                return typeof payload === \"object\";\n            case PacketType.DISCONNECT:\n                return payload === undefined;\n            case PacketType.CONNECT_ERROR:\n                return typeof payload === \"string\" || typeof payload === \"object\";\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                return Array.isArray(payload) && payload.length > 0;\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                return Array.isArray(payload);\n        }\n    }\n    /**\n     * Deallocates a parser's resources\n     */\n    destroy() {\n        if (this.reconstructor) {\n            this.reconstructor.finishedReconstruction();\n        }\n    }\n}\nexports.Decoder = Decoder;\nfunction tryParse(str) {\n    try {\n        return JSON.parse(str);\n    }\n    catch (e) {\n        return false;\n    }\n}\n/**\n * A manager of a binary event's 'buffer sequence'. Should\n * be constructed whenever a packet of type BINARY_EVENT is\n * decoded.\n *\n * @param {Object} packet\n * @return {BinaryReconstructor} initialized reconstructor\n */\nclass BinaryReconstructor {\n    constructor(packet) {\n        this.packet = packet;\n        this.buffers = [];\n        this.reconPack = packet;\n    }\n    /**\n     * Method to be called when binary data received from connection\n     * after a BINARY_EVENT packet.\n     *\n     * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n     * @return {null | Object} returns null if more binary data is expected or\n     *   a reconstructed packet object if all buffers have been received.\n     */\n    takeBinaryData(binData) {\n        this.buffers.push(binData);\n        if (this.buffers.length === this.reconPack.attachments) {\n            // done with buffer list\n            const packet = binary_1.reconstructPacket(this.reconPack, this.buffers);\n            this.finishedReconstruction();\n            return packet;\n        }\n        return null;\n    }\n    /**\n     * Cleans up binary packet reconstruction variables.\n     */\n    finishedReconstruction() {\n        this.reconPack = null;\n        this.buffers = [];\n    }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.on = void 0;\nfunction on(obj, ev, fn) {\n    obj.on(ev, fn);\n    return function subDestroy() {\n        obj.off(ev, fn);\n    };\n}\nexports.on = on;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.StrictEventEmitter = void 0;\nconst Emitter = require(\"component-emitter\");\n/**\n * Strictly typed version of an `EventEmitter`. A `TypedEventEmitter` takes type\n * parameters for mappings of event names to event data types, and strictly\n * types method calls to the `EventEmitter` according to these event maps.\n *\n * @typeParam ListenEvents - `EventsMap` of user-defined events that can be\n * listened to with `on` or `once`\n * @typeParam EmitEvents - `EventsMap` of user-defined events that can be\n * emitted with `emit`\n * @typeParam ReservedEvents - `EventsMap` of reserved events, that can be\n * emitted by socket.io with `emitReserved`, and can be listened to with\n * `listen`.\n */\nclass StrictEventEmitter extends Emitter {\n    /**\n     * Adds the `listener` function as an event listener for `ev`.\n     *\n     * @param ev Name of the event\n     * @param listener Callback function\n     */\n    on(ev, listener) {\n        super.on(ev, listener);\n        return this;\n    }\n    /**\n     * Adds a one-time `listener` function as an event listener for `ev`.\n     *\n     * @param ev Name of the event\n     * @param listener Callback function\n     */\n    once(ev, listener) {\n        super.once(ev, listener);\n        return this;\n    }\n    /**\n     * Emits an event.\n     *\n     * @param ev Name of the event\n     * @param args Values to send to listeners of this event\n     */\n    emit(ev, ...args) {\n        super.emit(ev, ...args);\n        return this;\n    }\n    /**\n     * Emits a reserved event.\n     *\n     * This method is `protected`, so that only a class extending\n     * `StrictEventEmitter` can emit its own reserved events.\n     *\n     * @param ev Reserved event name\n     * @param args Arguments to emit along with the event\n     */\n    emitReserved(ev, ...args) {\n        super.emit(ev, ...args);\n        return this;\n    }\n    /**\n     * Returns the listeners listening to an event.\n     *\n     * @param event Event name\n     * @returns Array of listeners subscribed to `event`\n     */\n    listeners(event) {\n        return super.listeners(event);\n    }\n}\nexports.StrictEventEmitter = StrictEventEmitter;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Socket = void 0;\nconst socket_io_parser_1 = require(\"socket.io-parser\");\nconst on_1 = require(\"./on\");\nconst typed_events_1 = require(\"./typed-events\");\nconst debug = require(\"debug\")(\"socket.io-client:socket\");\n/**\n * Internal events.\n * These events can't be emitted by the user.\n */\nconst RESERVED_EVENTS = Object.freeze({\n    connect: 1,\n    connect_error: 1,\n    disconnect: 1,\n    disconnecting: 1,\n    // EventEmitter reserved events: https://nodejs.org/api/events.html#events_event_newlistener\n    newListener: 1,\n    removeListener: 1,\n});\nclass Socket extends typed_events_1.StrictEventEmitter {\n    /**\n     * `Socket` constructor.\n     *\n     * @public\n     */\n    constructor(io, nsp, opts) {\n        super();\n        this.receiveBuffer = [];\n        this.sendBuffer = [];\n        this.ids = 0;\n        this.acks = {};\n        this.flags = {};\n        this.io = io;\n        this.nsp = nsp;\n        this.ids = 0;\n        this.acks = {};\n        this.receiveBuffer = [];\n        this.sendBuffer = [];\n        this.connected = false;\n        this.disconnected = true;\n        this.flags = {};\n        if (opts && opts.auth) {\n            this.auth = opts.auth;\n        }\n        if (this.io._autoConnect)\n            this.open();\n    }\n    /**\n     * Subscribe to open, close and packet events\n     *\n     * @private\n     */\n    subEvents() {\n        if (this.subs)\n            return;\n        const io = this.io;\n        this.subs = [\n            on_1.on(io, \"open\", this.onopen.bind(this)),\n            on_1.on(io, \"packet\", this.onpacket.bind(this)),\n            on_1.on(io, \"error\", this.onerror.bind(this)),\n            on_1.on(io, \"close\", this.onclose.bind(this)),\n        ];\n    }\n    /**\n     * Whether the Socket will try to reconnect when its Manager connects or reconnects\n     */\n    get active() {\n        return !!this.subs;\n    }\n    /**\n     * \"Opens\" the socket.\n     *\n     * @public\n     */\n    connect() {\n        if (this.connected)\n            return this;\n        this.subEvents();\n        if (!this.io[\"_reconnecting\"])\n            this.io.open(); // ensure open\n        if (\"open\" === this.io._readyState)\n            this.onopen();\n        return this;\n    }\n    /**\n     * Alias for connect()\n     */\n    open() {\n        return this.connect();\n    }\n    /**\n     * Sends a `message` event.\n     *\n     * @return self\n     * @public\n     */\n    send(...args) {\n        args.unshift(\"message\");\n        this.emit.apply(this, args);\n        return this;\n    }\n    /**\n     * Override `emit`.\n     * If the event is in `events`, it's emitted normally.\n     *\n     * @return self\n     * @public\n     */\n    emit(ev, ...args) {\n        if (RESERVED_EVENTS.hasOwnProperty(ev)) {\n            throw new Error('\"' + ev + '\" is a reserved event name');\n        }\n        args.unshift(ev);\n        const packet = {\n            type: socket_io_parser_1.PacketType.EVENT,\n            data: args,\n        };\n        packet.options = {};\n        packet.options.compress = this.flags.compress !== false;\n        // event ack callback\n        if (\"function\" === typeof args[args.length - 1]) {\n            debug(\"emitting packet with ack id %d\", this.ids);\n            this.acks[this.ids] = args.pop();\n            packet.id = this.ids++;\n        }\n        const isTransportWritable = this.io.engine &&\n            this.io.engine.transport &&\n            this.io.engine.transport.writable;\n        const discardPacket = this.flags.volatile && (!isTransportWritable || !this.connected);\n        if (discardPacket) {\n            debug(\"discard packet as the transport is not currently writable\");\n        }\n        else if (this.connected) {\n            this.packet(packet);\n        }\n        else {\n            this.sendBuffer.push(packet);\n        }\n        this.flags = {};\n        return this;\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param packet\n     * @private\n     */\n    packet(packet) {\n        packet.nsp = this.nsp;\n        this.io._packet(packet);\n    }\n    /**\n     * Called upon engine `open`.\n     *\n     * @private\n     */\n    onopen() {\n        debug(\"transport is open - connecting\");\n        if (typeof this.auth == \"function\") {\n            this.auth((data) => {\n                this.packet({ type: socket_io_parser_1.PacketType.CONNECT, data });\n            });\n        }\n        else {\n            this.packet({ type: socket_io_parser_1.PacketType.CONNECT, data: this.auth });\n        }\n    }\n    /**\n     * Called upon engine or manager `error`.\n     *\n     * @param err\n     * @private\n     */\n    onerror(err) {\n        if (!this.connected) {\n            this.emitReserved(\"connect_error\", err);\n        }\n    }\n    /**\n     * Called upon engine `close`.\n     *\n     * @param reason\n     * @private\n     */\n    onclose(reason) {\n        debug(\"close (%s)\", reason);\n        this.connected = false;\n        this.disconnected = true;\n        delete this.id;\n        this.emitReserved(\"disconnect\", reason);\n    }\n    /**\n     * Called with socket packet.\n     *\n     * @param packet\n     * @private\n     */\n    onpacket(packet) {\n        const sameNamespace = packet.nsp === this.nsp;\n        if (!sameNamespace)\n            return;\n        switch (packet.type) {\n            case socket_io_parser_1.PacketType.CONNECT:\n                if (packet.data && packet.data.sid) {\n                    const id = packet.data.sid;\n                    this.onconnect(id);\n                }\n                else {\n                    this.emitReserved(\"connect_error\", new Error(\"It seems you are trying to reach a Socket.IO server in v2.x with a v3.x client, but they are not compatible (more information here: https://socket.io/docs/v3/migrating-from-2-x-to-3-0/)\"));\n                }\n                break;\n            case socket_io_parser_1.PacketType.EVENT:\n                this.onevent(packet);\n                break;\n            case socket_io_parser_1.PacketType.BINARY_EVENT:\n                this.onevent(packet);\n                break;\n            case socket_io_parser_1.PacketType.ACK:\n                this.onack(packet);\n                break;\n            case socket_io_parser_1.PacketType.BINARY_ACK:\n                this.onack(packet);\n                break;\n            case socket_io_parser_1.PacketType.DISCONNECT:\n                this.ondisconnect();\n                break;\n            case socket_io_parser_1.PacketType.CONNECT_ERROR:\n                const err = new Error(packet.data.message);\n                // @ts-ignore\n                err.data = packet.data.data;\n                this.emitReserved(\"connect_error\", err);\n                break;\n        }\n    }\n    /**\n     * Called upon a server event.\n     *\n     * @param packet\n     * @private\n     */\n    onevent(packet) {\n        const args = packet.data || [];\n        debug(\"emitting event %j\", args);\n        if (null != packet.id) {\n            debug(\"attaching ack callback to event\");\n            args.push(this.ack(packet.id));\n        }\n        if (this.connected) {\n            this.emitEvent(args);\n        }\n        else {\n            this.receiveBuffer.push(Object.freeze(args));\n        }\n    }\n    emitEvent(args) {\n        if (this._anyListeners && this._anyListeners.length) {\n            const listeners = this._anyListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, args);\n            }\n        }\n        super.emit.apply(this, args);\n    }\n    /**\n     * Produces an ack callback to emit with an event.\n     *\n     * @private\n     */\n    ack(id) {\n        const self = this;\n        let sent = false;\n        return function (...args) {\n            // prevent double callbacks\n            if (sent)\n                return;\n            sent = true;\n            debug(\"sending ack %j\", args);\n            self.packet({\n                type: socket_io_parser_1.PacketType.ACK,\n                id: id,\n                data: args,\n            });\n        };\n    }\n    /**\n     * Called upon a server acknowlegement.\n     *\n     * @param packet\n     * @private\n     */\n    onack(packet) {\n        const ack = this.acks[packet.id];\n        if (\"function\" === typeof ack) {\n            debug(\"calling ack %s with %j\", packet.id, packet.data);\n            ack.apply(this, packet.data);\n            delete this.acks[packet.id];\n        }\n        else {\n            debug(\"bad ack %s\", packet.id);\n        }\n    }\n    /**\n     * Called upon server connect.\n     *\n     * @private\n     */\n    onconnect(id) {\n        debug(\"socket connected with id %s\", id);\n        this.id = id;\n        this.connected = true;\n        this.disconnected = false;\n        this.emitBuffered();\n        this.emitReserved(\"connect\");\n    }\n    /**\n     * Emit buffered events (received and emitted).\n     *\n     * @private\n     */\n    emitBuffered() {\n        this.receiveBuffer.forEach((args) => this.emitEvent(args));\n        this.receiveBuffer = [];\n        this.sendBuffer.forEach((packet) => this.packet(packet));\n        this.sendBuffer = [];\n    }\n    /**\n     * Called upon server disconnect.\n     *\n     * @private\n     */\n    ondisconnect() {\n        debug(\"server disconnect (%s)\", this.nsp);\n        this.destroy();\n        this.onclose(\"io server disconnect\");\n    }\n    /**\n     * Called upon forced client/server side disconnections,\n     * this method ensures the manager stops tracking us and\n     * that reconnections don't get triggered for this.\n     *\n     * @private\n     */\n    destroy() {\n        if (this.subs) {\n            // clean subscriptions to avoid reconnections\n            this.subs.forEach((subDestroy) => subDestroy());\n            this.subs = undefined;\n        }\n        this.io[\"_destroy\"](this);\n    }\n    /**\n     * Disconnects the socket manually.\n     *\n     * @return self\n     * @public\n     */\n    disconnect() {\n        if (this.connected) {\n            debug(\"performing disconnect (%s)\", this.nsp);\n            this.packet({ type: socket_io_parser_1.PacketType.DISCONNECT });\n        }\n        // remove socket from pool\n        this.destroy();\n        if (this.connected) {\n            // fire events\n            this.onclose(\"io client disconnect\");\n        }\n        return this;\n    }\n    /**\n     * Alias for disconnect()\n     *\n     * @return self\n     * @public\n     */\n    close() {\n        return this.disconnect();\n    }\n    /**\n     * Sets the compress flag.\n     *\n     * @param compress - if `true`, compresses the sending data\n     * @return self\n     * @public\n     */\n    compress(compress) {\n        this.flags.compress = compress;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the event message will be dropped when this socket is not\n     * ready to send messages.\n     *\n     * @returns self\n     * @public\n     */\n    get volatile() {\n        this.flags.volatile = true;\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * @param listener\n     * @public\n     */\n    onAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * @param listener\n     * @public\n     */\n    prependAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @param listener\n     * @public\n     */\n    offAny(listener) {\n        if (!this._anyListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     *\n     * @public\n     */\n    listenersAny() {\n        return this._anyListeners || [];\n    }\n}\nexports.Socket = Socket;\n","\n/**\n * Expose `Backoff`.\n */\n\nmodule.exports = Backoff;\n\n/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\n\nfunction Backoff(opts) {\n  opts = opts || {};\n  this.ms = opts.min || 100;\n  this.max = opts.max || 10000;\n  this.factor = opts.factor || 2;\n  this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n  this.attempts = 0;\n}\n\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\n\nBackoff.prototype.duration = function(){\n  var ms = this.ms * Math.pow(this.factor, this.attempts++);\n  if (this.jitter) {\n    var rand =  Math.random();\n    var deviation = Math.floor(rand * this.jitter * ms);\n    ms = (Math.floor(rand * 10) & 1) == 0  ? ms - deviation : ms + deviation;\n  }\n  return Math.min(ms, this.max) | 0;\n};\n\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\n\nBackoff.prototype.reset = function(){\n  this.attempts = 0;\n};\n\n/**\n * Set the minimum duration\n *\n * @api public\n */\n\nBackoff.prototype.setMin = function(min){\n  this.ms = min;\n};\n\n/**\n * Set the maximum duration\n *\n * @api public\n */\n\nBackoff.prototype.setMax = function(max){\n  this.max = max;\n};\n\n/**\n * Set the jitter\n *\n * @api public\n */\n\nBackoff.prototype.setJitter = function(jitter){\n  this.jitter = jitter;\n};\n\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Manager = void 0;\nconst eio = require(\"engine.io-client\");\nconst socket_1 = require(\"./socket\");\nconst parser = require(\"socket.io-parser\");\nconst on_1 = require(\"./on\");\nconst Backoff = require(\"backo2\");\nconst typed_events_1 = require(\"./typed-events\");\nconst debug = require(\"debug\")(\"socket.io-client:manager\");\nclass Manager extends typed_events_1.StrictEventEmitter {\n    constructor(uri, opts) {\n        super();\n        this.nsps = {};\n        this.subs = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = undefined;\n        }\n        opts = opts || {};\n        opts.path = opts.path || \"/socket.io\";\n        this.opts = opts;\n        this.reconnection(opts.reconnection !== false);\n        this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n        this.reconnectionDelay(opts.reconnectionDelay || 1000);\n        this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n        this.randomizationFactor(opts.randomizationFactor || 0.5);\n        this.backoff = new Backoff({\n            min: this.reconnectionDelay(),\n            max: this.reconnectionDelayMax(),\n            jitter: this.randomizationFactor(),\n        });\n        this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n        this._readyState = \"closed\";\n        this.uri = uri;\n        const _parser = opts.parser || parser;\n        this.encoder = new _parser.Encoder();\n        this.decoder = new _parser.Decoder();\n        this._autoConnect = opts.autoConnect !== false;\n        if (this._autoConnect)\n            this.open();\n    }\n    reconnection(v) {\n        if (!arguments.length)\n            return this._reconnection;\n        this._reconnection = !!v;\n        return this;\n    }\n    reconnectionAttempts(v) {\n        if (v === undefined)\n            return this._reconnectionAttempts;\n        this._reconnectionAttempts = v;\n        return this;\n    }\n    reconnectionDelay(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelay;\n        this._reconnectionDelay = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMin(v);\n        return this;\n    }\n    randomizationFactor(v) {\n        var _a;\n        if (v === undefined)\n            return this._randomizationFactor;\n        this._randomizationFactor = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setJitter(v);\n        return this;\n    }\n    reconnectionDelayMax(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelayMax;\n        this._reconnectionDelayMax = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMax(v);\n        return this;\n    }\n    timeout(v) {\n        if (!arguments.length)\n            return this._timeout;\n        this._timeout = v;\n        return this;\n    }\n    /**\n     * Starts trying to reconnect if reconnection is enabled and we have not\n     * started reconnecting yet\n     *\n     * @private\n     */\n    maybeReconnectOnOpen() {\n        // Only try to reconnect if it's the first time we're connecting\n        if (!this._reconnecting &&\n            this._reconnection &&\n            this.backoff.attempts === 0) {\n            // keeps reconnection from firing twice for the same reconnection loop\n            this.reconnect();\n        }\n    }\n    /**\n     * Sets the current transport `socket`.\n     *\n     * @param {Function} fn - optional, callback\n     * @return self\n     * @public\n     */\n    open(fn) {\n        debug(\"readyState %s\", this._readyState);\n        if (~this._readyState.indexOf(\"open\"))\n            return this;\n        debug(\"opening %s\", this.uri);\n        this.engine = eio(this.uri, this.opts);\n        const socket = this.engine;\n        const self = this;\n        this._readyState = \"opening\";\n        this.skipReconnect = false;\n        // emit `open`\n        const openSubDestroy = on_1.on(socket, \"open\", function () {\n            self.onopen();\n            fn && fn();\n        });\n        // emit `error`\n        const errorSub = on_1.on(socket, \"error\", (err) => {\n            debug(\"error\");\n            self.cleanup();\n            self._readyState = \"closed\";\n            this.emitReserved(\"error\", err);\n            if (fn) {\n                fn(err);\n            }\n            else {\n                // Only do this if there is no fn to handle the error\n                self.maybeReconnectOnOpen();\n            }\n        });\n        if (false !== this._timeout) {\n            const timeout = this._timeout;\n            debug(\"connect attempt will timeout after %d\", timeout);\n            if (timeout === 0) {\n                openSubDestroy(); // prevents a race condition with the 'open' event\n            }\n            // set timer\n            const timer = setTimeout(() => {\n                debug(\"connect attempt timed out after %d\", timeout);\n                openSubDestroy();\n                socket.close();\n                socket.emit(\"error\", new Error(\"timeout\"));\n            }, timeout);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(function subDestroy() {\n                clearTimeout(timer);\n            });\n        }\n        this.subs.push(openSubDestroy);\n        this.subs.push(errorSub);\n        return this;\n    }\n    /**\n     * Alias for open()\n     *\n     * @return self\n     * @public\n     */\n    connect(fn) {\n        return this.open(fn);\n    }\n    /**\n     * Called upon transport open.\n     *\n     * @private\n     */\n    onopen() {\n        debug(\"open\");\n        // clear old subs\n        this.cleanup();\n        // mark as open\n        this._readyState = \"open\";\n        this.emitReserved(\"open\");\n        // add new subs\n        const socket = this.engine;\n        this.subs.push(on_1.on(socket, \"ping\", this.onping.bind(this)), on_1.on(socket, \"data\", this.ondata.bind(this)), on_1.on(socket, \"error\", this.onerror.bind(this)), on_1.on(socket, \"close\", this.onclose.bind(this)), on_1.on(this.decoder, \"decoded\", this.ondecoded.bind(this)));\n    }\n    /**\n     * Called upon a ping.\n     *\n     * @private\n     */\n    onping() {\n        this.emitReserved(\"ping\");\n    }\n    /**\n     * Called with data.\n     *\n     * @private\n     */\n    ondata(data) {\n        this.decoder.add(data);\n    }\n    /**\n     * Called when parser fully decodes a packet.\n     *\n     * @private\n     */\n    ondecoded(packet) {\n        this.emitReserved(\"packet\", packet);\n    }\n    /**\n     * Called upon socket error.\n     *\n     * @private\n     */\n    onerror(err) {\n        debug(\"error\", err);\n        this.emitReserved(\"error\", err);\n    }\n    /**\n     * Creates a new socket for the given `nsp`.\n     *\n     * @return {Socket}\n     * @public\n     */\n    socket(nsp, opts) {\n        let socket = this.nsps[nsp];\n        if (!socket) {\n            socket = new socket_1.Socket(this, nsp, opts);\n            this.nsps[nsp] = socket;\n        }\n        return socket;\n    }\n    /**\n     * Called upon a socket close.\n     *\n     * @param socket\n     * @private\n     */\n    _destroy(socket) {\n        const nsps = Object.keys(this.nsps);\n        for (const nsp of nsps) {\n            const socket = this.nsps[nsp];\n            if (socket.active) {\n                debug(\"socket %s is still active, skipping close\", nsp);\n                return;\n            }\n        }\n        this._close();\n    }\n    /**\n     * Writes a packet.\n     *\n     * @param packet\n     * @private\n     */\n    _packet(packet) {\n        debug(\"writing packet %j\", packet);\n        const encodedPackets = this.encoder.encode(packet);\n        for (let i = 0; i < encodedPackets.length; i++) {\n            this.engine.write(encodedPackets[i], packet.options);\n        }\n    }\n    /**\n     * Clean up transport subscriptions and packet buffer.\n     *\n     * @private\n     */\n    cleanup() {\n        debug(\"cleanup\");\n        this.subs.forEach((subDestroy) => subDestroy());\n        this.subs.length = 0;\n        this.decoder.destroy();\n    }\n    /**\n     * Close the current socket.\n     *\n     * @private\n     */\n    _close() {\n        debug(\"disconnect\");\n        this.skipReconnect = true;\n        this._reconnecting = false;\n        if (\"opening\" === this._readyState) {\n            // `onclose` will not fire because\n            // an open event never happened\n            this.cleanup();\n        }\n        this.backoff.reset();\n        this._readyState = \"closed\";\n        if (this.engine)\n            this.engine.close();\n    }\n    /**\n     * Alias for close()\n     *\n     * @private\n     */\n    disconnect() {\n        return this._close();\n    }\n    /**\n     * Called upon engine close.\n     *\n     * @private\n     */\n    onclose(reason) {\n        debug(\"onclose\");\n        this.cleanup();\n        this.backoff.reset();\n        this._readyState = \"closed\";\n        this.emitReserved(\"close\", reason);\n        if (this._reconnection && !this.skipReconnect) {\n            this.reconnect();\n        }\n    }\n    /**\n     * Attempt a reconnection.\n     *\n     * @private\n     */\n    reconnect() {\n        if (this._reconnecting || this.skipReconnect)\n            return this;\n        const self = this;\n        if (this.backoff.attempts >= this._reconnectionAttempts) {\n            debug(\"reconnect failed\");\n            this.backoff.reset();\n            this.emitReserved(\"reconnect_failed\");\n            this._reconnecting = false;\n        }\n        else {\n            const delay = this.backoff.duration();\n            debug(\"will wait %dms before reconnect attempt\", delay);\n            this._reconnecting = true;\n            const timer = setTimeout(() => {\n                if (self.skipReconnect)\n                    return;\n                debug(\"attempting reconnect\");\n                this.emitReserved(\"reconnect_attempt\", self.backoff.attempts);\n                // check again for the case socket closed in above events\n                if (self.skipReconnect)\n                    return;\n                self.open((err) => {\n                    if (err) {\n                        debug(\"reconnect attempt error\");\n                        self._reconnecting = false;\n                        self.reconnect();\n                        this.emitReserved(\"reconnect_error\", err);\n                    }\n                    else {\n                        debug(\"reconnect success\");\n                        self.onreconnect();\n                    }\n                });\n            }, delay);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(function subDestroy() {\n                clearTimeout(timer);\n            });\n        }\n    }\n    /**\n     * Called upon successful reconnect.\n     *\n     * @private\n     */\n    onreconnect() {\n        const attempt = this.backoff.attempts;\n        this._reconnecting = false;\n        this.backoff.reset();\n        this.emitReserved(\"reconnect\", attempt);\n    }\n}\nexports.Manager = Manager;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.io = exports.Socket = exports.Manager = exports.protocol = void 0;\nconst url_1 = require(\"./url\");\nconst manager_1 = require(\"./manager\");\nconst debug = require(\"debug\")(\"socket.io-client\");\n/**\n * Module exports.\n */\nmodule.exports = exports = lookup;\n/**\n * Managers cache.\n */\nconst cache = (exports.managers = {});\nfunction lookup(uri, opts) {\n    if (typeof uri === \"object\") {\n        opts = uri;\n        uri = undefined;\n    }\n    opts = opts || {};\n    const parsed = url_1.url(uri, opts.path || \"/socket.io\");\n    const source = parsed.source;\n    const id = parsed.id;\n    const path = parsed.path;\n    const sameNamespace = cache[id] && path in cache[id][\"nsps\"];\n    const newConnection = opts.forceNew ||\n        opts[\"force new connection\"] ||\n        false === opts.multiplex ||\n        sameNamespace;\n    let io;\n    if (newConnection) {\n        debug(\"ignoring socket cache for %s\", source);\n        io = new manager_1.Manager(source, opts);\n    }\n    else {\n        if (!cache[id]) {\n            debug(\"new io instance for %s\", source);\n            cache[id] = new manager_1.Manager(source, opts);\n        }\n        io = cache[id];\n    }\n    if (parsed.query && !opts.query) {\n        opts.query = parsed.queryKey;\n    }\n    return io.socket(parsed.path, opts);\n}\nexports.io = lookup;\n/**\n * Protocol version.\n *\n * @public\n */\nvar socket_io_parser_1 = require(\"socket.io-parser\");\nObject.defineProperty(exports, \"protocol\", { enumerable: true, get: function () { return socket_io_parser_1.protocol; } });\n/**\n * `connect`.\n *\n * @param {String} uri\n * @public\n */\nexports.connect = lookup;\n/**\n * Expose constructors for standalone build.\n *\n * @public\n */\nvar manager_2 = require(\"./manager\");\nObject.defineProperty(exports, \"Manager\", { enumerable: true, get: function () { return manager_2.Manager; } });\nvar socket_1 = require(\"./socket\");\nObject.defineProperty(exports, \"Socket\", { enumerable: true, get: function () { return socket_1.Socket; } });\nexports.default = lookup;\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","export const version: string = \"14.8.17\";\n","function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nmodule.exports = _arrayWithHoles;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nmodule.exports = _iterableToArrayLimit;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nmodule.exports = _arrayLikeToArray;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\n\nmodule.exports = _unsupportedIterableToArray;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableRest;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","var arrayWithHoles = require(\"./arrayWithHoles.js\");\n\nvar iterableToArrayLimit = require(\"./iterableToArrayLimit.js\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\n\nvar nonIterableRest = require(\"./nonIterableRest.js\");\n\nfunction _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}\n\nmodule.exports = _slicedToArray;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nmodule.exports = _createClass;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@babel/runtime/helpers/slicedToArray'), require('@babel/runtime/helpers/classCallCheck'), require('@babel/runtime/helpers/createClass')) :\n    typeof define === 'function' && define.amd ? define(['exports', '@babel/runtime/helpers/slicedToArray', '@babel/runtime/helpers/classCallCheck', '@babel/runtime/helpers/createClass'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.automationEvents = {}, global._slicedToArray, global._classCallCheck, global._createClass));\n}(this, (function (exports, _slicedToArray, _classCallCheck, _createClass) { 'use strict';\n\n    function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\n    var _slicedToArray__default = /*#__PURE__*/_interopDefaultLegacy(_slicedToArray);\n    var _classCallCheck__default = /*#__PURE__*/_interopDefaultLegacy(_classCallCheck);\n    var _createClass__default = /*#__PURE__*/_interopDefaultLegacy(_createClass);\n\n    var createExtendedExponentialRampToValueAutomationEvent = function createExtendedExponentialRampToValueAutomationEvent(value, endTime, insertTime) {\n      return {\n        endTime: endTime,\n        insertTime: insertTime,\n        type: 'exponentialRampToValue',\n        value: value\n      };\n    };\n\n    var createExtendedLinearRampToValueAutomationEvent = function createExtendedLinearRampToValueAutomationEvent(value, endTime, insertTime) {\n      return {\n        endTime: endTime,\n        insertTime: insertTime,\n        type: 'linearRampToValue',\n        value: value\n      };\n    };\n\n    var createSetValueAutomationEvent = function createSetValueAutomationEvent(value, startTime) {\n      return {\n        startTime: startTime,\n        type: 'setValue',\n        value: value\n      };\n    };\n\n    var createSetValueCurveAutomationEvent = function createSetValueCurveAutomationEvent(values, startTime, duration) {\n      return {\n        duration: duration,\n        startTime: startTime,\n        type: 'setValueCurve',\n        values: values\n      };\n    };\n\n    var getTargetValueAtTime = function getTargetValueAtTime(time, valueAtStartTime, _ref) {\n      var startTime = _ref.startTime,\n          target = _ref.target,\n          timeConstant = _ref.timeConstant;\n      return target + (valueAtStartTime - target) * Math.exp((startTime - time) / timeConstant);\n    };\n\n    var isExponentialRampToValueAutomationEvent = function isExponentialRampToValueAutomationEvent(automationEvent) {\n      return automationEvent.type === 'exponentialRampToValue';\n    };\n\n    var isLinearRampToValueAutomationEvent = function isLinearRampToValueAutomationEvent(automationEvent) {\n      return automationEvent.type === 'linearRampToValue';\n    };\n\n    var isAnyRampToValueAutomationEvent = function isAnyRampToValueAutomationEvent(automationEvent) {\n      return isExponentialRampToValueAutomationEvent(automationEvent) || isLinearRampToValueAutomationEvent(automationEvent);\n    };\n\n    var isSetValueAutomationEvent = function isSetValueAutomationEvent(automationEvent) {\n      return automationEvent.type === 'setValue';\n    };\n\n    var isSetValueCurveAutomationEvent = function isSetValueCurveAutomationEvent(automationEvent) {\n      return automationEvent.type === 'setValueCurve';\n    };\n\n    var getValueOfAutomationEventAtIndexAtTime = function getValueOfAutomationEventAtIndexAtTime(automationEvents, index, time, defaultValue) {\n      var automationEvent = automationEvents[index];\n      return automationEvent === undefined ? defaultValue : isAnyRampToValueAutomationEvent(automationEvent) || isSetValueAutomationEvent(automationEvent) ? automationEvent.value : isSetValueCurveAutomationEvent(automationEvent) ? automationEvent.values[automationEvent.values.length - 1] : getTargetValueAtTime(time, getValueOfAutomationEventAtIndexAtTime(automationEvents, index - 1, automationEvent.startTime, defaultValue), automationEvent);\n    };\n\n    var getEndTimeAndValueOfPreviousAutomationEvent = function getEndTimeAndValueOfPreviousAutomationEvent(automationEvents, index, currentAutomationEvent, nextAutomationEvent, defaultValue) {\n      return currentAutomationEvent === undefined ? [nextAutomationEvent.insertTime, defaultValue] : isAnyRampToValueAutomationEvent(currentAutomationEvent) ? [currentAutomationEvent.endTime, currentAutomationEvent.value] : isSetValueAutomationEvent(currentAutomationEvent) ? [currentAutomationEvent.startTime, currentAutomationEvent.value] : isSetValueCurveAutomationEvent(currentAutomationEvent) ? [currentAutomationEvent.startTime + currentAutomationEvent.duration, currentAutomationEvent.values[currentAutomationEvent.values.length - 1]] : [currentAutomationEvent.startTime, getValueOfAutomationEventAtIndexAtTime(automationEvents, index - 1, currentAutomationEvent.startTime, defaultValue)];\n    };\n\n    var isCancelAndHoldAutomationEvent = function isCancelAndHoldAutomationEvent(automationEvent) {\n      return automationEvent.type === 'cancelAndHold';\n    };\n\n    var isCancelScheduledValuesAutomationEvent = function isCancelScheduledValuesAutomationEvent(automationEvent) {\n      return automationEvent.type === 'cancelScheduledValues';\n    };\n\n    var getEventTime = function getEventTime(automationEvent) {\n      if (isCancelAndHoldAutomationEvent(automationEvent) || isCancelScheduledValuesAutomationEvent(automationEvent)) {\n        return automationEvent.cancelTime;\n      }\n\n      if (isExponentialRampToValueAutomationEvent(automationEvent) || isLinearRampToValueAutomationEvent(automationEvent)) {\n        return automationEvent.endTime;\n      }\n\n      return automationEvent.startTime;\n    };\n\n    var getExponentialRampValueAtTime = function getExponentialRampValueAtTime(time, startTime, valueAtStartTime, _ref) {\n      var endTime = _ref.endTime,\n          value = _ref.value;\n\n      if (valueAtStartTime === value) {\n        return value;\n      }\n\n      if (0 < valueAtStartTime && 0 < value || valueAtStartTime < 0 && value < 0) {\n        return valueAtStartTime * Math.pow(value / valueAtStartTime, (time - startTime) / (endTime - startTime));\n      }\n\n      return 0;\n    };\n\n    var getLinearRampValueAtTime = function getLinearRampValueAtTime(time, startTime, valueAtStartTime, _ref) {\n      var endTime = _ref.endTime,\n          value = _ref.value;\n      return valueAtStartTime + (time - startTime) / (endTime - startTime) * (value - valueAtStartTime);\n    };\n\n    var interpolateValue = function interpolateValue(values, theoreticIndex) {\n      var lowerIndex = Math.floor(theoreticIndex);\n      var upperIndex = Math.ceil(theoreticIndex);\n\n      if (lowerIndex === upperIndex) {\n        return values[lowerIndex];\n      }\n\n      return (1 - (theoreticIndex - lowerIndex)) * values[lowerIndex] + (1 - (upperIndex - theoreticIndex)) * values[upperIndex];\n    };\n\n    var getValueCurveValueAtTime = function getValueCurveValueAtTime(time, _ref) {\n      var duration = _ref.duration,\n          startTime = _ref.startTime,\n          values = _ref.values;\n      var theoreticIndex = (time - startTime) / duration * (values.length - 1);\n      return interpolateValue(values, theoreticIndex);\n    };\n\n    var isSetTargetAutomationEvent = function isSetTargetAutomationEvent(automationEvent) {\n      return automationEvent.type === 'setTarget';\n    };\n\n    var AutomationEventList = /*#__PURE__*/function () {\n      function AutomationEventList(defaultValue) {\n        _classCallCheck__default['default'](this, AutomationEventList);\n\n        this._automationEvents = [];\n        this._currenTime = 0;\n        this._defaultValue = defaultValue;\n      }\n\n      _createClass__default['default'](AutomationEventList, [{\n        key: Symbol.iterator,\n        value: function value() {\n          return this._automationEvents[Symbol.iterator]();\n        }\n      }, {\n        key: \"add\",\n        value: function add(automationEvent) {\n          var eventTime = getEventTime(automationEvent);\n\n          if (isCancelAndHoldAutomationEvent(automationEvent) || isCancelScheduledValuesAutomationEvent(automationEvent)) {\n            var index = this._automationEvents.findIndex(function (currentAutomationEvent) {\n              if (isCancelScheduledValuesAutomationEvent(automationEvent) && isSetValueCurveAutomationEvent(currentAutomationEvent)) {\n                return currentAutomationEvent.startTime + currentAutomationEvent.duration >= eventTime;\n              }\n\n              return getEventTime(currentAutomationEvent) >= eventTime;\n            });\n\n            var removedAutomationEvent = this._automationEvents[index];\n\n            if (index !== -1) {\n              this._automationEvents = this._automationEvents.slice(0, index);\n            }\n\n            if (isCancelAndHoldAutomationEvent(automationEvent)) {\n              var lastAutomationEvent = this._automationEvents[this._automationEvents.length - 1];\n\n              if (removedAutomationEvent !== undefined && isAnyRampToValueAutomationEvent(removedAutomationEvent)) {\n                if (isSetTargetAutomationEvent(lastAutomationEvent)) {\n                  throw new Error('The internal list is malformed.');\n                }\n\n                var startTime = isSetValueCurveAutomationEvent(lastAutomationEvent) ? lastAutomationEvent.startTime + lastAutomationEvent.duration : getEventTime(lastAutomationEvent);\n                var startValue = isSetValueCurveAutomationEvent(lastAutomationEvent) ? lastAutomationEvent.values[lastAutomationEvent.values.length - 1] : lastAutomationEvent.value;\n                var value = isExponentialRampToValueAutomationEvent(removedAutomationEvent) ? getExponentialRampValueAtTime(eventTime, startTime, startValue, removedAutomationEvent) : getLinearRampValueAtTime(eventTime, startTime, startValue, removedAutomationEvent);\n                var truncatedAutomationEvent = isExponentialRampToValueAutomationEvent(removedAutomationEvent) ? createExtendedExponentialRampToValueAutomationEvent(value, eventTime, this._currenTime) : createExtendedLinearRampToValueAutomationEvent(value, eventTime, this._currenTime);\n\n                this._automationEvents.push(truncatedAutomationEvent);\n              }\n\n              if (lastAutomationEvent !== undefined && isSetTargetAutomationEvent(lastAutomationEvent)) {\n                this._automationEvents.push(createSetValueAutomationEvent(this.getValue(eventTime), eventTime));\n              }\n\n              if (lastAutomationEvent !== undefined && isSetValueCurveAutomationEvent(lastAutomationEvent) && lastAutomationEvent.startTime + lastAutomationEvent.duration > eventTime) {\n                this._automationEvents[this._automationEvents.length - 1] = createSetValueCurveAutomationEvent(new Float32Array([6, 7]), lastAutomationEvent.startTime, eventTime - lastAutomationEvent.startTime);\n              }\n            }\n          } else {\n            var _index = this._automationEvents.findIndex(function (currentAutomationEvent) {\n              return getEventTime(currentAutomationEvent) > eventTime;\n            });\n\n            var previousAutomationEvent = _index === -1 ? this._automationEvents[this._automationEvents.length - 1] : this._automationEvents[_index - 1];\n\n            if (previousAutomationEvent !== undefined && isSetValueCurveAutomationEvent(previousAutomationEvent) && getEventTime(previousAutomationEvent) + previousAutomationEvent.duration > eventTime) {\n              return false;\n            }\n\n            var persistentAutomationEvent = isExponentialRampToValueAutomationEvent(automationEvent) ? createExtendedExponentialRampToValueAutomationEvent(automationEvent.value, automationEvent.endTime, this._currenTime) : isLinearRampToValueAutomationEvent(automationEvent) ? createExtendedLinearRampToValueAutomationEvent(automationEvent.value, eventTime, this._currenTime) : automationEvent;\n\n            if (_index === -1) {\n              this._automationEvents.push(persistentAutomationEvent);\n            } else {\n              if (isSetValueCurveAutomationEvent(automationEvent) && eventTime + automationEvent.duration > getEventTime(this._automationEvents[_index])) {\n                return false;\n              }\n\n              this._automationEvents.splice(_index, 0, persistentAutomationEvent);\n            }\n          }\n\n          return true;\n        }\n      }, {\n        key: \"flush\",\n        value: function flush(time) {\n          var index = this._automationEvents.findIndex(function (currentAutomationEvent) {\n            return getEventTime(currentAutomationEvent) > time;\n          });\n\n          if (index > 1) {\n            var remainingAutomationEvents = this._automationEvents.slice(index - 1);\n\n            var firstRemainingAutomationEvent = remainingAutomationEvents[0];\n\n            if (isSetTargetAutomationEvent(firstRemainingAutomationEvent)) {\n              remainingAutomationEvents.unshift(createSetValueAutomationEvent(getValueOfAutomationEventAtIndexAtTime(this._automationEvents, index - 2, firstRemainingAutomationEvent.startTime, this._defaultValue), firstRemainingAutomationEvent.startTime));\n            }\n\n            this._automationEvents = remainingAutomationEvents;\n          }\n        }\n      }, {\n        key: \"getValue\",\n        value: function getValue(time) {\n          if (this._automationEvents.length === 0) {\n            return this._defaultValue;\n          }\n\n          var indexOfNextEvent = this._automationEvents.findIndex(function (automationEvent) {\n            return getEventTime(automationEvent) > time;\n          });\n\n          var nextAutomationEvent = this._automationEvents[indexOfNextEvent];\n          var indexOfCurrentEvent = (indexOfNextEvent === -1 ? this._automationEvents.length : indexOfNextEvent) - 1;\n          var currentAutomationEvent = this._automationEvents[indexOfCurrentEvent];\n\n          if (currentAutomationEvent !== undefined && isSetTargetAutomationEvent(currentAutomationEvent) && (nextAutomationEvent === undefined || !isAnyRampToValueAutomationEvent(nextAutomationEvent) || nextAutomationEvent.insertTime > time)) {\n            return getTargetValueAtTime(time, getValueOfAutomationEventAtIndexAtTime(this._automationEvents, indexOfCurrentEvent - 1, currentAutomationEvent.startTime, this._defaultValue), currentAutomationEvent);\n          }\n\n          if (currentAutomationEvent !== undefined && isSetValueAutomationEvent(currentAutomationEvent) && (nextAutomationEvent === undefined || !isAnyRampToValueAutomationEvent(nextAutomationEvent))) {\n            return currentAutomationEvent.value;\n          }\n\n          if (currentAutomationEvent !== undefined && isSetValueCurveAutomationEvent(currentAutomationEvent) && (nextAutomationEvent === undefined || !isAnyRampToValueAutomationEvent(nextAutomationEvent) || currentAutomationEvent.startTime + currentAutomationEvent.duration > time)) {\n            if (time < currentAutomationEvent.startTime + currentAutomationEvent.duration) {\n              return getValueCurveValueAtTime(time, currentAutomationEvent);\n            }\n\n            return currentAutomationEvent.values[currentAutomationEvent.values.length - 1];\n          }\n\n          if (currentAutomationEvent !== undefined && isAnyRampToValueAutomationEvent(currentAutomationEvent) && (nextAutomationEvent === undefined || !isAnyRampToValueAutomationEvent(nextAutomationEvent))) {\n            return currentAutomationEvent.value;\n          }\n\n          if (nextAutomationEvent !== undefined && isExponentialRampToValueAutomationEvent(nextAutomationEvent)) {\n            var _getEndTimeAndValueOf = getEndTimeAndValueOfPreviousAutomationEvent(this._automationEvents, indexOfCurrentEvent, currentAutomationEvent, nextAutomationEvent, this._defaultValue),\n                _getEndTimeAndValueOf2 = _slicedToArray__default['default'](_getEndTimeAndValueOf, 2),\n                startTime = _getEndTimeAndValueOf2[0],\n                value = _getEndTimeAndValueOf2[1];\n\n            return getExponentialRampValueAtTime(time, startTime, value, nextAutomationEvent);\n          }\n\n          if (nextAutomationEvent !== undefined && isLinearRampToValueAutomationEvent(nextAutomationEvent)) {\n            var _getEndTimeAndValueOf3 = getEndTimeAndValueOfPreviousAutomationEvent(this._automationEvents, indexOfCurrentEvent, currentAutomationEvent, nextAutomationEvent, this._defaultValue),\n                _getEndTimeAndValueOf4 = _slicedToArray__default['default'](_getEndTimeAndValueOf3, 2),\n                _startTime = _getEndTimeAndValueOf4[0],\n                _value = _getEndTimeAndValueOf4[1];\n\n            return getLinearRampValueAtTime(time, _startTime, _value, nextAutomationEvent);\n          }\n\n          return this._defaultValue;\n        }\n      }]);\n\n      return AutomationEventList;\n    }();\n\n    var createCancelAndHoldAutomationEvent = function createCancelAndHoldAutomationEvent(cancelTime) {\n      return {\n        cancelTime: cancelTime,\n        type: 'cancelAndHold'\n      };\n    };\n\n    var createCancelScheduledValuesAutomationEvent = function createCancelScheduledValuesAutomationEvent(cancelTime) {\n      return {\n        cancelTime: cancelTime,\n        type: 'cancelScheduledValues'\n      };\n    };\n\n    var createExponentialRampToValueAutomationEvent = function createExponentialRampToValueAutomationEvent(value, endTime) {\n      return {\n        endTime: endTime,\n        type: 'exponentialRampToValue',\n        value: value\n      };\n    };\n\n    var createLinearRampToValueAutomationEvent = function createLinearRampToValueAutomationEvent(value, endTime) {\n      return {\n        endTime: endTime,\n        type: 'linearRampToValue',\n        value: value\n      };\n    };\n\n    var createSetTargetAutomationEvent = function createSetTargetAutomationEvent(target, startTime, timeConstant) {\n      return {\n        startTime: startTime,\n        target: target,\n        timeConstant: timeConstant,\n        type: 'setTarget'\n      };\n    };\n\n    exports.AutomationEventList = AutomationEventList;\n    exports.createCancelAndHoldAutomationEvent = createCancelAndHoldAutomationEvent;\n    exports.createCancelScheduledValuesAutomationEvent = createCancelScheduledValuesAutomationEvent;\n    exports.createExponentialRampToValueAutomationEvent = createExponentialRampToValueAutomationEvent;\n    exports.createLinearRampToValueAutomationEvent = createLinearRampToValueAutomationEvent;\n    exports.createSetTargetAutomationEvent = createSetTargetAutomationEvent;\n    exports.createSetValueAutomationEvent = createSetValueAutomationEvent;\n    exports.createSetValueCurveAutomationEvent = createSetValueCurveAutomationEvent;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n","import { TAbortErrorFactory } from '../types';\n\nexport const createAbortError: TAbortErrorFactory = () => new DOMException('', 'AbortError');\n","import { TAddActiveInputConnectionToAudioNodeFactory } from '../types/add-active-input-connection-to-audio-node-factory';\n\nexport const createAddActiveInputConnectionToAudioNode: TAddActiveInputConnectionToAudioNodeFactory = (insertElementInSet) => {\n    return (activeInputs, source, [output, input, eventListener], ignoreDuplicates) => {\n        insertElementInSet(\n            activeInputs[input],\n            [source, output, eventListener],\n            (activeInputConnection) => activeInputConnection[0] === source && activeInputConnection[1] === output,\n            ignoreDuplicates\n        );\n    };\n};\n","import { IAudioNode, IAudioNodeRenderer, IMinimalOfflineAudioContext, IOfflineAudioContext } from '../interfaces';\nimport { TActiveInputConnection, TAddAudioNodeConnectionsFactory, TContext, TNativeAudioNode } from '../types';\n\nexport const createAddAudioNodeConnections: TAddAudioNodeConnectionsFactory = (audioNodeConnectionsStore) => {\n    return <T extends TContext>(\n        audioNode: IAudioNode<T>,\n        audioNodeRenderer: T extends IMinimalOfflineAudioContext | IOfflineAudioContext ? IAudioNodeRenderer<T, IAudioNode<T>> : null,\n        nativeAudioNode: TNativeAudioNode\n    ) => {\n        const activeInputs = [];\n\n        for (let i = 0; i < nativeAudioNode.numberOfInputs; i += 1) {\n            activeInputs.push(new Set<TActiveInputConnection<T>>());\n        }\n\n        audioNodeConnectionsStore.set(audioNode, {\n            activeInputs,\n            outputs: new Set(),\n            passiveInputs: new WeakMap(),\n            renderer: audioNodeRenderer\n        });\n    };\n};\n","import { IAudioParam, IAudioParamRenderer, IMinimalOfflineAudioContext, IOfflineAudioContext } from '../interfaces';\nimport { TAddAudioParamConnectionsFactory, TContext } from '../types';\n\nexport const createAddAudioParamConnections: TAddAudioParamConnectionsFactory = (audioParamConnectionsStore) => {\n    return <T extends TContext>(\n        audioParam: IAudioParam,\n        audioParamRenderer: T extends IMinimalOfflineAudioContext | IOfflineAudioContext ? IAudioParamRenderer : null\n    ) => {\n        audioParamConnectionsStore.set(audioParam, { activeInputs: new Set(), passiveInputs: new WeakMap(), renderer: audioParamRenderer });\n    };\n};\n","import { IAudioNode, IAudioWorkletProcessor, IAudioWorkletProcessorConstructor } from './interfaces';\nimport {\n    TAudioNodeConnectionsStore,\n    TAudioNodeStore,\n    TAudioParamConnectionsStore,\n    TAudioParamStore,\n    TContext,\n    TContextStore,\n    TCycleCounters,\n    TInternalStateEventListener,\n    TNativeAudioWorkletNode,\n    TNativeContext\n} from './types';\n\nexport const ACTIVE_AUDIO_NODE_STORE: WeakSet<IAudioNode<TContext>> = new WeakSet();\n\nexport const AUDIO_NODE_CONNECTIONS_STORE: TAudioNodeConnectionsStore = new WeakMap();\n\nexport const AUDIO_NODE_STORE: TAudioNodeStore = new WeakMap();\n\nexport const AUDIO_PARAM_CONNECTIONS_STORE: TAudioParamConnectionsStore = new WeakMap();\n\nexport const AUDIO_PARAM_STORE: TAudioParamStore = new WeakMap();\n\nexport const CONTEXT_STORE: TContextStore = new WeakMap();\n\nexport const EVENT_LISTENERS: WeakMap<IAudioNode<TContext>, Set<TInternalStateEventListener>> = new WeakMap();\n\nexport const CYCLE_COUNTERS: TCycleCounters = new WeakMap();\n\n// This clunky name is borrowed from the spec. :-)\nexport const NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS: WeakMap<\n    TNativeContext,\n    Map<string, IAudioWorkletProcessorConstructor>\n> = new WeakMap();\n\nexport const NODE_TO_PROCESSOR_MAPS: WeakMap<\n    TNativeContext,\n    WeakMap<TNativeAudioWorkletNode, Promise<IAudioWorkletProcessor>>\n> = new WeakMap();\n","import { TConstructor } from '../types';\n\nconst handler = {\n    construct(): any {\n        return handler;\n    }\n};\n\nexport const isConstructible = (constructible: TConstructor): boolean => {\n    try {\n        const proxy = new Proxy(constructible, handler);\n\n        new proxy(); // tslint:disable-line:no-unused-expression\n    } catch {\n        return false;\n    }\n\n    return true;\n};\n","/*\n * This massive regex tries to cover all the following cases.\n *\n * import './path';\n * import defaultImport from './path';\n * import { namedImport } from './path';\n * import { namedImport as renamendImport } from './path';\n * import * as namespaceImport from './path';\n * import defaultImport, { namedImport } from './path';\n * import defaultImport, { namedImport as renamendImport } from './path';\n * import defaultImport, * as namespaceImport from './path';\n */\nconst IMPORT_STATEMENT_REGEX = /^import(?:(?:[\\s]+[\\w]+|(?:[\\s]+[\\w]+[\\s]*,)?[\\s]*\\{[\\s]*[\\w]+(?:[\\s]+as[\\s]+[\\w]+)?(?:[\\s]*,[\\s]*[\\w]+(?:[\\s]+as[\\s]+[\\w]+)?)*[\\s]*}|(?:[\\s]+[\\w]+[\\s]*,)?[\\s]*\\*[\\s]+as[\\s]+[\\w]+)[\\s]+from)?(?:[\\s]*)(\"([^\"\\\\]|\\\\.)+\"|'([^'\\\\]|\\\\.)+')(?:[\\s]*);?/; // tslint:disable-line:max-line-length\n\nexport const splitImportStatements = (source: string, url: string): [string, string] => {\n    const importStatements = [];\n\n    let sourceWithoutImportStatements = source.replace(/^[\\s]+/, '');\n    let result = sourceWithoutImportStatements.match(IMPORT_STATEMENT_REGEX);\n\n    while (result !== null) {\n        const unresolvedUrl = result[1].slice(1, -1);\n\n        const importStatementWithResolvedUrl = result[0]\n            .replace(/([\\s]+)?;?$/, '')\n            .replace(unresolvedUrl, new URL(unresolvedUrl, url).toString());\n        importStatements.push(importStatementWithResolvedUrl);\n\n        sourceWithoutImportStatements = sourceWithoutImportStatements.slice(result[0].length).replace(/^[\\s]+/, '');\n        result = sourceWithoutImportStatements.match(IMPORT_STATEMENT_REGEX);\n    }\n\n    return [importStatements.join(';'), sourceWithoutImportStatements];\n};\n","import { NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS } from '../globals';\nimport { isConstructible } from '../helpers/is-constructible';\nimport { splitImportStatements } from '../helpers/split-import-statements';\nimport { IAudioWorkletProcessorConstructor } from '../interfaces';\nimport { TAddAudioWorkletModuleFactory, TEvaluateAudioWorkletGlobalScopeFunction } from '../types';\n\nconst verifyParameterDescriptors = (parameterDescriptors: IAudioWorkletProcessorConstructor['parameterDescriptors']) => {\n    if (parameterDescriptors !== undefined && !Array.isArray(parameterDescriptors)) {\n        throw new TypeError('The parameterDescriptors property of given value for processorCtor is not an array.');\n    }\n};\n\nconst verifyProcessorCtor = <T extends IAudioWorkletProcessorConstructor>(processorCtor: T) => {\n    if (!isConstructible(processorCtor)) {\n        throw new TypeError('The given value for processorCtor should be a constructor.');\n    }\n\n    if (processorCtor.prototype === null || typeof processorCtor.prototype !== 'object') {\n        throw new TypeError('The given value for processorCtor should have a prototype.');\n    }\n};\n\nexport const createAddAudioWorkletModule: TAddAudioWorkletModuleFactory = (\n    cacheTestResult,\n    createNotSupportedError,\n    evaluateSource,\n    exposeCurrentFrameAndCurrentTime,\n    fetchSource,\n    getNativeContext,\n    getOrCreateBackupOfflineAudioContext,\n    isNativeOfflineAudioContext,\n    ongoingRequests,\n    resolvedRequests,\n    testAudioWorkletProcessorPostMessageSupport,\n    window\n) => {\n    return (context, moduleURL, options = { credentials: 'omit' }) => {\n        const nativeContext = getNativeContext(context);\n\n        // Bug #59: Safari does not implement the audioWorklet property.\n        if (nativeContext.audioWorklet !== undefined) {\n            return Promise.all([\n                fetchSource(moduleURL),\n                Promise.resolve(cacheTestResult(testAudioWorkletProcessorPostMessageSupport, testAudioWorkletProcessorPostMessageSupport))\n            ]).then(([[source, absoluteUrl], isSupportingPostMessage]) => {\n                const [importStatements, sourceWithoutImportStatements] = splitImportStatements(source, absoluteUrl);\n                /*\n                 * Bug #179: Firefox does not allow to transfer any buffer which has been passed to the process() method as an argument.\n                 *\n                 * This is the unminified version of the code used below.\n                 *\n                 * ```js\n                 * class extends AudioWorkletProcessor {\n                 *\n                 *     __buffers = new WeakSet();\n                 *\n                 *     constructor () {\n                 *         super();\n                 *\n                 *         this.port.postMessage = ((postMessage) => {\n                 *             return (message, transferables) => {\n                 *                 const filteredTransferables = (transferables)\n                 *                     ? transferables.filter((transferable) => !this.__buffers.has(transferable))\n                 *                     : transferables;\n                 *\n                 *                 return postMessage.call(this.port, message, filteredTransferables);\n                 *              };\n                 *         })(this.port.postMessage);\n                 *     }\n                 * }\n                 * ```\n                 */\n                const patchedSourceWithoutImportStatements = isSupportingPostMessage\n                    ? sourceWithoutImportStatements\n                    : sourceWithoutImportStatements.replace(\n                          /\\s+extends\\s+AudioWorkletProcessor\\s*{/,\n                          ` extends (class extends AudioWorkletProcessor {__b=new WeakSet();constructor(){super();(p=>p.postMessage=(q=>(m,t)=>q.call(p,m,t?t.filter(u=>!this.__b.has(u)):t))(p.postMessage))(this.port)}}){`\n                      );\n                /*\n                 * Bug #170: Chrome and Edge do call process() with an array with empty channelData for each input if no input is connected.\n                 *\n                 * Bug #179: Firefox does not allow to transfer any buffer which has been passed to the process() method as an argument.\n                 *\n                 * This is the unminified version of the code used below:\n                 *\n                 * ```js\n                 * `${ importStatements };\n                 * ((registerProcessor) => {${ sourceWithoutImportStatements }\n                 * })((name, processorCtor) => registerProcessor(name, class extends processorCtor {\n                 *\n                 *     __collectBuffers = (array) => {\n                 *         array.forEach((element) => this.__buffers.add(element.buffer));\n                 *     };\n                 *\n                 *     process (inputs, outputs, parameters) {\n                 *         inputs.forEach(this.__collectBuffers);\n                 *         outputs.forEach(this.__collectBuffers);\n                 *         this.__collectBuffers(Object.values(parameters));\n                 *\n                 *         return super.process(\n                 *             (inputs.map((input) => input.some((channelData) => channelData.length === 0)) ? [ ] : input),\n                 *             outputs,\n                 *             parameters\n                 *         );\n                 *     }\n                 *\n                 * }))`\n                 * ```\n                 */\n                const memberDefinition = isSupportingPostMessage ? '' : '__c = (a) => a.forEach(e=>this.__b.add(e.buffer));';\n                const bufferRegistration = isSupportingPostMessage\n                    ? ''\n                    : 'i.forEach(this.__c);o.forEach(this.__c);this.__c(Object.values(p));';\n                const wrappedSource = `${importStatements};(registerProcessor=>{${patchedSourceWithoutImportStatements}\n})((n,p)=>registerProcessor(n,class extends p{${memberDefinition}process(i,o,p){${bufferRegistration}return super.process(i.map(j=>j.some(k=>k.length===0)?[]:j),o,p)}}))`;\n                const blob = new Blob([wrappedSource], { type: 'application/javascript; charset=utf-8' });\n                const url = URL.createObjectURL(blob);\n\n                return nativeContext.audioWorklet\n                    .addModule(url, options)\n                    .then(() => {\n                        if (isNativeOfflineAudioContext(nativeContext)) {\n                            return;\n                        }\n\n                        // Bug #186: Chrome, Edge and Opera do not allow to create an AudioWorkletNode on a closed AudioContext.\n                        const backupOfflineAudioContext = getOrCreateBackupOfflineAudioContext(nativeContext);\n\n                        return backupOfflineAudioContext.audioWorklet.addModule(url, options);\n                    })\n                    .finally(() => URL.revokeObjectURL(url));\n            });\n        }\n\n        const resolvedRequestsOfContext = resolvedRequests.get(context);\n\n        if (resolvedRequestsOfContext !== undefined && resolvedRequestsOfContext.has(moduleURL)) {\n            return Promise.resolve();\n        }\n\n        const ongoingRequestsOfContext = ongoingRequests.get(context);\n\n        if (ongoingRequestsOfContext !== undefined) {\n            const promiseOfOngoingRequest = ongoingRequestsOfContext.get(moduleURL);\n\n            if (promiseOfOngoingRequest !== undefined) {\n                return promiseOfOngoingRequest;\n            }\n        }\n\n        const promise = fetchSource(moduleURL)\n            .then(([source, absoluteUrl]) => {\n                const [importStatements, sourceWithoutImportStatements] = splitImportStatements(source, absoluteUrl);\n\n                /*\n                 * This is the unminified version of the code used below:\n                 *\n                 * ```js\n                 * ${ importStatements };\n                 * ((a, b) => {\n                 *     (a[b] = a[b] || [ ]).push(\n                 *         (AudioWorkletProcessor, global, registerProcessor, sampleRate, self, window) => {\n                 *             ${ sourceWithoutImportStatements }\n                 *         }\n                 *     );\n                 * })(window, '_AWGS');\n                 * ```\n                 */\n                // tslint:disable-next-line:max-line-length\n                const wrappedSource = `${importStatements};((a,b)=>{(a[b]=a[b]||[]).push((AudioWorkletProcessor,global,registerProcessor,sampleRate,self,window)=>{${sourceWithoutImportStatements}\n})})(window,'_AWGS')`;\n\n                // @todo Evaluating the given source code is a possible security problem.\n                return evaluateSource(wrappedSource);\n            })\n            .then(() => {\n                const evaluateAudioWorkletGlobalScope = (<TEvaluateAudioWorkletGlobalScopeFunction[]>(<any>window)._AWGS).pop();\n\n                if (evaluateAudioWorkletGlobalScope === undefined) {\n                    // Bug #182 Chrome, Edge and Opera do throw an instance of a SyntaxError instead of a DOMException.\n                    throw new SyntaxError();\n                }\n\n                exposeCurrentFrameAndCurrentTime(nativeContext.currentTime, nativeContext.sampleRate, () =>\n                    evaluateAudioWorkletGlobalScope(\n                        class AudioWorkletProcessor {},\n                        undefined,\n                        (name, processorCtor) => {\n                            if (name.trim() === '') {\n                                throw createNotSupportedError();\n                            }\n\n                            const nodeNameToProcessorConstructorMap = NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS.get(nativeContext);\n\n                            if (nodeNameToProcessorConstructorMap !== undefined) {\n                                if (nodeNameToProcessorConstructorMap.has(name)) {\n                                    throw createNotSupportedError();\n                                }\n\n                                verifyProcessorCtor(processorCtor);\n                                verifyParameterDescriptors(processorCtor.parameterDescriptors);\n\n                                nodeNameToProcessorConstructorMap.set(name, processorCtor);\n                            } else {\n                                verifyProcessorCtor(processorCtor);\n                                verifyParameterDescriptors(processorCtor.parameterDescriptors);\n\n                                NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS.set(nativeContext, new Map([[name, processorCtor]]));\n                            }\n                        },\n                        nativeContext.sampleRate,\n                        undefined,\n                        undefined\n                    )\n                );\n            });\n\n        if (ongoingRequestsOfContext === undefined) {\n            ongoingRequests.set(context, new Map([[moduleURL, promise]]));\n        } else {\n            ongoingRequestsOfContext.set(moduleURL, promise);\n        }\n\n        promise\n            .then(() => {\n                const rslvdRqstsFCntxt = resolvedRequests.get(context);\n\n                if (rslvdRqstsFCntxt === undefined) {\n                    resolvedRequests.set(context, new Set([moduleURL]));\n                } else {\n                    rslvdRqstsFCntxt.add(moduleURL);\n                }\n            })\n            .finally(() => {\n                const ngngRqstsFCntxt = ongoingRequests.get(context);\n\n                if (ngngRqstsFCntxt !== undefined) {\n                    ngngRqstsFCntxt.delete(moduleURL);\n                }\n            });\n\n        return promise;\n    };\n};\n","import { TGetValueForKeyFunction } from '../types';\n\nexport const getValueForKey: TGetValueForKeyFunction = (map, key) => {\n    const value = map.get(key);\n\n    if (value === undefined) {\n        throw new Error('A value with the given key could not be found.');\n    }\n\n    return value;\n};\n","import { TPickElementFromSetFunction } from '../types';\n\nexport const pickElementFromSet: TPickElementFromSetFunction = (set, predicate) => {\n    const matchingElements = Array.from(set).filter(predicate);\n\n    if (matchingElements.length > 1) {\n        throw Error('More than one element was found.');\n    }\n\n    if (matchingElements.length === 0) {\n        throw Error('No element was found.');\n    }\n\n    const [matchingElement] = matchingElements;\n\n    set.delete(matchingElement);\n\n    return matchingElement;\n};\n","import { IAudioNode } from '../interfaces';\nimport { TContext, TPassiveAudioNodeInputConnection } from '../types';\nimport { getValueForKey } from './get-value-for-key';\nimport { pickElementFromSet } from './pick-element-from-set';\n\nexport const deletePassiveInputConnectionToAudioNode = <T extends TContext>(\n    passiveInputs: WeakMap<IAudioNode<T>, Set<TPassiveAudioNodeInputConnection>>,\n    source: IAudioNode<T>,\n    output: number,\n    input: number\n) => {\n    const passiveInputConnections = getValueForKey(passiveInputs, source);\n    const matchingConnection = pickElementFromSet(\n        passiveInputConnections,\n        (passiveInputConnection) => passiveInputConnection[0] === output && passiveInputConnection[1] === input\n    );\n\n    if (passiveInputConnections.size === 0) {\n        passiveInputs.delete(source);\n    }\n\n    return matchingConnection;\n};\n","import { EVENT_LISTENERS } from '../globals';\nimport { TGetEventListenersOfAudioNodeFunction } from '../types';\nimport { getValueForKey } from './get-value-for-key';\n\nexport const getEventListenersOfAudioNode: TGetEventListenersOfAudioNodeFunction = (audioNode) => {\n    return getValueForKey(EVENT_LISTENERS, audioNode);\n};\n","import { ACTIVE_AUDIO_NODE_STORE } from '../globals';\nimport { IAudioNode } from '../interfaces';\nimport { TContext } from '../types';\nimport { getEventListenersOfAudioNode } from './get-event-listeners-of-audio-node';\n\nexport const setInternalStateToActive = <T extends TContext>(audioNode: IAudioNode<T>) => {\n    if (ACTIVE_AUDIO_NODE_STORE.has(audioNode)) {\n        throw new Error('The AudioNode is already stored.');\n    }\n\n    ACTIVE_AUDIO_NODE_STORE.add(audioNode);\n\n    getEventListenersOfAudioNode(audioNode).forEach((eventListener) => eventListener(true));\n};\n","import { IAudioNode, IAudioWorkletNode } from '../interfaces';\nimport { TContext } from '../types';\n\nexport const isAudioWorkletNode = <T extends TContext>(audioNode: IAudioNode<T>): audioNode is IAudioWorkletNode<T> => {\n    return 'port' in audioNode;\n};\n","import { ACTIVE_AUDIO_NODE_STORE } from '../globals';\nimport { IAudioNode } from '../interfaces';\nimport { TContext } from '../types';\nimport { getEventListenersOfAudioNode } from './get-event-listeners-of-audio-node';\n\nexport const setInternalStateToPassive = <T extends TContext>(audioNode: IAudioNode<T>) => {\n    if (!ACTIVE_AUDIO_NODE_STORE.has(audioNode)) {\n        throw new Error('The AudioNode is not stored.');\n    }\n\n    ACTIVE_AUDIO_NODE_STORE.delete(audioNode);\n\n    getEventListenersOfAudioNode(audioNode).forEach((eventListener) => eventListener(false));\n};\n","import { isAudioWorkletNode } from '../guards/audio-worklet-node';\nimport { IAudioNode } from '../interfaces';\nimport { TActiveInputConnection, TContext } from '../types';\nimport { setInternalStateToPassive } from './set-internal-state-to-passive';\n\n// Set the internalState of the audioNode to 'passive' if it is not an AudioWorkletNode and if it has no 'active' input connections.\nexport const setInternalStateToPassiveWhenNecessary = <T extends TContext>(\n    audioNode: IAudioNode<T>,\n    activeInputs: Set<TActiveInputConnection<T>>[]\n) => {\n    if (!isAudioWorkletNode(audioNode) && activeInputs.every((connections) => connections.size === 0)) {\n        setInternalStateToPassive(audioNode);\n    }\n};\n","import { deletePassiveInputConnectionToAudioNode } from '../helpers/delete-passive-input-connection-to-audio-node';\nimport { setInternalStateToActive } from '../helpers/set-internal-state-to-active';\nimport { setInternalStateToPassiveWhenNecessary } from '../helpers/set-internal-state-to-passive-when-necessary';\nimport { IAudioNode } from '../interfaces';\nimport { TAddConnectionToAudioNodeFactory, TContext, TInternalStateEventListener } from '../types';\n\nexport const createAddConnectionToAudioNode: TAddConnectionToAudioNodeFactory = (\n    addActiveInputConnectionToAudioNode,\n    addPassiveInputConnectionToAudioNode,\n    connectNativeAudioNodeToNativeAudioNode,\n    deleteActiveInputConnectionToAudioNode,\n    disconnectNativeAudioNodeFromNativeAudioNode,\n    getAudioNodeConnections,\n    getAudioNodeTailTime,\n    getEventListenersOfAudioNode,\n    getNativeAudioNode,\n    insertElementInSet,\n    isActiveAudioNode,\n    isPartOfACycle,\n    isPassiveAudioNode\n) => {\n    const tailTimeTimeoutIds = new WeakMap<IAudioNode<TContext>, number>();\n\n    return (source, destination, output, input, isOffline) => {\n        const { activeInputs, passiveInputs } = getAudioNodeConnections(destination);\n        const { outputs } = getAudioNodeConnections(source);\n        const eventListeners = getEventListenersOfAudioNode(source);\n\n        const eventListener: TInternalStateEventListener = (isActive) => {\n            const nativeDestinationAudioNode = getNativeAudioNode(destination);\n            const nativeSourceAudioNode = getNativeAudioNode(source);\n\n            if (isActive) {\n                const partialConnection = deletePassiveInputConnectionToAudioNode(passiveInputs, source, output, input);\n\n                addActiveInputConnectionToAudioNode(activeInputs, source, partialConnection, false);\n\n                if (!isOffline && !isPartOfACycle(source)) {\n                    connectNativeAudioNodeToNativeAudioNode(nativeSourceAudioNode, nativeDestinationAudioNode, output, input);\n                }\n\n                if (isPassiveAudioNode(destination)) {\n                    setInternalStateToActive(destination);\n                }\n            } else {\n                const partialConnection = deleteActiveInputConnectionToAudioNode(activeInputs, source, output, input);\n\n                addPassiveInputConnectionToAudioNode(passiveInputs, input, partialConnection, false);\n\n                if (!isOffline && !isPartOfACycle(source)) {\n                    disconnectNativeAudioNodeFromNativeAudioNode(nativeSourceAudioNode, nativeDestinationAudioNode, output, input);\n                }\n\n                const tailTime = getAudioNodeTailTime(destination);\n\n                if (tailTime === 0) {\n                    if (isActiveAudioNode(destination)) {\n                        setInternalStateToPassiveWhenNecessary(destination, activeInputs);\n                    }\n                } else {\n                    const tailTimeTimeoutId = tailTimeTimeoutIds.get(destination);\n\n                    if (tailTimeTimeoutId !== undefined) {\n                        clearTimeout(tailTimeTimeoutId);\n                    }\n\n                    tailTimeTimeoutIds.set(\n                        destination,\n                        setTimeout(() => {\n                            if (isActiveAudioNode(destination)) {\n                                setInternalStateToPassiveWhenNecessary(destination, activeInputs);\n                            }\n                        }, tailTime * 1000)\n                    );\n                }\n            }\n        };\n\n        if (\n            insertElementInSet(\n                outputs,\n                [destination, output, input],\n                (outputConnection) =>\n                    outputConnection[0] === destination && outputConnection[1] === output && outputConnection[2] === input,\n                true\n            )\n        ) {\n            eventListeners.add(eventListener);\n\n            if (isActiveAudioNode(source)) {\n                addActiveInputConnectionToAudioNode(activeInputs, source, [output, input, eventListener], true);\n            } else {\n                addPassiveInputConnectionToAudioNode(passiveInputs, input, [source, output, eventListener], true);\n            }\n\n            return true;\n        }\n\n        return false;\n    };\n};\n","import { TAddPassiveInputConnectionToAudioNodeFactory } from '../types';\n\nexport const createAddPassiveInputConnectionToAudioNode: TAddPassiveInputConnectionToAudioNodeFactory = (insertElementInSet) => {\n    return (passiveInputs, input, [source, output, eventListener], ignoreDuplicates) => {\n        const passiveInputConnections = passiveInputs.get(source);\n\n        if (passiveInputConnections === undefined) {\n            passiveInputs.set(source, new Set([[output, input, eventListener]]));\n        } else {\n            insertElementInSet(\n                passiveInputConnections,\n                [output, input, eventListener],\n                (passiveInputConnection) => passiveInputConnection[0] === output && passiveInputConnection[1] === input,\n                ignoreDuplicates\n            );\n        }\n    };\n};\n","import { TAddSilentConnectionFactory } from '../types';\n\nexport const createAddSilentConnection: TAddSilentConnectionFactory = (createNativeGainNode) => {\n    return (nativeContext, nativeAudioScheduledSourceNode) => {\n        const nativeGainNode = createNativeGainNode(nativeContext, {\n            channelCount: 1,\n            channelCountMode: 'explicit',\n            channelInterpretation: 'discrete',\n            gain: 0\n        });\n\n        nativeAudioScheduledSourceNode.connect(nativeGainNode).connect(nativeContext.destination);\n\n        const disconnect = () => {\n            nativeAudioScheduledSourceNode.removeEventListener('ended', disconnect);\n            nativeAudioScheduledSourceNode.disconnect(nativeGainNode);\n            nativeGainNode.disconnect();\n        };\n\n        nativeAudioScheduledSourceNode.addEventListener('ended', disconnect);\n    };\n};\n","import { TAddUnrenderedAudioWorkletNodeFactory } from '../types';\n\nexport const createAddUnrenderedAudioWorkletNode: TAddUnrenderedAudioWorkletNodeFactory = (getUnrenderedAudioWorkletNodes) => {\n    return (nativeContext, audioWorkletNode) => {\n        getUnrenderedAudioWorkletNodes(nativeContext).add(audioWorkletNode);\n    };\n};\n","import { IAnalyserNode, IAnalyserOptions } from '../interfaces';\nimport { TAnalyserNodeConstructorFactory, TAudioNodeRenderer, TContext, TNativeAnalyserNode } from '../types';\n\nconst DEFAULT_OPTIONS = {\n    channelCount: 2,\n    channelCountMode: 'max',\n    channelInterpretation: 'speakers',\n    fftSize: 2048,\n    maxDecibels: -30,\n    minDecibels: -100,\n    smoothingTimeConstant: 0.8\n} as const;\n\nexport const createAnalyserNodeConstructor: TAnalyserNodeConstructorFactory = (\n    audionNodeConstructor,\n    createAnalyserNodeRenderer,\n    createIndexSizeError,\n    createNativeAnalyserNode,\n    getNativeContext,\n    isNativeOfflineAudioContext\n) => {\n    return class AnalyserNode<T extends TContext> extends audionNodeConstructor<T> implements IAnalyserNode<T> {\n        private _nativeAnalyserNode: TNativeAnalyserNode;\n\n        constructor(context: T, options?: Partial<IAnalyserOptions>) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeAnalyserNode = createNativeAnalyserNode(nativeContext, mergedOptions);\n            const analyserNodeRenderer = <TAudioNodeRenderer<T, this>>(\n                (isNativeOfflineAudioContext(nativeContext) ? createAnalyserNodeRenderer() : null)\n            );\n\n            super(context, false, nativeAnalyserNode, analyserNodeRenderer);\n\n            this._nativeAnalyserNode = nativeAnalyserNode;\n        }\n\n        get fftSize(): number {\n            return this._nativeAnalyserNode.fftSize;\n        }\n\n        set fftSize(value) {\n            this._nativeAnalyserNode.fftSize = value;\n        }\n\n        get frequencyBinCount(): number {\n            return this._nativeAnalyserNode.frequencyBinCount;\n        }\n\n        get maxDecibels(): number {\n            return this._nativeAnalyserNode.maxDecibels;\n        }\n\n        set maxDecibels(value) {\n            // Bug #118: Safari does not throw an error if maxDecibels is not more than minDecibels.\n            const maxDecibels = this._nativeAnalyserNode.maxDecibels;\n\n            this._nativeAnalyserNode.maxDecibels = value;\n\n            if (!(value > this._nativeAnalyserNode.minDecibels)) {\n                this._nativeAnalyserNode.maxDecibels = maxDecibels;\n\n                throw createIndexSizeError();\n            }\n        }\n\n        get minDecibels(): number {\n            return this._nativeAnalyserNode.minDecibels;\n        }\n\n        set minDecibels(value) {\n            // Bug #118: Safari does not throw an error if maxDecibels is not more than minDecibels.\n            const minDecibels = this._nativeAnalyserNode.minDecibels;\n\n            this._nativeAnalyserNode.minDecibels = value;\n\n            if (!(this._nativeAnalyserNode.maxDecibels > value)) {\n                this._nativeAnalyserNode.minDecibels = minDecibels;\n\n                throw createIndexSizeError();\n            }\n        }\n\n        get smoothingTimeConstant(): number {\n            return this._nativeAnalyserNode.smoothingTimeConstant;\n        }\n\n        set smoothingTimeConstant(value) {\n            this._nativeAnalyserNode.smoothingTimeConstant = value;\n        }\n\n        public getByteFrequencyData(array: Uint8Array): void {\n            this._nativeAnalyserNode.getByteFrequencyData(array);\n        }\n\n        public getByteTimeDomainData(array: Uint8Array): void {\n            this._nativeAnalyserNode.getByteTimeDomainData(array);\n        }\n\n        public getFloatFrequencyData(array: Float32Array): void {\n            this._nativeAnalyserNode.getFloatFrequencyData(array);\n        }\n\n        public getFloatTimeDomainData(array: Float32Array): void {\n            this._nativeAnalyserNode.getFloatTimeDomainData(array);\n        }\n    };\n};\n","import { TNativeAudioNode, TNativeContext } from '../types';\n\nexport const isOwnedByContext = (nativeAudioNode: TNativeAudioNode, nativeContext: TNativeContext): boolean => {\n    return nativeAudioNode.context === nativeContext;\n};\n","import { isOwnedByContext } from '../helpers/is-owned-by-context';\nimport { IAnalyserNode, IAudioNode, IMinimalOfflineAudioContext, IOfflineAudioContext } from '../interfaces';\nimport { TAnalyserNodeRendererFactoryFactory, TNativeAnalyserNode, TNativeOfflineAudioContext } from '../types';\n\nexport const createAnalyserNodeRendererFactory: TAnalyserNodeRendererFactoryFactory = (\n    createNativeAnalyserNode,\n    getNativeAudioNode,\n    renderInputsOfAudioNode\n) => {\n    return <T extends IMinimalOfflineAudioContext | IOfflineAudioContext>() => {\n        const renderedNativeAnalyserNodes = new WeakMap<TNativeOfflineAudioContext, TNativeAnalyserNode>();\n\n        const createAnalyserNode = async (\n            proxy: IAnalyserNode<T>,\n            nativeOfflineAudioContext: TNativeOfflineAudioContext,\n            trace: readonly IAudioNode<T>[]\n        ) => {\n            let nativeAnalyserNode = getNativeAudioNode<T, TNativeAnalyserNode>(proxy);\n\n            // If the initially used nativeAnalyserNode was not constructed on the same OfflineAudioContext it needs to be created again.\n            const nativeAnalyserNodeIsOwnedByContext = isOwnedByContext(nativeAnalyserNode, nativeOfflineAudioContext);\n\n            if (!nativeAnalyserNodeIsOwnedByContext) {\n                const options = {\n                    channelCount: nativeAnalyserNode.channelCount,\n                    channelCountMode: nativeAnalyserNode.channelCountMode,\n                    channelInterpretation: nativeAnalyserNode.channelInterpretation,\n                    fftSize: nativeAnalyserNode.fftSize,\n                    maxDecibels: nativeAnalyserNode.maxDecibels,\n                    minDecibels: nativeAnalyserNode.minDecibels,\n                    smoothingTimeConstant: nativeAnalyserNode.smoothingTimeConstant\n                };\n\n                nativeAnalyserNode = createNativeAnalyserNode(nativeOfflineAudioContext, options);\n            }\n\n            renderedNativeAnalyserNodes.set(nativeOfflineAudioContext, nativeAnalyserNode);\n\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeAnalyserNode, trace);\n\n            return nativeAnalyserNode;\n        };\n\n        return {\n            render(\n                proxy: IAnalyserNode<T>,\n                nativeOfflineAudioContext: TNativeOfflineAudioContext,\n                trace: readonly IAudioNode<T>[]\n            ): Promise<TNativeAnalyserNode> {\n                const renderedNativeAnalyserNode = renderedNativeAnalyserNodes.get(nativeOfflineAudioContext);\n\n                if (renderedNativeAnalyserNode !== undefined) {\n                    return Promise.resolve(renderedNativeAnalyserNode);\n                }\n\n                return createAnalyserNode(proxy, nativeOfflineAudioContext, trace);\n            }\n        };\n    };\n};\n","import { TNativeAudioBuffer } from '../types';\n\nexport const testAudioBufferCopyChannelMethodsOutOfBoundsSupport = (nativeAudioBuffer: TNativeAudioBuffer): boolean => {\n    try {\n        nativeAudioBuffer.copyToChannel(new Float32Array(1), 0, -1);\n    } catch {\n        return false;\n    }\n\n    return true;\n};\n","import { TIndexSizeErrorFactory } from '../types';\n\nexport const createIndexSizeError: TIndexSizeErrorFactory = () => new DOMException('', 'IndexSizeError');\n","import { createIndexSizeError } from '../factories/index-size-error';\nimport { TNativeAudioBuffer } from '../types';\n\nexport const wrapAudioBufferGetChannelDataMethod = (audioBuffer: TNativeAudioBuffer): void => {\n    audioBuffer.getChannelData = ((getChannelData) => {\n        return (channel: number) => {\n            try {\n                return getChannelData.call(audioBuffer, channel);\n            } catch (err) {\n                if (err.code === 12) {\n                    throw createIndexSizeError();\n                }\n\n                throw err;\n            }\n        };\n    })(audioBuffer.getChannelData);\n};\n","import { testAudioBufferCopyChannelMethodsOutOfBoundsSupport } from '../helpers/test-audio-buffer-copy-channel-methods-out-of-bounds-support';\nimport { wrapAudioBufferGetChannelDataMethod } from '../helpers/wrap-audio-buffer-get-channel-data-method';\nimport { IAudioBuffer, IAudioBufferOptions } from '../interfaces';\nimport { TAudioBufferConstructorFactory, TNativeOfflineAudioContext } from '../types';\n\nconst DEFAULT_OPTIONS = {\n    numberOfChannels: 1\n} as const;\n\nexport const createAudioBufferConstructor: TAudioBufferConstructorFactory = (\n    audioBufferStore,\n    cacheTestResult,\n    createNotSupportedError,\n    nativeAudioBufferConstructor,\n    nativeOfflineAudioContextConstructor,\n    testNativeAudioBufferConstructorSupport,\n    wrapAudioBufferCopyChannelMethods,\n    wrapAudioBufferCopyChannelMethodsOutOfBounds\n) => {\n    let nativeOfflineAudioContext: null | TNativeOfflineAudioContext = null;\n\n    return class AudioBuffer implements IAudioBuffer {\n        // This field needs to be defined to convince TypeScript that the IAudioBuffer will be implemented.\n        public copyFromChannel!: (destination: Float32Array, channelNumber: number, bufferOffset?: number) => void;\n\n        // This field needs to be defined to convince TypeScript that the IAudioBuffer will be implemented.\n        public copyToChannel!: (source: Float32Array, channelNumber: number, bufferOffset?: number) => void;\n\n        // This field needs to be defined to convince TypeScript that the IAudioBuffer will be implemented.\n        public duration!: number;\n\n        // This field needs to be defined to convince TypeScript that the IAudioBuffer will be implemented.\n        public getChannelData!: (channel: number) => Float32Array;\n\n        // This field needs to be defined to convince TypeScript that the IAudioBuffer will be implemented.\n        public length!: number;\n\n        // This field needs to be defined to convince TypeScript that the IAudioBuffer will be implemented.\n        public numberOfChannels!: number;\n\n        // This field needs to be defined to convince TypeScript that the IAudioBuffer will be implemented.\n        public sampleRate!: number;\n\n        constructor(options: IAudioBufferOptions) {\n            if (nativeOfflineAudioContextConstructor === null) {\n                throw new Error('Missing the native OfflineAudioContext constructor.');\n            }\n\n            const { length, numberOfChannels, sampleRate } = { ...DEFAULT_OPTIONS, ...options };\n\n            if (nativeOfflineAudioContext === null) {\n                nativeOfflineAudioContext = new nativeOfflineAudioContextConstructor(1, 1, 44100);\n            }\n\n            /*\n             * Bug #99: Firefox does not throw a NotSupportedError when the numberOfChannels is zero. But it only does it when using the\n             * factory function. But since Firefox also supports the constructor everything should be fine.\n             */\n            const audioBuffer =\n                nativeAudioBufferConstructor !== null &&\n                cacheTestResult(testNativeAudioBufferConstructorSupport, testNativeAudioBufferConstructorSupport)\n                    ? new nativeAudioBufferConstructor({ length, numberOfChannels, sampleRate })\n                    : nativeOfflineAudioContext.createBuffer(numberOfChannels, length, sampleRate);\n\n            // Bug #99: Safari does not throw an error when the numberOfChannels is zero.\n            if (audioBuffer.numberOfChannels === 0) {\n                throw createNotSupportedError();\n            }\n\n            // Bug #5: Safari does not support copyFromChannel() and copyToChannel().\n            // Bug #100: Safari does throw a wrong error when calling getChannelData() with an out-of-bounds value.\n            if (typeof audioBuffer.copyFromChannel !== 'function') {\n                wrapAudioBufferCopyChannelMethods(audioBuffer);\n                wrapAudioBufferGetChannelDataMethod(audioBuffer);\n                // Bug #157: Firefox does not allow the bufferOffset to be out-of-bounds.\n            } else if (\n                !cacheTestResult(testAudioBufferCopyChannelMethodsOutOfBoundsSupport, () =>\n                    testAudioBufferCopyChannelMethodsOutOfBoundsSupport(audioBuffer)\n                )\n            ) {\n                wrapAudioBufferCopyChannelMethodsOutOfBounds(audioBuffer);\n            }\n\n            audioBufferStore.add(audioBuffer);\n\n            /*\n             * This does violate all good pratices but it is necessary to allow this AudioBuffer to be used with native\n             * (Offline)AudioContexts.\n             */\n            return audioBuffer;\n        }\n\n        public static [Symbol.hasInstance](instance: unknown): boolean {\n            return (\n                (instance !== null && typeof instance === 'object' && Object.getPrototypeOf(instance) === AudioBuffer.prototype) ||\n                audioBufferStore.has(<any>instance)\n            );\n        }\n    };\n};\n","export const MOST_NEGATIVE_SINGLE_FLOAT = -3.4028234663852886e38;\n\nexport const MOST_POSITIVE_SINGLE_FLOAT = -MOST_NEGATIVE_SINGLE_FLOAT;\n","import { ACTIVE_AUDIO_NODE_STORE } from '../globals';\nimport { TIsActiveAudioNodeFunction } from '../types';\n\nexport const isActiveAudioNode: TIsActiveAudioNodeFunction = (audioNode) => ACTIVE_AUDIO_NODE_STORE.has(audioNode);\n","import { MOST_NEGATIVE_SINGLE_FLOAT, MOST_POSITIVE_SINGLE_FLOAT } from '../constants';\nimport { isActiveAudioNode } from '../helpers/is-active-audio-node';\nimport { setInternalStateToActive } from '../helpers/set-internal-state-to-active';\nimport { setInternalStateToPassive } from '../helpers/set-internal-state-to-passive';\nimport { IAudioBufferSourceNode, IAudioBufferSourceOptions, IAudioParam } from '../interfaces';\nimport {\n    TAnyAudioBuffer,\n    TAudioBufferSourceNodeConstructorFactory,\n    TAudioBufferSourceNodeRenderer,\n    TContext,\n    TEventHandler,\n    TNativeAudioBufferSourceNode\n} from '../types';\n\nconst DEFAULT_OPTIONS = {\n    buffer: null,\n    channelCount: 2,\n    channelCountMode: 'max',\n    channelInterpretation: 'speakers',\n    // Bug #149: Safari does not yet support the detune AudioParam.\n    loop: false,\n    loopEnd: 0,\n    loopStart: 0,\n    playbackRate: 1\n} as const;\n\nexport const createAudioBufferSourceNodeConstructor: TAudioBufferSourceNodeConstructorFactory = (\n    audioNodeConstructor,\n    createAudioBufferSourceNodeRenderer,\n    createAudioParam,\n    createInvalidStateError,\n    createNativeAudioBufferSourceNode,\n    getNativeContext,\n    isNativeOfflineAudioContext,\n    wrapEventListener\n) => {\n    return class AudioBufferSourceNode<T extends TContext> extends audioNodeConstructor<T> implements IAudioBufferSourceNode<T> {\n        private _audioBufferSourceNodeRenderer: TAudioBufferSourceNodeRenderer<T>;\n\n        private _isBufferNullified: boolean;\n\n        private _isBufferSet: boolean;\n\n        private _nativeAudioBufferSourceNode: TNativeAudioBufferSourceNode;\n\n        private _onended: null | TEventHandler<this>;\n\n        private _playbackRate: IAudioParam;\n\n        constructor(context: T, options?: Partial<IAudioBufferSourceOptions>) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeAudioBufferSourceNode = createNativeAudioBufferSourceNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const audioBufferSourceNodeRenderer = <TAudioBufferSourceNodeRenderer<T>>(\n                (isOffline ? createAudioBufferSourceNodeRenderer() : null)\n            );\n\n            super(context, false, nativeAudioBufferSourceNode, audioBufferSourceNodeRenderer);\n\n            this._audioBufferSourceNodeRenderer = audioBufferSourceNodeRenderer;\n            this._isBufferNullified = false;\n            this._isBufferSet = mergedOptions.buffer !== null;\n            this._nativeAudioBufferSourceNode = nativeAudioBufferSourceNode;\n            this._onended = null;\n            // Bug #73: Safari does not export the correct values for maxValue and minValue.\n            this._playbackRate = createAudioParam(\n                this,\n                isOffline,\n                nativeAudioBufferSourceNode.playbackRate,\n                MOST_POSITIVE_SINGLE_FLOAT,\n                MOST_NEGATIVE_SINGLE_FLOAT\n            );\n        }\n\n        get buffer(): null | TAnyAudioBuffer {\n            if (this._isBufferNullified) {\n                return null;\n            }\n\n            return this._nativeAudioBufferSourceNode.buffer;\n        }\n\n        set buffer(value) {\n            this._nativeAudioBufferSourceNode.buffer = value;\n\n            // Bug #72: Only Chrome, Edge & Opera do not allow to reassign the buffer yet.\n            if (value !== null) {\n                if (this._isBufferSet) {\n                    throw createInvalidStateError();\n                }\n\n                this._isBufferSet = true;\n            }\n        }\n\n        get loop(): boolean {\n            return this._nativeAudioBufferSourceNode.loop;\n        }\n\n        set loop(value) {\n            this._nativeAudioBufferSourceNode.loop = value;\n        }\n\n        get loopEnd(): number {\n            return this._nativeAudioBufferSourceNode.loopEnd;\n        }\n\n        set loopEnd(value) {\n            this._nativeAudioBufferSourceNode.loopEnd = value;\n        }\n\n        get loopStart(): number {\n            return this._nativeAudioBufferSourceNode.loopStart;\n        }\n\n        set loopStart(value) {\n            this._nativeAudioBufferSourceNode.loopStart = value;\n        }\n\n        get onended(): null | TEventHandler<this> {\n            return this._onended;\n        }\n\n        set onended(value) {\n            const wrappedListener = typeof value === 'function' ? wrapEventListener(this, value) : null;\n\n            this._nativeAudioBufferSourceNode.onended = wrappedListener;\n\n            const nativeOnEnded = this._nativeAudioBufferSourceNode.onended;\n\n            this._onended = nativeOnEnded !== null && nativeOnEnded === wrappedListener ? value : <null | TEventHandler<this>>nativeOnEnded;\n        }\n\n        get playbackRate(): IAudioParam {\n            return this._playbackRate;\n        }\n\n        public start(when = 0, offset = 0, duration?: number): void {\n            this._nativeAudioBufferSourceNode.start(when, offset, duration);\n\n            if (this._audioBufferSourceNodeRenderer !== null) {\n                this._audioBufferSourceNodeRenderer.start = duration === undefined ? [when, offset] : [when, offset, duration];\n            }\n\n            if (this.context.state !== 'closed') {\n                setInternalStateToActive(this);\n\n                const resetInternalStateToPassive = () => {\n                    this._nativeAudioBufferSourceNode.removeEventListener('ended', resetInternalStateToPassive);\n\n                    if (isActiveAudioNode(this)) {\n                        setInternalStateToPassive(this);\n                    }\n                };\n\n                this._nativeAudioBufferSourceNode.addEventListener('ended', resetInternalStateToPassive);\n            }\n        }\n\n        public stop(when = 0): void {\n            this._nativeAudioBufferSourceNode.stop(when);\n\n            if (this._audioBufferSourceNodeRenderer !== null) {\n                this._audioBufferSourceNodeRenderer.stop = when;\n            }\n        }\n    };\n};\n","import { isOwnedByContext } from '../helpers/is-owned-by-context';\nimport { IAudioBufferSourceNode, IAudioNode, IMinimalOfflineAudioContext, IOfflineAudioContext } from '../interfaces';\nimport { TAudioBufferSourceNodeRendererFactoryFactory, TNativeAudioBufferSourceNode, TNativeOfflineAudioContext } from '../types';\n\nexport const createAudioBufferSourceNodeRendererFactory: TAudioBufferSourceNodeRendererFactoryFactory = (\n    connectAudioParam,\n    createNativeAudioBufferSourceNode,\n    getNativeAudioNode,\n    renderAutomation,\n    renderInputsOfAudioNode\n) => {\n    return <T extends IMinimalOfflineAudioContext | IOfflineAudioContext>() => {\n        const renderedNativeAudioBufferSourceNodes = new WeakMap<TNativeOfflineAudioContext, TNativeAudioBufferSourceNode>();\n\n        let start: null | [number, number] | [number, number, number] = null;\n        let stop: null | number = null;\n\n        const createAudioBufferSourceNode = async (\n            proxy: IAudioBufferSourceNode<T>,\n            nativeOfflineAudioContext: TNativeOfflineAudioContext,\n            trace: readonly IAudioNode<T>[]\n        ) => {\n            let nativeAudioBufferSourceNode = getNativeAudioNode<T, TNativeAudioBufferSourceNode>(proxy);\n\n            /*\n             * If the initially used nativeAudioBufferSourceNode was not constructed on the same OfflineAudioContext it needs to be created\n             * again.\n             */\n            const nativeAudioBufferSourceNodeIsOwnedByContext = isOwnedByContext(nativeAudioBufferSourceNode, nativeOfflineAudioContext);\n\n            if (!nativeAudioBufferSourceNodeIsOwnedByContext) {\n                const options = {\n                    buffer: nativeAudioBufferSourceNode.buffer,\n                    channelCount: nativeAudioBufferSourceNode.channelCount,\n                    channelCountMode: nativeAudioBufferSourceNode.channelCountMode,\n                    channelInterpretation: nativeAudioBufferSourceNode.channelInterpretation,\n                    // Bug #149: Safari does not yet support the detune AudioParam.\n                    loop: nativeAudioBufferSourceNode.loop,\n                    loopEnd: nativeAudioBufferSourceNode.loopEnd,\n                    loopStart: nativeAudioBufferSourceNode.loopStart,\n                    playbackRate: nativeAudioBufferSourceNode.playbackRate.value\n                };\n\n                nativeAudioBufferSourceNode = createNativeAudioBufferSourceNode(nativeOfflineAudioContext, options);\n\n                if (start !== null) {\n                    nativeAudioBufferSourceNode.start(...start);\n                }\n\n                if (stop !== null) {\n                    nativeAudioBufferSourceNode.stop(stop);\n                }\n            }\n\n            renderedNativeAudioBufferSourceNodes.set(nativeOfflineAudioContext, nativeAudioBufferSourceNode);\n\n            if (!nativeAudioBufferSourceNodeIsOwnedByContext) {\n                // Bug #149: Safari does not yet support the detune AudioParam.\n                await renderAutomation(nativeOfflineAudioContext, proxy.playbackRate, nativeAudioBufferSourceNode.playbackRate, trace);\n            } else {\n                // Bug #149: Safari does not yet support the detune AudioParam.\n                await connectAudioParam(nativeOfflineAudioContext, proxy.playbackRate, nativeAudioBufferSourceNode.playbackRate, trace);\n            }\n\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeAudioBufferSourceNode, trace);\n\n            return nativeAudioBufferSourceNode;\n        };\n\n        return {\n            set start(value: [number, number] | [number, number, number]) {\n                start = value;\n            },\n            set stop(value: number) {\n                stop = value;\n            },\n            render(\n                proxy: IAudioBufferSourceNode<T>,\n                nativeOfflineAudioContext: TNativeOfflineAudioContext,\n                trace: readonly IAudioNode<T>[]\n            ): Promise<TNativeAudioBufferSourceNode> {\n                const renderedNativeAudioBufferSourceNode = renderedNativeAudioBufferSourceNodes.get(nativeOfflineAudioContext);\n\n                if (renderedNativeAudioBufferSourceNode !== undefined) {\n                    return Promise.resolve(renderedNativeAudioBufferSourceNode);\n                }\n\n                return createAudioBufferSourceNode(proxy, nativeOfflineAudioContext, trace);\n            }\n        };\n    };\n};\n","import { IAudioBufferSourceNode, IAudioNode } from '../interfaces';\nimport { TContext } from '../types';\n\nexport const isAudioBufferSourceNode = <T extends TContext>(audioNode: IAudioNode<T>): audioNode is IAudioBufferSourceNode<T> => {\n    return 'playbackRate' in audioNode;\n};\n","import { IAudioNode, IBiquadFilterNode } from '../interfaces';\nimport { TContext } from '../types';\n\nexport const isBiquadFilterNode = <T extends TContext>(audioNode: IAudioNode<T>): audioNode is IBiquadFilterNode<T> => {\n    return 'frequency' in audioNode && 'gain' in audioNode;\n};\n","import { IAudioNode, IConstantSourceNode } from '../interfaces';\nimport { TContext } from '../types';\n\nexport const isConstantSourceNode = <T extends TContext>(audioNode: IAudioNode<T>): audioNode is IConstantSourceNode<T> => {\n    return 'offset' in audioNode;\n};\n","import { IAudioNode, IGainNode } from '../interfaces';\nimport { TContext } from '../types';\n\nexport const isGainNode = <T extends TContext>(audioNode: IAudioNode<T>): audioNode is IGainNode<T> => {\n    return !('frequency' in audioNode) && 'gain' in audioNode;\n};\n","import { IAudioNode, IOscillatorNode } from '../interfaces';\nimport { TContext } from '../types';\n\nexport const isOscillatorNode = <T extends TContext>(audioNode: IAudioNode<T>): audioNode is IOscillatorNode<T> => {\n    return 'detune' in audioNode && 'frequency' in audioNode;\n};\n","import { IAudioNode, IStereoPannerNode } from '../interfaces';\nimport { TContext } from '../types';\n\nexport const isStereoPannerNode = <T extends TContext>(audioNode: IAudioNode<T>): audioNode is IStereoPannerNode<T> => {\n    return 'pan' in audioNode;\n};\n","import { AUDIO_NODE_CONNECTIONS_STORE } from '../globals';\nimport { IAudioNode } from '../interfaces';\nimport { TAudioNodeConnections, TContext, TGetAudioNodeConnectionsFunction } from '../types';\nimport { getValueForKey } from './get-value-for-key';\n\nexport const getAudioNodeConnections: TGetAudioNodeConnectionsFunction = <T extends TContext>(\n    audioNode: IAudioNode<T>\n): TAudioNodeConnections<T> => {\n    return <TAudioNodeConnections<T>>getValueForKey(AUDIO_NODE_CONNECTIONS_STORE, audioNode);\n};\n","import { AUDIO_PARAM_CONNECTIONS_STORE } from '../globals';\nimport { IAudioParam } from '../interfaces';\nimport { TAudioParamConnections, TContext, TGetAudioParamConnectionsFunction } from '../types';\nimport { getValueForKey } from './get-value-for-key';\n\nexport const getAudioParamConnections: TGetAudioParamConnectionsFunction = <T extends TContext>(\n    audioParam: IAudioParam\n): TAudioParamConnections<T> => {\n    return <TAudioParamConnections<T>>getValueForKey(AUDIO_PARAM_CONNECTIONS_STORE, audioParam);\n};\n","import { isAudioBufferSourceNode } from '../guards/audio-buffer-source-node';\nimport { isAudioWorkletNode } from '../guards/audio-worklet-node';\nimport { isBiquadFilterNode } from '../guards/biquad-filter-node';\nimport { isConstantSourceNode } from '../guards/constant-source-node';\nimport { isGainNode } from '../guards/gain-node';\nimport { isOscillatorNode } from '../guards/oscillator-node';\nimport { isStereoPannerNode } from '../guards/stereo-panner-node';\nimport { IAudioNode } from '../interfaces';\nimport { TContext } from '../types';\nimport { getAudioNodeConnections } from './get-audio-node-connections';\nimport { getAudioParamConnections } from './get-audio-param-connections';\nimport { isActiveAudioNode } from './is-active-audio-node';\nimport { setInternalStateToPassive } from './set-internal-state-to-passive';\n\nexport const deactivateActiveAudioNodeInputConnections = <T extends TContext>(\n    audioNode: IAudioNode<T>,\n    trace: readonly IAudioNode<T>[]\n) => {\n    const { activeInputs } = getAudioNodeConnections(audioNode);\n\n    activeInputs.forEach((connections) =>\n        connections.forEach(([source]) => {\n            if (!trace.includes(audioNode)) {\n                deactivateActiveAudioNodeInputConnections(source, [...trace, audioNode]);\n            }\n        })\n    );\n\n    const audioParams = isAudioBufferSourceNode(audioNode)\n        ? [\n              // Bug #149: Safari does not yet support the detune AudioParam.\n              audioNode.playbackRate\n          ]\n        : isAudioWorkletNode(audioNode)\n        ? Array.from(audioNode.parameters.values())\n        : isBiquadFilterNode(audioNode)\n        ? [audioNode.Q, audioNode.detune, audioNode.frequency, audioNode.gain]\n        : isConstantSourceNode(audioNode)\n        ? [audioNode.offset]\n        : isGainNode(audioNode)\n        ? [audioNode.gain]\n        : isOscillatorNode(audioNode)\n        ? [audioNode.detune, audioNode.frequency]\n        : isStereoPannerNode(audioNode)\n        ? [audioNode.pan]\n        : [];\n\n    for (const audioParam of audioParams) {\n        const audioParamConnections = getAudioParamConnections<T>(audioParam);\n\n        if (audioParamConnections !== undefined) {\n            audioParamConnections.activeInputs.forEach(([source]) => deactivateActiveAudioNodeInputConnections(source, trace));\n        }\n    }\n\n    if (isActiveAudioNode(audioNode)) {\n        setInternalStateToPassive(audioNode);\n    }\n};\n","import { IAudioDestinationNode } from '../interfaces';\nimport { TContext } from '../types';\nimport { deactivateActiveAudioNodeInputConnections } from './deactivate-active-audio-node-input-connections';\n\nexport const deactivateAudioGraph = <T extends TContext>(context: T): void => {\n    deactivateActiveAudioNodeInputConnections(<IAudioDestinationNode<T>>context.destination, []);\n};\n","import { IAudioContextOptions } from '../interfaces';\n\nexport const isValidLatencyHint = (latencyHint: IAudioContextOptions['latencyHint']) => {\n    return (\n        latencyHint === undefined ||\n        typeof latencyHint === 'number' ||\n        (typeof latencyHint === 'string' && (latencyHint === 'balanced' || latencyHint === 'interactive' || latencyHint === 'playback'))\n    );\n};\n","import { deactivateAudioGraph } from '../helpers/deactivate-audio-graph';\nimport { isValidLatencyHint } from '../helpers/is-valid-latency-hint';\nimport {\n    IAudioContext,\n    IAudioContextOptions,\n    IMediaElementAudioSourceNode,\n    IMediaStreamAudioDestinationNode,\n    IMediaStreamAudioSourceNode,\n    IMediaStreamTrackAudioSourceNode\n} from '../interfaces';\nimport { TAudioContextConstructorFactory, TAudioContextState, TNativeAudioContext, TNativeGainNode, TNativeOscillatorNode } from '../types';\n\nexport const createAudioContextConstructor: TAudioContextConstructorFactory = (\n    baseAudioContextConstructor,\n    createInvalidStateError,\n    createNotSupportedError,\n    createUnknownError,\n    mediaElementAudioSourceNodeConstructor,\n    mediaStreamAudioDestinationNodeConstructor,\n    mediaStreamAudioSourceNodeConstructor,\n    mediaStreamTrackAudioSourceNodeConstructor,\n    nativeAudioContextConstructor\n) => {\n    return class AudioContext extends baseAudioContextConstructor<IAudioContext> implements IAudioContext {\n        private _baseLatency: number;\n\n        private _nativeAudioContext: TNativeAudioContext;\n\n        private _nativeGainNode: null | TNativeGainNode;\n\n        private _nativeOscillatorNode: null | TNativeOscillatorNode;\n\n        private _state: null | 'suspended';\n\n        constructor(options: IAudioContextOptions = {}) {\n            if (nativeAudioContextConstructor === null) {\n                throw new Error('Missing the native AudioContext constructor.');\n            }\n\n            const nativeAudioContext = new nativeAudioContextConstructor(options);\n\n            // Bug #131 Safari returns null when there are four other AudioContexts running already.\n            if (nativeAudioContext === null) {\n                throw createUnknownError();\n            }\n\n            // Bug #51 Only Chrome, Edge and Opera throw an error if the given latencyHint is invalid.\n            if (!isValidLatencyHint(options.latencyHint)) {\n                throw new TypeError(\n                    `The provided value '${options.latencyHint}' is not a valid enum value of type AudioContextLatencyCategory.`\n                );\n            }\n\n            // Bug #150 Safari does not support setting the sampleRate.\n            if (options.sampleRate !== undefined && nativeAudioContext.sampleRate !== options.sampleRate) {\n                throw createNotSupportedError();\n            }\n\n            super(nativeAudioContext, 2);\n\n            const { latencyHint } = options;\n            const { sampleRate } = nativeAudioContext;\n\n            // @todo The values for 'balanced', 'interactive' and 'playback' are just copied from Chrome's implementation.\n            this._baseLatency =\n                typeof nativeAudioContext.baseLatency === 'number'\n                    ? nativeAudioContext.baseLatency\n                    : latencyHint === 'balanced'\n                    ? 512 / sampleRate\n                    : latencyHint === 'interactive' || latencyHint === undefined\n                    ? 256 / sampleRate\n                    : latencyHint === 'playback'\n                    ? 1024 / sampleRate\n                    : /*\n                       * @todo The min (256) and max (16384) values are taken from the allowed bufferSize values of a\n                       * ScriptProcessorNode.\n                       */\n                      (Math.max(2, Math.min(128, Math.round((latencyHint * sampleRate) / 128))) * 128) / sampleRate;\n            this._nativeAudioContext = nativeAudioContext;\n\n            // Bug #188: Safari will set the context's state to 'interrupted' in case the user switches tabs.\n            if (nativeAudioContextConstructor.name === 'webkitAudioContext') {\n                this._nativeGainNode = nativeAudioContext.createGain();\n                this._nativeOscillatorNode = nativeAudioContext.createOscillator();\n\n                this._nativeGainNode.gain.value = 1e-37;\n\n                this._nativeOscillatorNode.connect(this._nativeGainNode).connect(nativeAudioContext.destination);\n                this._nativeOscillatorNode.start();\n            } else {\n                this._nativeGainNode = null;\n                this._nativeOscillatorNode = null;\n            }\n\n            this._state = null;\n\n            /*\n             * Bug #34: Chrome, Edge and Opera pretend to be running right away, but fire an onstatechange event when the state actually\n             * changes to 'running'.\n             */\n            if (nativeAudioContext.state === 'running') {\n                this._state = 'suspended';\n\n                const revokeState = () => {\n                    if (this._state === 'suspended') {\n                        this._state = null;\n                    }\n\n                    nativeAudioContext.removeEventListener('statechange', revokeState);\n                };\n\n                nativeAudioContext.addEventListener('statechange', revokeState);\n            }\n        }\n\n        get baseLatency(): number {\n            return this._baseLatency;\n        }\n\n        get state(): TAudioContextState {\n            return this._state !== null ? this._state : this._nativeAudioContext.state;\n        }\n\n        public close(): Promise<void> {\n            // Bug #35: Firefox does not throw an error if the AudioContext was closed before.\n            if (this.state === 'closed') {\n                return this._nativeAudioContext.close().then(() => {\n                    throw createInvalidStateError();\n                });\n            }\n\n            // Bug #34: If the state was set to suspended before it should be revoked now.\n            if (this._state === 'suspended') {\n                this._state = null;\n            }\n\n            return this._nativeAudioContext.close().then(() => {\n                if (this._nativeGainNode !== null && this._nativeOscillatorNode !== null) {\n                    this._nativeOscillatorNode.stop();\n\n                    this._nativeGainNode.disconnect();\n                    this._nativeOscillatorNode.disconnect();\n                }\n\n                deactivateAudioGraph(this);\n            });\n        }\n\n        public createMediaElementSource(mediaElement: HTMLMediaElement): IMediaElementAudioSourceNode<this> {\n            return new mediaElementAudioSourceNodeConstructor(this, { mediaElement });\n        }\n\n        public createMediaStreamDestination(): IMediaStreamAudioDestinationNode<this> {\n            return new mediaStreamAudioDestinationNodeConstructor(this);\n        }\n\n        public createMediaStreamSource(mediaStream: MediaStream): IMediaStreamAudioSourceNode<this> {\n            return new mediaStreamAudioSourceNodeConstructor(this, { mediaStream });\n        }\n\n        public createMediaStreamTrackSource(mediaStreamTrack: MediaStreamTrack): IMediaStreamTrackAudioSourceNode<this> {\n            return new mediaStreamTrackAudioSourceNodeConstructor(this, { mediaStreamTrack });\n        }\n\n        public resume(): Promise<void> {\n            if (this._state === 'suspended') {\n                return new Promise((resolve, reject) => {\n                    const resolvePromise = () => {\n                        this._nativeAudioContext.removeEventListener('statechange', resolvePromise);\n\n                        if (this._nativeAudioContext.state === 'running') {\n                            resolve();\n                        } else {\n                            this.resume().then(resolve, reject);\n                        }\n                    };\n\n                    this._nativeAudioContext.addEventListener('statechange', resolvePromise);\n                });\n            }\n\n            return this._nativeAudioContext.resume().catch((err) => {\n                // Bug #55: Chrome, Edge and Opera do throw an InvalidAccessError instead of an InvalidStateError.\n                // Bug #56: Safari invokes the catch handler but without an error.\n                if (err === undefined || err.code === 15) {\n                    throw createInvalidStateError();\n                }\n\n                throw err;\n            });\n        }\n\n        public suspend(): Promise<void> {\n            return this._nativeAudioContext.suspend().catch((err) => {\n                // Bug #56: Safari invokes the catch handler but without an error.\n                if (err === undefined) {\n                    throw createInvalidStateError();\n                }\n\n                throw err;\n            });\n        }\n    };\n};\n","import { IAudioDestinationNode } from '../interfaces';\nimport {\n    TAudioDestinationNodeConstructorFactory,\n    TAudioNodeRenderer,\n    TChannelCountMode,\n    TContext,\n    TNativeAudioDestinationNode\n} from '../types';\n\nexport const createAudioDestinationNodeConstructor: TAudioDestinationNodeConstructorFactory = (\n    audioNodeConstructor,\n    createAudioDestinationNodeRenderer,\n    createIndexSizeError,\n    createInvalidStateError,\n    createNativeAudioDestinationNode,\n    getNativeContext,\n    isNativeOfflineAudioContext,\n    renderInputsOfAudioNode\n) => {\n    return class AudioDestinationNode<T extends TContext> extends audioNodeConstructor<T> implements IAudioDestinationNode<T> {\n        private _isNodeOfNativeOfflineAudioContext: boolean;\n\n        private _nativeAudioDestinationNode: TNativeAudioDestinationNode;\n\n        constructor(context: T, channelCount: number) {\n            const nativeContext = getNativeContext(context);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const nativeAudioDestinationNode = createNativeAudioDestinationNode(nativeContext, channelCount, isOffline);\n            const audioDestinationNodeRenderer = <TAudioNodeRenderer<T, this>>(\n                (isOffline ? createAudioDestinationNodeRenderer(renderInputsOfAudioNode) : null)\n            );\n\n            super(context, false, nativeAudioDestinationNode, audioDestinationNodeRenderer);\n\n            this._isNodeOfNativeOfflineAudioContext = isOffline;\n            this._nativeAudioDestinationNode = nativeAudioDestinationNode;\n        }\n\n        get channelCount(): number {\n            return this._nativeAudioDestinationNode.channelCount;\n        }\n\n        set channelCount(value) {\n            // Bug #52: Chrome, Edge, Opera & Safari do not throw an exception at all.\n            // Bug #54: Firefox does throw an IndexSizeError.\n            if (this._isNodeOfNativeOfflineAudioContext) {\n                throw createInvalidStateError();\n            }\n\n            // Bug #47: The AudioDestinationNode in Safari does not initialize the maxChannelCount property correctly.\n            if (value > this._nativeAudioDestinationNode.maxChannelCount) {\n                throw createIndexSizeError();\n            }\n\n            this._nativeAudioDestinationNode.channelCount = value;\n        }\n\n        get channelCountMode(): TChannelCountMode {\n            return this._nativeAudioDestinationNode.channelCountMode;\n        }\n\n        set channelCountMode(value) {\n            // Bug #53: No browser does throw an exception yet.\n            if (this._isNodeOfNativeOfflineAudioContext) {\n                throw createInvalidStateError();\n            }\n\n            this._nativeAudioDestinationNode.channelCountMode = value;\n        }\n\n        get maxChannelCount(): number {\n            return this._nativeAudioDestinationNode.maxChannelCount;\n        }\n    };\n};\n","import { IAudioDestinationNode, IAudioNode, IMinimalOfflineAudioContext, IOfflineAudioContext } from '../interfaces';\nimport {\n    TAudioDestinationNodeRendererFactory,\n    TNativeAudioDestinationNode,\n    TNativeOfflineAudioContext,\n    TRenderInputsOfAudioNodeFunction\n} from '../types';\n\nexport const createAudioDestinationNodeRenderer: TAudioDestinationNodeRendererFactory = <\n    T extends IMinimalOfflineAudioContext | IOfflineAudioContext\n>(\n    renderInputsOfAudioNode: TRenderInputsOfAudioNodeFunction\n) => {\n    let nativeAudioDestinationNodePromise: null | Promise<TNativeAudioDestinationNode> = null;\n\n    const createAudioDestinationNode = async (\n        proxy: IAudioDestinationNode<T>,\n        nativeOfflineAudioContext: TNativeOfflineAudioContext,\n        trace: readonly IAudioNode<T>[]\n    ) => {\n        const nativeAudioDestinationNode = nativeOfflineAudioContext.destination;\n\n        await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeAudioDestinationNode, trace);\n\n        return nativeAudioDestinationNode;\n    };\n\n    return {\n        render(\n            proxy: IAudioDestinationNode<T>,\n            nativeOfflineAudioContext: TNativeOfflineAudioContext,\n            trace: readonly IAudioNode<T>[]\n        ): Promise<TNativeAudioDestinationNode> {\n            if (nativeAudioDestinationNodePromise === null) {\n                nativeAudioDestinationNodePromise = createAudioDestinationNode(proxy, nativeOfflineAudioContext, trace);\n            }\n\n            return nativeAudioDestinationNodePromise;\n        }\n    };\n};\n","import { MOST_NEGATIVE_SINGLE_FLOAT, MOST_POSITIVE_SINGLE_FLOAT } from '../constants';\nimport { IAudioParam } from '../interfaces';\nimport { TAudioListenerFactoryFactory } from '../types';\n\nexport const createAudioListenerFactory: TAudioListenerFactoryFactory = (\n    createAudioParam,\n    createNativeChannelMergerNode,\n    createNativeConstantSourceNode,\n    createNativeScriptProcessorNode,\n    isNativeOfflineAudioContext\n) => {\n    return (context, nativeContext) => {\n        const nativeListener = nativeContext.listener;\n\n        // Bug #117: Only Chrome, Edge & Opera support the new interface already.\n        const createFakeAudioParams = () => {\n            const channelMergerNode = createNativeChannelMergerNode(nativeContext, {\n                channelCount: 1,\n                channelCountMode: 'explicit',\n                channelInterpretation: 'speakers',\n                numberOfInputs: 9\n            });\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const scriptProcessorNode = createNativeScriptProcessorNode(nativeContext, 256, 9, 0);\n\n            const createFakeAudioParam = (input: number, value: number) => {\n                const constantSourceNode = createNativeConstantSourceNode(nativeContext, {\n                    channelCount: 1,\n                    channelCountMode: 'explicit',\n                    channelInterpretation: 'discrete',\n                    offset: value\n                });\n\n                constantSourceNode.connect(channelMergerNode, 0, input);\n\n                // @todo This should be stopped when the context is closed.\n                constantSourceNode.start();\n\n                Object.defineProperty(constantSourceNode.offset, 'defaultValue', {\n                    get(): number {\n                        return value;\n                    }\n                });\n\n                /*\n                 * Bug #62 & #74: Safari does not support ConstantSourceNodes and does not export the correct values for maxValue and\n                 * minValue for GainNodes.\n                 */\n                return createAudioParam(\n                    <any>{ context },\n                    isOffline,\n                    constantSourceNode.offset,\n                    MOST_POSITIVE_SINGLE_FLOAT,\n                    MOST_NEGATIVE_SINGLE_FLOAT\n                );\n            };\n\n            let lastOrientation = [0, 0, -1, 0, 1, 0];\n            let lastPosition = [0, 0, 0];\n\n            // tslint:disable-next-line:deprecation\n            scriptProcessorNode.onaudioprocess = ({ inputBuffer }) => {\n                const orientation: [number, number, number, number, number, number] = [\n                    inputBuffer.getChannelData(0)[0],\n                    inputBuffer.getChannelData(1)[0],\n                    inputBuffer.getChannelData(2)[0],\n                    inputBuffer.getChannelData(3)[0],\n                    inputBuffer.getChannelData(4)[0],\n                    inputBuffer.getChannelData(5)[0]\n                ];\n\n                if (orientation.some((value, index) => value !== lastOrientation[index])) {\n                    nativeListener.setOrientation(...orientation); // tslint:disable-line:deprecation\n\n                    lastOrientation = orientation;\n                }\n\n                const positon: [number, number, number] = [\n                    inputBuffer.getChannelData(6)[0],\n                    inputBuffer.getChannelData(7)[0],\n                    inputBuffer.getChannelData(8)[0]\n                ];\n\n                if (positon.some((value, index) => value !== lastPosition[index])) {\n                    nativeListener.setPosition(...positon); // tslint:disable-line:deprecation\n\n                    lastPosition = positon;\n                }\n            };\n            channelMergerNode.connect(scriptProcessorNode);\n\n            return {\n                forwardX: createFakeAudioParam(0, 0),\n                forwardY: createFakeAudioParam(1, 0),\n                forwardZ: createFakeAudioParam(2, -1),\n                positionX: createFakeAudioParam(6, 0),\n                positionY: createFakeAudioParam(7, 0),\n                positionZ: createFakeAudioParam(8, 0),\n                upX: createFakeAudioParam(3, 0),\n                upY: createFakeAudioParam(4, 1),\n                upZ: createFakeAudioParam(5, 0)\n            };\n        };\n\n        const { forwardX, forwardY, forwardZ, positionX, positionY, positionZ, upX, upY, upZ } =\n            nativeListener.forwardX === undefined ? createFakeAudioParams() : nativeListener;\n\n        return {\n            get forwardX(): IAudioParam {\n                return forwardX;\n            },\n            get forwardY(): IAudioParam {\n                return forwardY;\n            },\n            get forwardZ(): IAudioParam {\n                return forwardZ;\n            },\n            get positionX(): IAudioParam {\n                return positionX;\n            },\n            get positionY(): IAudioParam {\n                return positionY;\n            },\n            get positionZ(): IAudioParam {\n                return positionZ;\n            },\n            get upX(): IAudioParam {\n                return upX;\n            },\n            get upY(): IAudioParam {\n                return upY;\n            },\n            get upZ(): IAudioParam {\n                return upZ;\n            }\n        };\n    };\n};\n","import { IAudioNode, IAudioParam } from '../interfaces';\nimport { TContext } from '../types';\n\nexport const isAudioNode = <T extends TContext>(\n    audioNodeOrAudioParam: IAudioNode<T> | IAudioParam\n): audioNodeOrAudioParam is IAudioNode<T> => {\n    return 'context' in audioNodeOrAudioParam;\n};\n","import { TAudioNodeOutputConnection, TContext, TOutputConnection } from '../types';\nimport { isAudioNode } from './audio-node';\n\nexport const isAudioNodeOutputConnection = <T extends TContext>(\n    outputConnection: TOutputConnection<T>\n): outputConnection is TAudioNodeOutputConnection<T> => {\n    return isAudioNode(outputConnection[0]);\n};\n","import { TInsertElementInSetFunction } from '../types';\n\nexport const insertElementInSet: TInsertElementInSetFunction = (set, element, predicate, ignoreDuplicates) => {\n    for (const lmnt of set) {\n        if (predicate(lmnt)) {\n            if (ignoreDuplicates) {\n                return false;\n            }\n\n            throw Error('The set contains at least one similar element.');\n        }\n    }\n\n    set.add(element);\n\n    return true;\n};\n","import { IAudioNode } from '../interfaces';\nimport { TActiveInputConnection, TContext, TPassiveAudioParamInputConnection } from '../types';\nimport { insertElementInSet } from './insert-element-in-set';\n\nexport const addActiveInputConnectionToAudioParam = <T extends TContext>(\n    activeInputs: Set<TActiveInputConnection<T>>,\n    source: IAudioNode<T>,\n    [output, eventListener]: TPassiveAudioParamInputConnection,\n    ignoreDuplicates: boolean\n) => {\n    insertElementInSet(\n        activeInputs,\n        [source, output, eventListener],\n        (activeInputConnection) => activeInputConnection[0] === source && activeInputConnection[1] === output,\n        ignoreDuplicates\n    );\n};\n","import { IAudioNode } from '../interfaces';\nimport { TActiveInputConnection, TContext, TPassiveAudioParamInputConnection } from '../types';\nimport { insertElementInSet } from './insert-element-in-set';\n\nexport const addPassiveInputConnectionToAudioParam = <T extends TContext>(\n    passiveInputs: WeakMap<IAudioNode<T>, Set<TPassiveAudioParamInputConnection>>,\n    [source, output, eventListener]: TActiveInputConnection<T>,\n    ignoreDuplicates: boolean\n) => {\n    const passiveInputConnections = passiveInputs.get(source);\n\n    if (passiveInputConnections === undefined) {\n        passiveInputs.set(source, new Set([[output, eventListener]]));\n    } else {\n        insertElementInSet(\n            passiveInputConnections,\n            [output, eventListener],\n            (passiveInputConnection) => passiveInputConnection[0] === output,\n            ignoreDuplicates\n        );\n    }\n};\n","import { INativeAudioNodeFaker } from '../interfaces';\nimport { TNativeAudioNode } from '../types';\n\nexport const isNativeAudioNodeFaker = (\n    nativeAudioNodeOrNativeAudioNodeFaker: TNativeAudioNode | INativeAudioNodeFaker\n): nativeAudioNodeOrNativeAudioNodeFaker is INativeAudioNodeFaker => {\n    return 'inputs' in nativeAudioNodeOrNativeAudioNodeFaker;\n};\n","import { isNativeAudioNodeFaker } from '../guards/native-audio-node-faker';\nimport { INativeAudioNodeFaker } from '../interfaces';\nimport { TConnectNativeAudioNodeToNativeAudioNodeFunction, TNativeAudioNode } from '../types';\n\nexport const connectNativeAudioNodeToNativeAudioNode: TConnectNativeAudioNodeToNativeAudioNodeFunction = (\n    nativeSourceAudioNode: INativeAudioNodeFaker | TNativeAudioNode,\n    nativeDestinationAudioNode: INativeAudioNodeFaker | TNativeAudioNode,\n    output: number,\n    input: number\n): [TNativeAudioNode, number, number] => {\n    if (isNativeAudioNodeFaker(nativeDestinationAudioNode)) {\n        const fakeNativeDestinationAudioNode = nativeDestinationAudioNode.inputs[input];\n\n        nativeSourceAudioNode.connect(fakeNativeDestinationAudioNode, output, 0);\n\n        return [fakeNativeDestinationAudioNode, output, 0];\n    }\n\n    nativeSourceAudioNode.connect(nativeDestinationAudioNode, output, input);\n\n    return [nativeDestinationAudioNode, output, input];\n};\n","import { IAudioNode } from '../interfaces';\nimport { TActiveInputConnection, TContext } from '../types';\n\nexport const deleteActiveInputConnection = <T extends TContext>(\n    activeInputConnections: Set<TActiveInputConnection<T>>,\n    source: IAudioNode<T>,\n    output: number\n): null | TActiveInputConnection<T> => {\n    for (const activeInputConnection of activeInputConnections) {\n        if (activeInputConnection[0] === source && activeInputConnection[1] === output) {\n            activeInputConnections.delete(activeInputConnection);\n\n            return activeInputConnection;\n        }\n    }\n\n    return null;\n};\n","import { IAudioNode } from '../interfaces';\nimport { TActiveInputConnection, TContext } from '../types';\nimport { pickElementFromSet } from './pick-element-from-set';\n\nexport const deleteActiveInputConnectionToAudioParam = <T extends TContext>(\n    activeInputs: Set<TActiveInputConnection<T>>,\n    source: IAudioNode<T>,\n    output: number\n) => {\n    return pickElementFromSet(\n        activeInputs,\n        (activeInputConnection) => activeInputConnection[0] === source && activeInputConnection[1] === output\n    );\n};\n","import { IAudioNode } from '../interfaces';\nimport { TContext, TInternalStateEventListener } from '../types';\nimport { getEventListenersOfAudioNode } from './get-event-listeners-of-audio-node';\n\nexport const deleteEventListenerOfAudioNode = <T extends TContext>(\n    audioNode: IAudioNode<T>,\n    eventListener: TInternalStateEventListener\n) => {\n    const eventListeners = getEventListenersOfAudioNode(audioNode);\n\n    if (!eventListeners.delete(eventListener)) {\n        throw new Error('Missing the expected event listener.');\n    }\n};\n","import { IAudioNode } from '../interfaces';\nimport { TContext, TPassiveAudioParamInputConnection } from '../types';\nimport { getValueForKey } from './get-value-for-key';\nimport { pickElementFromSet } from './pick-element-from-set';\n\nexport const deletePassiveInputConnectionToAudioParam = <T extends TContext>(\n    passiveInputs: WeakMap<IAudioNode<T>, Set<TPassiveAudioParamInputConnection>>,\n    source: IAudioNode<T>,\n    output: number\n) => {\n    const passiveInputConnections = getValueForKey(passiveInputs, source);\n    const matchingConnection = pickElementFromSet(\n        passiveInputConnections,\n        (passiveInputConnection) => passiveInputConnection[0] === output\n    );\n\n    if (passiveInputConnections.size === 0) {\n        passiveInputs.delete(source);\n    }\n\n    return matchingConnection;\n};\n","import { isNativeAudioNodeFaker } from '../guards/native-audio-node-faker';\nimport { TDisconnectNativeAudioNodeFromNativeAudioNodeFunction } from '../types';\n\nexport const disconnectNativeAudioNodeFromNativeAudioNode: TDisconnectNativeAudioNodeFromNativeAudioNodeFunction = (\n    nativeSourceAudioNode,\n    nativeDestinationAudioNode,\n    output,\n    input\n) => {\n    if (isNativeAudioNodeFaker(nativeDestinationAudioNode)) {\n        nativeSourceAudioNode.disconnect(nativeDestinationAudioNode.inputs[input], output, 0);\n    } else {\n        nativeSourceAudioNode.disconnect(nativeDestinationAudioNode, output, input);\n    }\n};\n","import { AUDIO_NODE_STORE } from '../globals';\nimport { IAudioNode, INativeAudioNodeFaker } from '../interfaces';\nimport { TContext, TGetNativeAudioNodeFunction, TNativeAudioNode } from '../types';\nimport { getValueForKey } from './get-value-for-key';\n\nexport const getNativeAudioNode: TGetNativeAudioNodeFunction = <T extends TContext, U extends TNativeAudioNode | INativeAudioNodeFaker>(\n    audioNode: IAudioNode<T>\n): U => {\n    return <U>getValueForKey(AUDIO_NODE_STORE, audioNode);\n};\n","import { AUDIO_PARAM_STORE } from '../globals';\nimport { IAudioParam } from '../interfaces';\nimport { TNativeAudioParam } from '../types';\nimport { getValueForKey } from './get-value-for-key';\n\nexport const getNativeAudioParam = (audioParam: IAudioParam): TNativeAudioParam => {\n    return getValueForKey(AUDIO_PARAM_STORE, audioParam);\n};\n","import { CYCLE_COUNTERS } from '../globals';\nimport { TIsPartOfACycleFunction } from '../types';\n\nexport const isPartOfACycle: TIsPartOfACycleFunction = (audioNode) => {\n    return CYCLE_COUNTERS.has(audioNode);\n};\n","import { ACTIVE_AUDIO_NODE_STORE } from '../globals';\nimport { TIsPassiveAudioNodeFunction } from '../types';\n\nexport const isPassiveAudioNode: TIsPassiveAudioNodeFunction = (audioNode) => {\n    return !ACTIVE_AUDIO_NODE_STORE.has(audioNode);\n};\n","import { TNativeAudioContext } from '../types';\n\nexport const testAudioNodeDisconnectMethodSupport = (nativeAudioContext: TNativeAudioContext): Promise<boolean> => {\n    return new Promise((resolve) => {\n        const analyzer = nativeAudioContext.createScriptProcessor(256, 1, 1);\n\n        const dummy = nativeAudioContext.createGain();\n\n        // Bug #95: Safari does not play one sample buffers.\n        const ones = nativeAudioContext.createBuffer(1, 2, 44100);\n\n        const channelData = ones.getChannelData(0);\n\n        channelData[0] = 1;\n        channelData[1] = 1;\n\n        const source = nativeAudioContext.createBufferSource();\n\n        source.buffer = ones;\n        source.loop = true;\n\n        source.connect(analyzer).connect(nativeAudioContext.destination);\n\n        source.connect(dummy);\n        source.disconnect(dummy);\n\n        // tslint:disable-next-line:deprecation\n        analyzer.onaudioprocess = (event) => {\n            const chnnlDt = event.inputBuffer.getChannelData(0);\n\n            if (Array.prototype.some.call(chnnlDt, (sample: number) => sample === 1)) {\n                resolve(true);\n            } else {\n                resolve(false);\n            }\n\n            source.stop();\n\n            analyzer.onaudioprocess = null; // tslint:disable-line:deprecation\n\n            source.disconnect(analyzer);\n            analyzer.disconnect(nativeAudioContext.destination);\n        };\n\n        source.start();\n    });\n};\n","import { IAudioNode } from '../interfaces';\nimport { TContext } from '../types';\n\nexport const visitEachAudioNodeOnce = <T extends TContext>(\n    cycles: IAudioNode<T>[][],\n    visitor: (audioNode: IAudioNode<T>, count: number) => void\n): void => {\n    const counts = new Map<IAudioNode<T>, number>();\n\n    for (const cycle of cycles) {\n        for (const audioNode of cycle) {\n            const count = counts.get(audioNode);\n\n            counts.set(audioNode, count === undefined ? 1 : count + 1);\n        }\n    }\n\n    counts.forEach((count, audioNode) => visitor(audioNode, count));\n};\n","import { TNativeAudioNode, TNativeAudioParam } from '../types';\n\nexport const isNativeAudioNode = (\n    nativeAudioNodeOrAudioParam: TNativeAudioNode | TNativeAudioParam\n): nativeAudioNodeOrAudioParam is TNativeAudioNode => {\n    return 'context' in nativeAudioNodeOrAudioParam;\n};\n","import { isNativeAudioNode } from '../guards/native-audio-node';\nimport { TNativeAudioNode, TNativeAudioParam } from '../types';\n\nexport const wrapAudioNodeDisconnectMethod = (nativeAudioNode: TNativeAudioNode): void => {\n    const connections = new Map<TNativeAudioNode | TNativeAudioParam, { input: number; output: number }[]>();\n\n    nativeAudioNode.connect = <TNativeAudioNode['connect']>((connect) => {\n        // tslint:disable-next-line:invalid-void\n        return (destination: TNativeAudioNode | TNativeAudioParam, output = 0, input = 0): void | TNativeAudioNode => {\n            const returnValue = isNativeAudioNode(destination) ? connect(destination, output, input) : connect(destination, output);\n\n            // Save the new connection only if the calls to connect above didn't throw an error.\n            const connectionsToDestination = connections.get(destination);\n\n            if (connectionsToDestination === undefined) {\n                connections.set(destination, [{ input, output }]);\n            } else {\n                if (connectionsToDestination.every((connection) => connection.input !== input || connection.output !== output)) {\n                    connectionsToDestination.push({ input, output });\n                }\n            }\n\n            return returnValue;\n        };\n    })(nativeAudioNode.connect.bind(nativeAudioNode));\n\n    nativeAudioNode.disconnect = ((disconnect) => {\n        return (destinationOrOutput?: number | TNativeAudioNode | TNativeAudioParam, output?: number, input?: number): void => {\n            disconnect.apply(nativeAudioNode);\n\n            if (destinationOrOutput === undefined) {\n                connections.clear();\n            } else if (typeof destinationOrOutput === 'number') {\n                for (const [destination, connectionsToDestination] of connections) {\n                    const filteredConnections = connectionsToDestination.filter((connection) => connection.output !== destinationOrOutput);\n\n                    if (filteredConnections.length === 0) {\n                        connections.delete(destination);\n                    } else {\n                        connections.set(destination, filteredConnections);\n                    }\n                }\n            } else if (connections.has(destinationOrOutput)) {\n                if (output === undefined) {\n                    connections.delete(destinationOrOutput);\n                } else {\n                    const connectionsToDestination = connections.get(destinationOrOutput);\n\n                    if (connectionsToDestination !== undefined) {\n                        const filteredConnections = connectionsToDestination.filter(\n                            (connection) => connection.output !== output && (connection.input !== input || input === undefined)\n                        );\n\n                        if (filteredConnections.length === 0) {\n                            connections.delete(destinationOrOutput);\n                        } else {\n                            connections.set(destinationOrOutput, filteredConnections);\n                        }\n                    }\n                }\n            }\n\n            for (const [destination, connectionsToDestination] of connections) {\n                connectionsToDestination.forEach((connection) => {\n                    if (isNativeAudioNode(destination)) {\n                        nativeAudioNode.connect(destination, connection.output, connection.input);\n                    } else {\n                        nativeAudioNode.connect(destination, connection.output);\n                    }\n                });\n            }\n        };\n    })(nativeAudioNode.disconnect);\n};\n","import { AUDIO_NODE_STORE, EVENT_LISTENERS } from '../globals';\nimport { isAudioNode } from '../guards/audio-node';\nimport { isAudioNodeOutputConnection } from '../guards/audio-node-output-connection';\nimport { addActiveInputConnectionToAudioParam } from '../helpers/add-active-input-connection-to-audio-param';\nimport { addPassiveInputConnectionToAudioParam } from '../helpers/add-passive-input-connection-to-audio-param';\nimport { connectNativeAudioNodeToNativeAudioNode } from '../helpers/connect-native-audio-node-to-native-audio-node';\nimport { deleteActiveInputConnection } from '../helpers/delete-active-input-connection';\nimport { deleteActiveInputConnectionToAudioParam } from '../helpers/delete-active-input-connection-to-audio-param';\nimport { deleteEventListenerOfAudioNode } from '../helpers/delete-event-listeners-of-audio-node';\nimport { deletePassiveInputConnectionToAudioNode } from '../helpers/delete-passive-input-connection-to-audio-node';\nimport { deletePassiveInputConnectionToAudioParam } from '../helpers/delete-passive-input-connection-to-audio-param';\nimport { disconnectNativeAudioNodeFromNativeAudioNode } from '../helpers/disconnect-native-audio-node-from-native-audio-node';\nimport { getAudioNodeConnections } from '../helpers/get-audio-node-connections';\nimport { getAudioParamConnections } from '../helpers/get-audio-param-connections';\nimport { getEventListenersOfAudioNode } from '../helpers/get-event-listeners-of-audio-node';\nimport { getNativeAudioNode } from '../helpers/get-native-audio-node';\nimport { getNativeAudioParam } from '../helpers/get-native-audio-param';\nimport { insertElementInSet } from '../helpers/insert-element-in-set';\nimport { isActiveAudioNode } from '../helpers/is-active-audio-node';\nimport { isPartOfACycle } from '../helpers/is-part-of-a-cycle';\nimport { isPassiveAudioNode } from '../helpers/is-passive-audio-node';\nimport { setInternalStateToActive } from '../helpers/set-internal-state-to-active';\nimport { setInternalStateToPassiveWhenNecessary } from '../helpers/set-internal-state-to-passive-when-necessary';\nimport { testAudioNodeDisconnectMethodSupport } from '../helpers/test-audio-node-disconnect-method-support';\nimport { visitEachAudioNodeOnce } from '../helpers/visit-each-audio-node-once';\nimport { wrapAudioNodeDisconnectMethod } from '../helpers/wrap-audio-node-disconnect-method';\nimport {\n    IAudioNode,\n    IAudioNodeRenderer,\n    IAudioParam,\n    IMinimalOfflineAudioContext,\n    INativeAudioNodeFaker,\n    IOfflineAudioContext\n} from '../interfaces';\nimport {\n    TAudioNodeConstructorFactory,\n    TChannelCountMode,\n    TChannelInterpretation,\n    TContext,\n    TInternalStateEventListener,\n    TNativeAudioNode,\n    TNativeAudioParam\n} from '../types';\n\nconst addConnectionToAudioParamOfAudioContext = <T extends TContext>(\n    source: IAudioNode<T>,\n    destination: IAudioParam,\n    output: number,\n    isOffline: boolean\n): boolean => {\n    const { activeInputs, passiveInputs } = getAudioParamConnections<T>(destination);\n    const { outputs } = getAudioNodeConnections(source);\n    const eventListeners = getEventListenersOfAudioNode(source);\n\n    const eventListener: TInternalStateEventListener = (isActive) => {\n        const nativeAudioNode = getNativeAudioNode(source);\n        const nativeAudioParam = getNativeAudioParam(destination);\n\n        if (isActive) {\n            const partialConnection = deletePassiveInputConnectionToAudioParam(passiveInputs, source, output);\n\n            addActiveInputConnectionToAudioParam(activeInputs, source, partialConnection, false);\n\n            if (!isOffline && !isPartOfACycle(source)) {\n                nativeAudioNode.connect(nativeAudioParam, output);\n            }\n        } else {\n            const partialConnection = deleteActiveInputConnectionToAudioParam(activeInputs, source, output);\n\n            addPassiveInputConnectionToAudioParam(passiveInputs, partialConnection, false);\n\n            if (!isOffline && !isPartOfACycle(source)) {\n                nativeAudioNode.disconnect(nativeAudioParam, output);\n            }\n        }\n    };\n\n    if (\n        insertElementInSet(\n            outputs,\n            [destination, output],\n            (outputConnection) => outputConnection[0] === destination && outputConnection[1] === output,\n            true\n        )\n    ) {\n        eventListeners.add(eventListener);\n\n        if (isActiveAudioNode(source)) {\n            addActiveInputConnectionToAudioParam(activeInputs, source, [output, eventListener], true);\n        } else {\n            addPassiveInputConnectionToAudioParam(passiveInputs, [source, output, eventListener], true);\n        }\n\n        return true;\n    }\n\n    return false;\n};\n\nconst deleteInputConnectionOfAudioNode = <T extends TContext>(\n    source: IAudioNode<T>,\n    destination: IAudioNode<T>,\n    output: number,\n    input: number\n): [null | TInternalStateEventListener, boolean] => {\n    const { activeInputs, passiveInputs } = getAudioNodeConnections(destination);\n\n    const activeInputConnection = deleteActiveInputConnection(activeInputs[input], source, output);\n\n    if (activeInputConnection === null) {\n        const passiveInputConnection = deletePassiveInputConnectionToAudioNode(passiveInputs, source, output, input);\n\n        return [passiveInputConnection[2], false];\n    }\n\n    return [activeInputConnection[2], true];\n};\n\nconst deleteInputConnectionOfAudioParam = <T extends TContext>(\n    source: IAudioNode<T>,\n    destination: IAudioParam,\n    output: number\n): [null | TInternalStateEventListener, boolean] => {\n    const { activeInputs, passiveInputs } = getAudioParamConnections<T>(destination);\n\n    const activeInputConnection = deleteActiveInputConnection(activeInputs, source, output);\n\n    if (activeInputConnection === null) {\n        const passiveInputConnection = deletePassiveInputConnectionToAudioParam(passiveInputs, source, output);\n\n        return [passiveInputConnection[1], false];\n    }\n\n    return [activeInputConnection[2], true];\n};\n\nconst deleteInputsOfAudioNode = <T extends TContext>(\n    source: IAudioNode<T>,\n    isOffline: boolean,\n    destination: IAudioNode<T>,\n    output: number,\n    input: number\n) => {\n    const [listener, isActive] = deleteInputConnectionOfAudioNode(source, destination, output, input);\n\n    if (listener !== null) {\n        deleteEventListenerOfAudioNode(source, listener);\n\n        if (isActive && !isOffline && !isPartOfACycle(source)) {\n            disconnectNativeAudioNodeFromNativeAudioNode(getNativeAudioNode(source), getNativeAudioNode(destination), output, input);\n        }\n    }\n\n    if (isActiveAudioNode(destination)) {\n        const { activeInputs } = getAudioNodeConnections(destination);\n\n        setInternalStateToPassiveWhenNecessary(destination, activeInputs);\n    }\n};\n\nconst deleteInputsOfAudioParam = <T extends TContext>(\n    source: IAudioNode<T>,\n    isOffline: boolean,\n    destination: IAudioParam,\n    output: number\n) => {\n    const [listener, isActive] = deleteInputConnectionOfAudioParam(source, destination, output);\n\n    if (listener !== null) {\n        deleteEventListenerOfAudioNode(source, listener);\n\n        if (isActive && !isOffline && !isPartOfACycle(source)) {\n            getNativeAudioNode(source).disconnect(getNativeAudioParam(destination), output);\n        }\n    }\n};\n\nconst deleteAnyConnection = <T extends TContext>(source: IAudioNode<T>, isOffline: boolean): (IAudioNode<T> | IAudioParam)[] => {\n    const audioNodeConnectionsOfSource = getAudioNodeConnections(source);\n    const destinations = [];\n\n    for (const outputConnection of audioNodeConnectionsOfSource.outputs) {\n        if (isAudioNodeOutputConnection(outputConnection)) {\n            deleteInputsOfAudioNode(source, isOffline, ...outputConnection);\n        } else {\n            deleteInputsOfAudioParam(source, isOffline, ...outputConnection);\n        }\n\n        destinations.push(outputConnection[0]);\n    }\n\n    audioNodeConnectionsOfSource.outputs.clear();\n\n    return destinations;\n};\n\nconst deleteConnectionAtOutput = <T extends TContext>(\n    source: IAudioNode<T>,\n    isOffline: boolean,\n    output: number\n): (IAudioNode<T> | IAudioParam)[] => {\n    const audioNodeConnectionsOfSource = getAudioNodeConnections(source);\n    const destinations = [];\n\n    for (const outputConnection of audioNodeConnectionsOfSource.outputs) {\n        if (outputConnection[1] === output) {\n            if (isAudioNodeOutputConnection(outputConnection)) {\n                deleteInputsOfAudioNode(source, isOffline, ...outputConnection);\n            } else {\n                deleteInputsOfAudioParam(source, isOffline, ...outputConnection);\n            }\n\n            destinations.push(outputConnection[0]);\n            audioNodeConnectionsOfSource.outputs.delete(outputConnection);\n        }\n    }\n\n    return destinations;\n};\n\nconst deleteConnectionToDestination = <T extends TContext, U extends TContext>(\n    source: IAudioNode<T>,\n    isOffline: boolean,\n    destination: IAudioNode<U> | IAudioParam,\n    output?: number,\n    input?: number\n): (IAudioNode<T> | IAudioParam)[] => {\n    const audioNodeConnectionsOfSource = getAudioNodeConnections(source);\n\n    return Array.from(audioNodeConnectionsOfSource.outputs)\n        .filter(\n            (outputConnection) =>\n                outputConnection[0] === destination &&\n                (output === undefined || outputConnection[1] === output) &&\n                (input === undefined || outputConnection[2] === input)\n        )\n        .map((outputConnection) => {\n            if (isAudioNodeOutputConnection(outputConnection)) {\n                deleteInputsOfAudioNode(source, isOffline, ...outputConnection);\n            } else {\n                deleteInputsOfAudioParam(source, isOffline, ...outputConnection);\n            }\n\n            audioNodeConnectionsOfSource.outputs.delete(outputConnection);\n\n            return outputConnection[0];\n        });\n};\n\nexport const createAudioNodeConstructor: TAudioNodeConstructorFactory = (\n    addAudioNodeConnections,\n    addConnectionToAudioNode,\n    cacheTestResult,\n    createIncrementCycleCounter,\n    createIndexSizeError,\n    createInvalidAccessError,\n    createNotSupportedError,\n    decrementCycleCounter,\n    detectCycles,\n    eventTargetConstructor,\n    getNativeContext,\n    isNativeAudioContext,\n    isNativeAudioNode,\n    isNativeAudioParam,\n    isNativeOfflineAudioContext\n) => {\n    return class AudioNode<T extends TContext> extends eventTargetConstructor implements IAudioNode<T> {\n        private _context: T;\n\n        private _nativeAudioNode: INativeAudioNodeFaker | TNativeAudioNode;\n\n        constructor(\n            context: T,\n            isActive: boolean,\n            nativeAudioNode: INativeAudioNodeFaker | TNativeAudioNode,\n            audioNodeRenderer: T extends IMinimalOfflineAudioContext | IOfflineAudioContext ? IAudioNodeRenderer<T, IAudioNode<T>> : null\n        ) {\n            super(nativeAudioNode);\n\n            this._context = context;\n            this._nativeAudioNode = nativeAudioNode;\n\n            const nativeContext = getNativeContext(context);\n\n            // Bug #12: Safari does not support to disconnect a specific destination.\n            if (\n                isNativeAudioContext(nativeContext) &&\n                true !==\n                    cacheTestResult(testAudioNodeDisconnectMethodSupport, () => {\n                        return testAudioNodeDisconnectMethodSupport(nativeContext);\n                    })\n            ) {\n                wrapAudioNodeDisconnectMethod(nativeAudioNode);\n            }\n\n            AUDIO_NODE_STORE.set(this, nativeAudioNode);\n            EVENT_LISTENERS.set(this, new Set());\n\n            if (context.state !== 'closed' && isActive) {\n                setInternalStateToActive(this);\n            }\n\n            addAudioNodeConnections(this, audioNodeRenderer, nativeAudioNode);\n        }\n\n        get channelCount(): number {\n            return this._nativeAudioNode.channelCount;\n        }\n\n        set channelCount(value) {\n            this._nativeAudioNode.channelCount = value;\n        }\n\n        get channelCountMode(): TChannelCountMode {\n            return this._nativeAudioNode.channelCountMode;\n        }\n\n        set channelCountMode(value) {\n            this._nativeAudioNode.channelCountMode = value;\n        }\n\n        get channelInterpretation(): TChannelInterpretation {\n            return this._nativeAudioNode.channelInterpretation;\n        }\n\n        set channelInterpretation(value) {\n            this._nativeAudioNode.channelInterpretation = value;\n        }\n\n        get context(): T {\n            return this._context;\n        }\n\n        get numberOfInputs(): number {\n            return this._nativeAudioNode.numberOfInputs;\n        }\n\n        get numberOfOutputs(): number {\n            return this._nativeAudioNode.numberOfOutputs;\n        }\n\n        public connect<U extends TContext, V extends IAudioNode<U>>(destinationNode: V, output?: number, input?: number): V;\n        public connect(destinationParam: IAudioParam, output?: number): void;\n        // tslint:disable-next-line:invalid-void\n        public connect<U extends TContext, V extends IAudioNode<U>>(destination: V | IAudioParam, output = 0, input = 0): void | V {\n            // Bug #174: Safari does expose a wrong numberOfOutputs for MediaStreamAudioDestinationNodes.\n            if (output < 0 || output >= this._nativeAudioNode.numberOfOutputs) {\n                throw createIndexSizeError();\n            }\n\n            const nativeContext = getNativeContext(this._context);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n\n            if (isNativeAudioNode(destination) || isNativeAudioParam(destination)) {\n                throw createInvalidAccessError();\n            }\n\n            if (isAudioNode(destination)) {\n                const nativeDestinationAudioNode = getNativeAudioNode(destination);\n\n                try {\n                    const connection = connectNativeAudioNodeToNativeAudioNode(\n                        this._nativeAudioNode,\n                        nativeDestinationAudioNode,\n                        output,\n                        input\n                    );\n\n                    const isPassive = isPassiveAudioNode(this);\n\n                    if (isOffline || isPassive) {\n                        this._nativeAudioNode.disconnect(...connection);\n                    }\n\n                    if (this.context.state !== 'closed' && !isPassive && isPassiveAudioNode(destination)) {\n                        setInternalStateToActive(destination);\n                    }\n                } catch (err) {\n                    // Bug #41: Safari does not throw the correct exception so far.\n                    if (err.code === 12) {\n                        throw createInvalidAccessError();\n                    }\n\n                    throw err;\n                }\n\n                const isNewConnectionToAudioNode = addConnectionToAudioNode(\n                    this,\n                    <IAudioNode<TContext>>destination,\n                    output,\n                    input,\n                    isOffline\n                );\n\n                // Bug #164: Only Firefox detects cycles so far.\n                if (isNewConnectionToAudioNode) {\n                    const cycles = detectCycles([this], <IAudioNode<T>>(<unknown>destination));\n\n                    visitEachAudioNodeOnce(cycles, createIncrementCycleCounter(isOffline));\n                }\n\n                return destination;\n            }\n\n            const nativeAudioParam = getNativeAudioParam(destination);\n\n            /*\n             * Bug #73, #147 & #153: Safari does not support to connect an input signal to the playbackRate AudioParam of an\n             * AudioBufferSourceNode. This can't be easily detected and that's why the outdated name property is used here to identify\n             * Safari. In addition to that the maxValue property is used to only detect the affected versions below v14.0.2.\n             */\n            if ((<TNativeAudioParam & { name: string }>nativeAudioParam).name === 'playbackRate' && nativeAudioParam.maxValue === 1024) {\n                throw createNotSupportedError();\n            }\n\n            try {\n                this._nativeAudioNode.connect(nativeAudioParam, output);\n\n                if (isOffline || isPassiveAudioNode(this)) {\n                    this._nativeAudioNode.disconnect(nativeAudioParam, output);\n                }\n            } catch (err) {\n                // Bug #58: Only Firefox does throw an InvalidStateError yet.\n                if (err.code === 12) {\n                    throw createInvalidAccessError();\n                }\n\n                throw err;\n            }\n\n            const isNewConnectionToAudioParam = addConnectionToAudioParamOfAudioContext(this, destination, output, isOffline);\n\n            // Bug #164: Only Firefox detects cycles so far.\n            if (isNewConnectionToAudioParam) {\n                const cycles = detectCycles([this], destination);\n\n                visitEachAudioNodeOnce(cycles, createIncrementCycleCounter(isOffline));\n            }\n        }\n\n        public disconnect(output?: number): void;\n        public disconnect<U extends TContext>(destinationNode: IAudioNode<U>, output?: number, input?: number): void;\n        public disconnect(destinationParam: IAudioParam, output?: number): void;\n        public disconnect<U extends TContext>(\n            destinationOrOutput?: number | IAudioNode<U> | IAudioParam,\n            output?: number,\n            input?: number\n        ): void {\n            let destinations: (IAudioNode<T> | IAudioParam)[];\n\n            const nativeContext = getNativeContext(this._context);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n\n            if (destinationOrOutput === undefined) {\n                destinations = deleteAnyConnection(this, isOffline);\n            } else if (typeof destinationOrOutput === 'number') {\n                if (destinationOrOutput < 0 || destinationOrOutput >= this.numberOfOutputs) {\n                    throw createIndexSizeError();\n                }\n\n                destinations = deleteConnectionAtOutput(this, isOffline, destinationOrOutput);\n            } else {\n                if (output !== undefined && (output < 0 || output >= this.numberOfOutputs)) {\n                    throw createIndexSizeError();\n                }\n\n                if (isAudioNode(destinationOrOutput) && input !== undefined && (input < 0 || input >= destinationOrOutput.numberOfInputs)) {\n                    throw createIndexSizeError();\n                }\n\n                destinations = deleteConnectionToDestination(this, isOffline, destinationOrOutput, output, input);\n\n                if (destinations.length === 0) {\n                    throw createInvalidAccessError();\n                }\n            }\n\n            // Bug #164: Only Firefox detects cycles so far.\n            for (const destination of destinations) {\n                const cycles = detectCycles([this], destination);\n\n                visitEachAudioNodeOnce(cycles, decrementCycleCounter);\n            }\n        }\n    };\n};\n","import { AutomationEventList } from 'automation-events';\nimport { IAudioNode, IAudioParam, IAudioParamRenderer, IMinimalOfflineAudioContext, IOfflineAudioContext } from '../interfaces';\nimport { TAudioParamFactoryFactory, TContext, TNativeAudioParam } from '../types';\n\nexport const createAudioParamFactory: TAudioParamFactoryFactory = (\n    addAudioParamConnections,\n    audioParamAudioNodeStore,\n    audioParamStore,\n    createAudioParamRenderer,\n    createCancelAndHoldAutomationEvent,\n    createCancelScheduledValuesAutomationEvent,\n    createExponentialRampToValueAutomationEvent,\n    createLinearRampToValueAutomationEvent,\n    createSetTargetAutomationEvent,\n    createSetValueAutomationEvent,\n    createSetValueCurveAutomationEvent,\n    nativeAudioContextConstructor,\n    setValueAtTimeUntilPossible\n) => {\n    return <T extends TContext>(\n        audioNode: IAudioNode<T>,\n        isAudioParamOfOfflineAudioContext: boolean,\n        nativeAudioParam: TNativeAudioParam,\n        maxValue: null | number = null,\n        minValue: null | number = null\n    ): IAudioParam => {\n        const automationEventList = new AutomationEventList(nativeAudioParam.defaultValue);\n        const audioParamRenderer = isAudioParamOfOfflineAudioContext ? createAudioParamRenderer(automationEventList) : null;\n        const audioParam = {\n            get defaultValue(): number {\n                return nativeAudioParam.defaultValue;\n            },\n            get maxValue(): number {\n                return maxValue === null ? nativeAudioParam.maxValue : maxValue;\n            },\n            get minValue(): number {\n                return minValue === null ? nativeAudioParam.minValue : minValue;\n            },\n            get value(): number {\n                return nativeAudioParam.value;\n            },\n            set value(value) {\n                nativeAudioParam.value = value;\n\n                // Bug #98: Firefox & Safari do not yet treat the value setter like a call to setValueAtTime().\n                audioParam.setValueAtTime(value, audioNode.context.currentTime);\n            },\n            cancelAndHoldAtTime(cancelTime: number): IAudioParam {\n                // Bug #28: Firefox & Safari do not yet implement cancelAndHoldAtTime().\n                if (typeof nativeAudioParam.cancelAndHoldAtTime === 'function') {\n                    if (audioParamRenderer === null) {\n                        automationEventList.flush(audioNode.context.currentTime);\n                    }\n\n                    automationEventList.add(createCancelAndHoldAutomationEvent(cancelTime));\n                    nativeAudioParam.cancelAndHoldAtTime(cancelTime);\n                } else {\n                    const previousLastEvent = Array.from(automationEventList).pop();\n\n                    if (audioParamRenderer === null) {\n                        automationEventList.flush(audioNode.context.currentTime);\n                    }\n\n                    automationEventList.add(createCancelAndHoldAutomationEvent(cancelTime));\n\n                    const currentLastEvent = Array.from(automationEventList).pop();\n\n                    nativeAudioParam.cancelScheduledValues(cancelTime);\n\n                    if (previousLastEvent !== currentLastEvent && currentLastEvent !== undefined) {\n                        if (currentLastEvent.type === 'exponentialRampToValue') {\n                            nativeAudioParam.exponentialRampToValueAtTime(currentLastEvent.value, currentLastEvent.endTime);\n                        } else if (currentLastEvent.type === 'linearRampToValue') {\n                            nativeAudioParam.linearRampToValueAtTime(currentLastEvent.value, currentLastEvent.endTime);\n                        } else if (currentLastEvent.type === 'setValue') {\n                            nativeAudioParam.setValueAtTime(currentLastEvent.value, currentLastEvent.startTime);\n                        } else if (currentLastEvent.type === 'setValueCurve') {\n                            nativeAudioParam.setValueCurveAtTime(\n                                currentLastEvent.values,\n                                currentLastEvent.startTime,\n                                currentLastEvent.duration\n                            );\n                        }\n                    }\n                }\n\n                return audioParam;\n            },\n            cancelScheduledValues(cancelTime: number): IAudioParam {\n                if (audioParamRenderer === null) {\n                    automationEventList.flush(audioNode.context.currentTime);\n                }\n\n                automationEventList.add(createCancelScheduledValuesAutomationEvent(cancelTime));\n                nativeAudioParam.cancelScheduledValues(cancelTime);\n\n                return audioParam;\n            },\n            exponentialRampToValueAtTime(value: number, endTime: number): IAudioParam {\n                // Bug #45: Safari does not throw an error yet.\n                if (value === 0) {\n                    throw new RangeError();\n                }\n\n                // Bug #187: Safari does not throw an error yet.\n                if (!Number.isFinite(endTime) || endTime < 0) {\n                    throw new RangeError();\n                }\n\n                if (audioParamRenderer === null) {\n                    automationEventList.flush(audioNode.context.currentTime);\n                }\n\n                automationEventList.add(createExponentialRampToValueAutomationEvent(value, endTime));\n                nativeAudioParam.exponentialRampToValueAtTime(value, endTime);\n\n                return audioParam;\n            },\n            linearRampToValueAtTime(value: number, endTime: number): IAudioParam {\n                if (audioParamRenderer === null) {\n                    automationEventList.flush(audioNode.context.currentTime);\n                }\n\n                automationEventList.add(createLinearRampToValueAutomationEvent(value, endTime));\n                nativeAudioParam.linearRampToValueAtTime(value, endTime);\n\n                return audioParam;\n            },\n            setTargetAtTime(target: number, startTime: number, timeConstant: number): IAudioParam {\n                if (audioParamRenderer === null) {\n                    automationEventList.flush(audioNode.context.currentTime);\n                }\n\n                automationEventList.add(createSetTargetAutomationEvent(target, startTime, timeConstant));\n                nativeAudioParam.setTargetAtTime(target, startTime, timeConstant);\n\n                return audioParam;\n            },\n            setValueAtTime(value: number, startTime: number): IAudioParam {\n                if (audioParamRenderer === null) {\n                    automationEventList.flush(audioNode.context.currentTime);\n                }\n\n                automationEventList.add(createSetValueAutomationEvent(value, startTime));\n                nativeAudioParam.setValueAtTime(value, startTime);\n\n                return audioParam;\n            },\n            setValueCurveAtTime(values: Iterable<number>, startTime: number, duration: number): IAudioParam {\n                // Bug 183: Safari only accepts a Float32Array.\n                const convertedValues = values instanceof Float32Array ? values : new Float32Array(values);\n                /*\n                 * Bug #152: Safari does not correctly interpolate the values of the curve.\n                 * @todo Unfortunately there is no way to test for this behavior in a synchronous fashion which is why testing for the\n                 * existence of the webkitAudioContext is used as a workaround here.\n                 */\n                if (nativeAudioContextConstructor !== null && nativeAudioContextConstructor.name === 'webkitAudioContext') {\n                    const endTime = startTime + duration;\n                    const sampleRate = audioNode.context.sampleRate;\n                    const firstSample = Math.ceil(startTime * sampleRate);\n                    const lastSample = Math.floor(endTime * sampleRate);\n                    const numberOfInterpolatedValues = lastSample - firstSample;\n                    const interpolatedValues = new Float32Array(numberOfInterpolatedValues);\n\n                    for (let i = 0; i < numberOfInterpolatedValues; i += 1) {\n                        const theoreticIndex = ((convertedValues.length - 1) / duration) * ((firstSample + i) / sampleRate - startTime);\n                        const lowerIndex = Math.floor(theoreticIndex);\n                        const upperIndex = Math.ceil(theoreticIndex);\n\n                        interpolatedValues[i] =\n                            lowerIndex === upperIndex\n                                ? convertedValues[lowerIndex]\n                                : (1 - (theoreticIndex - lowerIndex)) * convertedValues[lowerIndex] +\n                                  (1 - (upperIndex - theoreticIndex)) * convertedValues[upperIndex];\n                    }\n\n                    if (audioParamRenderer === null) {\n                        automationEventList.flush(audioNode.context.currentTime);\n                    }\n\n                    automationEventList.add(createSetValueCurveAutomationEvent(interpolatedValues, startTime, duration));\n                    nativeAudioParam.setValueCurveAtTime(interpolatedValues, startTime, duration);\n\n                    const timeOfLastSample = lastSample / sampleRate;\n\n                    if (timeOfLastSample < endTime) {\n                        setValueAtTimeUntilPossible(audioParam, interpolatedValues[interpolatedValues.length - 1], timeOfLastSample);\n                    }\n\n                    setValueAtTimeUntilPossible(audioParam, convertedValues[convertedValues.length - 1], endTime);\n                } else {\n                    if (audioParamRenderer === null) {\n                        automationEventList.flush(audioNode.context.currentTime);\n                    }\n\n                    automationEventList.add(createSetValueCurveAutomationEvent(convertedValues, startTime, duration));\n                    nativeAudioParam.setValueCurveAtTime(convertedValues, startTime, duration);\n                }\n\n                return audioParam;\n            }\n        };\n\n        audioParamStore.set(audioParam, nativeAudioParam);\n        audioParamAudioNodeStore.set(audioParam, audioNode);\n\n        addAudioParamConnections(\n            audioParam,\n            <T extends IMinimalOfflineAudioContext | IOfflineAudioContext ? IAudioParamRenderer : null>audioParamRenderer\n        );\n\n        return audioParam;\n    };\n};\n","import { TAudioParamRendererFactory, TNativeAudioParam } from '../types';\n\nexport const createAudioParamRenderer: TAudioParamRendererFactory = (automationEventList) => {\n    return {\n        replay(audioParam: TNativeAudioParam): void {\n            for (const automationEvent of automationEventList) {\n                if (automationEvent.type === 'exponentialRampToValue') {\n                    const { endTime, value } = automationEvent;\n\n                    audioParam.exponentialRampToValueAtTime(value, endTime);\n                } else if (automationEvent.type === 'linearRampToValue') {\n                    const { endTime, value } = automationEvent;\n\n                    audioParam.linearRampToValueAtTime(value, endTime);\n                } else if (automationEvent.type === 'setTarget') {\n                    const { startTime, target, timeConstant } = automationEvent;\n\n                    audioParam.setTargetAtTime(target, startTime, timeConstant);\n                } else if (automationEvent.type === 'setValue') {\n                    const { startTime, value } = automationEvent;\n\n                    audioParam.setValueAtTime(value, startTime);\n                } else if (automationEvent.type === 'setValueCurve') {\n                    const { duration, startTime, values } = automationEvent;\n\n                    audioParam.setValueCurveAtTime(values, startTime, duration);\n                } else {\n                    throw new Error(\"Can't apply an unknown automation.\");\n                }\n            }\n        }\n    };\n};\n","import { IReadOnlyMap } from './interfaces';\n\nexport class ReadOnlyMap<T, U> implements IReadOnlyMap<T, U> {\n    private _map: Map<T, U>;\n\n    constructor(parameters: [T, U][]) {\n        this._map = new Map(parameters);\n    }\n\n    get size(): number {\n        return this._map.size;\n    }\n\n    public entries(): IterableIterator<[T, U]> {\n        return this._map.entries();\n    }\n\n    public forEach(callback: (audioParam: U, name: T, map: ReadOnlyMap<T, U>) => void, thisArg: any = null): void {\n        return this._map.forEach((value: U, key: T) => callback.call(thisArg, value, key, this));\n    }\n\n    public get(name: T): undefined | U {\n        return this._map.get(name);\n    }\n\n    public has(name: T): boolean {\n        return this._map.has(name);\n    }\n\n    public keys(): IterableIterator<T> {\n        return this._map.keys();\n    }\n\n    public values(): IterableIterator<U> {\n        return this._map.values();\n    }\n}\n","import { NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS } from '../globals';\nimport {\n    IAudioParam,\n    IAudioWorkletNode,\n    IAudioWorkletNodeOptions,\n    IMinimalAudioContext,\n    IMinimalOfflineAudioContext,\n    IOfflineAudioContext,\n    IReadOnlyMap\n} from '../interfaces';\nimport { ReadOnlyMap } from '../read-only-map';\nimport {\n    TAudioNodeRenderer,\n    TAudioParamMap,\n    TAudioWorkletNodeConstructorFactory,\n    TContext,\n    TErrorEventHandler,\n    TNativeAudioContext,\n    TNativeAudioParam,\n    TNativeAudioWorkletNode\n} from '../types';\n\nconst DEFAULT_OPTIONS = {\n    channelCount: 2,\n    // Bug #61: The channelCountMode should be 'max' according to the spec but is set to 'explicit' to achieve consistent behavior.\n    channelCountMode: 'explicit',\n    channelInterpretation: 'speakers',\n    numberOfInputs: 1,\n    numberOfOutputs: 1,\n    parameterData: {},\n    processorOptions: {}\n} as const;\n\nexport const createAudioWorkletNodeConstructor: TAudioWorkletNodeConstructorFactory = (\n    addUnrenderedAudioWorkletNode,\n    audioNodeConstructor,\n    createAudioParam,\n    createAudioWorkletNodeRenderer,\n    createNativeAudioWorkletNode,\n    getAudioNodeConnections,\n    getBackupOfflineAudioContext,\n    getNativeContext,\n    isNativeOfflineAudioContext,\n    nativeAudioWorkletNodeConstructor,\n    sanitizeAudioWorkletNodeOptions,\n    setActiveAudioWorkletNodeInputs,\n    wrapEventListener\n) => {\n    return class AudioWorkletNode<T extends TContext> extends audioNodeConstructor<T> implements IAudioWorkletNode<T> {\n        private _nativeAudioWorkletNode: TNativeAudioWorkletNode;\n\n        private _onprocessorerror: null | TErrorEventHandler<this>;\n\n        private _parameters: null | TAudioParamMap;\n\n        constructor(context: T, name: string, options?: Partial<IAudioWorkletNodeOptions>) {\n            const nativeContext = getNativeContext(context);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const mergedOptions = sanitizeAudioWorkletNodeOptions({ ...DEFAULT_OPTIONS, ...options });\n            const nodeNameToProcessorConstructorMap = NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS.get(nativeContext);\n            const processorConstructor = nodeNameToProcessorConstructorMap?.get(name);\n            // Bug #186: Chrome, Edge and Opera do not allow to create an AudioWorkletNode on a closed AudioContext.\n            const nativeContextOrBackupOfflineAudioContext =\n                isOffline || nativeContext.state !== 'closed'\n                    ? nativeContext\n                    : getBackupOfflineAudioContext(<TNativeAudioContext>nativeContext) ?? nativeContext;\n            const nativeAudioWorkletNode = createNativeAudioWorkletNode(\n                nativeContextOrBackupOfflineAudioContext,\n                isOffline ? null : (<IMinimalAudioContext>(<any>context)).baseLatency,\n                nativeAudioWorkletNodeConstructor,\n                name,\n                processorConstructor,\n                mergedOptions\n            );\n            const audioWorkletNodeRenderer = <TAudioNodeRenderer<T, this>>(\n                (isOffline ? createAudioWorkletNodeRenderer(name, mergedOptions, processorConstructor) : null)\n            );\n\n            /*\n             * @todo Add a mechanism to switch an AudioWorkletNode to passive once the process() function of the AudioWorkletProcessor\n             * returns false.\n             */\n            super(context, true, nativeAudioWorkletNode, audioWorkletNodeRenderer);\n\n            const parameters: [string, IAudioParam][] = [];\n\n            nativeAudioWorkletNode.parameters.forEach((nativeAudioParam, nm) => {\n                const audioParam = createAudioParam(this, isOffline, nativeAudioParam);\n\n                parameters.push([nm, audioParam]);\n            });\n\n            this._nativeAudioWorkletNode = nativeAudioWorkletNode;\n            this._onprocessorerror = null;\n            this._parameters = new ReadOnlyMap(parameters);\n\n            /*\n             * Bug #86 & #87: Invoking the renderer of an AudioWorkletNode might be necessary if it has no direct or indirect connection to\n             * the destination.\n             */\n            if (isOffline) {\n                addUnrenderedAudioWorkletNode(nativeContext, <IAudioWorkletNode<IMinimalOfflineAudioContext | IOfflineAudioContext>>this);\n            }\n\n            const { activeInputs } = getAudioNodeConnections(this);\n\n            setActiveAudioWorkletNodeInputs(nativeAudioWorkletNode, activeInputs);\n        }\n\n        get onprocessorerror(): null | TErrorEventHandler<this> {\n            return this._onprocessorerror;\n        }\n\n        set onprocessorerror(value) {\n            const wrappedListener = typeof value === 'function' ? wrapEventListener(this, <EventListenerOrEventListenerObject>value) : null;\n\n            this._nativeAudioWorkletNode.onprocessorerror = wrappedListener;\n\n            const nativeOnProcessorError = this._nativeAudioWorkletNode.onprocessorerror;\n\n            this._onprocessorerror =\n                nativeOnProcessorError !== null && nativeOnProcessorError === wrappedListener\n                    ? value\n                    : <null | TErrorEventHandler<this>>nativeOnProcessorError;\n        }\n\n        get parameters(): TAudioParamMap {\n            if (this._parameters === null) {\n                // @todo The definition that TypeScript uses of the AudioParamMap is lacking many methods.\n                return <IReadOnlyMap<string, TNativeAudioParam>>this._nativeAudioWorkletNode.parameters;\n            }\n\n            return this._parameters;\n        }\n\n        get port(): MessagePort {\n            return this._nativeAudioWorkletNode.port;\n        }\n    };\n};\n","import { TNativeAudioBuffer } from '../types';\n\nexport function copyFromChannel(\n    audioBuffer: TNativeAudioBuffer,\n    parent: { [key: number]: Float32Array },\n    key: number,\n    channelNumber: number,\n    bufferOffset: number\n): void;\nexport function copyFromChannel(\n    audioBuffer: TNativeAudioBuffer,\n    parent: { [key: string]: Float32Array },\n    key: string,\n    channelNumber: number,\n    bufferOffset: number\n): void;\nexport function copyFromChannel(\n    audioBuffer: TNativeAudioBuffer,\n    // @todo There is currently no way to define something like { [ key: number | string ]: Float32Array }\n    parent: any,\n    key: number | string,\n    channelNumber: number,\n    bufferOffset: number\n): void {\n    if (typeof audioBuffer.copyFromChannel === 'function') {\n        // The byteLength will be 0 when the ArrayBuffer was transferred.\n        if (parent[key].byteLength === 0) {\n            parent[key] = new Float32Array(128);\n        }\n\n        audioBuffer.copyFromChannel(parent[key], channelNumber, bufferOffset);\n\n        // Bug #5: Safari does not support copyFromChannel().\n    } else {\n        const channelData = audioBuffer.getChannelData(channelNumber);\n\n        // The byteLength will be 0 when the ArrayBuffer was transferred.\n        if (parent[key].byteLength === 0) {\n            parent[key] = channelData.slice(bufferOffset, bufferOffset + 128);\n        } else {\n            const slicedInput = new Float32Array(channelData.buffer, bufferOffset * Float32Array.BYTES_PER_ELEMENT, 128);\n\n            parent[key].set(slicedInput);\n        }\n    }\n}\n","import { TNativeAudioBuffer } from '../types';\n\nexport const copyToChannel = (\n    audioBuffer: TNativeAudioBuffer,\n    parent: { [key: number]: Float32Array },\n    key: number,\n    channelNumber: number,\n    bufferOffset: number\n): void => {\n    if (typeof audioBuffer.copyToChannel === 'function') {\n        // The byteLength will be 0 when the ArrayBuffer was transferred.\n        if (parent[key].byteLength !== 0) {\n            audioBuffer.copyToChannel(parent[key], channelNumber, bufferOffset);\n        }\n\n        // Bug #5: Safari does not support copyToChannel().\n    } else {\n        // The byteLength will be 0 when the ArrayBuffer was transferred.\n        if (parent[key].byteLength !== 0) {\n            audioBuffer.getChannelData(channelNumber).set(parent[key], bufferOffset);\n        }\n    }\n};\n","export const createNestedArrays = (x: number, y: number | number[]): Float32Array[][] => {\n    const arrays: Float32Array[][] = [];\n\n    for (let i = 0; i < x; i += 1) {\n        const array = [];\n\n        const length = typeof y === 'number' ? y : y[i];\n\n        for (let j = 0; j < length; j += 1) {\n            array.push(new Float32Array(128));\n        }\n\n        arrays.push(array);\n    }\n\n    return arrays;\n};\n","import { NODE_TO_PROCESSOR_MAPS } from '../globals';\nimport { IAudioNode, IAudioWorkletProcessor } from '../interfaces';\nimport { TContext, TNativeAudioWorkletNode, TNativeOfflineAudioContext } from '../types';\nimport { getNativeAudioNode } from './get-native-audio-node';\nimport { getValueForKey } from './get-value-for-key';\n\nexport const getAudioWorkletProcessor = <T extends TContext>(\n    nativeOfflineAudioContext: TNativeOfflineAudioContext,\n    proxy: IAudioNode<T>\n): Promise<IAudioWorkletProcessor> => {\n    const nodeToProcessorMap = getValueForKey(NODE_TO_PROCESSOR_MAPS, nativeOfflineAudioContext);\n    const nativeAudioWorkletNode = getNativeAudioNode<T, TNativeAudioWorkletNode>(proxy);\n\n    return getValueForKey(nodeToProcessorMap, nativeAudioWorkletNode);\n};\n","import { copyFromChannel } from '../helpers/copy-from-channel';\nimport { copyToChannel } from '../helpers/copy-to-channel';\nimport { createNestedArrays } from '../helpers/create-nested-arrays';\nimport { getAudioNodeConnections } from '../helpers/get-audio-node-connections';\nimport { getAudioWorkletProcessor } from '../helpers/get-audio-worklet-processor';\nimport { isOwnedByContext } from '../helpers/is-owned-by-context';\nimport {\n    IAudioNode,\n    IAudioWorkletNode,\n    IAudioWorkletNodeOptions,\n    IAudioWorkletProcessorConstructor,\n    IMinimalOfflineAudioContext,\n    IOfflineAudioContext,\n    IReadOnlyMap\n} from '../interfaces';\nimport {\n    TAudioWorkletNodeRendererFactoryFactory,\n    TExposeCurrentFrameAndCurrentTimeFunction,\n    TNativeAudioBuffer,\n    TNativeAudioNode,\n    TNativeAudioParam,\n    TNativeAudioWorkletNode,\n    TNativeChannelMergerNode,\n    TNativeChannelSplitterNode,\n    TNativeGainNode,\n    TNativeOfflineAudioContext\n} from '../types';\n\nconst processBuffer = async <T extends IMinimalOfflineAudioContext | IOfflineAudioContext>(\n    proxy: IAudioWorkletNode<T>,\n    renderedBuffer: null | TNativeAudioBuffer,\n    nativeOfflineAudioContext: TNativeOfflineAudioContext,\n    options: IAudioWorkletNodeOptions,\n    outputChannelCount: number[],\n    processorConstructor: undefined | IAudioWorkletProcessorConstructor,\n    exposeCurrentFrameAndCurrentTime: TExposeCurrentFrameAndCurrentTimeFunction\n): Promise<null | TNativeAudioBuffer> => {\n    // Ceil the length to the next full render quantum.\n    // Bug #17: Safari does not yet expose the length.\n    const length = renderedBuffer === null ? Math.ceil(proxy.context.length / 128) * 128 : renderedBuffer.length;\n    const numberOfInputChannels = options.channelCount * options.numberOfInputs;\n    const numberOfOutputChannels = outputChannelCount.reduce((sum, value) => sum + value, 0);\n    const processedBuffer =\n        numberOfOutputChannels === 0\n            ? null\n            : nativeOfflineAudioContext.createBuffer(numberOfOutputChannels, length, nativeOfflineAudioContext.sampleRate);\n\n    if (processorConstructor === undefined) {\n        throw new Error('Missing the processor constructor.');\n    }\n\n    const audioNodeConnections = getAudioNodeConnections(proxy);\n    const audioWorkletProcessor = await getAudioWorkletProcessor(nativeOfflineAudioContext, proxy);\n    const inputs = createNestedArrays(options.numberOfInputs, options.channelCount);\n    const outputs = createNestedArrays(options.numberOfOutputs, outputChannelCount);\n    const parameters: { [name: string]: Float32Array } = Array.from(proxy.parameters.keys()).reduce(\n        (prmtrs, name) => ({ ...prmtrs, [name]: new Float32Array(128) }),\n        {}\n    );\n\n    for (let i = 0; i < length; i += 128) {\n        if (options.numberOfInputs > 0 && renderedBuffer !== null) {\n            for (let j = 0; j < options.numberOfInputs; j += 1) {\n                for (let k = 0; k < options.channelCount; k += 1) {\n                    copyFromChannel(renderedBuffer, inputs[j], k, k, i);\n                }\n            }\n        }\n\n        if (processorConstructor.parameterDescriptors !== undefined && renderedBuffer !== null) {\n            processorConstructor.parameterDescriptors.forEach(({ name }, index) => {\n                copyFromChannel(renderedBuffer, parameters, name, numberOfInputChannels + index, i);\n            });\n        }\n\n        for (let j = 0; j < options.numberOfInputs; j += 1) {\n            for (let k = 0; k < outputChannelCount[j]; k += 1) {\n                // The byteLength will be 0 when the ArrayBuffer was transferred.\n                if (outputs[j][k].byteLength === 0) {\n                    outputs[j][k] = new Float32Array(128);\n                }\n            }\n        }\n\n        try {\n            const potentiallyEmptyInputs = inputs.map((input, index) => {\n                if (audioNodeConnections.activeInputs[index].size === 0) {\n                    return [];\n                }\n\n                return input;\n            });\n            const activeSourceFlag = exposeCurrentFrameAndCurrentTime(\n                i / nativeOfflineAudioContext.sampleRate,\n                nativeOfflineAudioContext.sampleRate,\n                () => audioWorkletProcessor.process(potentiallyEmptyInputs, outputs, parameters)\n            );\n\n            if (processedBuffer !== null) {\n                for (let j = 0, outputChannelSplitterNodeOutput = 0; j < options.numberOfOutputs; j += 1) {\n                    for (let k = 0; k < outputChannelCount[j]; k += 1) {\n                        copyToChannel(processedBuffer, outputs[j], k, outputChannelSplitterNodeOutput + k, i);\n                    }\n\n                    outputChannelSplitterNodeOutput += outputChannelCount[j];\n                }\n            }\n\n            if (!activeSourceFlag) {\n                break;\n            }\n        } catch (error) {\n            proxy.dispatchEvent(\n                new ErrorEvent('processorerror', {\n                    colno: error.colno,\n                    filename: error.filename,\n                    lineno: error.lineno,\n                    message: error.message\n                })\n            );\n\n            break;\n        }\n    }\n\n    return processedBuffer;\n};\n\nexport const createAudioWorkletNodeRendererFactory: TAudioWorkletNodeRendererFactoryFactory = (\n    connectAudioParam,\n    connectMultipleOutputs,\n    createNativeAudioBufferSourceNode,\n    createNativeChannelMergerNode,\n    createNativeChannelSplitterNode,\n    createNativeConstantSourceNode,\n    createNativeGainNode,\n    deleteUnrenderedAudioWorkletNode,\n    disconnectMultipleOutputs,\n    exposeCurrentFrameAndCurrentTime,\n    getNativeAudioNode,\n    nativeAudioWorkletNodeConstructor,\n    nativeOfflineAudioContextConstructor,\n    renderAutomation,\n    renderInputsOfAudioNode,\n    renderNativeOfflineAudioContext\n) => {\n    return <T extends IMinimalOfflineAudioContext | IOfflineAudioContext>(\n        name: string,\n        options: IAudioWorkletNodeOptions,\n        processorConstructor: undefined | IAudioWorkletProcessorConstructor\n    ) => {\n        const renderedNativeAudioNodes = new WeakMap<TNativeOfflineAudioContext, TNativeAudioWorkletNode | TNativeGainNode>();\n\n        let processedBufferPromise: null | Promise<null | TNativeAudioBuffer> = null;\n\n        const createAudioNode = async (\n            proxy: IAudioWorkletNode<T>,\n            nativeOfflineAudioContext: TNativeOfflineAudioContext,\n            trace: readonly IAudioNode<T>[]\n        ) => {\n            let nativeAudioWorkletNode = getNativeAudioNode<T, TNativeAudioWorkletNode>(proxy);\n            let nativeOutputNodes: null | [TNativeChannelSplitterNode, TNativeChannelMergerNode[], TNativeGainNode] = null;\n\n            const nativeAudioWorkletNodeIsOwnedByContext = isOwnedByContext(nativeAudioWorkletNode, nativeOfflineAudioContext);\n            const outputChannelCount = Array.isArray(options.outputChannelCount)\n                ? options.outputChannelCount\n                : Array.from(options.outputChannelCount);\n\n            // Bug #61: Only Chrome, Edge, Firefox & Opera have an implementation of the AudioWorkletNode yet.\n            if (nativeAudioWorkletNodeConstructor === null) {\n                const numberOfOutputChannels = outputChannelCount.reduce((sum, value) => sum + value, 0);\n                const outputChannelSplitterNode = createNativeChannelSplitterNode(nativeOfflineAudioContext, {\n                    channelCount: Math.max(1, numberOfOutputChannels),\n                    channelCountMode: 'explicit',\n                    channelInterpretation: 'discrete',\n                    numberOfOutputs: Math.max(1, numberOfOutputChannels)\n                });\n                const outputChannelMergerNodes: TNativeChannelMergerNode[] = [];\n\n                for (let i = 0; i < proxy.numberOfOutputs; i += 1) {\n                    outputChannelMergerNodes.push(\n                        createNativeChannelMergerNode(nativeOfflineAudioContext, {\n                            channelCount: 1,\n                            channelCountMode: 'explicit',\n                            channelInterpretation: 'speakers',\n                            numberOfInputs: outputChannelCount[i]\n                        })\n                    );\n                }\n\n                const outputGainNode = createNativeGainNode(nativeOfflineAudioContext, {\n                    channelCount: options.channelCount,\n                    channelCountMode: options.channelCountMode,\n                    channelInterpretation: options.channelInterpretation,\n                    gain: 1\n                });\n\n                outputGainNode.connect = <TNativeAudioNode['connect']>connectMultipleOutputs.bind(null, outputChannelMergerNodes);\n                outputGainNode.disconnect = <TNativeAudioNode['disconnect']>disconnectMultipleOutputs.bind(null, outputChannelMergerNodes);\n\n                nativeOutputNodes = [outputChannelSplitterNode, outputChannelMergerNodes, outputGainNode];\n            } else if (!nativeAudioWorkletNodeIsOwnedByContext) {\n                nativeAudioWorkletNode = new nativeAudioWorkletNodeConstructor(nativeOfflineAudioContext, name);\n            }\n\n            renderedNativeAudioNodes.set(\n                nativeOfflineAudioContext,\n                nativeOutputNodes === null ? nativeAudioWorkletNode : nativeOutputNodes[2]\n            );\n\n            if (nativeOutputNodes !== null) {\n                if (processedBufferPromise === null) {\n                    if (processorConstructor === undefined) {\n                        throw new Error('Missing the processor constructor.');\n                    }\n\n                    if (nativeOfflineAudioContextConstructor === null) {\n                        throw new Error('Missing the native OfflineAudioContext constructor.');\n                    }\n\n                    // Bug #47: The AudioDestinationNode in Safari gets not initialized correctly.\n                    const numberOfInputChannels = proxy.channelCount * proxy.numberOfInputs;\n                    const numberOfParameters =\n                        processorConstructor.parameterDescriptors === undefined ? 0 : processorConstructor.parameterDescriptors.length;\n                    const numberOfChannels = numberOfInputChannels + numberOfParameters;\n\n                    const renderBuffer = async () => {\n                        const partialOfflineAudioContext = new nativeOfflineAudioContextConstructor(\n                            numberOfChannels,\n                            // Ceil the length to the next full render quantum.\n                            // Bug #17: Safari does not yet expose the length.\n                            Math.ceil(proxy.context.length / 128) * 128,\n                            nativeOfflineAudioContext.sampleRate\n                        );\n                        const gainNodes: TNativeGainNode[] = [];\n                        const inputChannelSplitterNodes = [];\n\n                        for (let i = 0; i < options.numberOfInputs; i += 1) {\n                            gainNodes.push(\n                                createNativeGainNode(partialOfflineAudioContext, {\n                                    channelCount: options.channelCount,\n                                    channelCountMode: options.channelCountMode,\n                                    channelInterpretation: options.channelInterpretation,\n                                    gain: 1\n                                })\n                            );\n                            inputChannelSplitterNodes.push(\n                                createNativeChannelSplitterNode(partialOfflineAudioContext, {\n                                    channelCount: options.channelCount,\n                                    channelCountMode: 'explicit',\n                                    channelInterpretation: 'discrete',\n                                    numberOfOutputs: options.channelCount\n                                })\n                            );\n                        }\n\n                        const constantSourceNodes = await Promise.all(\n                            Array.from(proxy.parameters.values()).map(async (audioParam) => {\n                                const constantSourceNode = createNativeConstantSourceNode(partialOfflineAudioContext, {\n                                    channelCount: 1,\n                                    channelCountMode: 'explicit',\n                                    channelInterpretation: 'discrete',\n                                    offset: audioParam.value\n                                });\n\n                                await renderAutomation(partialOfflineAudioContext, audioParam, constantSourceNode.offset, trace);\n\n                                return constantSourceNode;\n                            })\n                        );\n\n                        const inputChannelMergerNode = createNativeChannelMergerNode(partialOfflineAudioContext, {\n                            channelCount: 1,\n                            channelCountMode: 'explicit',\n                            channelInterpretation: 'speakers',\n                            numberOfInputs: Math.max(1, numberOfInputChannels + numberOfParameters)\n                        });\n\n                        for (let i = 0; i < options.numberOfInputs; i += 1) {\n                            gainNodes[i].connect(inputChannelSplitterNodes[i]);\n\n                            for (let j = 0; j < options.channelCount; j += 1) {\n                                inputChannelSplitterNodes[i].connect(inputChannelMergerNode, j, i * options.channelCount + j);\n                            }\n                        }\n\n                        for (const [index, constantSourceNode] of constantSourceNodes.entries()) {\n                            constantSourceNode.connect(inputChannelMergerNode, 0, numberOfInputChannels + index);\n                            constantSourceNode.start(0);\n                        }\n\n                        inputChannelMergerNode.connect(partialOfflineAudioContext.destination);\n\n                        await Promise.all(\n                            gainNodes.map((gainNode) => renderInputsOfAudioNode(proxy, partialOfflineAudioContext, gainNode, trace))\n                        );\n\n                        return renderNativeOfflineAudioContext(partialOfflineAudioContext);\n                    };\n\n                    processedBufferPromise = processBuffer(\n                        proxy,\n                        numberOfChannels === 0 ? null : await renderBuffer(),\n                        nativeOfflineAudioContext,\n                        options,\n                        outputChannelCount,\n                        processorConstructor,\n                        exposeCurrentFrameAndCurrentTime\n                    );\n                }\n\n                const processedBuffer = await processedBufferPromise;\n                const audioBufferSourceNode = createNativeAudioBufferSourceNode(nativeOfflineAudioContext, {\n                    buffer: null,\n                    channelCount: 2,\n                    channelCountMode: 'max',\n                    channelInterpretation: 'speakers',\n                    loop: false,\n                    loopEnd: 0,\n                    loopStart: 0,\n                    playbackRate: 1\n                });\n                const [outputChannelSplitterNode, outputChannelMergerNodes, outputGainNode] = nativeOutputNodes;\n\n                if (processedBuffer !== null) {\n                    audioBufferSourceNode.buffer = processedBuffer;\n                    audioBufferSourceNode.start(0);\n                }\n\n                audioBufferSourceNode.connect(outputChannelSplitterNode);\n\n                for (let i = 0, outputChannelSplitterNodeOutput = 0; i < proxy.numberOfOutputs; i += 1) {\n                    const outputChannelMergerNode = outputChannelMergerNodes[i];\n\n                    for (let j = 0; j < outputChannelCount[i]; j += 1) {\n                        outputChannelSplitterNode.connect(outputChannelMergerNode, outputChannelSplitterNodeOutput + j, j);\n                    }\n\n                    outputChannelSplitterNodeOutput += outputChannelCount[i];\n                }\n\n                return outputGainNode;\n            }\n\n            if (!nativeAudioWorkletNodeIsOwnedByContext) {\n                for (const [nm, audioParam] of proxy.parameters.entries()) {\n                    await renderAutomation(\n                        nativeOfflineAudioContext,\n                        audioParam,\n                        // @todo The definition that TypeScript uses of the AudioParamMap is lacking many methods.\n                        <TNativeAudioParam>(<IReadOnlyMap<string, TNativeAudioParam>>nativeAudioWorkletNode.parameters).get(nm),\n                        trace\n                    );\n                }\n            } else {\n                for (const [nm, audioParam] of proxy.parameters.entries()) {\n                    await connectAudioParam(\n                        nativeOfflineAudioContext,\n                        audioParam,\n                        // @todo The definition that TypeScript uses of the AudioParamMap is lacking many methods.\n                        <TNativeAudioParam>(<IReadOnlyMap<string, TNativeAudioParam>>nativeAudioWorkletNode.parameters).get(nm),\n                        trace\n                    );\n                }\n            }\n\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeAudioWorkletNode, trace);\n\n            return nativeAudioWorkletNode;\n        };\n\n        return {\n            render(\n                proxy: IAudioWorkletNode<T>,\n                nativeOfflineAudioContext: TNativeOfflineAudioContext,\n                trace: readonly IAudioNode<T>[]\n            ): Promise<TNativeAudioWorkletNode | TNativeGainNode> {\n                deleteUnrenderedAudioWorkletNode(nativeOfflineAudioContext, proxy);\n\n                const renderedNativeAudioWorkletNodeOrGainNode = renderedNativeAudioNodes.get(nativeOfflineAudioContext);\n\n                if (renderedNativeAudioWorkletNodeOrGainNode !== undefined) {\n                    return Promise.resolve(renderedNativeAudioWorkletNodeOrGainNode);\n                }\n\n                return createAudioNode(proxy, nativeOfflineAudioContext, trace);\n            }\n        };\n    };\n};\n","import {\n    IAnalyserNode,\n    IAudioBuffer,\n    IAudioBufferSourceNode,\n    IAudioNode,\n    IAudioWorklet,\n    IBaseAudioContext,\n    IBiquadFilterNode,\n    IConstantSourceNode,\n    IConvolverNode,\n    IDelayNode,\n    IDynamicsCompressorNode,\n    IGainNode,\n    IIIRFilterNode,\n    IOscillatorNode,\n    IPannerNode,\n    IPeriodicWave,\n    IPeriodicWaveConstraints,\n    IStereoPannerNode,\n    IWaveShaperNode,\n    IWorkletOptions\n} from '../interfaces';\nimport { TBaseAudioContextConstructorFactory, TContext, TDecodeErrorCallback, TDecodeSuccessCallback, TNativeContext } from '../types';\n\nexport const createBaseAudioContextConstructor: TBaseAudioContextConstructorFactory = (\n    addAudioWorkletModule,\n    analyserNodeConstructor,\n    audioBufferConstructor,\n    audioBufferSourceNodeConstructor,\n    biquadFilterNodeConstructor,\n    channelMergerNodeConstructor,\n    channelSplitterNodeConstructor,\n    constantSourceNodeConstructor,\n    convolverNodeConstructor,\n    decodeAudioData,\n    delayNodeConstructor,\n    dynamicsCompressorNodeConstructor,\n    gainNodeConstructor,\n    iIRFilterNodeConstructor,\n    minimalBaseAudioContextConstructor,\n    oscillatorNodeConstructor,\n    pannerNodeConstructor,\n    periodicWaveConstructor,\n    stereoPannerNodeConstructor,\n    waveShaperNodeConstructor\n) => {\n    return class BaseAudioContext<T extends TContext> extends minimalBaseAudioContextConstructor<T> implements IBaseAudioContext<T> {\n        private _audioWorklet: undefined | IAudioWorklet;\n\n        constructor(private _nativeContext: TNativeContext, numberOfChannels: number) {\n            super(_nativeContext, numberOfChannels);\n\n            this._audioWorklet =\n                addAudioWorkletModule === undefined\n                    ? undefined\n                    : {\n                          addModule: (moduleURL: string, options?: IWorkletOptions) => {\n                              return addAudioWorkletModule(<T>(<unknown>this), moduleURL, options);\n                          }\n                      };\n        }\n\n        get audioWorklet(): undefined | IAudioWorklet {\n            return this._audioWorklet;\n        }\n\n        public createAnalyser(): IAnalyserNode<T> {\n            return new analyserNodeConstructor(<T>(<unknown>this));\n        }\n\n        public createBiquadFilter(): IBiquadFilterNode<T> {\n            return new biquadFilterNodeConstructor(<T>(<unknown>this));\n        }\n\n        public createBuffer(numberOfChannels: number, length: number, sampleRate: number): IAudioBuffer {\n            return new audioBufferConstructor({ length, numberOfChannels, sampleRate });\n        }\n\n        public createBufferSource(): IAudioBufferSourceNode<T> {\n            return new audioBufferSourceNodeConstructor(<T>(<unknown>this));\n        }\n\n        public createChannelMerger(numberOfInputs = 6): IAudioNode<T> {\n            return new channelMergerNodeConstructor(<T>(<unknown>this), { numberOfInputs });\n        }\n\n        public createChannelSplitter(numberOfOutputs = 6): IAudioNode<T> {\n            return new channelSplitterNodeConstructor(<T>(<unknown>this), { numberOfOutputs });\n        }\n\n        public createConstantSource(): IConstantSourceNode<T> {\n            return new constantSourceNodeConstructor(<T>(<unknown>this));\n        }\n\n        public createConvolver(): IConvolverNode<T> {\n            return new convolverNodeConstructor(<T>(<unknown>this));\n        }\n\n        public createDelay(maxDelayTime = 1): IDelayNode<T> {\n            return new delayNodeConstructor(<T>(<unknown>this), { maxDelayTime });\n        }\n\n        public createDynamicsCompressor(): IDynamicsCompressorNode<T> {\n            return new dynamicsCompressorNodeConstructor(<T>(<unknown>this));\n        }\n\n        public createGain(): IGainNode<T> {\n            return new gainNodeConstructor(<T>(<unknown>this));\n        }\n\n        public createIIRFilter(feedforward: Iterable<number>, feedback: Iterable<number>): IIIRFilterNode<T> {\n            return new iIRFilterNodeConstructor(<T>(<unknown>this), { feedback, feedforward });\n        }\n\n        public createOscillator(): IOscillatorNode<T> {\n            return new oscillatorNodeConstructor(<T>(<unknown>this));\n        }\n\n        public createPanner(): IPannerNode<T> {\n            return new pannerNodeConstructor(<T>(<unknown>this));\n        }\n\n        public createPeriodicWave(\n            real: Iterable<number>,\n            imag: Iterable<number>,\n            constraints: Partial<IPeriodicWaveConstraints> = { disableNormalization: false }\n        ): IPeriodicWave {\n            return new periodicWaveConstructor(<T>(<unknown>this), { ...constraints, imag, real });\n        }\n\n        public createStereoPanner(): IStereoPannerNode<T> {\n            return new stereoPannerNodeConstructor(<T>(<unknown>this));\n        }\n\n        public createWaveShaper(): IWaveShaperNode<T> {\n            return new waveShaperNodeConstructor(<T>(<unknown>this));\n        }\n\n        public decodeAudioData(\n            audioData: ArrayBuffer,\n            successCallback?: TDecodeSuccessCallback,\n            errorCallback?: TDecodeErrorCallback\n        ): Promise<IAudioBuffer> {\n            return decodeAudioData(this._nativeContext, audioData)\n                .then((audioBuffer) => {\n                    if (typeof successCallback === 'function') {\n                        successCallback(audioBuffer);\n                    }\n\n                    return audioBuffer;\n                })\n                .catch((err) => {\n                    if (typeof errorCallback === 'function') {\n                        errorCallback(err);\n                    }\n\n                    throw err;\n                });\n        }\n    };\n};\n","import { MOST_NEGATIVE_SINGLE_FLOAT, MOST_POSITIVE_SINGLE_FLOAT } from '../constants';\nimport { IAudioParam, IBiquadFilterNode, IBiquadFilterOptions } from '../interfaces';\nimport { TAudioNodeRenderer, TBiquadFilterNodeConstructorFactory, TBiquadFilterType, TContext, TNativeBiquadFilterNode } from '../types';\n\nconst DEFAULT_OPTIONS = {\n    Q: 1,\n    channelCount: 2,\n    channelCountMode: 'max',\n    channelInterpretation: 'speakers',\n    detune: 0,\n    frequency: 350,\n    gain: 0,\n    type: 'lowpass'\n} as const;\n\nexport const createBiquadFilterNodeConstructor: TBiquadFilterNodeConstructorFactory = (\n    audioNodeConstructor,\n    createAudioParam,\n    createBiquadFilterNodeRenderer,\n    createInvalidAccessError,\n    createNativeBiquadFilterNode,\n    getNativeContext,\n    isNativeOfflineAudioContext,\n    setAudioNodeTailTime\n) => {\n    return class BiquadFilterNode<T extends TContext> extends audioNodeConstructor<T> implements IBiquadFilterNode<T> {\n        private _detune: IAudioParam;\n\n        private _frequency: IAudioParam;\n\n        private _gain: IAudioParam;\n\n        private _nativeBiquadFilterNode: TNativeBiquadFilterNode;\n\n        private _Q: IAudioParam;\n\n        constructor(context: T, options?: Partial<IBiquadFilterOptions>) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeBiquadFilterNode = createNativeBiquadFilterNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const biquadFilterNodeRenderer = <TAudioNodeRenderer<T, this>>(isOffline ? createBiquadFilterNodeRenderer() : null);\n\n            super(context, false, nativeBiquadFilterNode, biquadFilterNodeRenderer);\n\n            // Bug #80: Safari does not export the correct values for maxValue and minValue.\n            this._Q = createAudioParam(this, isOffline, nativeBiquadFilterNode.Q, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n            // Bug #78: Firefox & Safari do not export the correct values for maxValue and minValue.\n            this._detune = createAudioParam(\n                this,\n                isOffline,\n                nativeBiquadFilterNode.detune,\n                1200 * Math.log2(MOST_POSITIVE_SINGLE_FLOAT),\n                -1200 * Math.log2(MOST_POSITIVE_SINGLE_FLOAT)\n            );\n            // Bug #77: Firefox & Safari do not export the correct value for minValue.\n            this._frequency = createAudioParam(this, isOffline, nativeBiquadFilterNode.frequency, context.sampleRate / 2, 0);\n            // Bug #79: Firefox & Safari do not export the correct values for maxValue and minValue.\n            this._gain = createAudioParam(\n                this,\n                isOffline,\n                nativeBiquadFilterNode.gain,\n                40 * Math.log10(MOST_POSITIVE_SINGLE_FLOAT),\n                MOST_NEGATIVE_SINGLE_FLOAT\n            );\n            this._nativeBiquadFilterNode = nativeBiquadFilterNode;\n\n            // @todo Determine a meaningful tail-time instead of just using one second.\n            setAudioNodeTailTime(this, 1);\n        }\n\n        get detune(): IAudioParam {\n            return this._detune;\n        }\n\n        get frequency(): IAudioParam {\n            return this._frequency;\n        }\n\n        get gain(): IAudioParam {\n            return this._gain;\n        }\n\n        get Q(): IAudioParam {\n            return this._Q;\n        }\n\n        get type(): TBiquadFilterType {\n            return this._nativeBiquadFilterNode.type;\n        }\n\n        set type(value) {\n            this._nativeBiquadFilterNode.type = value;\n        }\n\n        public getFrequencyResponse(frequencyHz: Float32Array, magResponse: Float32Array, phaseResponse: Float32Array): void {\n            // Bug #189: Safari does throw an InvalidStateError.\n            try {\n                this._nativeBiquadFilterNode.getFrequencyResponse(frequencyHz, magResponse, phaseResponse);\n            } catch (err) {\n                if (err.code === 11) {\n                    throw createInvalidAccessError();\n                }\n\n                throw err;\n            }\n\n            // Bug #68: Safari does not throw an error if the parameters differ in their length.\n            if (frequencyHz.length !== magResponse.length || magResponse.length !== phaseResponse.length) {\n                throw createInvalidAccessError();\n            }\n        }\n    };\n};\n","import { isOwnedByContext } from '../helpers/is-owned-by-context';\nimport { IAudioNode, IBiquadFilterNode, IMinimalOfflineAudioContext, IOfflineAudioContext } from '../interfaces';\nimport { TBiquadFilterNodeRendererFactoryFactory, TNativeBiquadFilterNode, TNativeOfflineAudioContext } from '../types';\n\nexport const createBiquadFilterNodeRendererFactory: TBiquadFilterNodeRendererFactoryFactory = (\n    connectAudioParam,\n    createNativeBiquadFilterNode,\n    getNativeAudioNode,\n    renderAutomation,\n    renderInputsOfAudioNode\n) => {\n    return <T extends IMinimalOfflineAudioContext | IOfflineAudioContext>() => {\n        const renderedNativeBiquadFilterNodes = new WeakMap<TNativeOfflineAudioContext, TNativeBiquadFilterNode>();\n\n        const createBiquadFilterNode = async (\n            proxy: IBiquadFilterNode<T>,\n            nativeOfflineAudioContext: TNativeOfflineAudioContext,\n            trace: readonly IAudioNode<T>[]\n        ) => {\n            let nativeBiquadFilterNode = getNativeAudioNode<T, TNativeBiquadFilterNode>(proxy);\n\n            /*\n             * If the initially used nativeBiquadFilterNode was not constructed on the same OfflineAudioContext it needs to be created\n             * again.\n             */\n            const nativeBiquadFilterNodeIsOwnedByContext = isOwnedByContext(nativeBiquadFilterNode, nativeOfflineAudioContext);\n\n            if (!nativeBiquadFilterNodeIsOwnedByContext) {\n                const options = {\n                    Q: nativeBiquadFilterNode.Q.value,\n                    channelCount: nativeBiquadFilterNode.channelCount,\n                    channelCountMode: nativeBiquadFilterNode.channelCountMode,\n                    channelInterpretation: nativeBiquadFilterNode.channelInterpretation,\n                    detune: nativeBiquadFilterNode.detune.value,\n                    frequency: nativeBiquadFilterNode.frequency.value,\n                    gain: nativeBiquadFilterNode.gain.value,\n                    type: nativeBiquadFilterNode.type\n                };\n\n                nativeBiquadFilterNode = createNativeBiquadFilterNode(nativeOfflineAudioContext, options);\n            }\n\n            renderedNativeBiquadFilterNodes.set(nativeOfflineAudioContext, nativeBiquadFilterNode);\n\n            if (!nativeBiquadFilterNodeIsOwnedByContext) {\n                await renderAutomation(nativeOfflineAudioContext, proxy.Q, nativeBiquadFilterNode.Q, trace);\n                await renderAutomation(nativeOfflineAudioContext, proxy.detune, nativeBiquadFilterNode.detune, trace);\n                await renderAutomation(nativeOfflineAudioContext, proxy.frequency, nativeBiquadFilterNode.frequency, trace);\n                await renderAutomation(nativeOfflineAudioContext, proxy.gain, nativeBiquadFilterNode.gain, trace);\n            } else {\n                await connectAudioParam(nativeOfflineAudioContext, proxy.Q, nativeBiquadFilterNode.Q, trace);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.detune, nativeBiquadFilterNode.detune, trace);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.frequency, nativeBiquadFilterNode.frequency, trace);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.gain, nativeBiquadFilterNode.gain, trace);\n            }\n\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeBiquadFilterNode, trace);\n\n            return nativeBiquadFilterNode;\n        };\n\n        return {\n            render(\n                proxy: IBiquadFilterNode<T>,\n                nativeOfflineAudioContext: TNativeOfflineAudioContext,\n                trace: readonly IAudioNode<T>[]\n            ): Promise<TNativeBiquadFilterNode> {\n                const renderedNativeBiquadFilterNode = renderedNativeBiquadFilterNodes.get(nativeOfflineAudioContext);\n\n                if (renderedNativeBiquadFilterNode !== undefined) {\n                    return Promise.resolve(renderedNativeBiquadFilterNode);\n                }\n\n                return createBiquadFilterNode(proxy, nativeOfflineAudioContext, trace);\n            }\n        };\n    };\n};\n","import { TCacheTestResultFactory } from '../types';\n\nexport const createCacheTestResult: TCacheTestResultFactory = (ongoingTests, testResults) => {\n    return (tester, test) => {\n        const cachedTestResult = testResults.get(tester);\n\n        if (cachedTestResult !== undefined) {\n            return cachedTestResult;\n        }\n\n        const ongoingTest = ongoingTests.get(tester);\n\n        if (ongoingTest !== undefined) {\n            return ongoingTest;\n        }\n\n        try {\n            const synchronousTestResult = test();\n\n            if (synchronousTestResult instanceof Promise) {\n                ongoingTests.set(tester, synchronousTestResult);\n\n                return synchronousTestResult\n                    .catch(() => false)\n                    .then((finalTestResult) => {\n                        ongoingTests.delete(tester);\n                        testResults.set(tester, finalTestResult);\n\n                        return finalTestResult;\n                    });\n            }\n\n            testResults.set(tester, synchronousTestResult);\n\n            return synchronousTestResult;\n        } catch {\n            testResults.set(tester, false);\n\n            return false;\n        }\n    };\n};\n","import { IChannelMergerOptions } from '../interfaces';\nimport { TAudioNodeRenderer, TChannelMergerNodeConstructorFactory, TContext } from '../types';\n\nconst DEFAULT_OPTIONS = {\n    channelCount: 1,\n    channelCountMode: 'explicit',\n    channelInterpretation: 'speakers',\n    numberOfInputs: 6\n} as const;\n\nexport const createChannelMergerNodeConstructor: TChannelMergerNodeConstructorFactory = (\n    audioNodeConstructor,\n    createChannelMergerNodeRenderer,\n    createNativeChannelMergerNode,\n    getNativeContext,\n    isNativeOfflineAudioContext\n) => {\n    return class ChannelMergerNode<T extends TContext> extends audioNodeConstructor<T> {\n        constructor(context: T, options?: Partial<IChannelMergerOptions>) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeChannelMergerNode = createNativeChannelMergerNode(nativeContext, mergedOptions);\n            const channelMergerNodeRenderer = <TAudioNodeRenderer<T, this>>(\n                (isNativeOfflineAudioContext(nativeContext) ? createChannelMergerNodeRenderer() : null)\n            );\n\n            super(context, false, nativeChannelMergerNode, channelMergerNodeRenderer);\n        }\n    };\n};\n","import { isOwnedByContext } from '../helpers/is-owned-by-context';\nimport { IAudioNode, IMinimalOfflineAudioContext, IOfflineAudioContext } from '../interfaces';\nimport { TChannelMergerNodeRendererFactoryFactory, TNativeAudioNode, TNativeOfflineAudioContext } from '../types';\n\nexport const createChannelMergerNodeRendererFactory: TChannelMergerNodeRendererFactoryFactory = (\n    createNativeChannelMergerNode,\n    getNativeAudioNode,\n    renderInputsOfAudioNode\n) => {\n    return <T extends IMinimalOfflineAudioContext | IOfflineAudioContext>() => {\n        const renderedNativeAudioNodes = new WeakMap<TNativeOfflineAudioContext, TNativeAudioNode>();\n\n        const createAudioNode = async (\n            proxy: IAudioNode<T>,\n            nativeOfflineAudioContext: TNativeOfflineAudioContext,\n            trace: readonly IAudioNode<T>[]\n        ) => {\n            let nativeAudioNode = getNativeAudioNode<T, TNativeAudioNode>(proxy);\n\n            // If the initially used nativeAudioNode was not constructed on the same OfflineAudioContext it needs to be created again.\n            const nativeAudioNodeIsOwnedByContext = isOwnedByContext(nativeAudioNode, nativeOfflineAudioContext);\n\n            if (!nativeAudioNodeIsOwnedByContext) {\n                const options = {\n                    channelCount: nativeAudioNode.channelCount,\n                    channelCountMode: nativeAudioNode.channelCountMode,\n                    channelInterpretation: nativeAudioNode.channelInterpretation,\n                    numberOfInputs: nativeAudioNode.numberOfInputs\n                };\n\n                nativeAudioNode = createNativeChannelMergerNode(nativeOfflineAudioContext, options);\n            }\n\n            renderedNativeAudioNodes.set(nativeOfflineAudioContext, nativeAudioNode);\n\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeAudioNode, trace);\n\n            return nativeAudioNode;\n        };\n\n        return {\n            render(\n                proxy: IAudioNode<T>,\n                nativeOfflineAudioContext: TNativeOfflineAudioContext,\n                trace: readonly IAudioNode<T>[]\n            ): Promise<TNativeAudioNode> {\n                const renderedNativeAudioNode = renderedNativeAudioNodes.get(nativeOfflineAudioContext);\n\n                if (renderedNativeAudioNode !== undefined) {\n                    return Promise.resolve(renderedNativeAudioNode);\n                }\n\n                return createAudioNode(proxy, nativeOfflineAudioContext, trace);\n            }\n        };\n    };\n};\n","import { IChannelSplitterOptions } from '../interfaces';\nimport { TAudioNodeRenderer, TChannelSplitterNodeConstructorFactory, TContext } from '../types';\n\nconst DEFAULT_OPTIONS = {\n    channelCount: 6,\n    channelCountMode: 'explicit',\n    channelInterpretation: 'discrete',\n    numberOfOutputs: 6\n} as const;\n\nexport const createChannelSplitterNodeConstructor: TChannelSplitterNodeConstructorFactory = (\n    audioNodeConstructor,\n    createChannelSplitterNodeRenderer,\n    createNativeChannelSplitterNode,\n    getNativeContext,\n    isNativeOfflineAudioContext,\n    sanitizeChannelSplitterOptions\n) => {\n    return class ChannelSplitterNode<T extends TContext> extends audioNodeConstructor<T> {\n        constructor(context: T, options?: Partial<IChannelSplitterOptions>) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = sanitizeChannelSplitterOptions({ ...DEFAULT_OPTIONS, ...options });\n            const nativeChannelSplitterNode = createNativeChannelSplitterNode(nativeContext, mergedOptions);\n            const channelSplitterNodeRenderer = <TAudioNodeRenderer<T, this>>(\n                (isNativeOfflineAudioContext(nativeContext) ? createChannelSplitterNodeRenderer() : null)\n            );\n\n            super(context, false, nativeChannelSplitterNode, channelSplitterNodeRenderer);\n        }\n    };\n};\n","import { isOwnedByContext } from '../helpers/is-owned-by-context';\nimport { IAudioNode, IMinimalOfflineAudioContext, IOfflineAudioContext } from '../interfaces';\nimport { TChannelSplitterNodeRendererFactoryFactory, TNativeAudioNode, TNativeOfflineAudioContext } from '../types';\n\nexport const createChannelSplitterNodeRendererFactory: TChannelSplitterNodeRendererFactoryFactory = (\n    createNativeChannelSplitterNode,\n    getNativeAudioNode,\n    renderInputsOfAudioNode\n) => {\n    return <T extends IMinimalOfflineAudioContext | IOfflineAudioContext>() => {\n        const renderedNativeAudioNodes = new WeakMap<TNativeOfflineAudioContext, TNativeAudioNode>();\n\n        const createAudioNode = async (\n            proxy: IAudioNode<T>,\n            nativeOfflineAudioContext: TNativeOfflineAudioContext,\n            trace: readonly IAudioNode<T>[]\n        ) => {\n            let nativeAudioNode = getNativeAudioNode<T, TNativeAudioNode>(proxy);\n\n            // If the initially used nativeAudioNode was not constructed on the same OfflineAudioContext it needs to be created again.\n            const nativeAudioNodeIsOwnedByContext = isOwnedByContext(nativeAudioNode, nativeOfflineAudioContext);\n\n            if (!nativeAudioNodeIsOwnedByContext) {\n                const options = {\n                    channelCount: nativeAudioNode.channelCount,\n                    channelCountMode: nativeAudioNode.channelCountMode,\n                    channelInterpretation: nativeAudioNode.channelInterpretation,\n                    numberOfOutputs: nativeAudioNode.numberOfOutputs\n                };\n\n                nativeAudioNode = createNativeChannelSplitterNode(nativeOfflineAudioContext, options);\n            }\n\n            renderedNativeAudioNodes.set(nativeOfflineAudioContext, nativeAudioNode);\n\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeAudioNode, trace);\n\n            return nativeAudioNode;\n        };\n\n        return {\n            render(\n                proxy: IAudioNode<T>,\n                nativeOfflineAudioContext: TNativeOfflineAudioContext,\n                trace: readonly IAudioNode<T>[]\n            ): Promise<TNativeAudioNode> {\n                const renderedNativeAudioNode = renderedNativeAudioNodes.get(nativeOfflineAudioContext);\n\n                if (renderedNativeAudioNode !== undefined) {\n                    return Promise.resolve(renderedNativeAudioNode);\n                }\n\n                return createAudioNode(proxy, nativeOfflineAudioContext, trace);\n            }\n        };\n    };\n};\n","import { TConnectAudioParamFactory } from '../types';\n\nexport const createConnectAudioParam: TConnectAudioParamFactory = (renderInputsOfAudioParam) => {\n    return (nativeOfflineAudioContext, audioParam, nativeAudioParam, trace) => {\n        return renderInputsOfAudioParam(audioParam, nativeOfflineAudioContext, nativeAudioParam, trace);\n    };\n};\n","import { isNativeAudioNode } from '../guards/native-audio-node';\nimport { TConnectMultipleOutputsFactory } from '../types';\n\nexport const createConnectMultipleOutputs: TConnectMultipleOutputsFactory = (createIndexSizeError) => {\n    return (outputAudioNodes, destination, output = 0, input = 0) => {\n        const outputAudioNode = outputAudioNodes[output];\n\n        if (outputAudioNode === undefined) {\n            throw createIndexSizeError();\n        }\n\n        if (isNativeAudioNode(destination)) {\n            return outputAudioNode.connect(destination, 0, input);\n        }\n\n        return outputAudioNode.connect(destination, 0);\n    };\n};\n","import { TConnectedNativeAudioBufferSourceNodeFactoryFactory } from '../types';\n\nexport const createConnectedNativeAudioBufferSourceNodeFactory: TConnectedNativeAudioBufferSourceNodeFactoryFactory = (\n    createNativeAudioBufferSourceNode\n) => {\n    return (nativeContext, nativeAudioNode) => {\n        const nativeAudioBufferSourceNode = createNativeAudioBufferSourceNode(nativeContext, {\n            buffer: null,\n            channelCount: 2,\n            channelCountMode: 'max',\n            channelInterpretation: 'speakers',\n            loop: false,\n            loopEnd: 0,\n            loopStart: 0,\n            playbackRate: 1\n        });\n        const nativeAudioBuffer = nativeContext.createBuffer(1, 2, 44100);\n\n        nativeAudioBufferSourceNode.buffer = nativeAudioBuffer;\n        nativeAudioBufferSourceNode.loop = true;\n\n        nativeAudioBufferSourceNode.connect(nativeAudioNode);\n        nativeAudioBufferSourceNode.start();\n\n        return () => {\n            nativeAudioBufferSourceNode.stop();\n            nativeAudioBufferSourceNode.disconnect(nativeAudioNode);\n        };\n    };\n};\n","import { MOST_NEGATIVE_SINGLE_FLOAT, MOST_POSITIVE_SINGLE_FLOAT } from '../constants';\nimport { isActiveAudioNode } from '../helpers/is-active-audio-node';\nimport { setInternalStateToActive } from '../helpers/set-internal-state-to-active';\nimport { setInternalStateToPassive } from '../helpers/set-internal-state-to-passive';\nimport { IAudioParam, IConstantSourceNode, IConstantSourceOptions } from '../interfaces';\nimport {\n    TConstantSourceNodeConstructorFactory,\n    TConstantSourceNodeRenderer,\n    TContext,\n    TEventHandler,\n    TNativeConstantSourceNode\n} from '../types';\n\nconst DEFAULT_OPTIONS = {\n    channelCount: 2,\n    channelCountMode: 'max',\n    channelInterpretation: 'speakers',\n    offset: 1\n} as const;\n\nexport const createConstantSourceNodeConstructor: TConstantSourceNodeConstructorFactory = (\n    audioNodeConstructor,\n    createAudioParam,\n    createConstantSourceNodeRendererFactory,\n    createNativeConstantSourceNode,\n    getNativeContext,\n    isNativeOfflineAudioContext,\n    wrapEventListener\n) => {\n    return class ConstantSourceNode<T extends TContext> extends audioNodeConstructor<T> implements IConstantSourceNode<T> {\n        private _constantSourceNodeRenderer: TConstantSourceNodeRenderer<T>;\n\n        private _nativeConstantSourceNode: TNativeConstantSourceNode;\n\n        private _offset: IAudioParam;\n\n        private _onended: null | TEventHandler<this>;\n\n        constructor(context: T, options?: Partial<IConstantSourceOptions>) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeConstantSourceNode = createNativeConstantSourceNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const constantSourceNodeRenderer = <TConstantSourceNodeRenderer<T>>(\n                (isOffline ? createConstantSourceNodeRendererFactory() : null)\n            );\n\n            super(context, false, nativeConstantSourceNode, constantSourceNodeRenderer);\n\n            this._constantSourceNodeRenderer = constantSourceNodeRenderer;\n            this._nativeConstantSourceNode = nativeConstantSourceNode;\n            /*\n             * Bug #62 & #74: Safari does not support ConstantSourceNodes and does not export the correct values for maxValue and minValue\n             * for GainNodes.\n             */\n            this._offset = createAudioParam(\n                this,\n                isOffline,\n                nativeConstantSourceNode.offset,\n                MOST_POSITIVE_SINGLE_FLOAT,\n                MOST_NEGATIVE_SINGLE_FLOAT\n            );\n            this._onended = null;\n        }\n\n        get offset(): IAudioParam {\n            return this._offset;\n        }\n\n        get onended(): null | TEventHandler<this> {\n            return this._onended;\n        }\n\n        set onended(value) {\n            const wrappedListener = typeof value === 'function' ? wrapEventListener(this, value) : null;\n\n            this._nativeConstantSourceNode.onended = wrappedListener;\n\n            const nativeOnEnded = this._nativeConstantSourceNode.onended;\n\n            this._onended = nativeOnEnded !== null && nativeOnEnded === wrappedListener ? value : <null | TEventHandler<this>>nativeOnEnded;\n        }\n\n        public start(when = 0): void {\n            this._nativeConstantSourceNode.start(when);\n\n            if (this._constantSourceNodeRenderer !== null) {\n                this._constantSourceNodeRenderer.start = when;\n            }\n\n            if (this.context.state !== 'closed') {\n                setInternalStateToActive(this);\n\n                const resetInternalStateToPassive = () => {\n                    this._nativeConstantSourceNode.removeEventListener('ended', resetInternalStateToPassive);\n\n                    if (isActiveAudioNode(this)) {\n                        setInternalStateToPassive(this);\n                    }\n                };\n\n                this._nativeConstantSourceNode.addEventListener('ended', resetInternalStateToPassive);\n            }\n        }\n\n        public stop(when = 0): void {\n            this._nativeConstantSourceNode.stop(when);\n\n            if (this._constantSourceNodeRenderer !== null) {\n                this._constantSourceNodeRenderer.stop = when;\n            }\n        }\n    };\n};\n","import { isOwnedByContext } from '../helpers/is-owned-by-context';\nimport { IAudioNode, IConstantSourceNode, IMinimalOfflineAudioContext, IOfflineAudioContext } from '../interfaces';\nimport { TConstantSourceNodeRendererFactoryFactory, TNativeConstantSourceNode, TNativeOfflineAudioContext } from '../types';\n\nexport const createConstantSourceNodeRendererFactory: TConstantSourceNodeRendererFactoryFactory = (\n    connectAudioParam,\n    createNativeConstantSourceNode,\n    getNativeAudioNode,\n    renderAutomation,\n    renderInputsOfAudioNode\n) => {\n    return <T extends IMinimalOfflineAudioContext | IOfflineAudioContext>() => {\n        const renderedNativeConstantSourceNodes = new WeakMap<TNativeOfflineAudioContext, TNativeConstantSourceNode>();\n\n        let start: null | number = null;\n        let stop: null | number = null;\n\n        const createConstantSourceNode = async (\n            proxy: IConstantSourceNode<T>,\n            nativeOfflineAudioContext: TNativeOfflineAudioContext,\n            trace: readonly IAudioNode<T>[]\n        ) => {\n            let nativeConstantSourceNode = getNativeAudioNode<T, TNativeConstantSourceNode>(proxy);\n\n            /*\n             * If the initially used nativeConstantSourceNode was not constructed on the same OfflineAudioContext it needs to be created\n             * again.\n             */\n            const nativeConstantSourceNodeIsOwnedByContext = isOwnedByContext(nativeConstantSourceNode, nativeOfflineAudioContext);\n\n            if (!nativeConstantSourceNodeIsOwnedByContext) {\n                const options = {\n                    channelCount: nativeConstantSourceNode.channelCount,\n                    channelCountMode: nativeConstantSourceNode.channelCountMode,\n                    channelInterpretation: nativeConstantSourceNode.channelInterpretation,\n                    offset: nativeConstantSourceNode.offset.value\n                };\n\n                nativeConstantSourceNode = createNativeConstantSourceNode(nativeOfflineAudioContext, options);\n\n                if (start !== null) {\n                    nativeConstantSourceNode.start(start);\n                }\n\n                if (stop !== null) {\n                    nativeConstantSourceNode.stop(stop);\n                }\n            }\n\n            renderedNativeConstantSourceNodes.set(nativeOfflineAudioContext, nativeConstantSourceNode);\n\n            if (!nativeConstantSourceNodeIsOwnedByContext) {\n                await renderAutomation(nativeOfflineAudioContext, proxy.offset, nativeConstantSourceNode.offset, trace);\n            } else {\n                await connectAudioParam(nativeOfflineAudioContext, proxy.offset, nativeConstantSourceNode.offset, trace);\n            }\n\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeConstantSourceNode, trace);\n\n            return nativeConstantSourceNode;\n        };\n\n        return {\n            set start(value: number) {\n                start = value;\n            },\n            set stop(value: number) {\n                stop = value;\n            },\n            render(\n                proxy: IConstantSourceNode<T>,\n                nativeOfflineAudioContext: TNativeOfflineAudioContext,\n                trace: readonly IAudioNode<T>[]\n            ): Promise<TNativeConstantSourceNode> {\n                const renderedNativeConstantSourceNode = renderedNativeConstantSourceNodes.get(nativeOfflineAudioContext);\n\n                if (renderedNativeConstantSourceNode !== undefined) {\n                    return Promise.resolve(renderedNativeConstantSourceNode);\n                }\n\n                return createConstantSourceNode(proxy, nativeOfflineAudioContext, trace);\n            }\n        };\n    };\n};\n","import { TConvertNumberToUnsignedLongFactory } from '../types';\n\nexport const createConvertNumberToUnsignedLong: TConvertNumberToUnsignedLongFactory = (unit32Array) => {\n    return (value) => {\n        unit32Array[0] = value;\n\n        return unit32Array[0];\n    };\n};\n","import { IConvolverNode, IConvolverOptions } from '../interfaces';\nimport { TAnyAudioBuffer, TAudioNodeRenderer, TContext, TConvolverNodeConstructorFactory, TNativeConvolverNode } from '../types';\n\nconst DEFAULT_OPTIONS = {\n    buffer: null,\n    channelCount: 2,\n    channelCountMode: 'clamped-max',\n    channelInterpretation: 'speakers',\n    disableNormalization: false\n} as const;\n\nexport const createConvolverNodeConstructor: TConvolverNodeConstructorFactory = (\n    audioNodeConstructor,\n    createConvolverNodeRenderer,\n    createNativeConvolverNode,\n    getNativeContext,\n    isNativeOfflineAudioContext,\n    setAudioNodeTailTime\n) => {\n    return class ConvolverNode<T extends TContext> extends audioNodeConstructor<T> implements IConvolverNode<T> {\n        private _isBufferNullified: boolean;\n\n        private _nativeConvolverNode: TNativeConvolverNode;\n\n        constructor(context: T, options?: Partial<IConvolverOptions>) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeConvolverNode = createNativeConvolverNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const convolverNodeRenderer = <TAudioNodeRenderer<T, this>>(isOffline ? createConvolverNodeRenderer() : null);\n\n            super(context, false, nativeConvolverNode, convolverNodeRenderer);\n\n            this._isBufferNullified = false;\n            this._nativeConvolverNode = nativeConvolverNode;\n\n            if (mergedOptions.buffer !== null) {\n                setAudioNodeTailTime(this, mergedOptions.buffer.duration);\n            }\n        }\n\n        get buffer(): null | TAnyAudioBuffer {\n            if (this._isBufferNullified) {\n                return null;\n            }\n\n            return this._nativeConvolverNode.buffer;\n        }\n\n        set buffer(value) {\n            this._nativeConvolverNode.buffer = value;\n\n            // Bug #115: Safari does not allow to set the buffer to null.\n            if (value === null && this._nativeConvolverNode.buffer !== null) {\n                const nativeContext = this._nativeConvolverNode.context;\n\n                this._nativeConvolverNode.buffer = nativeContext.createBuffer(1, 1, 44100);\n                this._isBufferNullified = true;\n\n                setAudioNodeTailTime(this, 0);\n            } else {\n                this._isBufferNullified = false;\n\n                setAudioNodeTailTime(this, this._nativeConvolverNode.buffer === null ? 0 : this._nativeConvolverNode.buffer.duration);\n            }\n        }\n\n        get normalize(): boolean {\n            return this._nativeConvolverNode.normalize;\n        }\n\n        set normalize(value) {\n            this._nativeConvolverNode.normalize = value;\n        }\n    };\n};\n","import { isNativeAudioNodeFaker } from '../guards/native-audio-node-faker';\nimport { isOwnedByContext } from '../helpers/is-owned-by-context';\nimport { IAudioNode, IConvolverNode, IMinimalOfflineAudioContext, IOfflineAudioContext } from '../interfaces';\nimport { TConvolverNodeRendererFactoryFactory, TNativeConvolverNode, TNativeOfflineAudioContext } from '../types';\n\nexport const createConvolverNodeRendererFactory: TConvolverNodeRendererFactoryFactory = (\n    createNativeConvolverNode,\n    getNativeAudioNode,\n    renderInputsOfAudioNode\n) => {\n    return <T extends IMinimalOfflineAudioContext | IOfflineAudioContext>() => {\n        const renderedNativeConvolverNodes = new WeakMap<TNativeOfflineAudioContext, TNativeConvolverNode>();\n\n        const createConvolverNode = async (\n            proxy: IConvolverNode<T>,\n            nativeOfflineAudioContext: TNativeOfflineAudioContext,\n            trace: readonly IAudioNode<T>[]\n        ) => {\n            let nativeConvolverNode = getNativeAudioNode<T, TNativeConvolverNode>(proxy);\n\n            // If the initially used nativeConvolverNode was not constructed on the same OfflineAudioContext it needs to be created again.\n            const nativeConvolverNodeIsOwnedByContext = isOwnedByContext(nativeConvolverNode, nativeOfflineAudioContext);\n\n            if (!nativeConvolverNodeIsOwnedByContext) {\n                const options = {\n                    buffer: nativeConvolverNode.buffer,\n                    channelCount: nativeConvolverNode.channelCount,\n                    channelCountMode: nativeConvolverNode.channelCountMode,\n                    channelInterpretation: nativeConvolverNode.channelInterpretation,\n                    disableNormalization: !nativeConvolverNode.normalize\n                };\n\n                nativeConvolverNode = createNativeConvolverNode(nativeOfflineAudioContext, options);\n            }\n\n            renderedNativeConvolverNodes.set(nativeOfflineAudioContext, nativeConvolverNode);\n\n            if (isNativeAudioNodeFaker(nativeConvolverNode)) {\n                await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeConvolverNode.inputs[0], trace);\n            } else {\n                await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeConvolverNode, trace);\n            }\n\n            return nativeConvolverNode;\n        };\n\n        return {\n            render(\n                proxy: IConvolverNode<T>,\n                nativeOfflineAudioContext: TNativeOfflineAudioContext,\n                trace: readonly IAudioNode<T>[]\n            ): Promise<TNativeConvolverNode> {\n                const renderedNativeConvolverNode = renderedNativeConvolverNodes.get(nativeOfflineAudioContext);\n\n                if (renderedNativeConvolverNode !== undefined) {\n                    return Promise.resolve(renderedNativeConvolverNode);\n                }\n\n                return createConvolverNode(proxy, nativeOfflineAudioContext, trace);\n            }\n        };\n    };\n};\n","import { TCreateNativeOfflineAudioContextFactory } from '../types';\n\nexport const createCreateNativeOfflineAudioContext: TCreateNativeOfflineAudioContextFactory = (\n    createNotSupportedError,\n    nativeOfflineAudioContextConstructor\n) => {\n    return (numberOfChannels, length, sampleRate) => {\n        if (nativeOfflineAudioContextConstructor === null) {\n            throw new Error('Missing the native OfflineAudioContext constructor.');\n        }\n\n        try {\n            return new nativeOfflineAudioContextConstructor(numberOfChannels, length, sampleRate);\n        } catch (err) {\n            // Bug #143, #144 & #146: Safari throws a SyntaxError when numberOfChannels, length or sampleRate are invalid.\n            if (err.name === 'SyntaxError') {\n                throw createNotSupportedError();\n            }\n\n            throw err;\n        }\n    };\n};\n","import { TDataCloneErrorFactory } from '../types';\n\nexport const createDataCloneError: TDataCloneErrorFactory = () => new DOMException('', 'DataCloneError');\n","export const detachArrayBuffer = (arrayBuffer: ArrayBuffer): Promise<void> => {\n    const { port1, port2 } = new MessageChannel();\n\n    return new Promise((resolve) => {\n        port2.onmessage = () => {\n            port1.close();\n            port2.close();\n\n            resolve();\n        };\n\n        port1.postMessage(arrayBuffer, [arrayBuffer]);\n    });\n};\n","import { detachArrayBuffer } from '../helpers/detach-array-buffer';\nimport { wrapAudioBufferGetChannelDataMethod } from '../helpers/wrap-audio-buffer-get-channel-data-method';\nimport { TDecodeAudioDataFactory } from '../types';\n\nexport const createDecodeAudioData: TDecodeAudioDataFactory = (\n    audioBufferStore,\n    cacheTestResult,\n    createDataCloneError,\n    createEncodingError,\n    detachedArrayBuffers,\n    getNativeContext,\n    isNativeContext,\n    testAudioBufferCopyChannelMethodsOutOfBoundsSupport,\n    testPromiseSupport,\n    wrapAudioBufferCopyChannelMethods,\n    wrapAudioBufferCopyChannelMethodsOutOfBounds\n) => {\n    return (anyContext, audioData) => {\n        const nativeContext = isNativeContext(anyContext) ? anyContext : getNativeContext(anyContext);\n\n        // Bug #43: Only Chrome, Edge and Opera do throw a DataCloneError.\n        if (detachedArrayBuffers.has(audioData)) {\n            const err = createDataCloneError();\n\n            return Promise.reject(err);\n        }\n\n        // The audioData parameter maybe of a type which can't be added to a WeakSet.\n        try {\n            detachedArrayBuffers.add(audioData);\n        } catch {\n            // Ignore errors.\n        }\n\n        // Bug #21: Safari does not support promises yet.\n        if (cacheTestResult(testPromiseSupport, () => testPromiseSupport(nativeContext))) {\n            return nativeContext.decodeAudioData(audioData).then((audioBuffer) => {\n                // Bug #157: Firefox does not allow the bufferOffset to be out-of-bounds.\n                if (\n                    !cacheTestResult(testAudioBufferCopyChannelMethodsOutOfBoundsSupport, () =>\n                        testAudioBufferCopyChannelMethodsOutOfBoundsSupport(audioBuffer)\n                    )\n                ) {\n                    wrapAudioBufferCopyChannelMethodsOutOfBounds(audioBuffer);\n                }\n\n                audioBufferStore.add(audioBuffer);\n\n                return audioBuffer;\n            });\n        }\n\n        // Bug #21: Safari does not return a Promise yet.\n        return new Promise((resolve, reject) => {\n            const complete = async () => {\n                // Bug #133: Safari does neuter the ArrayBuffer.\n                try {\n                    await detachArrayBuffer(audioData);\n                } catch {\n                    // Ignore errors.\n                }\n            };\n\n            const fail = (err: DOMException | Error) => {\n                reject(err);\n                complete();\n            };\n\n            // Bug #26: Safari throws a synchronous error.\n            try {\n                // Bug #1: Safari requires a successCallback.\n                nativeContext.decodeAudioData(\n                    audioData,\n                    (audioBuffer) => {\n                        // Bug #5: Safari does not support copyFromChannel() and copyToChannel().\n                        // Bug #100: Safari does throw a wrong error when calling getChannelData() with an out-of-bounds value.\n                        if (typeof audioBuffer.copyFromChannel !== 'function') {\n                            wrapAudioBufferCopyChannelMethods(audioBuffer);\n                            wrapAudioBufferGetChannelDataMethod(audioBuffer);\n                        }\n\n                        audioBufferStore.add(audioBuffer);\n\n                        complete().then(() => resolve(audioBuffer));\n                    },\n                    (err: DOMException | Error) => {\n                        // Bug #4: Safari returns null instead of an error.\n                        if (err === null) {\n                            fail(createEncodingError());\n                        } else {\n                            fail(err);\n                        }\n                    }\n                );\n            } catch (err) {\n                fail(err);\n            }\n        });\n    };\n};\n","import { isAudioNodeOutputConnection } from '../guards/audio-node-output-connection';\nimport { TDecrementCycleCounterFactory } from '../types';\n\nexport const createDecrementCycleCounter: TDecrementCycleCounterFactory = (\n    connectNativeAudioNodeToNativeAudioNode,\n    cycleCounters,\n    getAudioNodeConnections,\n    getNativeAudioNode,\n    getNativeAudioParam,\n    getNativeContext,\n    isActiveAudioNode,\n    isNativeOfflineAudioContext\n) => {\n    return (audioNode, count) => {\n        const cycleCounter = cycleCounters.get(audioNode);\n\n        if (cycleCounter === undefined) {\n            throw new Error('Missing the expected cycle count.');\n        }\n\n        const nativeContext = getNativeContext(audioNode.context);\n        const isOffline = isNativeOfflineAudioContext(nativeContext);\n\n        if (cycleCounter === count) {\n            cycleCounters.delete(audioNode);\n\n            if (!isOffline && isActiveAudioNode(audioNode)) {\n                const nativeSourceAudioNode = getNativeAudioNode(audioNode);\n                const { outputs } = getAudioNodeConnections(audioNode);\n\n                for (const output of outputs) {\n                    if (isAudioNodeOutputConnection(output)) {\n                        const nativeDestinationAudioNode = getNativeAudioNode(output[0]);\n\n                        connectNativeAudioNodeToNativeAudioNode(nativeSourceAudioNode, nativeDestinationAudioNode, output[1], output[2]);\n                    } else {\n                        const nativeDestinationAudioParam = getNativeAudioParam(output[0]);\n\n                        nativeSourceAudioNode.connect(nativeDestinationAudioParam, output[1]);\n                    }\n                }\n            }\n        } else {\n            cycleCounters.set(audioNode, cycleCounter - count);\n        }\n    };\n};\n","import { IAudioParam, IDelayNode, IDelayOptions } from '../interfaces';\nimport { TAudioNodeRenderer, TContext, TDelayNodeConstructorFactory } from '../types';\n\nconst DEFAULT_OPTIONS = {\n    channelCount: 2,\n    channelCountMode: 'max',\n    channelInterpretation: 'speakers',\n    delayTime: 0,\n    maxDelayTime: 1\n} as const;\n\nexport const createDelayNodeConstructor: TDelayNodeConstructorFactory = (\n    audioNodeConstructor,\n    createAudioParam,\n    createDelayNodeRenderer,\n    createNativeDelayNode,\n    getNativeContext,\n    isNativeOfflineAudioContext,\n    setAudioNodeTailTime\n) => {\n    return class DelayNode<T extends TContext> extends audioNodeConstructor<T> implements IDelayNode<T> {\n        private _delayTime: IAudioParam;\n\n        constructor(context: T, options?: Partial<IDelayOptions>) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeDelayNode = createNativeDelayNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const delayNodeRenderer = <TAudioNodeRenderer<T, this>>(isOffline ? createDelayNodeRenderer(mergedOptions.maxDelayTime) : null);\n\n            super(context, false, nativeDelayNode, delayNodeRenderer);\n\n            this._delayTime = createAudioParam(this, isOffline, nativeDelayNode.delayTime);\n\n            setAudioNodeTailTime(this, mergedOptions.maxDelayTime);\n        }\n\n        get delayTime(): IAudioParam {\n            return this._delayTime;\n        }\n    };\n};\n","import { isOwnedByContext } from '../helpers/is-owned-by-context';\nimport { IAudioNode, IDelayNode, IMinimalOfflineAudioContext, IOfflineAudioContext } from '../interfaces';\nimport { TDelayNodeRendererFactoryFactory, TNativeDelayNode, TNativeOfflineAudioContext } from '../types';\n\nexport const createDelayNodeRendererFactory: TDelayNodeRendererFactoryFactory = (\n    connectAudioParam,\n    createNativeDelayNode,\n    getNativeAudioNode,\n    renderAutomation,\n    renderInputsOfAudioNode\n) => {\n    return <T extends IMinimalOfflineAudioContext | IOfflineAudioContext>(maxDelayTime: number) => {\n        const renderedNativeDelayNodes = new WeakMap<TNativeOfflineAudioContext, TNativeDelayNode>();\n\n        const createDelayNode = async (\n            proxy: IDelayNode<T>,\n            nativeOfflineAudioContext: TNativeOfflineAudioContext,\n            trace: readonly IAudioNode<T>[]\n        ) => {\n            let nativeDelayNode = getNativeAudioNode<T, TNativeDelayNode>(proxy);\n\n            // If the initially used nativeDelayNode was not constructed on the same OfflineAudioContext it needs to be created again.\n            const nativeDelayNodeIsOwnedByContext = isOwnedByContext(nativeDelayNode, nativeOfflineAudioContext);\n\n            if (!nativeDelayNodeIsOwnedByContext) {\n                const options = {\n                    channelCount: nativeDelayNode.channelCount,\n                    channelCountMode: nativeDelayNode.channelCountMode,\n                    channelInterpretation: nativeDelayNode.channelInterpretation,\n                    delayTime: nativeDelayNode.delayTime.value,\n                    maxDelayTime\n                };\n\n                nativeDelayNode = createNativeDelayNode(nativeOfflineAudioContext, options);\n            }\n\n            renderedNativeDelayNodes.set(nativeOfflineAudioContext, nativeDelayNode);\n\n            if (!nativeDelayNodeIsOwnedByContext) {\n                await renderAutomation(nativeOfflineAudioContext, proxy.delayTime, nativeDelayNode.delayTime, trace);\n            } else {\n                await connectAudioParam(nativeOfflineAudioContext, proxy.delayTime, nativeDelayNode.delayTime, trace);\n            }\n\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeDelayNode, trace);\n\n            return nativeDelayNode;\n        };\n\n        return {\n            render(\n                proxy: IDelayNode<T>,\n                nativeOfflineAudioContext: TNativeOfflineAudioContext,\n                trace: readonly IAudioNode<T>[]\n            ): Promise<TNativeDelayNode> {\n                const renderedNativeDelayNode = renderedNativeDelayNodes.get(nativeOfflineAudioContext);\n\n                if (renderedNativeDelayNode !== undefined) {\n                    return Promise.resolve(renderedNativeDelayNode);\n                }\n\n                return createDelayNode(proxy, nativeOfflineAudioContext, trace);\n            }\n        };\n    };\n};\n","import { TDeleteActiveInputConnectionToAudioNodeFactory } from '../types';\n\nexport const createDeleteActiveInputConnectionToAudioNode: TDeleteActiveInputConnectionToAudioNodeFactory = (pickElementFromSet) => {\n    return (activeInputs, source, output, input) => {\n        return pickElementFromSet(\n            activeInputs[input],\n            (activeInputConnection) => activeInputConnection[0] === source && activeInputConnection[1] === output\n        );\n    };\n};\n","import { TDeleteUnrenderedAudioWorkletNodeFactory } from '../types';\n\nexport const createDeleteUnrenderedAudioWorkletNode: TDeleteUnrenderedAudioWorkletNodeFactory = (getUnrenderedAudioWorkletNodes) => {\n    return (nativeContext, audioWorkletNode) => {\n        getUnrenderedAudioWorkletNodes(nativeContext).delete(audioWorkletNode);\n    };\n};\n","import { IAudioNode, IDelayNode } from '../interfaces';\nimport { TContext } from '../types';\n\nexport const isDelayNode = <T extends TContext>(audioNode: IAudioNode<T>): audioNode is IDelayNode<T> => {\n    return 'delayTime' in audioNode;\n};\n","import { isAudioNode } from '../guards/audio-node';\nimport { isDelayNode } from '../guards/delay-node';\nimport { IAudioNode, IAudioParam } from '../interfaces';\nimport { TContext, TDetectCyclesFactory } from '../types';\n\nexport const createDetectCycles: TDetectCyclesFactory = (audioParamAudioNodeStore, getAudioNodeConnections, getValueForKey) => {\n    return function detectCycles<T extends TContext>(chain: IAudioNode<T>[], nextLink: IAudioNode<T> | IAudioParam): IAudioNode<T>[][] {\n        const audioNode = isAudioNode(nextLink) ? nextLink : <IAudioNode<T>>getValueForKey(audioParamAudioNodeStore, nextLink);\n\n        if (isDelayNode(audioNode)) {\n            return [];\n        }\n\n        if (chain[0] === audioNode) {\n            return [chain];\n        }\n\n        if (chain.includes(audioNode)) {\n            return [];\n        }\n\n        const { outputs } = getAudioNodeConnections(audioNode);\n\n        return Array.from(outputs)\n            .map((outputConnection) => detectCycles([...chain, audioNode], outputConnection[0]))\n            .reduce((mergedCycles, nestedCycles) => mergedCycles.concat(nestedCycles), []);\n    };\n};\n","import { isNativeAudioNode } from '../guards/native-audio-node';\nimport { TDisconnectMultipleOutputsFactory, TIndexSizeErrorFactory, TNativeAudioNode } from '../types';\n\nconst getOutputAudioNodeAtIndex = (\n    createIndexSizeError: TIndexSizeErrorFactory,\n    outputAudioNodes: TNativeAudioNode[],\n    output: number\n): TNativeAudioNode => {\n    const outputAudioNode = outputAudioNodes[output];\n\n    if (outputAudioNode === undefined) {\n        throw createIndexSizeError();\n    }\n\n    return outputAudioNode;\n};\n\nexport const createDisconnectMultipleOutputs: TDisconnectMultipleOutputsFactory = (createIndexSizeError) => {\n    return (outputAudioNodes, destinationOrOutput = undefined, output = undefined, input = 0) => {\n        if (destinationOrOutput === undefined) {\n            return outputAudioNodes.forEach((outputAudioNode) => outputAudioNode.disconnect());\n        }\n\n        if (typeof destinationOrOutput === 'number') {\n            return getOutputAudioNodeAtIndex(createIndexSizeError, outputAudioNodes, destinationOrOutput).disconnect();\n        }\n\n        if (isNativeAudioNode(destinationOrOutput)) {\n            if (output === undefined) {\n                return outputAudioNodes.forEach((outputAudioNode) => outputAudioNode.disconnect(destinationOrOutput));\n            }\n\n            if (input === undefined) {\n                return getOutputAudioNodeAtIndex(createIndexSizeError, outputAudioNodes, output).disconnect(destinationOrOutput, 0);\n            }\n\n            return getOutputAudioNodeAtIndex(createIndexSizeError, outputAudioNodes, output).disconnect(destinationOrOutput, 0, input);\n        }\n\n        if (output === undefined) {\n            return outputAudioNodes.forEach((outputAudioNode) => outputAudioNode.disconnect(destinationOrOutput));\n        }\n\n        return getOutputAudioNodeAtIndex(createIndexSizeError, outputAudioNodes, output).disconnect(destinationOrOutput, 0);\n    };\n};\n","import { IAudioParam, IDynamicsCompressorNode, IDynamicsCompressorOptions } from '../interfaces';\nimport {\n    TAudioNodeRenderer,\n    TChannelCountMode,\n    TContext,\n    TDynamicsCompressorNodeConstructorFactory,\n    TNativeAudioParam,\n    TNativeDynamicsCompressorNode\n} from '../types';\n\nconst DEFAULT_OPTIONS = {\n    attack: 0.003,\n    channelCount: 2,\n    channelCountMode: 'clamped-max',\n    channelInterpretation: 'speakers',\n    knee: 30,\n    ratio: 12,\n    release: 0.25,\n    threshold: -24\n} as const;\n\nexport const createDynamicsCompressorNodeConstructor: TDynamicsCompressorNodeConstructorFactory = (\n    audioNodeConstructor,\n    createAudioParam,\n    createDynamicsCompressorNodeRenderer,\n    createNativeDynamicsCompressorNode,\n    createNotSupportedError,\n    getNativeContext,\n    isNativeOfflineAudioContext,\n    setAudioNodeTailTime\n) => {\n    return class DynamicsCompressorNode<T extends TContext> extends audioNodeConstructor<T> implements IDynamicsCompressorNode<T> {\n        private _attack: IAudioParam;\n\n        private _knee: IAudioParam;\n\n        private _nativeDynamicsCompressorNode: TNativeDynamicsCompressorNode;\n\n        private _ratio: IAudioParam;\n\n        private _release: IAudioParam;\n\n        private _threshold: IAudioParam;\n\n        constructor(context: T, options?: Partial<IDynamicsCompressorOptions>) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeDynamicsCompressorNode = createNativeDynamicsCompressorNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const dynamicsCompressorNodeRenderer = <TAudioNodeRenderer<T, this>>(isOffline ? createDynamicsCompressorNodeRenderer() : null);\n\n            super(context, false, nativeDynamicsCompressorNode, dynamicsCompressorNodeRenderer);\n\n            this._attack = createAudioParam(this, isOffline, nativeDynamicsCompressorNode.attack);\n            this._knee = createAudioParam(this, isOffline, nativeDynamicsCompressorNode.knee);\n            this._nativeDynamicsCompressorNode = nativeDynamicsCompressorNode;\n            this._ratio = createAudioParam(this, isOffline, nativeDynamicsCompressorNode.ratio);\n            this._release = createAudioParam(this, isOffline, nativeDynamicsCompressorNode.release);\n            this._threshold = createAudioParam(this, isOffline, nativeDynamicsCompressorNode.threshold);\n\n            setAudioNodeTailTime(this, 0.006);\n        }\n\n        get attack(): IAudioParam {\n            return this._attack;\n        }\n\n        // Bug #108: Safari allows a channelCount of three and above which is why the getter and setter needs to be overwritten here.\n        get channelCount(): number {\n            return this._nativeDynamicsCompressorNode.channelCount;\n        }\n\n        set channelCount(value) {\n            const previousChannelCount = this._nativeDynamicsCompressorNode.channelCount;\n\n            this._nativeDynamicsCompressorNode.channelCount = value;\n\n            if (value > 2) {\n                this._nativeDynamicsCompressorNode.channelCount = previousChannelCount;\n\n                throw createNotSupportedError();\n            }\n        }\n\n        /*\n         * Bug #109: Only Chrome, Firefox and Opera disallow a channelCountMode of 'max' yet which is why the getter and setter needs to be\n         * overwritten here.\n         */\n        get channelCountMode(): TChannelCountMode {\n            return this._nativeDynamicsCompressorNode.channelCountMode;\n        }\n\n        set channelCountMode(value) {\n            const previousChannelCount = this._nativeDynamicsCompressorNode.channelCountMode;\n\n            this._nativeDynamicsCompressorNode.channelCountMode = value;\n\n            if (value === 'max') {\n                this._nativeDynamicsCompressorNode.channelCountMode = previousChannelCount;\n\n                throw createNotSupportedError();\n            }\n        }\n\n        get knee(): IAudioParam {\n            return this._knee;\n        }\n\n        get ratio(): IAudioParam {\n            return this._ratio;\n        }\n\n        get reduction(): number {\n            // Bug #111: Safari returns an AudioParam instead of a number.\n            if (typeof (<TNativeAudioParam>(<any>this._nativeDynamicsCompressorNode.reduction)).value === 'number') {\n                return (<TNativeAudioParam>(<any>this._nativeDynamicsCompressorNode.reduction)).value;\n            }\n\n            return this._nativeDynamicsCompressorNode.reduction;\n        }\n\n        get release(): IAudioParam {\n            return this._release;\n        }\n\n        get threshold(): IAudioParam {\n            return this._threshold;\n        }\n    };\n};\n","import { isOwnedByContext } from '../helpers/is-owned-by-context';\nimport { IAudioNode, IDynamicsCompressorNode, IMinimalOfflineAudioContext, IOfflineAudioContext } from '../interfaces';\nimport { TDynamicsCompressorNodeRendererFactoryFactory, TNativeDynamicsCompressorNode, TNativeOfflineAudioContext } from '../types';\n\nexport const createDynamicsCompressorNodeRendererFactory: TDynamicsCompressorNodeRendererFactoryFactory = (\n    connectAudioParam,\n    createNativeDynamicsCompressorNode,\n    getNativeAudioNode,\n    renderAutomation,\n    renderInputsOfAudioNode\n) => {\n    return <T extends IMinimalOfflineAudioContext | IOfflineAudioContext>() => {\n        const renderedNativeDynamicsCompressorNodes = new WeakMap<TNativeOfflineAudioContext, TNativeDynamicsCompressorNode>();\n\n        const createDynamicsCompressorNode = async (\n            proxy: IDynamicsCompressorNode<T>,\n            nativeOfflineAudioContext: TNativeOfflineAudioContext,\n            trace: readonly IAudioNode<T>[]\n        ) => {\n            let nativeDynamicsCompressorNode = getNativeAudioNode<T, TNativeDynamicsCompressorNode>(proxy);\n\n            /*\n             * If the initially used nativeDynamicsCompressorNode was not constructed on the same OfflineAudioContext it needs to be\n             * created again.\n             */\n            const nativeDynamicsCompressorNodeIsOwnedByContext = isOwnedByContext(nativeDynamicsCompressorNode, nativeOfflineAudioContext);\n\n            if (!nativeDynamicsCompressorNodeIsOwnedByContext) {\n                const options = {\n                    attack: nativeDynamicsCompressorNode.attack.value,\n                    channelCount: nativeDynamicsCompressorNode.channelCount,\n                    channelCountMode: nativeDynamicsCompressorNode.channelCountMode,\n                    channelInterpretation: nativeDynamicsCompressorNode.channelInterpretation,\n                    knee: nativeDynamicsCompressorNode.knee.value,\n                    ratio: nativeDynamicsCompressorNode.ratio.value,\n                    release: nativeDynamicsCompressorNode.release.value,\n                    threshold: nativeDynamicsCompressorNode.threshold.value\n                };\n\n                nativeDynamicsCompressorNode = createNativeDynamicsCompressorNode(nativeOfflineAudioContext, options);\n            }\n\n            renderedNativeDynamicsCompressorNodes.set(nativeOfflineAudioContext, nativeDynamicsCompressorNode);\n\n            if (!nativeDynamicsCompressorNodeIsOwnedByContext) {\n                await renderAutomation(nativeOfflineAudioContext, proxy.attack, nativeDynamicsCompressorNode.attack, trace);\n                await renderAutomation(nativeOfflineAudioContext, proxy.knee, nativeDynamicsCompressorNode.knee, trace);\n                await renderAutomation(nativeOfflineAudioContext, proxy.ratio, nativeDynamicsCompressorNode.ratio, trace);\n                await renderAutomation(nativeOfflineAudioContext, proxy.release, nativeDynamicsCompressorNode.release, trace);\n                await renderAutomation(nativeOfflineAudioContext, proxy.threshold, nativeDynamicsCompressorNode.threshold, trace);\n            } else {\n                await connectAudioParam(nativeOfflineAudioContext, proxy.attack, nativeDynamicsCompressorNode.attack, trace);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.knee, nativeDynamicsCompressorNode.knee, trace);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.ratio, nativeDynamicsCompressorNode.ratio, trace);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.release, nativeDynamicsCompressorNode.release, trace);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.threshold, nativeDynamicsCompressorNode.threshold, trace);\n            }\n\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeDynamicsCompressorNode, trace);\n\n            return nativeDynamicsCompressorNode;\n        };\n\n        return {\n            render(\n                proxy: IDynamicsCompressorNode<T>,\n                nativeOfflineAudioContext: TNativeOfflineAudioContext,\n                trace: readonly IAudioNode<T>[]\n            ): Promise<TNativeDynamicsCompressorNode> {\n                const renderedNativeDynamicsCompressorNode = renderedNativeDynamicsCompressorNodes.get(nativeOfflineAudioContext);\n\n                if (renderedNativeDynamicsCompressorNode !== undefined) {\n                    return Promise.resolve(renderedNativeDynamicsCompressorNode);\n                }\n\n                return createDynamicsCompressorNode(proxy, nativeOfflineAudioContext, trace);\n            }\n        };\n    };\n};\n","import { TEncodingErrorFactory } from '../types';\n\nexport const createEncodingError: TEncodingErrorFactory = () => new DOMException('', 'EncodingError');\n","import { TEvaluateSourceFactory } from '../types';\n\nexport const createEvaluateSource: TEvaluateSourceFactory = (window) => {\n    return (source) =>\n        new Promise((resolve, reject) => {\n            if (window === null) {\n                // Bug #182 Chrome, Edge and Opera do throw an instance of a SyntaxError instead of a DOMException.\n                reject(new SyntaxError());\n\n                return;\n            }\n\n            const head = window.document.head;\n\n            if (head === null) {\n                // Bug #182 Chrome, Edge and Opera do throw an instance of a SyntaxError instead of a DOMException.\n                reject(new SyntaxError());\n            } else {\n                const script = window.document.createElement('script');\n                // @todo Safari doesn't like URLs with a type of 'application/javascript; charset=utf-8'.\n                const blob = new Blob([source], { type: 'application/javascript' });\n                const url = URL.createObjectURL(blob);\n\n                const originalOnErrorHandler = window.onerror;\n\n                const removeErrorEventListenerAndRevokeUrl = () => {\n                    window.onerror = originalOnErrorHandler;\n\n                    URL.revokeObjectURL(url);\n                };\n\n                window.onerror = (message, src, lineno, colno, error) => {\n                    // @todo Edge thinks the source is the one of the html document.\n                    if (src === url || (src === window.location.href && lineno === 1 && colno === 1)) {\n                        removeErrorEventListenerAndRevokeUrl();\n                        reject(error);\n\n                        return false;\n                    }\n\n                    if (originalOnErrorHandler !== null) {\n                        return originalOnErrorHandler(message, src, lineno, colno, error);\n                    }\n                };\n\n                script.onerror = () => {\n                    removeErrorEventListenerAndRevokeUrl();\n                    // Bug #182 Chrome, Edge and Opera do throw an instance of a SyntaxError instead of a DOMException.\n                    reject(new SyntaxError());\n                };\n                script.onload = () => {\n                    removeErrorEventListenerAndRevokeUrl();\n                    resolve();\n                };\n                script.src = url;\n                script.type = 'module';\n\n                head.appendChild(script);\n            }\n        });\n};\n","import { TEventTargetConstructorFactory, TNativeEventTarget } from '../types';\n\nexport const createEventTargetConstructor: TEventTargetConstructorFactory = (wrapEventListener) => {\n    return class EventTarget implements TNativeEventTarget {\n        private _listeners: WeakMap<EventListenerOrEventListenerObject, EventListenerOrEventListenerObject>;\n\n        constructor(private _nativeEventTarget: TNativeEventTarget) {\n            this._listeners = new WeakMap();\n        }\n\n        public addEventListener(\n            type: string,\n            listener: null | EventListenerOrEventListenerObject,\n            options?: boolean | AddEventListenerOptions\n        ): void {\n            if (listener !== null) {\n                let wrappedEventListener = this._listeners.get(listener);\n\n                if (wrappedEventListener === undefined) {\n                    wrappedEventListener = wrapEventListener(this, listener);\n\n                    if (typeof listener === 'function') {\n                        this._listeners.set(listener, wrappedEventListener);\n                    }\n                }\n\n                this._nativeEventTarget.addEventListener(type, wrappedEventListener, options);\n            }\n        }\n\n        public dispatchEvent(event: Event): boolean {\n            return this._nativeEventTarget.dispatchEvent(event);\n        }\n\n        public removeEventListener(\n            type: string,\n            listener: null | EventListenerOrEventListenerObject,\n            options?: boolean | EventListenerOptions\n        ): void {\n            const wrappedEventListener = listener === null ? undefined : this._listeners.get(listener);\n\n            this._nativeEventTarget.removeEventListener(type, wrappedEventListener === undefined ? null : wrappedEventListener, options);\n        }\n    };\n};\n","import { TExposeCurrentFrameAndCurrentTimeFactory } from '../types';\n\nexport const createExposeCurrentFrameAndCurrentTime: TExposeCurrentFrameAndCurrentTimeFactory = (window) => {\n    return (currentTime, sampleRate, fn) => {\n        Object.defineProperties(window, {\n            currentFrame: {\n                configurable: true,\n                get(): number {\n                    return Math.round(currentTime * sampleRate);\n                }\n            },\n            currentTime: {\n                configurable: true,\n                get(): number {\n                    return currentTime;\n                }\n            }\n        });\n\n        try {\n            return fn();\n        } finally {\n            if (window !== null) {\n                delete (<any>window).currentFrame;\n                delete (<any>window).currentTime;\n            }\n        }\n    };\n};\n","import { TFetchSourceFactory } from '../types';\n\nexport const createFetchSource: TFetchSourceFactory = (createAbortError) => {\n    return async (url) => {\n        try {\n            const response = await fetch(url);\n\n            if (response.ok) {\n                return [await response.text(), response.url];\n            }\n        } catch {\n            // Ignore errors.\n        } // tslint:disable-line:no-empty\n\n        throw createAbortError();\n    };\n};\n","import { MOST_NEGATIVE_SINGLE_FLOAT, MOST_POSITIVE_SINGLE_FLOAT } from '../constants';\nimport { IAudioParam, IGainNode, IGainOptions } from '../interfaces';\nimport { TAudioNodeRenderer, TContext, TGainNodeConstructorFactory } from '../types';\n\nconst DEFAULT_OPTIONS = {\n    channelCount: 2,\n    channelCountMode: 'max',\n    channelInterpretation: 'speakers',\n    gain: 1\n} as const;\n\nexport const createGainNodeConstructor: TGainNodeConstructorFactory = (\n    audioNodeConstructor,\n    createAudioParam,\n    createGainNodeRenderer,\n    createNativeGainNode,\n    getNativeContext,\n    isNativeOfflineAudioContext\n) => {\n    return class GainNode<T extends TContext> extends audioNodeConstructor<T> implements IGainNode<T> {\n        private _gain: IAudioParam;\n\n        constructor(context: T, options?: Partial<IGainOptions>) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeGainNode = createNativeGainNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const gainNodeRenderer = <TAudioNodeRenderer<T, this>>(isOffline ? createGainNodeRenderer() : null);\n\n            super(context, false, nativeGainNode, gainNodeRenderer);\n\n            // Bug #74: Safari does not export the correct values for maxValue and minValue.\n            this._gain = createAudioParam(this, isOffline, nativeGainNode.gain, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n        }\n\n        get gain(): IAudioParam {\n            return this._gain;\n        }\n    };\n};\n","import { isOwnedByContext } from '../helpers/is-owned-by-context';\nimport { IAudioNode, IGainNode, IMinimalOfflineAudioContext, IOfflineAudioContext } from '../interfaces';\nimport { TGainNodeRendererFactoryFactory, TNativeGainNode, TNativeOfflineAudioContext } from '../types';\n\nexport const createGainNodeRendererFactory: TGainNodeRendererFactoryFactory = (\n    connectAudioParam,\n    createNativeGainNode,\n    getNativeAudioNode,\n    renderAutomation,\n    renderInputsOfAudioNode\n) => {\n    return <T extends IMinimalOfflineAudioContext | IOfflineAudioContext>() => {\n        const renderedNativeGainNodes = new WeakMap<TNativeOfflineAudioContext, TNativeGainNode>();\n\n        const createGainNode = async (\n            proxy: IGainNode<T>,\n            nativeOfflineAudioContext: TNativeOfflineAudioContext,\n            trace: readonly IAudioNode<T>[]\n        ) => {\n            let nativeGainNode = getNativeAudioNode<T, TNativeGainNode>(proxy);\n\n            // If the initially used nativeGainNode was not constructed on the same OfflineAudioContext it needs to be created again.\n            const nativeGainNodeIsOwnedByContext = isOwnedByContext(nativeGainNode, nativeOfflineAudioContext);\n\n            if (!nativeGainNodeIsOwnedByContext) {\n                const options = {\n                    channelCount: nativeGainNode.channelCount,\n                    channelCountMode: nativeGainNode.channelCountMode,\n                    channelInterpretation: nativeGainNode.channelInterpretation,\n                    gain: nativeGainNode.gain.value\n                };\n\n                nativeGainNode = createNativeGainNode(nativeOfflineAudioContext, options);\n            }\n\n            renderedNativeGainNodes.set(nativeOfflineAudioContext, nativeGainNode);\n\n            if (!nativeGainNodeIsOwnedByContext) {\n                await renderAutomation(nativeOfflineAudioContext, proxy.gain, nativeGainNode.gain, trace);\n            } else {\n                await connectAudioParam(nativeOfflineAudioContext, proxy.gain, nativeGainNode.gain, trace);\n            }\n\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeGainNode, trace);\n\n            return nativeGainNode;\n        };\n\n        return {\n            render(\n                proxy: IGainNode<T>,\n                nativeOfflineAudioContext: TNativeOfflineAudioContext,\n                trace: readonly IAudioNode<T>[]\n            ): Promise<TNativeGainNode> {\n                const renderedNativeGainNode = renderedNativeGainNodes.get(nativeOfflineAudioContext);\n\n                if (renderedNativeGainNode !== undefined) {\n                    return Promise.resolve(renderedNativeGainNode);\n                }\n\n                return createGainNode(proxy, nativeOfflineAudioContext, trace);\n            }\n        };\n    };\n};\n","import { TActiveInputConnection, TContext, TGetActiveAudioWorkletNodeInputsFactory, TNativeAudioWorkletNode } from '../types';\n\nexport const createGetActiveAudioWorkletNodeInputs: TGetActiveAudioWorkletNodeInputsFactory = (\n    activeAudioWorkletNodeInputsStore,\n    getValueForKey\n) => {\n    return <T extends TContext>(nativeAudioWorkletNode: TNativeAudioWorkletNode) =>\n        <Set<TActiveInputConnection<T>>[]>getValueForKey(activeAudioWorkletNodeInputsStore, nativeAudioWorkletNode);\n};\n","import { IAudioNode, IAudioNodeRenderer, IMinimalOfflineAudioContext, IOfflineAudioContext } from '../interfaces';\nimport { TGetAudioNodeRendererFactory } from '../types';\n\nexport const createGetAudioNodeRenderer: TGetAudioNodeRendererFactory = (getAudioNodeConnections) => {\n    return <T extends IMinimalOfflineAudioContext | IOfflineAudioContext>(\n        audioNode: IAudioNode<T>\n    ): IAudioNodeRenderer<T, IAudioNode<T>> => {\n        const audioNodeConnections = getAudioNodeConnections(audioNode);\n\n        if (audioNodeConnections.renderer === null) {\n            throw new Error('Missing the renderer of the given AudioNode in the audio graph.');\n        }\n\n        return <IAudioNodeRenderer<T, IAudioNode<T>>>audioNodeConnections.renderer;\n    };\n};\n","import { TGetAudioNodeTailTimeFactory } from '../types';\n\nexport const createGetAudioNodeTailTime: TGetAudioNodeTailTimeFactory = (audioNodeTailTimeStore) => {\n    return (audioNode) => audioNodeTailTimeStore.get(audioNode) ?? 0;\n};\n","import { IMinimalOfflineAudioContext } from '../interfaces';\nimport { TGetAudioParamRendererFactory } from '../types';\n\nexport const createGetAudioParamRenderer: TGetAudioParamRendererFactory = (getAudioParamConnections) => {\n    return (audioParam) => {\n        const audioParamConnections = getAudioParamConnections<IMinimalOfflineAudioContext>(audioParam);\n\n        if (audioParamConnections.renderer === null) {\n            throw new Error('Missing the renderer of the given AudioParam in the audio graph.');\n        }\n\n        return audioParamConnections.renderer;\n    };\n};\n","import { TGetBackupOfflineAudioContextFactory } from '../types';\n\nexport const createGetBackupOfflineAudioContext: TGetBackupOfflineAudioContextFactory = (backupOfflineAudioContextStore) => {\n    return (nativeContext) => {\n        return backupOfflineAudioContextStore.get(nativeContext);\n    };\n};\n","import { TInvalidStateErrorFactory } from '../types';\n\nexport const createInvalidStateError: TInvalidStateErrorFactory = () => new DOMException('', 'InvalidStateError');\n","import { IMinimalOfflineAudioContext, IOfflineAudioContext } from '../interfaces';\nimport { TContext, TGetNativeContextFactory, TNativeAudioContext, TNativeOfflineAudioContext } from '../types';\nimport { createInvalidStateError } from './invalid-state-error';\n\nexport const createGetNativeContext: TGetNativeContextFactory = (contextStore) => {\n    return <T extends TContext>(\n        context: T\n    ): T extends IMinimalOfflineAudioContext | IOfflineAudioContext ? TNativeOfflineAudioContext : TNativeAudioContext => {\n        const nativeContext = contextStore.get(context);\n\n        if (nativeContext === undefined) {\n            throw createInvalidStateError();\n        }\n\n        return <T extends IMinimalOfflineAudioContext | IOfflineAudioContext ? TNativeOfflineAudioContext : TNativeAudioContext>(\n            nativeContext\n        );\n    };\n};\n","import { TGetOrCreateBackupOfflineAudioContextFactory } from '../types';\n\nexport const createGetOrCreateBackupOfflineAudioContext: TGetOrCreateBackupOfflineAudioContextFactory = (\n    backupOfflineAudioContextStore,\n    nativeOfflineAudioContextConstructor\n) => {\n    return (nativeContext) => {\n        let backupOfflineAudioContext = backupOfflineAudioContextStore.get(nativeContext);\n\n        if (backupOfflineAudioContext !== undefined) {\n            return backupOfflineAudioContext;\n        }\n\n        if (nativeOfflineAudioContextConstructor === null) {\n            throw new Error('Missing the native OfflineAudioContext constructor.');\n        }\n\n        backupOfflineAudioContext = new nativeOfflineAudioContextConstructor(1, 1, 8000);\n\n        backupOfflineAudioContextStore.set(nativeContext, backupOfflineAudioContext);\n\n        return backupOfflineAudioContext;\n    };\n};\n","import { TGetUnrenderedAudioWorkletNodesFactory } from '../types';\n\nexport const createGetUnrenderedAudioWorkletNodes: TGetUnrenderedAudioWorkletNodesFactory = (unrenderedAudioWorkletNodeStore) => {\n    return (nativeContext) => {\n        const unrenderedAudioWorkletNodes = unrenderedAudioWorkletNodeStore.get(nativeContext);\n\n        if (unrenderedAudioWorkletNodes === undefined) {\n            throw new Error('The context has no set of AudioWorkletNodes.');\n        }\n\n        return unrenderedAudioWorkletNodes;\n    };\n};\n","import { TInvalidAccessErrorFactory } from '../types';\n\nexport const createInvalidAccessError: TInvalidAccessErrorFactory = () => new DOMException('', 'InvalidAccessError');\n","import { createInvalidAccessError } from '../factories/invalid-access-error';\nimport { TNativeIIRFilterNode } from '../types';\n\nexport const wrapIIRFilterNodeGetFrequencyResponseMethod = (nativeIIRFilterNode: TNativeIIRFilterNode): void => {\n    nativeIIRFilterNode.getFrequencyResponse = ((getFrequencyResponse) => {\n        return (frequencyHz: Float32Array, magResponse: Float32Array, phaseResponse: Float32Array) => {\n            if (frequencyHz.length !== magResponse.length || magResponse.length !== phaseResponse.length) {\n                throw createInvalidAccessError();\n            }\n\n            return getFrequencyResponse.call(nativeIIRFilterNode, frequencyHz, magResponse, phaseResponse);\n        };\n    })(nativeIIRFilterNode.getFrequencyResponse);\n};\n","import { wrapIIRFilterNodeGetFrequencyResponseMethod } from '../helpers/wrap-iir-filter-node-get-frequency-response-method';\nimport { IIIRFilterNode, IIIRFilterOptions, IMinimalAudioContext } from '../interfaces';\nimport { TAudioNodeRenderer, TContext, TIIRFilterNodeConstructorFactory, TNativeIIRFilterNode } from '../types';\n\nconst DEFAULT_OPTIONS = {\n    channelCount: 2,\n    channelCountMode: 'max',\n    channelInterpretation: 'speakers'\n} as const;\n\nexport const createIIRFilterNodeConstructor: TIIRFilterNodeConstructorFactory = (\n    audioNodeConstructor,\n    createNativeIIRFilterNode,\n    createIIRFilterNodeRenderer,\n    getNativeContext,\n    isNativeOfflineAudioContext,\n    setAudioNodeTailTime\n) => {\n    return class IIRFilterNode<T extends TContext> extends audioNodeConstructor<T> implements IIIRFilterNode<T> {\n        private _nativeIIRFilterNode: TNativeIIRFilterNode;\n\n        constructor(\n            context: T,\n            options: { feedback: IIIRFilterOptions['feedback']; feedforward: IIIRFilterOptions['feedforward'] } & Partial<IIIRFilterOptions>\n        ) {\n            const nativeContext = getNativeContext(context);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeIIRFilterNode = createNativeIIRFilterNode(\n                nativeContext,\n                isOffline ? null : (<IMinimalAudioContext>(<any>context)).baseLatency,\n                mergedOptions\n            );\n            const iirFilterNodeRenderer = <TAudioNodeRenderer<T, this>>(\n                (isOffline ? createIIRFilterNodeRenderer(mergedOptions.feedback, mergedOptions.feedforward) : null)\n            );\n\n            super(context, false, nativeIIRFilterNode, iirFilterNodeRenderer);\n\n            // Bug #23 & #24: FirefoxDeveloper does not throw an InvalidAccessError.\n            // @todo Write a test which allows other browsers to remain unpatched.\n            wrapIIRFilterNodeGetFrequencyResponseMethod(nativeIIRFilterNode);\n\n            this._nativeIIRFilterNode = nativeIIRFilterNode;\n\n            // @todo Determine a meaningful tail-time instead of just using one second.\n            setAudioNodeTailTime(this, 1);\n        }\n\n        public getFrequencyResponse(frequencyHz: Float32Array, magResponse: Float32Array, phaseResponse: Float32Array): void {\n            return this._nativeIIRFilterNode.getFrequencyResponse(frequencyHz, magResponse, phaseResponse);\n        }\n    };\n};\n","// This implementation as shamelessly inspired by source code of\n// tslint:disable-next-line:max-line-length\n// {@link https://chromium.googlesource.com/chromium/src.git/+/master/third_party/WebKit/Source/platform/audio/IIRFilter.cpp|Chromium's IIRFilter}.\nexport const filterBuffer = (\n    feedback: Float64Array,\n    feedbackLength: number,\n    feedforward: Float64Array,\n    feedforwardLength: number,\n    minLength: number,\n    xBuffer: Float32Array,\n    yBuffer: Float32Array,\n    bufferIndex: number,\n    bufferLength: number,\n    input: Float32Array,\n    output: Float32Array\n) => {\n    const inputLength = input.length;\n\n    let i = bufferIndex;\n\n    for (let j = 0; j < inputLength; j += 1) {\n        let y = feedforward[0] * input[j];\n\n        for (let k = 1; k < minLength; k += 1) {\n            const x = (i - k) & (bufferLength - 1); // tslint:disable-line:no-bitwise\n\n            y += feedforward[k] * xBuffer[x];\n            y -= feedback[k] * yBuffer[x];\n        }\n\n        for (let k = minLength; k < feedforwardLength; k += 1) {\n            y += feedforward[k] * xBuffer[(i - k) & (bufferLength - 1)]; // tslint:disable-line:no-bitwise\n        }\n\n        for (let k = minLength; k < feedbackLength; k += 1) {\n            y -= feedback[k] * yBuffer[(i - k) & (bufferLength - 1)]; // tslint:disable-line:no-bitwise\n        }\n\n        xBuffer[i] = input[j];\n        yBuffer[i] = y;\n\n        i = (i + 1) & (bufferLength - 1); // tslint:disable-line:no-bitwise\n\n        output[j] = y;\n    }\n\n    return i;\n};\n","import { filterBuffer } from '../helpers/filter-buffer';\nimport { isOwnedByContext } from '../helpers/is-owned-by-context';\nimport { IAudioNode, IIIRFilterNode, IMinimalOfflineAudioContext, IOfflineAudioContext } from '../interfaces';\nimport {\n    TIIRFilterNodeRendererFactoryFactory,\n    TNativeAudioBuffer,\n    TNativeAudioBufferSourceNode,\n    TNativeIIRFilterNode,\n    TNativeOfflineAudioContext\n} from '../types';\n\nconst filterFullBuffer = (\n    renderedBuffer: TNativeAudioBuffer,\n    nativeOfflineAudioContext: TNativeOfflineAudioContext,\n    feedback: Iterable<number>,\n    feedforward: Iterable<number>\n) => {\n    const convertedFeedback = feedback instanceof Float64Array ? feedback : new Float64Array(feedback);\n    const convertedFeedforward = feedforward instanceof Float64Array ? feedforward : new Float64Array(feedforward);\n    const feedbackLength = convertedFeedback.length;\n    const feedforwardLength = convertedFeedforward.length;\n    const minLength = Math.min(feedbackLength, feedforwardLength);\n\n    if (convertedFeedback[0] !== 1) {\n        for (let i = 0; i < feedbackLength; i += 1) {\n            convertedFeedforward[i] /= convertedFeedback[0];\n        }\n\n        for (let i = 1; i < feedforwardLength; i += 1) {\n            convertedFeedback[i] /= convertedFeedback[0];\n        }\n    }\n\n    const bufferLength = 32;\n    const xBuffer = new Float32Array(bufferLength);\n    const yBuffer = new Float32Array(bufferLength);\n\n    const filteredBuffer = nativeOfflineAudioContext.createBuffer(\n        renderedBuffer.numberOfChannels,\n        renderedBuffer.length,\n        renderedBuffer.sampleRate\n    );\n\n    const numberOfChannels = renderedBuffer.numberOfChannels;\n\n    for (let i = 0; i < numberOfChannels; i += 1) {\n        const input = renderedBuffer.getChannelData(i);\n        const output = filteredBuffer.getChannelData(i);\n\n        xBuffer.fill(0);\n        yBuffer.fill(0);\n\n        filterBuffer(\n            convertedFeedback,\n            feedbackLength,\n            convertedFeedforward,\n            feedforwardLength,\n            minLength,\n            xBuffer,\n            yBuffer,\n            0,\n            bufferLength,\n            input,\n            output\n        );\n    }\n\n    return filteredBuffer;\n};\n\nexport const createIIRFilterNodeRendererFactory: TIIRFilterNodeRendererFactoryFactory = (\n    createNativeAudioBufferSourceNode,\n    getNativeAudioNode,\n    nativeOfflineAudioContextConstructor,\n    renderInputsOfAudioNode,\n    renderNativeOfflineAudioContext\n) => {\n    return <T extends IMinimalOfflineAudioContext | IOfflineAudioContext>(feedback: Iterable<number>, feedforward: Iterable<number>) => {\n        const renderedNativeAudioNodes = new WeakMap<TNativeOfflineAudioContext, TNativeAudioBufferSourceNode | TNativeIIRFilterNode>();\n\n        let filteredBufferPromise: null | Promise<null | TNativeAudioBuffer> = null;\n\n        const createAudioNode = async (\n            proxy: IIIRFilterNode<T>,\n            nativeOfflineAudioContext: TNativeOfflineAudioContext,\n            trace: readonly IAudioNode<T>[]\n        ) => {\n            let nativeAudioBufferSourceNode: null | TNativeAudioBufferSourceNode = null;\n            let nativeIIRFilterNode = getNativeAudioNode<T, TNativeIIRFilterNode>(proxy);\n\n            // If the initially used nativeIIRFilterNode was not constructed on the same OfflineAudioContext it needs to be created again.\n            const nativeIIRFilterNodeIsOwnedByContext = isOwnedByContext(nativeIIRFilterNode, nativeOfflineAudioContext);\n\n            // Bug #9: Safari does not support IIRFilterNodes.\n            if (nativeOfflineAudioContext.createIIRFilter === undefined) {\n                nativeAudioBufferSourceNode = createNativeAudioBufferSourceNode(nativeOfflineAudioContext, {\n                    buffer: null,\n                    channelCount: 2,\n                    channelCountMode: 'max',\n                    channelInterpretation: 'speakers',\n                    loop: false,\n                    loopEnd: 0,\n                    loopStart: 0,\n                    playbackRate: 1\n                });\n            } else if (!nativeIIRFilterNodeIsOwnedByContext) {\n                // @todo TypeScript defines the parameters of createIIRFilter() as arrays of numbers.\n                nativeIIRFilterNode = nativeOfflineAudioContext.createIIRFilter(<number[]>feedforward, <number[]>feedback);\n            }\n\n            renderedNativeAudioNodes.set(\n                nativeOfflineAudioContext,\n                nativeAudioBufferSourceNode === null ? nativeIIRFilterNode : nativeAudioBufferSourceNode\n            );\n\n            if (nativeAudioBufferSourceNode !== null) {\n                if (filteredBufferPromise === null) {\n                    if (nativeOfflineAudioContextConstructor === null) {\n                        throw new Error('Missing the native OfflineAudioContext constructor.');\n                    }\n\n                    const partialOfflineAudioContext = new nativeOfflineAudioContextConstructor(\n                        // Bug #47: The AudioDestinationNode in Safari gets not initialized correctly.\n                        proxy.context.destination.channelCount,\n                        // Bug #17: Safari does not yet expose the length.\n                        proxy.context.length,\n                        nativeOfflineAudioContext.sampleRate\n                    );\n\n                    filteredBufferPromise = (async () => {\n                        await renderInputsOfAudioNode(proxy, partialOfflineAudioContext, partialOfflineAudioContext.destination, trace);\n\n                        const renderedBuffer = await renderNativeOfflineAudioContext(partialOfflineAudioContext);\n\n                        return filterFullBuffer(renderedBuffer, nativeOfflineAudioContext, feedback, feedforward);\n                    })();\n                }\n\n                const filteredBuffer = await filteredBufferPromise;\n\n                nativeAudioBufferSourceNode.buffer = filteredBuffer;\n                nativeAudioBufferSourceNode.start(0);\n\n                return nativeAudioBufferSourceNode;\n            }\n\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeIIRFilterNode, trace);\n\n            return nativeIIRFilterNode;\n        };\n\n        return {\n            render(\n                proxy: IIIRFilterNode<T>,\n                nativeOfflineAudioContext: TNativeOfflineAudioContext,\n                trace: readonly IAudioNode<T>[]\n            ): Promise<TNativeAudioBufferSourceNode | TNativeIIRFilterNode> {\n                const renderedNativeAudioNode = renderedNativeAudioNodes.get(nativeOfflineAudioContext);\n\n                if (renderedNativeAudioNode !== undefined) {\n                    return Promise.resolve(renderedNativeAudioNode);\n                }\n\n                return createAudioNode(proxy, nativeOfflineAudioContext, trace);\n            }\n        };\n    };\n};\n","import { isAudioNodeOutputConnection } from '../guards/audio-node-output-connection';\nimport { TIncrementCycleCounterFactoryFactory } from '../types';\n\nexport const createIncrementCycleCounterFactory: TIncrementCycleCounterFactoryFactory = (\n    cycleCounters,\n    disconnectNativeAudioNodeFromNativeAudioNode,\n    getAudioNodeConnections,\n    getNativeAudioNode,\n    getNativeAudioParam,\n    isActiveAudioNode\n) => {\n    return (isOffline) => {\n        return (audioNode, count) => {\n            const cycleCounter = cycleCounters.get(audioNode);\n\n            if (cycleCounter === undefined) {\n                if (!isOffline && isActiveAudioNode(audioNode)) {\n                    const nativeSourceAudioNode = getNativeAudioNode(audioNode);\n                    const { outputs } = getAudioNodeConnections(audioNode);\n\n                    for (const output of outputs) {\n                        if (isAudioNodeOutputConnection(output)) {\n                            const nativeDestinationAudioNode = getNativeAudioNode(output[0]);\n\n                            disconnectNativeAudioNodeFromNativeAudioNode(\n                                nativeSourceAudioNode,\n                                nativeDestinationAudioNode,\n                                output[1],\n                                output[2]\n                            );\n                        } else {\n                            const nativeDestinationAudioParam = getNativeAudioParam(output[0]);\n\n                            nativeSourceAudioNode.disconnect(nativeDestinationAudioParam, output[1]);\n                        }\n                    }\n                }\n\n                cycleCounters.set(audioNode, count);\n            } else {\n                cycleCounters.set(audioNode, cycleCounter + count);\n            }\n        };\n    };\n};\n","import { IAudioContext, IMinimalAudioContext } from '../interfaces';\nimport { TIsAnyAudioContextFactory, TNativeAudioContext } from '../types';\n\nexport const createIsAnyAudioContext: TIsAnyAudioContextFactory = (contextStore, isNativeAudioContext) => {\n    return (anything): anything is IAudioContext | IMinimalAudioContext | TNativeAudioContext => {\n        const nativeContext = contextStore.get(<any>anything);\n\n        return isNativeAudioContext(nativeContext) || isNativeAudioContext(anything);\n    };\n};\n","import { IAudioNode } from '../interfaces';\nimport { TIsAnyAudioNodeFactory, TNativeAudioNode } from '../types';\n\nexport const createIsAnyAudioNode: TIsAnyAudioNodeFactory = (audioNodeStore, isNativeAudioNode) => {\n    return (anything): anything is IAudioNode<any> | TNativeAudioNode => audioNodeStore.has(<any>anything) || isNativeAudioNode(anything);\n};\n","import { IAudioParam } from '../interfaces';\nimport { TIsAnyAudioParamFactory, TNativeAudioParam } from '../types';\n\nexport const createIsAnyAudioParam: TIsAnyAudioParamFactory = (audioParamStore, isNativeAudioParam) => {\n    return (anything): anything is IAudioParam | TNativeAudioParam => audioParamStore.has(<any>anything) || isNativeAudioParam(anything);\n};\n","import { IMinimalOfflineAudioContext, IOfflineAudioContext } from '../interfaces';\nimport { TIsAnyOfflineAudioContextFactory, TNativeOfflineAudioContext } from '../types';\n\nexport const createIsAnyOfflineAudioContext: TIsAnyOfflineAudioContextFactory = (contextStore, isNativeOfflineAudioContext) => {\n    return (anything): anything is IMinimalOfflineAudioContext | IOfflineAudioContext | TNativeOfflineAudioContext => {\n        const nativeContext = contextStore.get(<any>anything);\n\n        return isNativeOfflineAudioContext(nativeContext) || isNativeOfflineAudioContext(anything);\n    };\n};\n","import { TIsNativeAudioContextFactory, TNativeAudioContext } from '../types';\n\nexport const createIsNativeAudioContext: TIsNativeAudioContextFactory = (nativeAudioContextConstructor) => {\n    return (anything): anything is TNativeAudioContext => {\n        return nativeAudioContextConstructor !== null && anything instanceof nativeAudioContextConstructor;\n    };\n};\n","import { TIsNativeAudioNodeFactory, TNativeAudioNode } from '../types';\n\nexport const createIsNativeAudioNode: TIsNativeAudioNodeFactory = (window) => {\n    return (anything): anything is TNativeAudioNode => {\n        return window !== null && typeof window.AudioNode === 'function' && anything instanceof window.AudioNode;\n    };\n};\n","import { TIsNativeAudioParamFactory, TNativeAudioParam } from '../types';\n\nexport const createIsNativeAudioParam: TIsNativeAudioParamFactory = (window) => {\n    return (anything): anything is TNativeAudioParam => {\n        return window !== null && typeof window.AudioParam === 'function' && anything instanceof window.AudioParam;\n    };\n};\n","import { TIsNativeContextFactory, TNativeAudioContext } from '../types';\n\nexport const createIsNativeContext: TIsNativeContextFactory = (isNativeAudioContext, isNativeOfflineAudioContext) => {\n    return (anything): anything is TNativeAudioContext => {\n        return isNativeAudioContext(anything) || isNativeOfflineAudioContext(anything);\n    };\n};\n","import { TIsNativeOfflineAudioContextFactory, TNativeOfflineAudioContext } from '../types';\n\nexport const createIsNativeOfflineAudioContext: TIsNativeOfflineAudioContextFactory = (nativeOfflineAudioContextConstructor) => {\n    return (anything): anything is TNativeOfflineAudioContext => {\n        return nativeOfflineAudioContextConstructor !== null && anything instanceof nativeOfflineAudioContextConstructor;\n    };\n};\n","import { TIsSecureContextFactory } from '../types';\n\nexport const createIsSecureContext: TIsSecureContextFactory = (window) => window !== null && window.isSecureContext;\n","import { TIsSupportedPromiseFactory } from '../types';\n\nexport const createIsSupportedPromise: TIsSupportedPromiseFactory = async (\n    cacheTestResult,\n    testAudioBufferCopyChannelMethodsSubarraySupport,\n    testAudioContextCloseMethodSupport,\n    testAudioContextDecodeAudioDataMethodTypeErrorSupport,\n    testAudioContextOptionsSupport,\n    testAudioNodeConnectMethodSupport,\n    testAudioWorkletProcessorNoOutputsSupport,\n    testChannelMergerNodeChannelCountSupport,\n    testConstantSourceNodeAccurateSchedulingSupport,\n    testConvolverNodeBufferReassignabilitySupport,\n    testConvolverNodeChannelCountSupport,\n    testDomExceptionContrucorSupport,\n    testIsSecureContextSupport,\n    testMediaStreamAudioSourceNodeMediaStreamWithoutAudioTrackSupport,\n    testStereoPannerNodeDefaultValueSupport,\n    testTransferablesSupport\n) => {\n    if (\n        cacheTestResult(testAudioBufferCopyChannelMethodsSubarraySupport, testAudioBufferCopyChannelMethodsSubarraySupport) &&\n        cacheTestResult(testAudioContextCloseMethodSupport, testAudioContextCloseMethodSupport) &&\n        cacheTestResult(testAudioContextOptionsSupport, testAudioContextOptionsSupport) &&\n        cacheTestResult(testAudioNodeConnectMethodSupport, testAudioNodeConnectMethodSupport) &&\n        cacheTestResult(testChannelMergerNodeChannelCountSupport, testChannelMergerNodeChannelCountSupport) &&\n        cacheTestResult(testConstantSourceNodeAccurateSchedulingSupport, testConstantSourceNodeAccurateSchedulingSupport) &&\n        cacheTestResult(testConvolverNodeBufferReassignabilitySupport, testConvolverNodeBufferReassignabilitySupport) &&\n        cacheTestResult(testConvolverNodeChannelCountSupport, testConvolverNodeChannelCountSupport) &&\n        cacheTestResult(testDomExceptionContrucorSupport, testDomExceptionContrucorSupport) &&\n        cacheTestResult(testIsSecureContextSupport, testIsSecureContextSupport) &&\n        cacheTestResult(\n            testMediaStreamAudioSourceNodeMediaStreamWithoutAudioTrackSupport,\n            testMediaStreamAudioSourceNodeMediaStreamWithoutAudioTrackSupport\n        )\n    ) {\n        const results = await Promise.all([\n            cacheTestResult(testAudioContextDecodeAudioDataMethodTypeErrorSupport, testAudioContextDecodeAudioDataMethodTypeErrorSupport),\n            cacheTestResult(testAudioWorkletProcessorNoOutputsSupport, testAudioWorkletProcessorNoOutputsSupport),\n            cacheTestResult(testStereoPannerNodeDefaultValueSupport, testStereoPannerNodeDefaultValueSupport),\n            cacheTestResult(testTransferablesSupport, testTransferablesSupport)\n        ]);\n\n        return results.every((result) => result);\n    }\n\n    return false;\n};\n","import { IAudioContext, IMediaElementAudioSourceNode, IMediaElementAudioSourceOptions, IMinimalAudioContext } from '../interfaces';\nimport { TAudioNodeRenderer, TMediaElementAudioSourceNodeConstructorFactory, TNativeMediaElementAudioSourceNode } from '../types';\n\nexport const createMediaElementAudioSourceNodeConstructor: TMediaElementAudioSourceNodeConstructorFactory = (\n    audioNodeConstructor,\n    createNativeMediaElementAudioSourceNode,\n    getNativeContext,\n    isNativeOfflineAudioContext\n) => {\n    return class MediaElementAudioSourceNode<T extends IAudioContext | IMinimalAudioContext> extends audioNodeConstructor<T>\n        implements IMediaElementAudioSourceNode<T> {\n        private _nativeMediaElementAudioSourceNode: TNativeMediaElementAudioSourceNode;\n\n        constructor(context: T, options: IMediaElementAudioSourceOptions) {\n            const nativeContext = getNativeContext(context);\n            const nativeMediaElementAudioSourceNode = createNativeMediaElementAudioSourceNode(nativeContext, options);\n\n            // Bug #171: Safari allows to create a MediaElementAudioSourceNode with an OfflineAudioContext.\n            if (isNativeOfflineAudioContext(nativeContext)) {\n                throw TypeError();\n            }\n\n            super(context, true, nativeMediaElementAudioSourceNode, <TAudioNodeRenderer<T>>null);\n\n            this._nativeMediaElementAudioSourceNode = nativeMediaElementAudioSourceNode;\n        }\n\n        get mediaElement(): HTMLMediaElement {\n            return this._nativeMediaElementAudioSourceNode.mediaElement;\n        }\n    };\n};\n","import { IAudioContext, IAudioNodeOptions, IMediaStreamAudioDestinationNode, IMinimalAudioContext } from '../interfaces';\nimport { TAudioNodeRenderer, TMediaStreamAudioDestinationNodeConstructorFactory, TNativeMediaStreamAudioDestinationNode } from '../types';\n\nconst DEFAULT_OPTIONS = {\n    channelCount: 2,\n    channelCountMode: 'explicit',\n    channelInterpretation: 'speakers'\n} as const;\n\nexport const createMediaStreamAudioDestinationNodeConstructor: TMediaStreamAudioDestinationNodeConstructorFactory = (\n    audioNodeConstructor,\n    createNativeMediaStreamAudioDestinationNode,\n    getNativeContext,\n    isNativeOfflineAudioContext\n) => {\n    return class MediaStreamAudioDestinationNode<T extends IAudioContext | IMinimalAudioContext> extends audioNodeConstructor<T>\n        implements IMediaStreamAudioDestinationNode<T> {\n        private _nativeMediaStreamAudioDestinationNode: TNativeMediaStreamAudioDestinationNode;\n\n        constructor(context: T, options?: Partial<IAudioNodeOptions>) {\n            const nativeContext = getNativeContext(context);\n\n            // Bug #173: Safari allows to create a MediaStreamAudioDestinationNode with an OfflineAudioContext.\n            if (isNativeOfflineAudioContext(nativeContext)) {\n                throw new TypeError();\n            }\n\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeMediaStreamAudioDestinationNode = createNativeMediaStreamAudioDestinationNode(nativeContext, mergedOptions);\n\n            super(context, false, nativeMediaStreamAudioDestinationNode, <TAudioNodeRenderer<T>>null);\n\n            this._nativeMediaStreamAudioDestinationNode = nativeMediaStreamAudioDestinationNode;\n        }\n\n        get stream(): MediaStream {\n            return this._nativeMediaStreamAudioDestinationNode.stream;\n        }\n    };\n};\n","import { IAudioContext, IMediaStreamAudioSourceNode, IMediaStreamAudioSourceOptions, IMinimalAudioContext } from '../interfaces';\nimport { TAudioNodeRenderer, TMediaStreamAudioSourceNodeConstructorFactory, TNativeMediaStreamAudioSourceNode } from '../types';\n\nexport const createMediaStreamAudioSourceNodeConstructor: TMediaStreamAudioSourceNodeConstructorFactory = (\n    audioNodeConstructor,\n    createNativeMediaStreamAudioSourceNode,\n    getNativeContext,\n    isNativeOfflineAudioContext\n) => {\n    return class MediaStreamAudioSourceNode<T extends IAudioContext | IMinimalAudioContext> extends audioNodeConstructor<T>\n        implements IMediaStreamAudioSourceNode<T> {\n        private _nativeMediaStreamAudioSourceNode: TNativeMediaStreamAudioSourceNode;\n\n        constructor(context: T, options: IMediaStreamAudioSourceOptions) {\n            const nativeContext = getNativeContext(context);\n            const nativeMediaStreamAudioSourceNode = createNativeMediaStreamAudioSourceNode(nativeContext, options);\n\n            // Bug #172: Safari allows to create a MediaStreamAudioSourceNode with an OfflineAudioContext.\n            if (isNativeOfflineAudioContext(nativeContext)) {\n                throw new TypeError();\n            }\n\n            super(context, true, nativeMediaStreamAudioSourceNode, <TAudioNodeRenderer<T>>null);\n\n            this._nativeMediaStreamAudioSourceNode = nativeMediaStreamAudioSourceNode;\n        }\n\n        get mediaStream(): MediaStream {\n            return this._nativeMediaStreamAudioSourceNode.mediaStream;\n        }\n    };\n};\n","import { IAudioContext, IMediaStreamTrackAudioSourceNode, IMediaStreamTrackAudioSourceOptions, IMinimalAudioContext } from '../interfaces';\nimport { TAudioNodeRenderer, TMediaStreamTrackAudioSourceNodeConstructorFactory } from '../types';\n\nexport const createMediaStreamTrackAudioSourceNodeConstructor: TMediaStreamTrackAudioSourceNodeConstructorFactory = (\n    audioNodeConstructor,\n    createNativeMediaStreamTrackAudioSourceNode,\n    getNativeContext\n) => {\n    return class MediaStreamTrackAudioSourceNode<T extends IAudioContext | IMinimalAudioContext> extends audioNodeConstructor<T>\n        implements IMediaStreamTrackAudioSourceNode<T> {\n        constructor(context: T, options: IMediaStreamTrackAudioSourceOptions) {\n            const nativeContext = getNativeContext(context);\n            const nativeMediaStreamTrackAudioSourceNode = createNativeMediaStreamTrackAudioSourceNode(nativeContext, options);\n\n            super(context, true, nativeMediaStreamTrackAudioSourceNode, <TAudioNodeRenderer<T>>null);\n        }\n    };\n};\n","import { deactivateAudioGraph } from '../helpers/deactivate-audio-graph';\nimport { isValidLatencyHint } from '../helpers/is-valid-latency-hint';\nimport { IAudioContextOptions, IMinimalAudioContext } from '../interfaces';\nimport {\n    TAudioContextState,\n    TMinimalAudioContextConstructorFactory,\n    TNativeAudioContext,\n    TNativeGainNode,\n    TNativeOscillatorNode\n} from '../types';\n\nexport const createMinimalAudioContextConstructor: TMinimalAudioContextConstructorFactory = (\n    createInvalidStateError,\n    createNotSupportedError,\n    createUnknownError,\n    minimalBaseAudioContextConstructor,\n    nativeAudioContextConstructor\n) => {\n    return class MinimalAudioContext extends minimalBaseAudioContextConstructor<IMinimalAudioContext> implements IMinimalAudioContext {\n        private _baseLatency: number;\n\n        private _nativeAudioContext: TNativeAudioContext;\n\n        private _nativeGainNode: null | TNativeGainNode;\n\n        private _nativeOscillatorNode: null | TNativeOscillatorNode;\n\n        private _state: null | 'suspended';\n\n        constructor(options: IAudioContextOptions = {}) {\n            if (nativeAudioContextConstructor === null) {\n                throw new Error('Missing the native AudioContext constructor.');\n            }\n\n            const nativeAudioContext = new nativeAudioContextConstructor(options);\n\n            // Bug #131 Safari returns null when there are four other AudioContexts running already.\n            if (nativeAudioContext === null) {\n                throw createUnknownError();\n            }\n\n            // Bug #51 Only Chrome Edge, and Opera throw an error if the given latencyHint is invalid.\n            if (!isValidLatencyHint(options.latencyHint)) {\n                throw new TypeError(\n                    `The provided value '${options.latencyHint}' is not a valid enum value of type AudioContextLatencyCategory.`\n                );\n            }\n\n            // Bug #150 Safari does not support setting the sampleRate.\n            if (options.sampleRate !== undefined && nativeAudioContext.sampleRate !== options.sampleRate) {\n                throw createNotSupportedError();\n            }\n\n            super(nativeAudioContext, 2);\n\n            const { latencyHint } = options;\n            const { sampleRate } = nativeAudioContext;\n\n            // @todo The values for 'balanced', 'interactive' and 'playback' are just copied from Chrome's implementation.\n            this._baseLatency =\n                typeof nativeAudioContext.baseLatency === 'number'\n                    ? nativeAudioContext.baseLatency\n                    : latencyHint === 'balanced'\n                    ? 512 / sampleRate\n                    : latencyHint === 'interactive' || latencyHint === undefined\n                    ? 256 / sampleRate\n                    : latencyHint === 'playback'\n                    ? 1024 / sampleRate\n                    : /*\n                       * @todo The min (256) and max (16384) values are taken from the allowed bufferSize values of a\n                       * ScriptProcessorNode.\n                       */\n                      (Math.max(2, Math.min(128, Math.round((latencyHint * sampleRate) / 128))) * 128) / sampleRate;\n            this._nativeAudioContext = nativeAudioContext;\n\n            // Bug #188: Safari will set the context's state to 'interrupted' in case the user switches tabs.\n            if (nativeAudioContextConstructor.name === 'webkitAudioContext') {\n                this._nativeGainNode = nativeAudioContext.createGain();\n                this._nativeOscillatorNode = nativeAudioContext.createOscillator();\n\n                this._nativeGainNode.gain.value = 1e-37;\n\n                this._nativeOscillatorNode.connect(this._nativeGainNode).connect(nativeAudioContext.destination);\n                this._nativeOscillatorNode.start();\n            } else {\n                this._nativeGainNode = null;\n                this._nativeOscillatorNode = null;\n            }\n\n            this._state = null;\n\n            /*\n             * Bug #34: Chrome, Edge and Opera pretend to be running right away, but fire an onstatechange event when the state actually\n             * changes to 'running'.\n             */\n            if (nativeAudioContext.state === 'running') {\n                this._state = 'suspended';\n\n                const revokeState = () => {\n                    if (this._state === 'suspended') {\n                        this._state = null;\n                    }\n\n                    nativeAudioContext.removeEventListener('statechange', revokeState);\n                };\n\n                nativeAudioContext.addEventListener('statechange', revokeState);\n            }\n        }\n\n        get baseLatency(): number {\n            return this._baseLatency;\n        }\n\n        get state(): TAudioContextState {\n            return this._state !== null ? this._state : this._nativeAudioContext.state;\n        }\n\n        public close(): Promise<void> {\n            // Bug #35: Firefox does not throw an error if the AudioContext was closed before.\n            if (this.state === 'closed') {\n                return this._nativeAudioContext.close().then(() => {\n                    throw createInvalidStateError();\n                });\n            }\n\n            // Bug #34: If the state was set to suspended before it should be revoked now.\n            if (this._state === 'suspended') {\n                this._state = null;\n            }\n\n            return this._nativeAudioContext.close().then(() => {\n                if (this._nativeGainNode !== null && this._nativeOscillatorNode !== null) {\n                    this._nativeOscillatorNode.stop();\n\n                    this._nativeGainNode.disconnect();\n                    this._nativeOscillatorNode.disconnect();\n                }\n\n                deactivateAudioGraph(this);\n            });\n        }\n\n        public resume(): Promise<void> {\n            if (this._state === 'suspended') {\n                return new Promise((resolve, reject) => {\n                    const resolvePromise = () => {\n                        this._nativeAudioContext.removeEventListener('statechange', resolvePromise);\n\n                        if (this._nativeAudioContext.state === 'running') {\n                            resolve();\n                        } else {\n                            this.resume().then(resolve, reject);\n                        }\n                    };\n\n                    this._nativeAudioContext.addEventListener('statechange', resolvePromise);\n                });\n            }\n\n            return this._nativeAudioContext.resume().catch((err) => {\n                // Bug #55: Chrome, Edge and Opera do throw an InvalidAccessError instead of an InvalidStateError.\n                // Bug #56: Safari invokes the catch handler but without an error.\n                if (err === undefined || err.code === 15) {\n                    throw createInvalidStateError();\n                }\n\n                throw err;\n            });\n        }\n\n        public suspend(): Promise<void> {\n            return this._nativeAudioContext.suspend().catch((err) => {\n                // Bug #56: Safari invokes the catch handler but without an error.\n                if (err === undefined) {\n                    throw createInvalidStateError();\n                }\n\n                throw err;\n            });\n        }\n    };\n};\n","import { CONTEXT_STORE } from '../globals';\nimport { IAudioDestinationNode, IAudioListener, IMinimalBaseAudioContext } from '../interfaces';\nimport { TAudioContextState, TContext, TEventHandler, TMinimalBaseAudioContextConstructorFactory, TNativeContext } from '../types';\n\nexport const createMinimalBaseAudioContextConstructor: TMinimalBaseAudioContextConstructorFactory = (\n    audioDestinationNodeConstructor,\n    createAudioListener,\n    eventTargetConstructor,\n    isNativeOfflineAudioContext,\n    unrenderedAudioWorkletNodeStore,\n    wrapEventListener\n) => {\n    return class MinimalBaseAudioContext<T extends TContext> extends eventTargetConstructor implements IMinimalBaseAudioContext<T> {\n        private _destination: IAudioDestinationNode<T>;\n\n        private _listener: IAudioListener;\n\n        private _onstatechange: null | TEventHandler<T>;\n\n        constructor(private _nativeContext: TNativeContext, numberOfChannels: number) {\n            super(_nativeContext);\n\n            CONTEXT_STORE.set(<T>(<unknown>this), _nativeContext);\n\n            if (isNativeOfflineAudioContext(_nativeContext)) {\n                unrenderedAudioWorkletNodeStore.set(_nativeContext, new Set());\n            }\n\n            this._destination = new audioDestinationNodeConstructor(<T>(<unknown>this), numberOfChannels);\n            this._listener = createAudioListener(<T>(<unknown>this), _nativeContext);\n            this._onstatechange = null;\n        }\n\n        get currentTime(): number {\n            return this._nativeContext.currentTime;\n        }\n\n        get destination(): IAudioDestinationNode<T> {\n            return this._destination;\n        }\n\n        get listener(): IAudioListener {\n            return this._listener;\n        }\n\n        get onstatechange(): null | TEventHandler<T> {\n            return this._onstatechange;\n        }\n\n        set onstatechange(value) {\n            const wrappedListener = typeof value === 'function' ? wrapEventListener(this, value) : null;\n\n            this._nativeContext.onstatechange = wrappedListener;\n\n            const nativeOnStateChange = this._nativeContext.onstatechange;\n\n            this._onstatechange =\n                nativeOnStateChange !== null && nativeOnStateChange === wrappedListener\n                    ? value\n                    : <null | TEventHandler<T>>nativeOnStateChange;\n        }\n\n        get sampleRate(): number {\n            return this._nativeContext.sampleRate;\n        }\n\n        get state(): TAudioContextState {\n            return this._nativeContext.state;\n        }\n    };\n};\n","import { TNativeContext } from '../types';\n\nexport const testPromiseSupport = (nativeContext: TNativeContext): boolean => {\n    // This 12 numbers represent the 48 bytes of an empty WAVE file with a single sample.\n    const uint32Array = new Uint32Array([1179011410, 40, 1163280727, 544501094, 16, 131073, 44100, 176400, 1048580, 1635017060, 4, 0]);\n\n    try {\n        // Bug #1: Safari requires a successCallback.\n        const promise = nativeContext.decodeAudioData(<ArrayBuffer>uint32Array.buffer, () => {\n            // Ignore the success callback.\n        });\n\n        if (promise === undefined) {\n            return false;\n        }\n\n        promise.catch(() => {\n            // Ignore rejected errors.\n        });\n\n        return true;\n    } catch {\n        // Ignore errors.\n    }\n\n    return false;\n};\n","import { deactivateAudioGraph } from '../helpers/deactivate-audio-graph';\nimport { testPromiseSupport } from '../helpers/test-promise-support';\nimport { IAudioBuffer, IMinimalOfflineAudioContext, IOfflineAudioContextOptions } from '../interfaces';\nimport { TAudioContextState, TMinimalOfflineAudioContextConstructorFactory, TNativeOfflineAudioContext } from '../types';\n\nconst DEFAULT_OPTIONS = {\n    numberOfChannels: 1\n} as const;\n\nexport const createMinimalOfflineAudioContextConstructor: TMinimalOfflineAudioContextConstructorFactory = (\n    cacheTestResult,\n    createInvalidStateError,\n    createNativeOfflineAudioContext,\n    minimalBaseAudioContextConstructor,\n    startRendering\n) => {\n    return class MinimalOfflineAudioContext extends minimalBaseAudioContextConstructor<IMinimalOfflineAudioContext>\n        implements IMinimalOfflineAudioContext {\n        private _length: number;\n\n        private _nativeOfflineAudioContext: TNativeOfflineAudioContext;\n\n        private _state: null | TAudioContextState;\n\n        constructor(options: IOfflineAudioContextOptions) {\n            const { length, numberOfChannels, sampleRate } = { ...DEFAULT_OPTIONS, ...options };\n\n            const nativeOfflineAudioContext = createNativeOfflineAudioContext(numberOfChannels, length, sampleRate);\n\n            // #21 Safari does not support promises and therefore would fire the statechange event before the promise can be resolved.\n            if (!cacheTestResult(testPromiseSupport, () => testPromiseSupport(nativeOfflineAudioContext))) {\n                nativeOfflineAudioContext.addEventListener(\n                    'statechange',\n                    (() => {\n                        let i = 0;\n\n                        const delayStateChangeEvent = (event: Event) => {\n                            if (this._state === 'running') {\n                                if (i > 0) {\n                                    nativeOfflineAudioContext.removeEventListener('statechange', delayStateChangeEvent);\n                                    event.stopImmediatePropagation();\n\n                                    this._waitForThePromiseToSettle(event);\n                                } else {\n                                    i += 1;\n                                }\n                            }\n                        };\n\n                        return delayStateChangeEvent;\n                    })()\n                );\n            }\n\n            super(nativeOfflineAudioContext, numberOfChannels);\n\n            this._length = length;\n            this._nativeOfflineAudioContext = nativeOfflineAudioContext;\n            this._state = null;\n        }\n\n        get length(): number {\n            // Bug #17: Safari does not yet expose the length.\n            if (this._nativeOfflineAudioContext.length === undefined) {\n                return this._length;\n            }\n\n            return this._nativeOfflineAudioContext.length;\n        }\n\n        get state(): TAudioContextState {\n            return this._state === null ? this._nativeOfflineAudioContext.state : this._state;\n        }\n\n        public startRendering(): Promise<IAudioBuffer> {\n            /*\n             * Bug #9 & #59: It is theoretically possible that startRendering() will first render a partialOfflineAudioContext. Therefore\n             * the state of the nativeOfflineAudioContext might no transition to running immediately.\n             */\n            if (this._state === 'running') {\n                return Promise.reject(createInvalidStateError());\n            }\n\n            this._state = 'running';\n\n            return startRendering(this.destination, this._nativeOfflineAudioContext).finally(() => {\n                this._state = null;\n\n                deactivateAudioGraph(this);\n            });\n        }\n\n        private _waitForThePromiseToSettle(event: Event): void {\n            if (this._state === null) {\n                this._nativeOfflineAudioContext.dispatchEvent(event);\n            } else {\n                setTimeout(() => this._waitForThePromiseToSettle(event));\n            }\n        }\n    };\n};\n","import { TMonitorConnectionsFactory, TNativeAudioNode, TNativeAudioParam } from '../types';\n\nexport const createMonitorConnections: TMonitorConnectionsFactory = (insertElementInSet, isNativeAudioNode) => {\n    return (nativeAudioNode, whenConnected, whenDisconnected) => {\n        const connections = new Set<[TNativeAudioNode, number, number] | [TNativeAudioParam, number]>();\n\n        nativeAudioNode.connect = <TNativeAudioNode['connect']>((connect) => {\n            // tslint:disable-next-line:invalid-void\n            return (destination: TNativeAudioNode | TNativeAudioParam, output = 0, input = 0): void | TNativeAudioNode => {\n                const wasDisconnected = connections.size === 0;\n\n                if (isNativeAudioNode(destination)) {\n                    // @todo TypeScript cannot infer the overloaded signature with 3 arguments yet.\n                    (<(destination: TNativeAudioNode, output: number, input: number) => TNativeAudioNode>connect).call(\n                        nativeAudioNode,\n                        destination,\n                        output,\n                        input\n                    );\n\n                    insertElementInSet(\n                        connections,\n                        [destination, output, input],\n                        (connection) => connection[0] === destination && connection[1] === output && connection[2] === input,\n                        true\n                    );\n\n                    if (wasDisconnected) {\n                        whenConnected();\n                    }\n\n                    return destination;\n                }\n\n                connect.call(nativeAudioNode, destination, output);\n\n                insertElementInSet(\n                    connections,\n                    [destination, output],\n                    (connection) => connection[0] === destination && connection[1] === output,\n                    true\n                );\n\n                if (wasDisconnected) {\n                    whenConnected();\n                }\n\n                return;\n            };\n        })(nativeAudioNode.connect);\n\n        nativeAudioNode.disconnect = ((disconnect) => {\n            return (destinationOrOutput?: number | TNativeAudioNode | TNativeAudioParam, output?: number, input?: number): void => {\n                const wasConnected = connections.size > 0;\n\n                if (destinationOrOutput === undefined) {\n                    disconnect.apply(nativeAudioNode);\n\n                    connections.clear();\n                } else if (typeof destinationOrOutput === 'number') {\n                    // @todo TypeScript cannot infer the overloaded signature with 1 argument yet.\n                    (<(output: number) => void>disconnect).call(nativeAudioNode, destinationOrOutput);\n\n                    for (const connection of connections) {\n                        if (connection[1] === destinationOrOutput) {\n                            connections.delete(connection);\n                        }\n                    }\n                } else {\n                    if (isNativeAudioNode(destinationOrOutput)) {\n                        // @todo TypeScript cannot infer the overloaded signature with 3 arguments yet.\n                        (<(destination: TNativeAudioNode, output?: number, input?: number) => void>disconnect).call(\n                            nativeAudioNode,\n                            destinationOrOutput,\n                            output,\n                            input\n                        );\n                    } else {\n                        // @todo TypeScript cannot infer the overloaded signature with 2 arguments yet.\n                        (<(destination: TNativeAudioParam, output?: number) => void>disconnect).call(\n                            nativeAudioNode,\n                            destinationOrOutput,\n                            output\n                        );\n                    }\n\n                    for (const connection of connections) {\n                        if (\n                            connection[0] === destinationOrOutput &&\n                            (output === undefined || connection[1] === output) &&\n                            (input === undefined || connection[2] === input)\n                        ) {\n                            connections.delete(connection);\n                        }\n                    }\n                }\n\n                const isDisconnected = connections.size === 0;\n\n                if (wasConnected && isDisconnected) {\n                    whenDisconnected();\n                }\n            };\n        })(nativeAudioNode.disconnect);\n\n        return nativeAudioNode;\n    };\n};\n","export const assignNativeAudioNodeOption = <T extends keyof any, U extends any>(\n    nativeAudioNode: Record<T, U>,\n    options: Record<T, U>,\n    option: T\n) => {\n    const value = options[option];\n\n    if (value !== undefined && value !== nativeAudioNode[option]) {\n        nativeAudioNode[option] = value;\n    }\n};\n","import { IAudioNodeOptions } from '../interfaces';\nimport { TNativeAudioNode } from '../types';\nimport { assignNativeAudioNodeOption } from './assign-native-audio-node-option';\n\nexport const assignNativeAudioNodeOptions = (nativeAudioNode: TNativeAudioNode, options: IAudioNodeOptions): void => {\n    assignNativeAudioNodeOption(nativeAudioNode, options, 'channelCount');\n    assignNativeAudioNodeOption(nativeAudioNode, options, 'channelCountMode');\n    assignNativeAudioNodeOption(nativeAudioNode, options, 'channelInterpretation');\n};\n","import { TNativeAnalyserNode } from '../types';\n\nexport const testAnalyserNodeGetFloatTimeDomainDataMethodSupport = (nativeAnalyserNode: TNativeAnalyserNode): boolean => {\n    return typeof nativeAnalyserNode.getFloatTimeDomainData === 'function';\n};\n","import { TNativeAnalyserNode } from '../types';\n\nexport const wrapAnalyserNodeGetFloatTimeDomainDataMethod = (nativeAnalyserNode: TNativeAnalyserNode): void => {\n    nativeAnalyserNode.getFloatTimeDomainData = (array: Float32Array) => {\n        const byteTimeDomainData = new Uint8Array(array.length);\n\n        nativeAnalyserNode.getByteTimeDomainData(byteTimeDomainData);\n\n        const length = Math.max(byteTimeDomainData.length, nativeAnalyserNode.fftSize);\n\n        for (let i = 0; i < length; i += 1) {\n            array[i] = (byteTimeDomainData[i] - 128) * 0.0078125;\n        }\n\n        return array;\n    };\n};\n","import { assignNativeAudioNodeOption } from '../helpers/assign-native-audio-node-option';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { testAnalyserNodeGetFloatTimeDomainDataMethodSupport } from '../helpers/test-analyser-node-get-float-time-domain-data-method-support';\nimport { wrapAnalyserNodeGetFloatTimeDomainDataMethod } from '../helpers/wrap-analyser-node-get-float-time-domain-data-method';\nimport { TNativeAnalyserNodeFactoryFactory } from '../types';\n\nexport const createNativeAnalyserNodeFactory: TNativeAnalyserNodeFactoryFactory = (cacheTestResult, createIndexSizeError) => {\n    return (nativeContext, options) => {\n        const nativeAnalyserNode = nativeContext.createAnalyser();\n\n        // Bug #37: Firefox does not create an AnalyserNode with the default properties.\n        assignNativeAudioNodeOptions(nativeAnalyserNode, options);\n\n        // Bug #118: Safari does not throw an error if maxDecibels is not more than minDecibels.\n        if (!(options.maxDecibels > options.minDecibels)) {\n            throw createIndexSizeError();\n        }\n\n        assignNativeAudioNodeOption(nativeAnalyserNode, options, 'fftSize');\n        assignNativeAudioNodeOption(nativeAnalyserNode, options, 'maxDecibels');\n        assignNativeAudioNodeOption(nativeAnalyserNode, options, 'minDecibels');\n        assignNativeAudioNodeOption(nativeAnalyserNode, options, 'smoothingTimeConstant');\n\n        // Bug #36: Safari does not support getFloatTimeDomainData() yet.\n        if (\n            !cacheTestResult(testAnalyserNodeGetFloatTimeDomainDataMethodSupport, () =>\n                testAnalyserNodeGetFloatTimeDomainDataMethodSupport(nativeAnalyserNode)\n            )\n        ) {\n            wrapAnalyserNodeGetFloatTimeDomainDataMethod(nativeAnalyserNode);\n        }\n\n        return nativeAnalyserNode;\n    };\n};\n","import { TNativeAudioBufferConstructorFactory } from '../types';\n\nexport const createNativeAudioBufferConstructor: TNativeAudioBufferConstructorFactory = (window) => {\n    if (window === null) {\n        return null;\n    }\n\n    if (window.hasOwnProperty('AudioBuffer')) {\n        return window.AudioBuffer;\n    }\n\n    return null;\n};\n","export const assignNativeAudioNodeAudioParamValue = <T extends { [key: string]: any }, U extends { [key: string]: any }>(\n    nativeAudioNode: T,\n    options: U,\n    audioParam: keyof T & keyof U\n) => {\n    const value = options[audioParam];\n\n    if (value !== undefined && value !== nativeAudioNode[audioParam].value) {\n        nativeAudioNode[audioParam].value = value;\n    }\n};\n","import { createInvalidStateError } from '../factories/invalid-state-error';\nimport { TNativeAudioBufferSourceNode } from '../types';\n\nexport const wrapAudioBufferSourceNodeStartMethodConsecutiveCalls = (nativeAudioBufferSourceNode: TNativeAudioBufferSourceNode): void => {\n    nativeAudioBufferSourceNode.start = ((start) => {\n        let isScheduled = false;\n\n        return (when = 0, offset = 0, duration?: number) => {\n            if (isScheduled) {\n                throw createInvalidStateError();\n            }\n\n            start.call(nativeAudioBufferSourceNode, when, offset, duration);\n\n            isScheduled = true;\n        };\n    })(nativeAudioBufferSourceNode.start);\n};\n","import { TNativeAudioBufferSourceNode, TNativeConstantSourceNode, TNativeOscillatorNode } from '../types';\n\nexport const wrapAudioScheduledSourceNodeStartMethodNegativeParameters = (\n    nativeAudioScheduledSourceNode: TNativeAudioBufferSourceNode | TNativeConstantSourceNode | TNativeOscillatorNode\n): void => {\n    nativeAudioScheduledSourceNode.start = ((start) => {\n        return (when = 0, offset = 0, duration?: number) => {\n            if ((typeof duration === 'number' && duration < 0) || offset < 0 || when < 0) {\n                throw new RangeError(\"The parameters can't be negative.\");\n            }\n\n            // @todo TypeScript cannot infer the overloaded signature with 3 arguments yet.\n            (<(when: number, offset: number, duration?: number) => void>start).call(nativeAudioScheduledSourceNode, when, offset, duration);\n        };\n    })(nativeAudioScheduledSourceNode.start);\n};\n","import { TNativeAudioBufferSourceNode, TNativeConstantSourceNode, TNativeOscillatorNode } from '../types';\n\nexport const wrapAudioScheduledSourceNodeStopMethodNegativeParameters = (\n    nativeAudioScheduledSourceNode: TNativeAudioBufferSourceNode | TNativeConstantSourceNode | TNativeOscillatorNode\n): void => {\n    nativeAudioScheduledSourceNode.stop = ((stop) => {\n        return (when = 0) => {\n            if (when < 0) {\n                throw new RangeError(\"The parameter can't be negative.\");\n            }\n\n            stop.call(nativeAudioScheduledSourceNode, when);\n        };\n    })(nativeAudioScheduledSourceNode.stop);\n};\n","import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOption } from '../helpers/assign-native-audio-node-option';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { wrapAudioBufferSourceNodeStartMethodConsecutiveCalls } from '../helpers/wrap-audio-buffer-source-node-start-method-consecutive-calls';\nimport { wrapAudioScheduledSourceNodeStartMethodNegativeParameters } from '../helpers/wrap-audio-scheduled-source-node-start-method-negative-parameters';\nimport { wrapAudioScheduledSourceNodeStopMethodNegativeParameters } from '../helpers/wrap-audio-scheduled-source-node-stop-method-negative-parameters';\nimport { TNativeAudioBufferSourceNodeFactoryFactory } from '../types';\n\nexport const createNativeAudioBufferSourceNodeFactory: TNativeAudioBufferSourceNodeFactoryFactory = (\n    addSilentConnection,\n    cacheTestResult,\n    testAudioBufferSourceNodeStartMethodConsecutiveCallsSupport,\n    testAudioBufferSourceNodeStartMethodOffsetClampingSupport,\n    testAudioBufferSourceNodeStopMethodNullifiedBufferSupport,\n    testAudioScheduledSourceNodeStartMethodNegativeParametersSupport,\n    testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport,\n    testAudioScheduledSourceNodeStopMethodNegativeParametersSupport,\n    wrapAudioBufferSourceNodeStartMethodOffsetClampling,\n    wrapAudioBufferSourceNodeStopMethodNullifiedBuffer,\n    wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls\n) => {\n    return (nativeContext, options) => {\n        const nativeAudioBufferSourceNode = nativeContext.createBufferSource();\n\n        assignNativeAudioNodeOptions(nativeAudioBufferSourceNode, options);\n\n        assignNativeAudioNodeAudioParamValue(nativeAudioBufferSourceNode, options, 'playbackRate');\n\n        assignNativeAudioNodeOption(nativeAudioBufferSourceNode, options, 'buffer');\n\n        // Bug #149: Safari does not yet support the detune AudioParam.\n\n        assignNativeAudioNodeOption(nativeAudioBufferSourceNode, options, 'loop');\n        assignNativeAudioNodeOption(nativeAudioBufferSourceNode, options, 'loopEnd');\n        assignNativeAudioNodeOption(nativeAudioBufferSourceNode, options, 'loopStart');\n\n        // Bug #69: Safari does allow calls to start() of an already scheduled AudioBufferSourceNode.\n        if (\n            !cacheTestResult(testAudioBufferSourceNodeStartMethodConsecutiveCallsSupport, () =>\n                testAudioBufferSourceNodeStartMethodConsecutiveCallsSupport(nativeContext)\n            )\n        ) {\n            wrapAudioBufferSourceNodeStartMethodConsecutiveCalls(nativeAudioBufferSourceNode);\n        }\n\n        // Bug #154 & #155: Safari does not handle offsets which are equal to or greater than the duration of the buffer.\n        if (\n            !cacheTestResult(testAudioBufferSourceNodeStartMethodOffsetClampingSupport, () =>\n                testAudioBufferSourceNodeStartMethodOffsetClampingSupport(nativeContext)\n            )\n        ) {\n            wrapAudioBufferSourceNodeStartMethodOffsetClampling(nativeAudioBufferSourceNode);\n        }\n\n        // Bug #162: Safari does throw an error when stop() is called on an AudioBufferSourceNode which has no buffer assigned to it.\n        if (\n            !cacheTestResult(testAudioBufferSourceNodeStopMethodNullifiedBufferSupport, () =>\n                testAudioBufferSourceNodeStopMethodNullifiedBufferSupport(nativeContext)\n            )\n        ) {\n            wrapAudioBufferSourceNodeStopMethodNullifiedBuffer(nativeAudioBufferSourceNode, nativeContext);\n        }\n\n        // Bug #44: Safari does not throw a RangeError yet.\n        if (\n            !cacheTestResult(testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, () =>\n                testAudioScheduledSourceNodeStartMethodNegativeParametersSupport(nativeContext)\n            )\n        ) {\n            wrapAudioScheduledSourceNodeStartMethodNegativeParameters(nativeAudioBufferSourceNode);\n        }\n\n        // Bug #19: Safari does not ignore calls to stop() of an already stopped AudioBufferSourceNode.\n        if (\n            !cacheTestResult(testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport, () =>\n                testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport(nativeContext)\n            )\n        ) {\n            wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls(nativeAudioBufferSourceNode, nativeContext);\n        }\n\n        // Bug #44: Only Firefox does not throw a RangeError yet.\n        if (\n            !cacheTestResult(testAudioScheduledSourceNodeStopMethodNegativeParametersSupport, () =>\n                testAudioScheduledSourceNodeStopMethodNegativeParametersSupport(nativeContext)\n            )\n        ) {\n            wrapAudioScheduledSourceNodeStopMethodNegativeParameters(nativeAudioBufferSourceNode);\n        }\n\n        // Bug #175: Safari will not fire an ended event if the AudioBufferSourceNode is unconnected.\n        addSilentConnection(nativeContext, nativeAudioBufferSourceNode);\n\n        return nativeAudioBufferSourceNode;\n    };\n};\n","import { TNativeAudioContextConstructorFactory } from '../types';\n\nexport const createNativeAudioContextConstructor: TNativeAudioContextConstructorFactory = (window) => {\n    if (window === null) {\n        return null;\n    }\n\n    if (window.hasOwnProperty('AudioContext')) {\n        return window.AudioContext;\n    }\n\n    return window.hasOwnProperty('webkitAudioContext') ? (<any>window).webkitAudioContext : null;\n};\n","import { TNativeAudioDestinationNode, TNativeAudioDestinationNodeFactoryFactory, TNativeGainNode } from '../types';\n\nexport const createNativeAudioDestinationNodeFactory: TNativeAudioDestinationNodeFactoryFactory = (\n    createNativeGainNode,\n    overwriteAccessors\n) => {\n    return (nativeContext, channelCount, isNodeOfNativeOfflineAudioContext) => {\n        const nativeAudioDestinationNode = nativeContext.destination;\n\n        // Bug #132: Safari does not have the correct channelCount.\n        if (nativeAudioDestinationNode.channelCount !== channelCount) {\n            try {\n                nativeAudioDestinationNode.channelCount = channelCount;\n            } catch {\n                // Bug #169: Safari throws an error on each attempt to change the channelCount.\n            }\n        }\n\n        // Bug #83: Safari does not have the correct channelCountMode.\n        if (isNodeOfNativeOfflineAudioContext && nativeAudioDestinationNode.channelCountMode !== 'explicit') {\n            nativeAudioDestinationNode.channelCountMode = 'explicit';\n        }\n\n        // Bug #47: The AudioDestinationNode in Safari does not initialize the maxChannelCount property correctly.\n        if (nativeAudioDestinationNode.maxChannelCount === 0) {\n            Object.defineProperty(nativeAudioDestinationNode, 'maxChannelCount', {\n                value: channelCount\n            });\n        }\n\n        // Bug #168: No browser does yet have an AudioDestinationNode with an output.\n        const gainNode = createNativeGainNode(nativeContext, {\n            channelCount,\n            channelCountMode: nativeAudioDestinationNode.channelCountMode,\n            channelInterpretation: nativeAudioDestinationNode.channelInterpretation,\n            gain: 1\n        });\n\n        overwriteAccessors(\n            gainNode,\n            'channelCount',\n            (get) => () => get.call(gainNode),\n            (set) => (value) => {\n                set.call(gainNode, value);\n\n                try {\n                    nativeAudioDestinationNode.channelCount = value;\n                } catch (err) {\n                    // Bug #169: Safari throws an error on each attempt to change the channelCount.\n                    if (value > nativeAudioDestinationNode.maxChannelCount) {\n                        throw err;\n                    }\n                }\n            }\n        );\n\n        overwriteAccessors(\n            gainNode,\n            'channelCountMode',\n            (get) => () => get.call(gainNode),\n            (set) => (value) => {\n                set.call(gainNode, value);\n                nativeAudioDestinationNode.channelCountMode = value;\n            }\n        );\n\n        overwriteAccessors(\n            gainNode,\n            'channelInterpretation',\n            (get) => () => get.call(gainNode),\n            (set) => (value) => {\n                set.call(gainNode, value);\n                nativeAudioDestinationNode.channelInterpretation = value;\n            }\n        );\n\n        Object.defineProperty(gainNode, 'maxChannelCount', {\n            get: () => nativeAudioDestinationNode.maxChannelCount\n        });\n\n        // @todo This should be disconnected when the context is closed.\n        gainNode.connect(nativeAudioDestinationNode);\n\n        return <{ maxChannelCount: TNativeAudioDestinationNode['maxChannelCount'] } & TNativeGainNode>gainNode;\n    };\n};\n","import { TNativeAudioWorkletNodeConstructorFactory } from '../types';\n\nexport const createNativeAudioWorkletNodeConstructor: TNativeAudioWorkletNodeConstructorFactory = (window) => {\n    if (window === null) {\n        return null;\n    }\n\n    return window.hasOwnProperty('AudioWorkletNode') ? window.AudioWorkletNode : null;\n};\n","import { IAudioWorkletNodeOptions } from '../interfaces';\n\nexport const testClonabilityOfAudioWorkletNodeOptions = (audioWorkletNodeOptions: IAudioWorkletNodeOptions): void => {\n    const { port1 } = new MessageChannel();\n\n    try {\n        // This will throw an error if the audioWorkletNodeOptions are not clonable.\n        port1.postMessage(audioWorkletNodeOptions);\n    } finally {\n        port1.close();\n    }\n};\n","import { testClonabilityOfAudioWorkletNodeOptions } from '../helpers/test-clonability-of-audio-worklet-node-options';\nimport { TNativeAudioWorkletNode, TNativeAudioWorkletNodeFactoryFactory, TNativeAudioWorkletNodeOptions } from '../types';\n\nexport const createNativeAudioWorkletNodeFactory: TNativeAudioWorkletNodeFactoryFactory = (\n    createInvalidStateError,\n    createNativeAudioWorkletNodeFaker,\n    createNativeGainNode,\n    createNotSupportedError,\n    monitorConnections\n) => {\n    return (nativeContext, baseLatency, nativeAudioWorkletNodeConstructor, name, processorConstructor, options) => {\n        if (nativeAudioWorkletNodeConstructor !== null) {\n            try {\n                const nativeAudioWorkletNode = new nativeAudioWorkletNodeConstructor(\n                    nativeContext,\n                    name,\n                    <TNativeAudioWorkletNodeOptions>options\n                );\n                const patchedEventListeners: Map<\n                    EventListenerOrEventListenerObject,\n                    NonNullable<TNativeAudioWorkletNode['onprocessorerror']>\n                > = new Map();\n\n                let onprocessorerror: TNativeAudioWorkletNode['onprocessorerror'] = null;\n\n                Object.defineProperties(nativeAudioWorkletNode, {\n                    /*\n                     * Bug #61: Overwriting the property accessors for channelCount and channelCountMode is necessary as long as some\n                     * browsers have no native implementation to achieve a consistent behavior.\n                     */\n                    channelCount: {\n                        get: () => options.channelCount,\n                        set: () => {\n                            throw createInvalidStateError();\n                        }\n                    },\n                    channelCountMode: {\n                        get: () => 'explicit',\n                        set: () => {\n                            throw createInvalidStateError();\n                        }\n                    },\n                    // Bug #156: Chrome and Edge do not yet fire an ErrorEvent.\n                    onprocessorerror: {\n                        get: () => onprocessorerror,\n                        set: (value) => {\n                            if (typeof onprocessorerror === 'function') {\n                                nativeAudioWorkletNode.removeEventListener('processorerror', onprocessorerror);\n                            }\n\n                            onprocessorerror = typeof value === 'function' ? value : null;\n\n                            if (typeof onprocessorerror === 'function') {\n                                nativeAudioWorkletNode.addEventListener('processorerror', onprocessorerror);\n                            }\n                        }\n                    }\n                });\n\n                nativeAudioWorkletNode.addEventListener = ((addEventListener) => {\n                    return (...args: [string, EventListenerOrEventListenerObject, (boolean | AddEventListenerOptions)?]): void => {\n                        if (args[0] === 'processorerror') {\n                            const unpatchedEventListener =\n                                typeof args[1] === 'function'\n                                    ? args[1]\n                                    : typeof args[1] === 'object' && args[1] !== null && typeof args[1].handleEvent === 'function'\n                                    ? args[1].handleEvent\n                                    : null;\n\n                            if (unpatchedEventListener !== null) {\n                                const patchedEventListener = patchedEventListeners.get(args[1]);\n\n                                if (patchedEventListener !== undefined) {\n                                    args[1] = patchedEventListener;\n                                } else {\n                                    args[1] = (event: Event) => {\n                                        // Bug #178: Chrome, Edge and Opera do fire an event of type error.\n                                        if (event.type === 'error') {\n                                            Object.defineProperties(event, {\n                                                type: { value: 'processorerror' }\n                                            });\n\n                                            unpatchedEventListener(event);\n                                        } else {\n                                            unpatchedEventListener(new ErrorEvent(args[0], { ...event }));\n                                        }\n                                    };\n\n                                    patchedEventListeners.set(unpatchedEventListener, args[1]);\n                                }\n                            }\n                        }\n\n                        // Bug #178: Chrome, Edge and Opera do fire an event of type error.\n                        addEventListener.call(nativeAudioWorkletNode, 'error', args[1], args[2]);\n\n                        return addEventListener.call(nativeAudioWorkletNode, ...args);\n                    };\n                })(nativeAudioWorkletNode.addEventListener);\n\n                nativeAudioWorkletNode.removeEventListener = ((removeEventListener) => {\n                    return (...args: any[]): void => {\n                        if (args[0] === 'processorerror') {\n                            const patchedEventListener = patchedEventListeners.get(args[1]);\n\n                            if (patchedEventListener !== undefined) {\n                                patchedEventListeners.delete(args[1]);\n\n                                args[1] = patchedEventListener;\n                            }\n                        }\n\n                        // Bug #178: Chrome, Edge and Opera do fire an event of type error.\n                        removeEventListener.call(nativeAudioWorkletNode, 'error', args[1], args[2]);\n\n                        return removeEventListener.call(nativeAudioWorkletNode, args[0], args[1], args[2]);\n                    };\n                })(nativeAudioWorkletNode.removeEventListener);\n\n                /*\n                 * Bug #86: Chrome and Edge do not invoke the process() function if the corresponding AudioWorkletNode is unconnected but\n                 * has an output.\n                 */\n                if (options.numberOfOutputs !== 0) {\n                    const nativeGainNode = createNativeGainNode(nativeContext, {\n                        channelCount: 1,\n                        channelCountMode: 'explicit',\n                        channelInterpretation: 'discrete',\n                        gain: 0\n                    });\n\n                    nativeAudioWorkletNode.connect(nativeGainNode).connect(nativeContext.destination);\n\n                    const whenConnected = () => nativeGainNode.disconnect();\n                    const whenDisconnected = () => nativeGainNode.connect(nativeContext.destination);\n\n                    // @todo Disconnect the connection when the process() function of the AudioWorkletNode returns false.\n                    return monitorConnections(nativeAudioWorkletNode, whenConnected, whenDisconnected);\n                }\n\n                return nativeAudioWorkletNode;\n            } catch (err) {\n                // Bug #60: Chrome, Edge & Opera throw an InvalidStateError instead of a NotSupportedError.\n                if (err.code === 11) {\n                    throw createNotSupportedError();\n                }\n\n                throw err;\n            }\n        }\n\n        // Bug #61: Only Chrome & Opera have an implementation of the AudioWorkletNode yet.\n        if (processorConstructor === undefined) {\n            throw createNotSupportedError();\n        }\n\n        testClonabilityOfAudioWorkletNodeOptions(options);\n\n        return createNativeAudioWorkletNodeFaker(nativeContext, baseLatency, processorConstructor, options);\n    };\n};\n","export const computeBufferSize = (baseLatency: null | number, sampleRate: number) => {\n    if (baseLatency === null) {\n        return 512;\n    }\n\n    return Math.max(512, Math.min(16384, Math.pow(2, Math.round(Math.log2(baseLatency * sampleRate)))));\n};\n","import { IAudioWorkletNodeOptions } from '../interfaces';\n\nexport const cloneAudioWorkletNodeOptions = (audioWorkletNodeOptions: IAudioWorkletNodeOptions): Promise<IAudioWorkletNodeOptions> => {\n    return new Promise((resolve, reject) => {\n        const { port1, port2 } = new MessageChannel();\n\n        port1.onmessage = ({ data }) => {\n            port1.close();\n            port2.close();\n\n            resolve(data);\n        };\n        port1.onmessageerror = ({ data }) => {\n            port1.close();\n            port2.close();\n\n            reject(data);\n        };\n\n        // This will throw an error if the audioWorkletNodeOptions are not clonable.\n        port2.postMessage(audioWorkletNodeOptions);\n    });\n};\n","import { IAudioWorkletNodeOptions, IAudioWorkletProcessor, IAudioWorkletProcessorConstructor } from '../interfaces';\nimport { cloneAudioWorkletNodeOptions } from './clone-audio-worklet-node-options';\n\nexport const createAudioWorkletProcessorPromise = async (\n    processorConstructor: IAudioWorkletProcessorConstructor,\n    audioWorkletNodeOptions: IAudioWorkletNodeOptions\n): Promise<IAudioWorkletProcessor> => {\n    const clonedAudioWorkletNodeOptions = await cloneAudioWorkletNodeOptions(audioWorkletNodeOptions);\n\n    return new processorConstructor(clonedAudioWorkletNodeOptions);\n};\n","import { NODE_TO_PROCESSOR_MAPS } from '../globals';\nimport { IAudioWorkletNodeOptions, IAudioWorkletProcessor, IAudioWorkletProcessorConstructor } from '../interfaces';\nimport { TNativeAudioWorkletNode, TNativeContext } from '../types';\nimport { createAudioWorkletProcessorPromise } from './create-audio-worklet-processor-promise';\n\nexport const createAudioWorkletProcessor = (\n    nativeContext: TNativeContext,\n    nativeAudioWorkletNode: TNativeAudioWorkletNode,\n    processorConstructor: IAudioWorkletProcessorConstructor,\n    audioWorkletNodeOptions: IAudioWorkletNodeOptions\n): Promise<IAudioWorkletProcessor> => {\n    let nodeToProcessorMap = NODE_TO_PROCESSOR_MAPS.get(nativeContext);\n\n    if (nodeToProcessorMap === undefined) {\n        nodeToProcessorMap = new WeakMap();\n\n        NODE_TO_PROCESSOR_MAPS.set(nativeContext, nodeToProcessorMap);\n    }\n\n    const audioWorkletProcessorPromise = createAudioWorkletProcessorPromise(processorConstructor, audioWorkletNodeOptions);\n\n    nodeToProcessorMap.set(nativeAudioWorkletNode, audioWorkletProcessorPromise);\n\n    return audioWorkletProcessorPromise;\n};\n","import { MOST_NEGATIVE_SINGLE_FLOAT, MOST_POSITIVE_SINGLE_FLOAT } from '../constants';\nimport { computeBufferSize } from '../helpers/compute-buffer-size';\nimport { copyFromChannel } from '../helpers/copy-from-channel';\nimport { copyToChannel } from '../helpers/copy-to-channel';\nimport { createAudioWorkletProcessor } from '../helpers/create-audio-worklet-processor';\nimport { createNestedArrays } from '../helpers/create-nested-arrays';\nimport { IAudioWorkletProcessor } from '../interfaces';\nimport { ReadOnlyMap } from '../read-only-map';\nimport {\n    TNativeAudioNode,\n    TNativeAudioParam,\n    TNativeAudioWorkletNode,\n    TNativeAudioWorkletNodeFakerFactoryFactory,\n    TNativeChannelMergerNode,\n    TNativeChannelSplitterNode,\n    TNativeConstantSourceNode,\n    TNativeGainNode\n} from '../types';\n\nexport const createNativeAudioWorkletNodeFakerFactory: TNativeAudioWorkletNodeFakerFactoryFactory = (\n    connectMultipleOutputs,\n    createIndexSizeError,\n    createInvalidStateError,\n    createNativeChannelMergerNode,\n    createNativeChannelSplitterNode,\n    createNativeConstantSourceNode,\n    createNativeGainNode,\n    createNativeScriptProcessorNode,\n    createNotSupportedError,\n    disconnectMultipleOutputs,\n    exposeCurrentFrameAndCurrentTime,\n    getActiveAudioWorkletNodeInputs,\n    monitorConnections\n) => {\n    return (nativeContext, baseLatency, processorConstructor, options) => {\n        if (options.numberOfInputs === 0 && options.numberOfOutputs === 0) {\n            throw createNotSupportedError();\n        }\n\n        const outputChannelCount = Array.isArray(options.outputChannelCount)\n            ? options.outputChannelCount\n            : Array.from(options.outputChannelCount);\n\n        // @todo Check if any of the channelCount values is greater than the implementation's maximum number of channels.\n        if (outputChannelCount.some((channelCount) => channelCount < 1)) {\n            throw createNotSupportedError();\n        }\n\n        if (outputChannelCount.length !== options.numberOfOutputs) {\n            throw createIndexSizeError();\n        }\n\n        // Bug #61: This is not part of the standard but required for the faker to work.\n        if (options.channelCountMode !== 'explicit') {\n            throw createNotSupportedError();\n        }\n\n        const numberOfInputChannels = options.channelCount * options.numberOfInputs;\n        const numberOfOutputChannels = outputChannelCount.reduce((sum, value) => sum + value, 0);\n        const numberOfParameters =\n            processorConstructor.parameterDescriptors === undefined ? 0 : processorConstructor.parameterDescriptors.length;\n\n        // Bug #61: This is not part of the standard but required for the faker to work.\n        if (numberOfInputChannels + numberOfParameters > 6 || numberOfOutputChannels > 6) {\n            throw createNotSupportedError();\n        }\n\n        const messageChannel = new MessageChannel();\n        const gainNodes: TNativeGainNode[] = [];\n        const inputChannelSplitterNodes: TNativeChannelSplitterNode[] = [];\n\n        for (let i = 0; i < options.numberOfInputs; i += 1) {\n            gainNodes.push(\n                createNativeGainNode(nativeContext, {\n                    channelCount: options.channelCount,\n                    channelCountMode: options.channelCountMode,\n                    channelInterpretation: options.channelInterpretation,\n                    gain: 1\n                })\n            );\n            inputChannelSplitterNodes.push(\n                createNativeChannelSplitterNode(nativeContext, {\n                    channelCount: options.channelCount,\n                    channelCountMode: 'explicit',\n                    channelInterpretation: 'discrete',\n                    numberOfOutputs: options.channelCount\n                })\n            );\n        }\n\n        const constantSourceNodes: TNativeConstantSourceNode[] = [];\n\n        if (processorConstructor.parameterDescriptors !== undefined) {\n            for (const { defaultValue, maxValue, minValue, name } of processorConstructor.parameterDescriptors) {\n                const constantSourceNode = createNativeConstantSourceNode(nativeContext, {\n                    channelCount: 1,\n                    channelCountMode: 'explicit',\n                    channelInterpretation: 'discrete',\n                    offset:\n                        options.parameterData[name] !== undefined\n                            ? options.parameterData[name]\n                            : defaultValue === undefined\n                            ? 0\n                            : defaultValue\n                });\n\n                Object.defineProperties(constantSourceNode.offset, {\n                    defaultValue: {\n                        get: () => (defaultValue === undefined ? 0 : defaultValue)\n                    },\n                    maxValue: {\n                        get: () => (maxValue === undefined ? MOST_POSITIVE_SINGLE_FLOAT : maxValue)\n                    },\n                    minValue: {\n                        get: () => (minValue === undefined ? MOST_NEGATIVE_SINGLE_FLOAT : minValue)\n                    }\n                });\n\n                constantSourceNodes.push(constantSourceNode);\n            }\n        }\n\n        const inputChannelMergerNode = createNativeChannelMergerNode(nativeContext, {\n            channelCount: 1,\n            channelCountMode: 'explicit',\n            channelInterpretation: 'speakers',\n            numberOfInputs: Math.max(1, numberOfInputChannels + numberOfParameters)\n        });\n        const bufferSize = computeBufferSize(baseLatency, nativeContext.sampleRate);\n        const scriptProcessorNode = createNativeScriptProcessorNode(\n            nativeContext,\n            bufferSize,\n            numberOfInputChannels + numberOfParameters,\n            // Bug #87: Only Firefox will fire an AudioProcessingEvent if there is no connected output.\n            Math.max(1, numberOfOutputChannels)\n        );\n        const outputChannelSplitterNode = createNativeChannelSplitterNode(nativeContext, {\n            channelCount: Math.max(1, numberOfOutputChannels),\n            channelCountMode: 'explicit',\n            channelInterpretation: 'discrete',\n            numberOfOutputs: Math.max(1, numberOfOutputChannels)\n        });\n        const outputChannelMergerNodes: TNativeChannelMergerNode[] = [];\n\n        for (let i = 0; i < options.numberOfOutputs; i += 1) {\n            outputChannelMergerNodes.push(\n                createNativeChannelMergerNode(nativeContext, {\n                    channelCount: 1,\n                    channelCountMode: 'explicit',\n                    channelInterpretation: 'speakers',\n                    numberOfInputs: outputChannelCount[i]\n                })\n            );\n        }\n\n        for (let i = 0; i < options.numberOfInputs; i += 1) {\n            gainNodes[i].connect(inputChannelSplitterNodes[i]);\n\n            for (let j = 0; j < options.channelCount; j += 1) {\n                inputChannelSplitterNodes[i].connect(inputChannelMergerNode, j, i * options.channelCount + j);\n            }\n        }\n\n        const parameterMap = new ReadOnlyMap(\n            processorConstructor.parameterDescriptors === undefined\n                ? []\n                : processorConstructor.parameterDescriptors.map(({ name }, index) => {\n                      const constantSourceNode = constantSourceNodes[index];\n\n                      constantSourceNode.connect(inputChannelMergerNode, 0, numberOfInputChannels + index);\n                      constantSourceNode.start(0);\n\n                      return <[string, TNativeAudioParam]>[name, constantSourceNode.offset];\n                  })\n        );\n\n        inputChannelMergerNode.connect(scriptProcessorNode);\n\n        let channelInterpretation = options.channelInterpretation;\n        let onprocessorerror: TNativeAudioWorkletNode['onprocessorerror'] = null;\n\n        // Bug #87: Expose at least one output to make this node connectable.\n        const outputAudioNodes = options.numberOfOutputs === 0 ? [scriptProcessorNode] : outputChannelMergerNodes;\n        const nativeAudioWorkletNodeFaker = {\n            get bufferSize(): number {\n                return bufferSize;\n            },\n            get channelCount(): number {\n                return options.channelCount;\n            },\n            set channelCount(_) {\n                // Bug #61: This is not part of the standard but required for the faker to work.\n                throw createInvalidStateError();\n            },\n            get channelCountMode(): TNativeAudioWorkletNode['channelCountMode'] {\n                return options.channelCountMode;\n            },\n            set channelCountMode(_) {\n                // Bug #61: This is not part of the standard but required for the faker to work.\n                throw createInvalidStateError();\n            },\n            get channelInterpretation(): TNativeAudioWorkletNode['channelInterpretation'] {\n                return channelInterpretation;\n            },\n            set channelInterpretation(value) {\n                for (const gainNode of gainNodes) {\n                    gainNode.channelInterpretation = value;\n                }\n\n                channelInterpretation = value;\n            },\n            get context(): TNativeAudioWorkletNode['context'] {\n                return scriptProcessorNode.context;\n            },\n            get inputs(): TNativeAudioNode[] {\n                return gainNodes;\n            },\n            get numberOfInputs(): number {\n                return options.numberOfInputs;\n            },\n            get numberOfOutputs(): number {\n                return options.numberOfOutputs;\n            },\n            get onprocessorerror(): TNativeAudioWorkletNode['onprocessorerror'] {\n                return onprocessorerror;\n            },\n            set onprocessorerror(value) {\n                if (typeof onprocessorerror === 'function') {\n                    nativeAudioWorkletNodeFaker.removeEventListener('processorerror', onprocessorerror);\n                }\n\n                onprocessorerror = typeof value === 'function' ? value : null;\n\n                if (typeof onprocessorerror === 'function') {\n                    nativeAudioWorkletNodeFaker.addEventListener('processorerror', onprocessorerror);\n                }\n            },\n            get parameters(): TNativeAudioWorkletNode['parameters'] {\n                return parameterMap;\n            },\n            get port(): TNativeAudioWorkletNode['port'] {\n                return messageChannel.port2;\n            },\n            addEventListener(...args: any[]): void {\n                return scriptProcessorNode.addEventListener(args[0], args[1], args[2]);\n            },\n            connect: <TNativeAudioNode['connect']>connectMultipleOutputs.bind(null, outputAudioNodes),\n            disconnect: <TNativeAudioNode['disconnect']>disconnectMultipleOutputs.bind(null, outputAudioNodes),\n            dispatchEvent(...args: any[]): boolean {\n                return scriptProcessorNode.dispatchEvent(args[0]);\n            },\n            removeEventListener(...args: any[]): void {\n                return scriptProcessorNode.removeEventListener(args[0], args[1], args[2]);\n            }\n        };\n\n        const patchedEventListeners: Map<EventListenerOrEventListenerObject, NonNullable<MessagePort['onmessage']>> = new Map();\n\n        messageChannel.port1.addEventListener = ((addEventListener) => {\n            return (...args: [string, EventListenerOrEventListenerObject, (boolean | AddEventListenerOptions)?]): void => {\n                if (args[0] === 'message') {\n                    const unpatchedEventListener =\n                        typeof args[1] === 'function'\n                            ? args[1]\n                            : typeof args[1] === 'object' && args[1] !== null && typeof args[1].handleEvent === 'function'\n                            ? args[1].handleEvent\n                            : null;\n\n                    if (unpatchedEventListener !== null) {\n                        const patchedEventListener = patchedEventListeners.get(args[1]);\n\n                        if (patchedEventListener !== undefined) {\n                            args[1] = <EventListenerOrEventListenerObject>patchedEventListener;\n                        } else {\n                            args[1] = (event: Event) => {\n                                exposeCurrentFrameAndCurrentTime(nativeContext.currentTime, nativeContext.sampleRate, () =>\n                                    unpatchedEventListener(event)\n                                );\n                            };\n\n                            patchedEventListeners.set(unpatchedEventListener, args[1]);\n                        }\n                    }\n                }\n\n                return addEventListener.call(messageChannel.port1, args[0], args[1], args[2]);\n            };\n        })(messageChannel.port1.addEventListener);\n\n        messageChannel.port1.removeEventListener = ((removeEventListener) => {\n            return (...args: any[]): void => {\n                if (args[0] === 'message') {\n                    const patchedEventListener = patchedEventListeners.get(args[1]);\n\n                    if (patchedEventListener !== undefined) {\n                        patchedEventListeners.delete(args[1]);\n\n                        args[1] = patchedEventListener;\n                    }\n                }\n\n                return removeEventListener.call(messageChannel.port1, args[0], args[1], args[2]);\n            };\n        })(messageChannel.port1.removeEventListener);\n\n        let onmessage: MessagePort['onmessage'] = null;\n\n        Object.defineProperty(messageChannel.port1, 'onmessage', {\n            get: () => onmessage,\n            set: (value) => {\n                if (typeof onmessage === 'function') {\n                    messageChannel.port1.removeEventListener('message', onmessage);\n                }\n\n                onmessage = typeof value === 'function' ? value : null;\n\n                if (typeof onmessage === 'function') {\n                    messageChannel.port1.addEventListener('message', onmessage);\n                    messageChannel.port1.start();\n                }\n            }\n        });\n\n        processorConstructor.prototype.port = messageChannel.port1;\n\n        let audioWorkletProcessor: null | IAudioWorkletProcessor = null;\n\n        const audioWorkletProcessorPromise = createAudioWorkletProcessor(\n            nativeContext,\n            nativeAudioWorkletNodeFaker,\n            processorConstructor,\n            options\n        );\n\n        audioWorkletProcessorPromise.then((dWrkltPrcssr) => (audioWorkletProcessor = dWrkltPrcssr));\n\n        const inputs = createNestedArrays(options.numberOfInputs, options.channelCount);\n        const outputs = createNestedArrays(options.numberOfOutputs, outputChannelCount);\n        const parameters: { [name: string]: Float32Array } =\n            processorConstructor.parameterDescriptors === undefined\n                ? []\n                : processorConstructor.parameterDescriptors.reduce(\n                      (prmtrs, { name }) => ({ ...prmtrs, [name]: new Float32Array(128) }),\n                      {}\n                  );\n\n        let isActive = true;\n\n        const disconnectOutputsGraph = () => {\n            if (options.numberOfOutputs > 0) {\n                scriptProcessorNode.disconnect(outputChannelSplitterNode);\n            }\n\n            for (let i = 0, outputChannelSplitterNodeOutput = 0; i < options.numberOfOutputs; i += 1) {\n                const outputChannelMergerNode = outputChannelMergerNodes[i];\n\n                for (let j = 0; j < outputChannelCount[i]; j += 1) {\n                    outputChannelSplitterNode.disconnect(outputChannelMergerNode, outputChannelSplitterNodeOutput + j, j);\n                }\n\n                outputChannelSplitterNodeOutput += outputChannelCount[i];\n            }\n        };\n\n        const activeInputIndexes = new Map<number, number>();\n\n        // tslint:disable-next-line:deprecation\n        scriptProcessorNode.onaudioprocess = ({ inputBuffer, outputBuffer }: AudioProcessingEvent) => {\n            if (audioWorkletProcessor !== null) {\n                const activeInputs = getActiveAudioWorkletNodeInputs(nativeAudioWorkletNodeFaker);\n\n                for (let i = 0; i < bufferSize; i += 128) {\n                    for (let j = 0; j < options.numberOfInputs; j += 1) {\n                        for (let k = 0; k < options.channelCount; k += 1) {\n                            copyFromChannel(inputBuffer, inputs[j], k, k, i);\n                        }\n                    }\n\n                    if (processorConstructor.parameterDescriptors !== undefined) {\n                        processorConstructor.parameterDescriptors.forEach(({ name }, index) => {\n                            copyFromChannel(inputBuffer, parameters, name, numberOfInputChannels + index, i);\n                        });\n                    }\n\n                    for (let j = 0; j < options.numberOfInputs; j += 1) {\n                        for (let k = 0; k < outputChannelCount[j]; k += 1) {\n                            // The byteLength will be 0 when the ArrayBuffer was transferred.\n                            if (outputs[j][k].byteLength === 0) {\n                                outputs[j][k] = new Float32Array(128);\n                            }\n                        }\n                    }\n\n                    try {\n                        const potentiallyEmptyInputs = inputs.map((input, index) => {\n                            const activeInput = activeInputs[index];\n\n                            if (activeInput.size > 0) {\n                                activeInputIndexes.set(index, bufferSize / 128);\n\n                                return input;\n                            }\n\n                            const count = activeInputIndexes.get(index);\n\n                            if (count === undefined) {\n                                return [];\n                            }\n\n                            if (input.every((channelData) => channelData.every((sample) => sample === 0))) {\n                                if (count === 1) {\n                                    activeInputIndexes.delete(index);\n                                } else {\n                                    activeInputIndexes.set(index, count - 1);\n                                }\n                            }\n\n                            return input;\n                        });\n\n                        const activeSourceFlag = exposeCurrentFrameAndCurrentTime(\n                            nativeContext.currentTime + i / nativeContext.sampleRate,\n                            nativeContext.sampleRate,\n                            () => (<IAudioWorkletProcessor>audioWorkletProcessor).process(potentiallyEmptyInputs, outputs, parameters)\n                        );\n\n                        isActive = activeSourceFlag;\n\n                        for (let j = 0, outputChannelSplitterNodeOutput = 0; j < options.numberOfOutputs; j += 1) {\n                            for (let k = 0; k < outputChannelCount[j]; k += 1) {\n                                copyToChannel(outputBuffer, outputs[j], k, outputChannelSplitterNodeOutput + k, i);\n                            }\n\n                            outputChannelSplitterNodeOutput += outputChannelCount[j];\n                        }\n                    } catch (error) {\n                        isActive = false;\n\n                        nativeAudioWorkletNodeFaker.dispatchEvent(\n                            new ErrorEvent('processorerror', {\n                                colno: error.colno,\n                                filename: error.filename,\n                                lineno: error.lineno,\n                                message: error.message\n                            })\n                        );\n                    }\n\n                    if (!isActive) {\n                        for (let j = 0; j < options.numberOfInputs; j += 1) {\n                            gainNodes[j].disconnect(inputChannelSplitterNodes[j]);\n\n                            for (let k = 0; k < options.channelCount; k += 1) {\n                                inputChannelSplitterNodes[i].disconnect(inputChannelMergerNode, k, j * options.channelCount + k);\n                            }\n                        }\n\n                        if (processorConstructor.parameterDescriptors !== undefined) {\n                            const length = processorConstructor.parameterDescriptors.length;\n\n                            for (let j = 0; j < length; j += 1) {\n                                const constantSourceNode = constantSourceNodes[j];\n\n                                constantSourceNode.disconnect(inputChannelMergerNode, 0, numberOfInputChannels + j);\n                                constantSourceNode.stop();\n                            }\n                        }\n\n                        inputChannelMergerNode.disconnect(scriptProcessorNode);\n\n                        scriptProcessorNode.onaudioprocess = null; // tslint:disable-line:deprecation\n\n                        if (isConnected) {\n                            disconnectOutputsGraph();\n                        } else {\n                            disconnectFakeGraph();\n                        }\n\n                        break;\n                    }\n                }\n            }\n        };\n\n        let isConnected = false;\n\n        // Bug #87: Only Firefox will fire an AudioProcessingEvent if there is no connected output.\n        const nativeGainNode = createNativeGainNode(nativeContext, {\n            channelCount: 1,\n            channelCountMode: 'explicit',\n            channelInterpretation: 'discrete',\n            gain: 0\n        });\n\n        const connectFakeGraph = () => scriptProcessorNode.connect(nativeGainNode).connect(nativeContext.destination);\n        const disconnectFakeGraph = () => {\n            scriptProcessorNode.disconnect(nativeGainNode);\n            nativeGainNode.disconnect();\n        };\n        const whenConnected = () => {\n            if (isActive) {\n                disconnectFakeGraph();\n\n                if (options.numberOfOutputs > 0) {\n                    scriptProcessorNode.connect(outputChannelSplitterNode);\n                }\n\n                for (let i = 0, outputChannelSplitterNodeOutput = 0; i < options.numberOfOutputs; i += 1) {\n                    const outputChannelMergerNode = outputChannelMergerNodes[i];\n\n                    for (let j = 0; j < outputChannelCount[i]; j += 1) {\n                        outputChannelSplitterNode.connect(outputChannelMergerNode, outputChannelSplitterNodeOutput + j, j);\n                    }\n\n                    outputChannelSplitterNodeOutput += outputChannelCount[i];\n                }\n            }\n\n            isConnected = true;\n        };\n        const whenDisconnected = () => {\n            if (isActive) {\n                connectFakeGraph();\n                disconnectOutputsGraph();\n            }\n\n            isConnected = false;\n        };\n\n        connectFakeGraph();\n\n        return monitorConnections(nativeAudioWorkletNodeFaker, whenConnected, whenDisconnected);\n    };\n};\n","import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOption } from '../helpers/assign-native-audio-node-option';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { TNativeBiquadFilterNodeFactory } from '../types';\n\nexport const createNativeBiquadFilterNode: TNativeBiquadFilterNodeFactory = (nativeContext, options) => {\n    const nativeBiquadFilterNode = nativeContext.createBiquadFilter();\n\n    assignNativeAudioNodeOptions(nativeBiquadFilterNode, options);\n\n    assignNativeAudioNodeAudioParamValue(nativeBiquadFilterNode, options, 'Q');\n    assignNativeAudioNodeAudioParamValue(nativeBiquadFilterNode, options, 'detune');\n    assignNativeAudioNodeAudioParamValue(nativeBiquadFilterNode, options, 'frequency');\n    assignNativeAudioNodeAudioParamValue(nativeBiquadFilterNode, options, 'gain');\n\n    assignNativeAudioNodeOption(nativeBiquadFilterNode, options, 'type');\n\n    return nativeBiquadFilterNode;\n};\n","import { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { TNativeChannelMergerNodeFactoryFactory } from '../types';\n\nexport const createNativeChannelMergerNodeFactory: TNativeChannelMergerNodeFactoryFactory = (\n    nativeAudioContextConstructor,\n    wrapChannelMergerNode\n) => {\n    return (nativeContext, options) => {\n        const nativeChannelMergerNode = nativeContext.createChannelMerger(options.numberOfInputs);\n\n        /*\n         * Bug #20: Safari requires a connection of any kind to treat the input signal correctly.\n         * @todo Unfortunately there is no way to test for this behavior in a synchronous fashion which is why testing for the existence of\n         * the webkitAudioContext is used as a workaround here.\n         */\n        if (nativeAudioContextConstructor !== null && nativeAudioContextConstructor.name === 'webkitAudioContext') {\n            wrapChannelMergerNode(nativeContext, nativeChannelMergerNode);\n        }\n\n        assignNativeAudioNodeOptions(nativeChannelMergerNode, options);\n\n        return nativeChannelMergerNode;\n    };\n};\n","import { createInvalidStateError } from '../factories/invalid-state-error';\nimport { TNativeChannelSplitterNode } from '../types';\n\nexport const wrapChannelSplitterNode = (channelSplitterNode: TNativeChannelSplitterNode): void => {\n    const channelCount = channelSplitterNode.numberOfOutputs;\n\n    // Bug #97: Safari does not throw an error when attempting to change the channelCount to something other than its initial value.\n    Object.defineProperty(channelSplitterNode, 'channelCount', {\n        get: () => channelCount,\n        set: (value) => {\n            if (value !== channelCount) {\n                throw createInvalidStateError();\n            }\n        }\n    });\n\n    // Bug #30: Safari does not throw an error when attempting to change the channelCountMode to something other than explicit.\n    Object.defineProperty(channelSplitterNode, 'channelCountMode', {\n        get: () => 'explicit',\n        set: (value) => {\n            if (value !== 'explicit') {\n                throw createInvalidStateError();\n            }\n        }\n    });\n\n    // Bug #32: Safari does not throw an error when attempting to change the channelInterpretation to something other than discrete.\n    Object.defineProperty(channelSplitterNode, 'channelInterpretation', {\n        get: () => 'discrete',\n        set: (value) => {\n            if (value !== 'discrete') {\n                throw createInvalidStateError();\n            }\n        }\n    });\n};\n","import { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { wrapChannelSplitterNode } from '../helpers/wrap-channel-splitter-node';\nimport { TNativeChannelSplitterNodeFactory } from '../types';\n\nexport const createNativeChannelSplitterNode: TNativeChannelSplitterNodeFactory = (nativeContext, options) => {\n    const nativeChannelSplitterNode = nativeContext.createChannelSplitter(options.numberOfOutputs);\n\n    // Bug #96: Safari does not have the correct channelCount.\n    // Bug #29: Safari does not have the correct channelCountMode.\n    // Bug #31: Safari does not have the correct channelInterpretation.\n    assignNativeAudioNodeOptions(nativeChannelSplitterNode, options);\n\n    // Bug #29, #30, #31, #32, #96 & #97: Only Chrome, Edge, Firefox & Opera partially support the spec yet.\n    wrapChannelSplitterNode(nativeChannelSplitterNode);\n\n    return nativeChannelSplitterNode;\n};\n","import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { wrapAudioScheduledSourceNodeStartMethodNegativeParameters } from '../helpers/wrap-audio-scheduled-source-node-start-method-negative-parameters';\nimport { wrapAudioScheduledSourceNodeStopMethodNegativeParameters } from '../helpers/wrap-audio-scheduled-source-node-stop-method-negative-parameters';\nimport { TNativeConstantSourceNodeFactoryFactory } from '../types';\n\nexport const createNativeConstantSourceNodeFactory: TNativeConstantSourceNodeFactoryFactory = (\n    addSilentConnection,\n    cacheTestResult,\n    createNativeConstantSourceNodeFaker,\n    testAudioScheduledSourceNodeStartMethodNegativeParametersSupport,\n    testAudioScheduledSourceNodeStopMethodNegativeParametersSupport\n) => {\n    return (nativeContext, options) => {\n        // Bug #62: Safari does not support ConstantSourceNodes.\n        if (nativeContext.createConstantSource === undefined) {\n            return createNativeConstantSourceNodeFaker(nativeContext, options);\n        }\n\n        const nativeConstantSourceNode = nativeContext.createConstantSource();\n\n        assignNativeAudioNodeOptions(nativeConstantSourceNode, options);\n\n        assignNativeAudioNodeAudioParamValue(nativeConstantSourceNode, options, 'offset');\n\n        // Bug #44: Safari does not throw a RangeError yet.\n        if (\n            !cacheTestResult(testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, () =>\n                testAudioScheduledSourceNodeStartMethodNegativeParametersSupport(nativeContext)\n            )\n        ) {\n            wrapAudioScheduledSourceNodeStartMethodNegativeParameters(nativeConstantSourceNode);\n        }\n\n        // Bug #44: Only Firefox does not throw a RangeError yet.\n        if (\n            !cacheTestResult(testAudioScheduledSourceNodeStopMethodNegativeParametersSupport, () =>\n                testAudioScheduledSourceNodeStopMethodNegativeParametersSupport(nativeContext)\n            )\n        ) {\n            wrapAudioScheduledSourceNodeStopMethodNegativeParameters(nativeConstantSourceNode);\n        }\n\n        // Bug #175: Safari will not fire an ended event if the ConstantSourceNode is unconnected.\n        addSilentConnection(nativeContext, nativeConstantSourceNode);\n\n        return nativeConstantSourceNode;\n    };\n};\n","import { TNativeAudioNode } from '../types';\n\nexport const interceptConnections = <T extends object>(\n    original: T,\n    interceptor: TNativeAudioNode\n): T & { connect: TNativeAudioNode['connect']; disconnect: TNativeAudioNode['disconnect'] } => {\n    (<T & { connect: TNativeAudioNode['connect'] }>original).connect = interceptor.connect.bind(interceptor);\n\n    (<T & { disconnect: TNativeAudioNode['disconnect'] }>original).disconnect = interceptor.disconnect.bind(interceptor);\n\n    return <T & { connect: TNativeAudioNode['connect']; disconnect: TNativeAudioNode['disconnect'] }>original;\n};\n","import { interceptConnections } from '../helpers/intercept-connections';\nimport {\n    TNativeAudioBufferSourceNode,\n    TNativeAudioNode,\n    TNativeConstantSourceNode,\n    TNativeConstantSourceNodeFakerFactoryFactory\n} from '../types';\n\nexport const createNativeConstantSourceNodeFakerFactory: TNativeConstantSourceNodeFakerFactoryFactory = (\n    addSilentConnection,\n    createNativeAudioBufferSourceNode,\n    createNativeGainNode,\n    monitorConnections\n) => {\n    return (nativeContext, { offset, ...audioNodeOptions }) => {\n        const audioBuffer = nativeContext.createBuffer(1, 2, 44100);\n        const audioBufferSourceNode = createNativeAudioBufferSourceNode(nativeContext, {\n            buffer: null,\n            channelCount: 2,\n            channelCountMode: 'max',\n            channelInterpretation: 'speakers',\n            loop: false,\n            loopEnd: 0,\n            loopStart: 0,\n            playbackRate: 1\n        });\n        const gainNode = createNativeGainNode(nativeContext, { ...audioNodeOptions, gain: offset });\n\n        // Bug #5: Safari does not support copyFromChannel() and copyToChannel().\n        const channelData = audioBuffer.getChannelData(0);\n\n        // Bug #95: Safari does not play or loop one sample buffers.\n        channelData[0] = 1;\n        channelData[1] = 1;\n\n        audioBufferSourceNode.buffer = audioBuffer;\n        audioBufferSourceNode.loop = true;\n\n        const nativeConstantSourceNodeFaker = {\n            get bufferSize(): undefined {\n                return undefined;\n            },\n            get channelCount(): number {\n                return gainNode.channelCount;\n            },\n            set channelCount(value) {\n                gainNode.channelCount = value;\n            },\n            get channelCountMode(): TNativeConstantSourceNode['channelCountMode'] {\n                return gainNode.channelCountMode;\n            },\n            set channelCountMode(value) {\n                gainNode.channelCountMode = value;\n            },\n            get channelInterpretation(): TNativeConstantSourceNode['channelInterpretation'] {\n                return gainNode.channelInterpretation;\n            },\n            set channelInterpretation(value) {\n                gainNode.channelInterpretation = value;\n            },\n            get context(): TNativeConstantSourceNode['context'] {\n                return gainNode.context;\n            },\n            get inputs(): TNativeAudioNode[] {\n                return [];\n            },\n            get numberOfInputs(): number {\n                return audioBufferSourceNode.numberOfInputs;\n            },\n            get numberOfOutputs(): number {\n                return gainNode.numberOfOutputs;\n            },\n            get offset(): TNativeConstantSourceNode['offset'] {\n                return gainNode.gain;\n            },\n            get onended(): TNativeConstantSourceNode['onended'] {\n                return audioBufferSourceNode.onended;\n            },\n            set onended(value) {\n                audioBufferSourceNode.onended = <TNativeAudioBufferSourceNode['onended']>value;\n            },\n            addEventListener(...args: any[]): void {\n                return audioBufferSourceNode.addEventListener(args[0], args[1], args[2]);\n            },\n            dispatchEvent(...args: any[]): boolean {\n                return audioBufferSourceNode.dispatchEvent(args[0]);\n            },\n            removeEventListener(...args: any[]): void {\n                return audioBufferSourceNode.removeEventListener(args[0], args[1], args[2]);\n            },\n            start(when = 0): void {\n                audioBufferSourceNode.start.call(audioBufferSourceNode, when);\n            },\n            stop(when = 0): void {\n                audioBufferSourceNode.stop.call(audioBufferSourceNode, when);\n            }\n        };\n\n        const whenConnected = () => audioBufferSourceNode.connect(gainNode);\n        const whenDisconnected = () => audioBufferSourceNode.disconnect(gainNode);\n\n        // Bug #175: Safari will not fire an ended event if the AudioBufferSourceNode is unconnected.\n        addSilentConnection(nativeContext, audioBufferSourceNode);\n\n        return monitorConnections(interceptConnections(nativeConstantSourceNodeFaker, gainNode), whenConnected, whenDisconnected);\n    };\n};\n","import { assignNativeAudioNodeOption } from '../helpers/assign-native-audio-node-option';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { TNativeConvolverNodeFactoryFactory } from '../types';\n\nexport const createNativeConvolverNodeFactory: TNativeConvolverNodeFactoryFactory = (createNotSupportedError, overwriteAccessors) => {\n    return (nativeContext, options) => {\n        const nativeConvolverNode = nativeContext.createConvolver();\n\n        assignNativeAudioNodeOptions(nativeConvolverNode, options);\n\n        // The normalize property needs to be set before setting the buffer.\n        if (options.disableNormalization === nativeConvolverNode.normalize) {\n            nativeConvolverNode.normalize = !options.disableNormalization;\n        }\n\n        assignNativeAudioNodeOption(nativeConvolverNode, options, 'buffer');\n\n        // Bug #113: Safari does allow to set the channelCount to a value larger than 2.\n        if (options.channelCount > 2) {\n            throw createNotSupportedError();\n        }\n\n        overwriteAccessors(\n            nativeConvolverNode,\n            'channelCount',\n            (get) => () => get.call(nativeConvolverNode),\n            (set) => (value) => {\n                if (value > 2) {\n                    throw createNotSupportedError();\n                }\n\n                return set.call(nativeConvolverNode, value);\n            }\n        );\n\n        // Bug #114: Safari allows to set the channelCountMode to 'max'.\n        if (options.channelCountMode === 'max') {\n            throw createNotSupportedError();\n        }\n\n        overwriteAccessors(\n            nativeConvolverNode,\n            'channelCountMode',\n            (get) => () => get.call(nativeConvolverNode),\n            (set) => (value) => {\n                if (value === 'max') {\n                    throw createNotSupportedError();\n                }\n\n                return set.call(nativeConvolverNode, value);\n            }\n        );\n\n        return nativeConvolverNode;\n    };\n};\n","import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { TNativeDelayNodeFactory } from '../types';\n\nexport const createNativeDelayNode: TNativeDelayNodeFactory = (nativeContext, options) => {\n    const nativeDelayNode = nativeContext.createDelay(options.maxDelayTime);\n\n    assignNativeAudioNodeOptions(nativeDelayNode, options);\n\n    assignNativeAudioNodeAudioParamValue(nativeDelayNode, options, 'delayTime');\n\n    return nativeDelayNode;\n};\n","import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { TNativeDynamicsCompressorNodeFactoryFactory } from '../types';\n\nexport const createNativeDynamicsCompressorNodeFactory: TNativeDynamicsCompressorNodeFactoryFactory = (createNotSupportedError) => {\n    return (nativeContext, options) => {\n        const nativeDynamicsCompressorNode = nativeContext.createDynamicsCompressor();\n\n        assignNativeAudioNodeOptions(nativeDynamicsCompressorNode, options);\n\n        // Bug #108: Safari allows a channelCount of three and above.\n        if (options.channelCount > 2) {\n            throw createNotSupportedError();\n        }\n\n        // Bug #109: Only Chrome, Firefox and Opera disallow a channelCountMode of 'max'.\n        if (options.channelCountMode === 'max') {\n            throw createNotSupportedError();\n        }\n\n        assignNativeAudioNodeAudioParamValue(nativeDynamicsCompressorNode, options, 'attack');\n        assignNativeAudioNodeAudioParamValue(nativeDynamicsCompressorNode, options, 'knee');\n        assignNativeAudioNodeAudioParamValue(nativeDynamicsCompressorNode, options, 'ratio');\n        assignNativeAudioNodeAudioParamValue(nativeDynamicsCompressorNode, options, 'release');\n        assignNativeAudioNodeAudioParamValue(nativeDynamicsCompressorNode, options, 'threshold');\n\n        return nativeDynamicsCompressorNode;\n    };\n};\n","import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { TNativeGainNodeFactory } from '../types';\n\nexport const createNativeGainNode: TNativeGainNodeFactory = (nativeContext, options) => {\n    const nativeGainNode = nativeContext.createGain();\n\n    assignNativeAudioNodeOptions(nativeGainNode, options);\n\n    assignNativeAudioNodeAudioParamValue(nativeGainNode, options, 'gain');\n\n    return nativeGainNode;\n};\n","import { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { TNativeIIRFilterNodeFactoryFactory } from '../types';\n\nexport const createNativeIIRFilterNodeFactory: TNativeIIRFilterNodeFactoryFactory = (createNativeIIRFilterNodeFaker) => {\n    return (nativeContext, baseLatency, options) => {\n        // Bug #9: Safari does not support IIRFilterNodes.\n        if (nativeContext.createIIRFilter === undefined) {\n            return createNativeIIRFilterNodeFaker(nativeContext, baseLatency, options);\n        }\n\n        // @todo TypeScript defines the parameters of createIIRFilter() as arrays of numbers.\n        const nativeIIRFilterNode = nativeContext.createIIRFilter(<number[]>options.feedforward, <number[]>options.feedback);\n\n        assignNativeAudioNodeOptions(nativeIIRFilterNode, options);\n\n        return nativeIIRFilterNode;\n    };\n};\n","import { computeBufferSize } from '../helpers/compute-buffer-size';\nimport { filterBuffer } from '../helpers/filter-buffer';\nimport { interceptConnections } from '../helpers/intercept-connections';\nimport { TNativeAudioNode, TNativeIIRFilterNode, TNativeIIRFilterNodeFakerFactoryFactory } from '../types';\n\nfunction divide(a: [number, number], b: [number, number]): [number, number] {\n    const denominator = b[0] * b[0] + b[1] * b[1];\n\n    return [(a[0] * b[0] + a[1] * b[1]) / denominator, (a[1] * b[0] - a[0] * b[1]) / denominator];\n}\n\nfunction multiply(a: [number, number], b: [number, number]): [number, number] {\n    return [a[0] * b[0] - a[1] * b[1], a[0] * b[1] + a[1] * b[0]];\n}\n\nfunction evaluatePolynomial(coefficient: Float64Array, z: [number, number]): [number, number] {\n    let result: [number, number] = [0, 0];\n\n    for (let i = coefficient.length - 1; i >= 0; i -= 1) {\n        result = multiply(result, z);\n\n        result[0] += coefficient[i];\n    }\n\n    return result;\n}\n\nexport const createNativeIIRFilterNodeFakerFactory: TNativeIIRFilterNodeFakerFactoryFactory = (\n    createInvalidAccessError,\n    createInvalidStateError,\n    createNativeScriptProcessorNode,\n    createNotSupportedError\n) => {\n    return (nativeContext, baseLatency, { channelCount, channelCountMode, channelInterpretation, feedback, feedforward }) => {\n        const bufferSize = computeBufferSize(baseLatency, nativeContext.sampleRate);\n        const convertedFeedback = feedback instanceof Float64Array ? feedback : new Float64Array(feedback);\n        const convertedFeedforward = feedforward instanceof Float64Array ? feedforward : new Float64Array(feedforward);\n        const feedbackLength = convertedFeedback.length;\n        const feedforwardLength = convertedFeedforward.length;\n        const minLength = Math.min(feedbackLength, feedforwardLength);\n\n        if (feedbackLength === 0 || feedbackLength > 20) {\n            throw createNotSupportedError();\n        }\n\n        if (convertedFeedback[0] === 0) {\n            throw createInvalidStateError();\n        }\n\n        if (feedforwardLength === 0 || feedforwardLength > 20) {\n            throw createNotSupportedError();\n        }\n\n        if (convertedFeedforward[0] === 0) {\n            throw createInvalidStateError();\n        }\n\n        if (convertedFeedback[0] !== 1) {\n            for (let i = 0; i < feedforwardLength; i += 1) {\n                convertedFeedforward[i] /= convertedFeedback[0];\n            }\n\n            for (let i = 1; i < feedbackLength; i += 1) {\n                convertedFeedback[i] /= convertedFeedback[0];\n            }\n        }\n\n        const scriptProcessorNode = createNativeScriptProcessorNode(nativeContext, bufferSize, channelCount, channelCount);\n\n        scriptProcessorNode.channelCount = channelCount;\n        scriptProcessorNode.channelCountMode = channelCountMode;\n        scriptProcessorNode.channelInterpretation = channelInterpretation;\n\n        const bufferLength = 32;\n        const bufferIndexes: number[] = [];\n        const xBuffers: Float32Array[] = [];\n        const yBuffers: Float32Array[] = [];\n\n        for (let i = 0; i < channelCount; i += 1) {\n            bufferIndexes.push(0);\n\n            const xBuffer = new Float32Array(bufferLength);\n            const yBuffer = new Float32Array(bufferLength);\n\n            xBuffer.fill(0);\n            yBuffer.fill(0);\n\n            xBuffers.push(xBuffer);\n            yBuffers.push(yBuffer);\n        }\n\n        // tslint:disable-next-line:deprecation\n        scriptProcessorNode.onaudioprocess = (event: AudioProcessingEvent) => {\n            const inputBuffer = event.inputBuffer;\n            const outputBuffer = event.outputBuffer;\n\n            const numberOfChannels = inputBuffer.numberOfChannels;\n\n            for (let i = 0; i < numberOfChannels; i += 1) {\n                const input = inputBuffer.getChannelData(i);\n                const output = outputBuffer.getChannelData(i);\n\n                bufferIndexes[i] = filterBuffer(\n                    convertedFeedback,\n                    feedbackLength,\n                    convertedFeedforward,\n                    feedforwardLength,\n                    minLength,\n                    xBuffers[i],\n                    yBuffers[i],\n                    bufferIndexes[i],\n                    bufferLength,\n                    input,\n                    output\n                );\n            }\n        };\n\n        const nyquist = nativeContext.sampleRate / 2;\n\n        const nativeIIRFilterNodeFaker = {\n            get bufferSize(): number {\n                return bufferSize;\n            },\n            get channelCount(): number {\n                return scriptProcessorNode.channelCount;\n            },\n            set channelCount(value) {\n                scriptProcessorNode.channelCount = value;\n            },\n            get channelCountMode(): TNativeIIRFilterNode['channelCountMode'] {\n                return scriptProcessorNode.channelCountMode;\n            },\n            set channelCountMode(value) {\n                scriptProcessorNode.channelCountMode = value;\n            },\n            get channelInterpretation(): TNativeIIRFilterNode['channelInterpretation'] {\n                return scriptProcessorNode.channelInterpretation;\n            },\n            set channelInterpretation(value) {\n                scriptProcessorNode.channelInterpretation = value;\n            },\n            get context(): TNativeIIRFilterNode['context'] {\n                return scriptProcessorNode.context;\n            },\n            get inputs(): TNativeAudioNode[] {\n                return [scriptProcessorNode];\n            },\n            get numberOfInputs(): number {\n                return scriptProcessorNode.numberOfInputs;\n            },\n            get numberOfOutputs(): number {\n                return scriptProcessorNode.numberOfOutputs;\n            },\n            addEventListener(...args: any[]): void {\n                // @todo Dissallow adding an audioprocess listener.\n                return scriptProcessorNode.addEventListener(args[0], args[1], args[2]);\n            },\n            dispatchEvent(...args: any[]): boolean {\n                return scriptProcessorNode.dispatchEvent(args[0]);\n            },\n            getFrequencyResponse(frequencyHz: Float32Array, magResponse: Float32Array, phaseResponse: Float32Array): void {\n                if (frequencyHz.length !== magResponse.length || magResponse.length !== phaseResponse.length) {\n                    throw createInvalidAccessError();\n                }\n\n                const length = frequencyHz.length;\n\n                for (let i = 0; i < length; i += 1) {\n                    const omega = -Math.PI * (frequencyHz[i] / nyquist);\n                    const z: [number, number] = [Math.cos(omega), Math.sin(omega)];\n                    const numerator = evaluatePolynomial(convertedFeedforward, z);\n                    const denominator = evaluatePolynomial(convertedFeedback, z);\n                    const response = divide(numerator, denominator);\n\n                    magResponse[i] = Math.sqrt(response[0] * response[0] + response[1] * response[1]);\n                    phaseResponse[i] = Math.atan2(response[1], response[0]);\n                }\n            },\n            removeEventListener(...args: any[]): void {\n                return scriptProcessorNode.removeEventListener(args[0], args[1], args[2]);\n            }\n        };\n\n        return interceptConnections(nativeIIRFilterNodeFaker, scriptProcessorNode);\n    };\n};\n","import { TNativeMediaElementAudioSourceNodeFactory } from '../types';\n\nexport const createNativeMediaElementAudioSourceNode: TNativeMediaElementAudioSourceNodeFactory = (nativeAudioContext, options) => {\n    return nativeAudioContext.createMediaElementSource(options.mediaElement);\n};\n","import { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { TNativeMediaStreamAudioDestinationNodeFactory } from '../types';\n\nexport const createNativeMediaStreamAudioDestinationNode: TNativeMediaStreamAudioDestinationNodeFactory = (nativeAudioContext, options) => {\n    const nativeMediaStreamAudioDestinationNode = nativeAudioContext.createMediaStreamDestination();\n\n    assignNativeAudioNodeOptions(nativeMediaStreamAudioDestinationNode, options);\n\n    // Bug #174: Safari does expose a wrong numberOfOutputs.\n    if (nativeMediaStreamAudioDestinationNode.numberOfOutputs === 1) {\n        Object.defineProperty(nativeMediaStreamAudioDestinationNode, 'numberOfOutputs', { get: () => 0 });\n    }\n\n    return nativeMediaStreamAudioDestinationNode;\n};\n","import { TNativeMediaStreamAudioSourceNodeFactory } from '../types';\n\nexport const createNativeMediaStreamAudioSourceNode: TNativeMediaStreamAudioSourceNodeFactory = (nativeAudioContext, { mediaStream }) => {\n    const audioStreamTracks = mediaStream.getAudioTracks();\n    /*\n     * Bug #151: Safari does not use the audio track as input anymore if it gets removed from the mediaStream after construction.\n     * Bug #159: Safari picks the first audio track if the MediaStream has more than one audio track.\n     */\n    audioStreamTracks.sort((a, b) => (a.id < b.id ? -1 : a.id > b.id ? 1 : 0));\n\n    const filteredAudioStreamTracks = audioStreamTracks.slice(0, 1);\n\n    const nativeMediaStreamAudioSourceNode = nativeAudioContext.createMediaStreamSource(new MediaStream(filteredAudioStreamTracks));\n\n    /*\n     * Bug #151 & #159: The given mediaStream gets reconstructed before it gets passed to the native node which is why the accessor needs\n     * to be overwritten as it would otherwise expose the reconstructed version.\n     */\n    Object.defineProperty(nativeMediaStreamAudioSourceNode, 'mediaStream', { value: mediaStream });\n\n    return nativeMediaStreamAudioSourceNode;\n};\n","import { TNativeMediaStreamTrackAudioSourceNodeFactoryFactory } from '../types';\n\nexport const createNativeMediaStreamTrackAudioSourceNodeFactory: TNativeMediaStreamTrackAudioSourceNodeFactoryFactory = (\n    createInvalidStateError,\n    isNativeOfflineAudioContext\n) => {\n    return (nativeAudioContext, { mediaStreamTrack }) => {\n        // Bug #121: Only Firefox does yet support the MediaStreamTrackAudioSourceNode.\n        if (typeof nativeAudioContext.createMediaStreamTrackSource === 'function') {\n            return nativeAudioContext.createMediaStreamTrackSource(mediaStreamTrack);\n        }\n\n        const mediaStream = new MediaStream([mediaStreamTrack]);\n        const nativeMediaStreamAudioSourceNode = nativeAudioContext.createMediaStreamSource(mediaStream);\n\n        // Bug #120: Firefox does not throw an error if the mediaStream has no audio track.\n        if (mediaStreamTrack.kind !== 'audio') {\n            throw createInvalidStateError();\n        }\n\n        // Bug #172: Safari allows to create a MediaStreamAudioSourceNode with an OfflineAudioContext.\n        if (isNativeOfflineAudioContext(nativeAudioContext)) {\n            throw new TypeError();\n        }\n\n        return nativeMediaStreamAudioSourceNode;\n    };\n};\n","import { TNativeOfflineAudioContextConstructorFactory } from '../types';\n\nexport const createNativeOfflineAudioContextConstructor: TNativeOfflineAudioContextConstructorFactory = (window) => {\n    if (window === null) {\n        return null;\n    }\n\n    if (window.hasOwnProperty('OfflineAudioContext')) {\n        return window.OfflineAudioContext;\n    }\n\n    return window.hasOwnProperty('webkitOfflineAudioContext') ? (<any>window).webkitOfflineAudioContext : null;\n};\n","import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOption } from '../helpers/assign-native-audio-node-option';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { wrapAudioScheduledSourceNodeStartMethodNegativeParameters } from '../helpers/wrap-audio-scheduled-source-node-start-method-negative-parameters';\nimport { wrapAudioScheduledSourceNodeStopMethodNegativeParameters } from '../helpers/wrap-audio-scheduled-source-node-stop-method-negative-parameters';\nimport { TNativeOscillatorNodeFactoryFactory } from '../types';\n\nexport const createNativeOscillatorNodeFactory: TNativeOscillatorNodeFactoryFactory = (\n    addSilentConnection,\n    cacheTestResult,\n    testAudioScheduledSourceNodeStartMethodNegativeParametersSupport,\n    testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport,\n    testAudioScheduledSourceNodeStopMethodNegativeParametersSupport,\n    wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls\n) => {\n    return (nativeContext, options) => {\n        const nativeOscillatorNode = nativeContext.createOscillator();\n\n        assignNativeAudioNodeOptions(nativeOscillatorNode, options);\n\n        assignNativeAudioNodeAudioParamValue(nativeOscillatorNode, options, 'detune');\n        assignNativeAudioNodeAudioParamValue(nativeOscillatorNode, options, 'frequency');\n\n        if (options.periodicWave !== undefined) {\n            nativeOscillatorNode.setPeriodicWave(options.periodicWave);\n        } else {\n            assignNativeAudioNodeOption(nativeOscillatorNode, options, 'type');\n        }\n\n        // Bug #44: Only Chrome, Edge & Opera throw a RangeError yet.\n        if (\n            !cacheTestResult(testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, () =>\n                testAudioScheduledSourceNodeStartMethodNegativeParametersSupport(nativeContext)\n            )\n        ) {\n            wrapAudioScheduledSourceNodeStartMethodNegativeParameters(nativeOscillatorNode);\n        }\n\n        // Bug #19: Safari does not ignore calls to stop() of an already stopped AudioBufferSourceNode.\n        if (\n            !cacheTestResult(testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport, () =>\n                testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport(nativeContext)\n            )\n        ) {\n            wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls(nativeOscillatorNode, nativeContext);\n        }\n\n        // Bug #44: Only Firefox does not throw a RangeError yet.\n        if (\n            !cacheTestResult(testAudioScheduledSourceNodeStopMethodNegativeParametersSupport, () =>\n                testAudioScheduledSourceNodeStopMethodNegativeParametersSupport(nativeContext)\n            )\n        ) {\n            wrapAudioScheduledSourceNodeStopMethodNegativeParameters(nativeOscillatorNode);\n        }\n\n        // Bug #175: Safari will not fire an ended event if the OscillatorNode is unconnected.\n        addSilentConnection(nativeContext, nativeOscillatorNode);\n\n        return nativeOscillatorNode;\n    };\n};\n","import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOption } from '../helpers/assign-native-audio-node-option';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { TNativePannerNodeFactoryFactory } from '../types';\n\nexport const createNativePannerNodeFactory: TNativePannerNodeFactoryFactory = (createNativePannerNodeFaker) => {\n    return (nativeContext, options) => {\n        const nativePannerNode = nativeContext.createPanner();\n\n        // Bug #124: Safari does not support modifying the orientation and the position with AudioParams.\n        if (nativePannerNode.orientationX === undefined) {\n            return createNativePannerNodeFaker(nativeContext, options);\n        }\n\n        assignNativeAudioNodeOptions(nativePannerNode, options);\n\n        assignNativeAudioNodeAudioParamValue(nativePannerNode, options, 'orientationX');\n        assignNativeAudioNodeAudioParamValue(nativePannerNode, options, 'orientationY');\n        assignNativeAudioNodeAudioParamValue(nativePannerNode, options, 'orientationZ');\n        assignNativeAudioNodeAudioParamValue(nativePannerNode, options, 'positionX');\n        assignNativeAudioNodeAudioParamValue(nativePannerNode, options, 'positionY');\n        assignNativeAudioNodeAudioParamValue(nativePannerNode, options, 'positionZ');\n\n        assignNativeAudioNodeOption(nativePannerNode, options, 'coneInnerAngle');\n        assignNativeAudioNodeOption(nativePannerNode, options, 'coneOuterAngle');\n        assignNativeAudioNodeOption(nativePannerNode, options, 'coneOuterGain');\n        assignNativeAudioNodeOption(nativePannerNode, options, 'distanceModel');\n        assignNativeAudioNodeOption(nativePannerNode, options, 'maxDistance');\n        assignNativeAudioNodeOption(nativePannerNode, options, 'panningModel');\n        assignNativeAudioNodeOption(nativePannerNode, options, 'refDistance');\n        assignNativeAudioNodeOption(nativePannerNode, options, 'rolloffFactor');\n\n        return nativePannerNode;\n    };\n};\n","import { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { interceptConnections } from '../helpers/intercept-connections';\nimport { TNativeAudioNode, TNativePannerNode, TNativePannerNodeFakerFactoryFactory } from '../types';\n\nexport const createNativePannerNodeFakerFactory: TNativePannerNodeFakerFactoryFactory = (\n    connectNativeAudioNodeToNativeAudioNode,\n    createInvalidStateError,\n    createNativeChannelMergerNode,\n    createNativeGainNode,\n    createNativeScriptProcessorNode,\n    createNativeWaveShaperNode,\n    createNotSupportedError,\n    disconnectNativeAudioNodeFromNativeAudioNode,\n    monitorConnections\n) => {\n    return (\n        nativeContext,\n        {\n            coneInnerAngle,\n            coneOuterAngle,\n            coneOuterGain,\n            distanceModel,\n            maxDistance,\n            orientationX,\n            orientationY,\n            orientationZ,\n            panningModel,\n            positionX,\n            positionY,\n            positionZ,\n            refDistance,\n            rolloffFactor,\n            ...audioNodeOptions\n        }\n    ) => {\n        const pannerNode = nativeContext.createPanner();\n\n        // Bug #125: Safari does not throw an error yet.\n        if (audioNodeOptions.channelCount > 2) {\n            throw createNotSupportedError();\n        }\n\n        // Bug #126: Safari does not throw an error yet.\n        if (audioNodeOptions.channelCountMode === 'max') {\n            throw createNotSupportedError();\n        }\n\n        assignNativeAudioNodeOptions(pannerNode, audioNodeOptions);\n\n        const SINGLE_CHANNEL_OPTIONS = {\n            channelCount: 1,\n            channelCountMode: 'explicit',\n            channelInterpretation: 'discrete'\n        } as const;\n\n        const channelMergerNode = createNativeChannelMergerNode(nativeContext, {\n            ...SINGLE_CHANNEL_OPTIONS,\n            channelInterpretation: 'speakers',\n            numberOfInputs: 6\n        });\n        const inputGainNode = createNativeGainNode(nativeContext, { ...audioNodeOptions, gain: 1 });\n        const orientationXGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 1 });\n        const orientationYGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n        const orientationZGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n        const positionXGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n        const positionYGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n        const positionZGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n        const scriptProcessorNode = createNativeScriptProcessorNode(nativeContext, 256, 6, 1);\n        const waveShaperNode = createNativeWaveShaperNode(nativeContext, {\n            ...SINGLE_CHANNEL_OPTIONS,\n            curve: new Float32Array([1, 1]),\n            oversample: 'none'\n        });\n\n        let lastOrientation: [number, number, number] = [orientationX, orientationY, orientationZ];\n        let lastPosition: [number, number, number] = [positionX, positionY, positionZ];\n\n        // tslint:disable-next-line:deprecation\n        scriptProcessorNode.onaudioprocess = ({ inputBuffer }) => {\n            const orientation: [number, number, number] = [\n                inputBuffer.getChannelData(0)[0],\n                inputBuffer.getChannelData(1)[0],\n                inputBuffer.getChannelData(2)[0]\n            ];\n\n            if (orientation.some((value, index) => value !== lastOrientation[index])) {\n                pannerNode.setOrientation(...orientation); // tslint:disable-line:deprecation\n\n                lastOrientation = orientation;\n            }\n\n            const positon: [number, number, number] = [\n                inputBuffer.getChannelData(3)[0],\n                inputBuffer.getChannelData(4)[0],\n                inputBuffer.getChannelData(5)[0]\n            ];\n\n            if (positon.some((value, index) => value !== lastPosition[index])) {\n                pannerNode.setPosition(...positon); // tslint:disable-line:deprecation\n\n                lastPosition = positon;\n            }\n        };\n\n        Object.defineProperty(orientationYGainNode.gain, 'defaultValue', { get: () => 0 });\n        Object.defineProperty(orientationZGainNode.gain, 'defaultValue', { get: () => 0 });\n        Object.defineProperty(positionXGainNode.gain, 'defaultValue', { get: () => 0 });\n        Object.defineProperty(positionYGainNode.gain, 'defaultValue', { get: () => 0 });\n        Object.defineProperty(positionZGainNode.gain, 'defaultValue', { get: () => 0 });\n\n        const nativePannerNodeFaker = {\n            get bufferSize(): undefined {\n                return undefined;\n            },\n            get channelCount(): number {\n                return pannerNode.channelCount;\n            },\n            set channelCount(value) {\n                // Bug #125: Safari does not throw an error yet.\n                if (value > 2) {\n                    throw createNotSupportedError();\n                }\n\n                inputGainNode.channelCount = value;\n                pannerNode.channelCount = value;\n            },\n            get channelCountMode(): TNativePannerNode['channelCountMode'] {\n                return pannerNode.channelCountMode;\n            },\n            set channelCountMode(value) {\n                // Bug #126: Safari does not throw an error yet.\n                if (value === 'max') {\n                    throw createNotSupportedError();\n                }\n\n                inputGainNode.channelCountMode = value;\n                pannerNode.channelCountMode = value;\n            },\n            get channelInterpretation(): TNativePannerNode['channelInterpretation'] {\n                return pannerNode.channelInterpretation;\n            },\n            set channelInterpretation(value) {\n                inputGainNode.channelInterpretation = value;\n                pannerNode.channelInterpretation = value;\n            },\n            get coneInnerAngle(): TNativePannerNode['coneInnerAngle'] {\n                return pannerNode.coneInnerAngle;\n            },\n            set coneInnerAngle(value) {\n                pannerNode.coneInnerAngle = value;\n            },\n            get coneOuterAngle(): TNativePannerNode['coneOuterAngle'] {\n                return pannerNode.coneOuterAngle;\n            },\n            set coneOuterAngle(value) {\n                pannerNode.coneOuterAngle = value;\n            },\n            get coneOuterGain(): TNativePannerNode['coneOuterGain'] {\n                return pannerNode.coneOuterGain;\n            },\n            set coneOuterGain(value) {\n                // Bug #127: Safari does not throw an InvalidStateError yet.\n                if (value < 0 || value > 1) {\n                    throw createInvalidStateError();\n                }\n\n                pannerNode.coneOuterGain = value;\n            },\n            get context(): TNativePannerNode['context'] {\n                return pannerNode.context;\n            },\n            get distanceModel(): TNativePannerNode['distanceModel'] {\n                return pannerNode.distanceModel;\n            },\n            set distanceModel(value) {\n                pannerNode.distanceModel = value;\n            },\n            get inputs(): TNativeAudioNode[] {\n                return [inputGainNode];\n            },\n            get maxDistance(): TNativePannerNode['maxDistance'] {\n                return pannerNode.maxDistance;\n            },\n            set maxDistance(value) {\n                // Bug #128: Safari does not throw an error yet.\n                if (value < 0) {\n                    throw new RangeError();\n                }\n\n                pannerNode.maxDistance = value;\n            },\n            get numberOfInputs(): number {\n                return pannerNode.numberOfInputs;\n            },\n            get numberOfOutputs(): number {\n                return pannerNode.numberOfOutputs;\n            },\n            get orientationX(): TNativePannerNode['orientationX'] {\n                return orientationXGainNode.gain;\n            },\n            get orientationY(): TNativePannerNode['orientationY'] {\n                return orientationYGainNode.gain;\n            },\n            get orientationZ(): TNativePannerNode['orientationZ'] {\n                return orientationZGainNode.gain;\n            },\n            get panningModel(): TNativePannerNode['panningModel'] {\n                return pannerNode.panningModel;\n            },\n            set panningModel(value) {\n                pannerNode.panningModel = value;\n            },\n            get positionX(): TNativePannerNode['positionX'] {\n                return positionXGainNode.gain;\n            },\n            get positionY(): TNativePannerNode['positionY'] {\n                return positionYGainNode.gain;\n            },\n            get positionZ(): TNativePannerNode['positionZ'] {\n                return positionZGainNode.gain;\n            },\n            get refDistance(): TNativePannerNode['refDistance'] {\n                return pannerNode.refDistance;\n            },\n            set refDistance(value) {\n                // Bug #129: Safari does not throw an error yet.\n                if (value < 0) {\n                    throw new RangeError();\n                }\n\n                pannerNode.refDistance = value;\n            },\n            get rolloffFactor(): TNativePannerNode['rolloffFactor'] {\n                return pannerNode.rolloffFactor;\n            },\n            set rolloffFactor(value) {\n                // Bug #130: Safari does not throw an error yet.\n                if (value < 0) {\n                    throw new RangeError();\n                }\n\n                pannerNode.rolloffFactor = value;\n            },\n            addEventListener(...args: any[]): void {\n                return inputGainNode.addEventListener(args[0], args[1], args[2]);\n            },\n            dispatchEvent(...args: any[]): boolean {\n                return inputGainNode.dispatchEvent(args[0]);\n            },\n            removeEventListener(...args: any[]): void {\n                return inputGainNode.removeEventListener(args[0], args[1], args[2]);\n            }\n        };\n\n        if (coneInnerAngle !== nativePannerNodeFaker.coneInnerAngle) {\n            nativePannerNodeFaker.coneInnerAngle = coneInnerAngle;\n        }\n\n        if (coneOuterAngle !== nativePannerNodeFaker.coneOuterAngle) {\n            nativePannerNodeFaker.coneOuterAngle = coneOuterAngle;\n        }\n\n        if (coneOuterGain !== nativePannerNodeFaker.coneOuterGain) {\n            nativePannerNodeFaker.coneOuterGain = coneOuterGain;\n        }\n\n        if (distanceModel !== nativePannerNodeFaker.distanceModel) {\n            nativePannerNodeFaker.distanceModel = distanceModel;\n        }\n\n        if (maxDistance !== nativePannerNodeFaker.maxDistance) {\n            nativePannerNodeFaker.maxDistance = maxDistance;\n        }\n\n        if (orientationX !== nativePannerNodeFaker.orientationX.value) {\n            nativePannerNodeFaker.orientationX.value = orientationX;\n        }\n\n        if (orientationY !== nativePannerNodeFaker.orientationY.value) {\n            nativePannerNodeFaker.orientationY.value = orientationY;\n        }\n\n        if (orientationZ !== nativePannerNodeFaker.orientationZ.value) {\n            nativePannerNodeFaker.orientationZ.value = orientationZ;\n        }\n\n        if (panningModel !== nativePannerNodeFaker.panningModel) {\n            nativePannerNodeFaker.panningModel = panningModel;\n        }\n\n        if (positionX !== nativePannerNodeFaker.positionX.value) {\n            nativePannerNodeFaker.positionX.value = positionX;\n        }\n\n        if (positionY !== nativePannerNodeFaker.positionY.value) {\n            nativePannerNodeFaker.positionY.value = positionY;\n        }\n\n        if (positionZ !== nativePannerNodeFaker.positionZ.value) {\n            nativePannerNodeFaker.positionZ.value = positionZ;\n        }\n\n        if (refDistance !== nativePannerNodeFaker.refDistance) {\n            nativePannerNodeFaker.refDistance = refDistance;\n        }\n\n        if (rolloffFactor !== nativePannerNodeFaker.rolloffFactor) {\n            nativePannerNodeFaker.rolloffFactor = rolloffFactor;\n        }\n\n        if (lastOrientation[0] !== 1 || lastOrientation[1] !== 0 || lastOrientation[2] !== 0) {\n            pannerNode.setOrientation(...lastOrientation); // tslint:disable-line:deprecation\n        }\n\n        if (lastPosition[0] !== 0 || lastPosition[1] !== 0 || lastPosition[2] !== 0) {\n            pannerNode.setPosition(...lastPosition); // tslint:disable-line:deprecation\n        }\n\n        const whenConnected = () => {\n            inputGainNode.connect(pannerNode);\n\n            // Bug #119: Safari does not fully support the WaveShaperNode.\n            connectNativeAudioNodeToNativeAudioNode(inputGainNode, waveShaperNode, 0, 0);\n\n            waveShaperNode.connect(orientationXGainNode).connect(channelMergerNode, 0, 0);\n            waveShaperNode.connect(orientationYGainNode).connect(channelMergerNode, 0, 1);\n            waveShaperNode.connect(orientationZGainNode).connect(channelMergerNode, 0, 2);\n            waveShaperNode.connect(positionXGainNode).connect(channelMergerNode, 0, 3);\n            waveShaperNode.connect(positionYGainNode).connect(channelMergerNode, 0, 4);\n            waveShaperNode.connect(positionZGainNode).connect(channelMergerNode, 0, 5);\n\n            channelMergerNode.connect(scriptProcessorNode).connect(nativeContext.destination);\n        };\n        const whenDisconnected = () => {\n            inputGainNode.disconnect(pannerNode);\n\n            // Bug #119: Safari does not fully support the WaveShaperNode.\n            disconnectNativeAudioNodeFromNativeAudioNode(inputGainNode, waveShaperNode, 0, 0);\n\n            waveShaperNode.disconnect(orientationXGainNode);\n            orientationXGainNode.disconnect(channelMergerNode);\n            waveShaperNode.disconnect(orientationYGainNode);\n            orientationYGainNode.disconnect(channelMergerNode);\n            waveShaperNode.disconnect(orientationZGainNode);\n            orientationZGainNode.disconnect(channelMergerNode);\n            waveShaperNode.disconnect(positionXGainNode);\n            positionXGainNode.disconnect(channelMergerNode);\n            waveShaperNode.disconnect(positionYGainNode);\n            positionYGainNode.disconnect(channelMergerNode);\n            waveShaperNode.disconnect(positionZGainNode);\n            positionZGainNode.disconnect(channelMergerNode);\n\n            channelMergerNode.disconnect(scriptProcessorNode);\n            scriptProcessorNode.disconnect(nativeContext.destination);\n        };\n\n        return monitorConnections(interceptConnections(nativePannerNodeFaker, pannerNode), whenConnected, whenDisconnected);\n    };\n};\n","import { TNativePeriodicWaveFactoryFactory } from '../types';\n\nexport const createNativePeriodicWaveFactory: TNativePeriodicWaveFactoryFactory = (createIndexSizeError) => {\n    return (nativeContext, { disableNormalization, imag, real }) => {\n        // Bug #180: Safari does not allow to use ordinary arrays.\n        const convertedImag = imag instanceof Float32Array ? imag : new Float32Array(imag);\n        const convertedReal = real instanceof Float32Array ? real : new Float32Array(real);\n\n        const nativePeriodicWave = nativeContext.createPeriodicWave(convertedReal, convertedImag, { disableNormalization });\n\n        // Bug #181: Safari does not throw an IndexSizeError so far if the given arrays have less than two values.\n        if (Array.from(imag).length < 2) {\n            throw createIndexSizeError();\n        }\n\n        return nativePeriodicWave;\n    };\n};\n","import { TNativeScriptProcessorNodeFactory } from '../types';\n\nexport const createNativeScriptProcessorNode: TNativeScriptProcessorNodeFactory = (\n    nativeContext,\n    bufferSize,\n    numberOfInputChannels,\n    numberOfOutputChannels\n) => {\n    return nativeContext.createScriptProcessor(bufferSize, numberOfInputChannels, numberOfOutputChannels);\n};\n","import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { TNativeStereoPannerNodeFactoryFactory } from '../types';\n\nexport const createNativeStereoPannerNodeFactory: TNativeStereoPannerNodeFactoryFactory = (\n    createNativeStereoPannerNodeFaker,\n    createNotSupportedError\n) => {\n    return (nativeContext, options) => {\n        const channelCountMode = options.channelCountMode;\n\n        /*\n         * Bug #105: The channelCountMode of 'clamped-max' should be supported. However it is not possible to write a polyfill for Safari\n         * which supports it and therefore it can't be supported at all.\n         */\n        if (channelCountMode === 'clamped-max') {\n            throw createNotSupportedError();\n        }\n\n        // Bug #105: Safari does not support the StereoPannerNode.\n        if (nativeContext.createStereoPanner === undefined) {\n            return createNativeStereoPannerNodeFaker(nativeContext, options);\n        }\n\n        const nativeStereoPannerNode = nativeContext.createStereoPanner();\n\n        assignNativeAudioNodeOptions(nativeStereoPannerNode, options);\n\n        assignNativeAudioNodeAudioParamValue(nativeStereoPannerNode, options, 'pan');\n\n        /*\n         * Bug #105: The channelCountMode of 'clamped-max' should be supported. However it is not possible to write a polyfill for Safari\n         * which supports it and therefore it can't be supported at all.\n         */\n        Object.defineProperty(nativeStereoPannerNode, 'channelCountMode', {\n            get: () => channelCountMode,\n            set: (value) => {\n                if (value !== channelCountMode) {\n                    throw createNotSupportedError();\n                }\n            }\n        });\n\n        return nativeStereoPannerNode;\n    };\n};\n","import { interceptConnections } from '../helpers/intercept-connections';\nimport { INativeWaveShaperNodeFaker } from '../interfaces';\nimport {\n    TNativeAudioNode,\n    TNativeChannelMergerNode,\n    TNativeContext,\n    TNativeGainNode,\n    TNativeStereoPannerNode,\n    TNativeStereoPannerNodeFakerFactoryFactory\n} from '../types';\n\nexport const createNativeStereoPannerNodeFakerFactory: TNativeStereoPannerNodeFakerFactoryFactory = (\n    createNativeChannelMergerNode,\n    createNativeChannelSplitterNode,\n    createNativeGainNode,\n    createNativeWaveShaperNode,\n    createNotSupportedError,\n    monitorConnections\n) => {\n    // The curve has a size of 14bit plus 1 value to have an exact representation for zero. This value has been determined experimentally.\n    const CURVE_SIZE = 16385;\n    const DC_CURVE = new Float32Array([1, 1]);\n    const HALF_PI = Math.PI / 2;\n    const SINGLE_CHANNEL_OPTIONS = { channelCount: 1, channelCountMode: 'explicit', channelInterpretation: 'discrete' } as const;\n    const SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS = { ...SINGLE_CHANNEL_OPTIONS, oversample: 'none' } as const;\n\n    const buildInternalGraphForMono = (\n        nativeContext: TNativeContext,\n        inputGainNode: TNativeGainNode,\n        panGainNode: TNativeGainNode,\n        channelMergerNode: TNativeChannelMergerNode\n    ) => {\n        const leftWaveShaperCurve = new Float32Array(CURVE_SIZE);\n        const rightWaveShaperCurve = new Float32Array(CURVE_SIZE);\n\n        for (let i = 0; i < CURVE_SIZE; i += 1) {\n            const x = (i / (CURVE_SIZE - 1)) * HALF_PI;\n\n            leftWaveShaperCurve[i] = Math.cos(x);\n            rightWaveShaperCurve[i] = Math.sin(x);\n        }\n\n        const leftGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n        // Bug #119: Safari does not fully support the WaveShaperNode.\n        const leftWaveShaperNode = <INativeWaveShaperNodeFaker>(\n            createNativeWaveShaperNode(nativeContext, { ...SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS, curve: leftWaveShaperCurve })\n        );\n        // Bug #119: Safari does not fully support the WaveShaperNode.\n        const panWaveShaperNode = <INativeWaveShaperNodeFaker>(\n            createNativeWaveShaperNode(nativeContext, { ...SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS, curve: DC_CURVE })\n        );\n        const rightGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n        // Bug #119: Safari does not fully support the WaveShaperNode.\n        const rightWaveShaperNode = <INativeWaveShaperNodeFaker>(\n            createNativeWaveShaperNode(nativeContext, { ...SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS, curve: rightWaveShaperCurve })\n        );\n\n        return {\n            connectGraph(): void {\n                inputGainNode.connect(leftGainNode);\n                inputGainNode.connect(panWaveShaperNode.inputs === undefined ? panWaveShaperNode : panWaveShaperNode.inputs[0]);\n                inputGainNode.connect(rightGainNode);\n\n                panWaveShaperNode.connect(panGainNode);\n\n                panGainNode.connect(leftWaveShaperNode.inputs === undefined ? leftWaveShaperNode : leftWaveShaperNode.inputs[0]);\n                panGainNode.connect(rightWaveShaperNode.inputs === undefined ? rightWaveShaperNode : rightWaveShaperNode.inputs[0]);\n\n                leftWaveShaperNode.connect(leftGainNode.gain);\n                rightWaveShaperNode.connect(rightGainNode.gain);\n\n                leftGainNode.connect(channelMergerNode, 0, 0);\n                rightGainNode.connect(channelMergerNode, 0, 1);\n            },\n            disconnectGraph(): void {\n                inputGainNode.disconnect(leftGainNode);\n                inputGainNode.disconnect(panWaveShaperNode.inputs === undefined ? panWaveShaperNode : panWaveShaperNode.inputs[0]);\n                inputGainNode.disconnect(rightGainNode);\n\n                panWaveShaperNode.disconnect(panGainNode);\n\n                panGainNode.disconnect(leftWaveShaperNode.inputs === undefined ? leftWaveShaperNode : leftWaveShaperNode.inputs[0]);\n                panGainNode.disconnect(rightWaveShaperNode.inputs === undefined ? rightWaveShaperNode : rightWaveShaperNode.inputs[0]);\n\n                leftWaveShaperNode.disconnect(leftGainNode.gain);\n                rightWaveShaperNode.disconnect(rightGainNode.gain);\n\n                leftGainNode.disconnect(channelMergerNode, 0, 0);\n                rightGainNode.disconnect(channelMergerNode, 0, 1);\n            }\n        };\n    };\n\n    const buildInternalGraphForStereo = (\n        nativeContext: TNativeContext,\n        inputGainNode: TNativeGainNode,\n        panGainNode: TNativeGainNode,\n        channelMergerNode: TNativeChannelMergerNode\n    ) => {\n        const leftInputForLeftOutputWaveShaperCurve = new Float32Array(CURVE_SIZE);\n        const leftInputForRightOutputWaveShaperCurve = new Float32Array(CURVE_SIZE);\n        const rightInputForLeftOutputWaveShaperCurve = new Float32Array(CURVE_SIZE);\n        const rightInputForRightOutputWaveShaperCurve = new Float32Array(CURVE_SIZE);\n\n        const centerIndex = Math.floor(CURVE_SIZE / 2);\n\n        for (let i = 0; i < CURVE_SIZE; i += 1) {\n            if (i > centerIndex) {\n                const x = ((i - centerIndex) / (CURVE_SIZE - 1 - centerIndex)) * HALF_PI;\n\n                leftInputForLeftOutputWaveShaperCurve[i] = Math.cos(x);\n                leftInputForRightOutputWaveShaperCurve[i] = Math.sin(x);\n                rightInputForLeftOutputWaveShaperCurve[i] = 0;\n                rightInputForRightOutputWaveShaperCurve[i] = 1;\n            } else {\n                const x = (i / (CURVE_SIZE - 1 - centerIndex)) * HALF_PI;\n\n                leftInputForLeftOutputWaveShaperCurve[i] = 1;\n                leftInputForRightOutputWaveShaperCurve[i] = 0;\n                rightInputForLeftOutputWaveShaperCurve[i] = Math.cos(x);\n                rightInputForRightOutputWaveShaperCurve[i] = Math.sin(x);\n            }\n        }\n\n        const channelSplitterNode = createNativeChannelSplitterNode(nativeContext, {\n            channelCount: 2,\n            channelCountMode: 'explicit',\n            channelInterpretation: 'discrete',\n            numberOfOutputs: 2\n        });\n        const leftInputForLeftOutputGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n        // Bug #119: Safari does not fully support the WaveShaperNode.\n        const leftInputForLeftOutputWaveShaperNode = <INativeWaveShaperNodeFaker>createNativeWaveShaperNode(nativeContext, {\n            ...SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS,\n            curve: leftInputForLeftOutputWaveShaperCurve\n        });\n        const leftInputForRightOutputGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n        // Bug #119: Safari does not fully support the WaveShaperNode.\n        const leftInputForRightOutputWaveShaperNode = <INativeWaveShaperNodeFaker>createNativeWaveShaperNode(nativeContext, {\n            ...SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS,\n            curve: leftInputForRightOutputWaveShaperCurve\n        });\n        // Bug #119: Safari does not fully support the WaveShaperNode.\n        const panWaveShaperNode = <INativeWaveShaperNodeFaker>(\n            createNativeWaveShaperNode(nativeContext, { ...SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS, curve: DC_CURVE })\n        );\n        const rightInputForLeftOutputGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n        // Bug #119: Safari does not fully support the WaveShaperNode.\n        const rightInputForLeftOutputWaveShaperNode = <INativeWaveShaperNodeFaker>createNativeWaveShaperNode(nativeContext, {\n            ...SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS,\n            curve: rightInputForLeftOutputWaveShaperCurve\n        });\n        const rightInputForRightOutputGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n        // Bug #119: Safari does not fully support the WaveShaperNode.\n        const rightInputForRightOutputWaveShaperNode = <INativeWaveShaperNodeFaker>createNativeWaveShaperNode(nativeContext, {\n            ...SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS,\n            curve: rightInputForRightOutputWaveShaperCurve\n        });\n\n        return {\n            connectGraph(): void {\n                inputGainNode.connect(channelSplitterNode);\n                inputGainNode.connect(panWaveShaperNode.inputs === undefined ? panWaveShaperNode : panWaveShaperNode.inputs[0]);\n\n                channelSplitterNode.connect(leftInputForLeftOutputGainNode, 0);\n                channelSplitterNode.connect(leftInputForRightOutputGainNode, 0);\n                channelSplitterNode.connect(rightInputForLeftOutputGainNode, 1);\n                channelSplitterNode.connect(rightInputForRightOutputGainNode, 1);\n\n                panWaveShaperNode.connect(panGainNode);\n\n                panGainNode.connect(\n                    leftInputForLeftOutputWaveShaperNode.inputs === undefined\n                        ? leftInputForLeftOutputWaveShaperNode\n                        : leftInputForLeftOutputWaveShaperNode.inputs[0]\n                );\n                panGainNode.connect(\n                    leftInputForRightOutputWaveShaperNode.inputs === undefined\n                        ? leftInputForRightOutputWaveShaperNode\n                        : leftInputForRightOutputWaveShaperNode.inputs[0]\n                );\n                panGainNode.connect(\n                    rightInputForLeftOutputWaveShaperNode.inputs === undefined\n                        ? rightInputForLeftOutputWaveShaperNode\n                        : rightInputForLeftOutputWaveShaperNode.inputs[0]\n                );\n                panGainNode.connect(\n                    rightInputForRightOutputWaveShaperNode.inputs === undefined\n                        ? rightInputForRightOutputWaveShaperNode\n                        : rightInputForRightOutputWaveShaperNode.inputs[0]\n                );\n\n                leftInputForLeftOutputWaveShaperNode.connect(leftInputForLeftOutputGainNode.gain);\n                leftInputForRightOutputWaveShaperNode.connect(leftInputForRightOutputGainNode.gain);\n                rightInputForLeftOutputWaveShaperNode.connect(rightInputForLeftOutputGainNode.gain);\n                rightInputForRightOutputWaveShaperNode.connect(rightInputForRightOutputGainNode.gain);\n\n                leftInputForLeftOutputGainNode.connect(channelMergerNode, 0, 0);\n                rightInputForLeftOutputGainNode.connect(channelMergerNode, 0, 0);\n\n                leftInputForRightOutputGainNode.connect(channelMergerNode, 0, 1);\n                rightInputForRightOutputGainNode.connect(channelMergerNode, 0, 1);\n            },\n            disconnectGraph(): void {\n                inputGainNode.disconnect(channelSplitterNode);\n                inputGainNode.disconnect(panWaveShaperNode.inputs === undefined ? panWaveShaperNode : panWaveShaperNode.inputs[0]);\n\n                channelSplitterNode.disconnect(leftInputForLeftOutputGainNode, 0);\n                channelSplitterNode.disconnect(leftInputForRightOutputGainNode, 0);\n                channelSplitterNode.disconnect(rightInputForLeftOutputGainNode, 1);\n                channelSplitterNode.disconnect(rightInputForRightOutputGainNode, 1);\n\n                panWaveShaperNode.disconnect(panGainNode);\n\n                panGainNode.disconnect(\n                    leftInputForLeftOutputWaveShaperNode.inputs === undefined\n                        ? leftInputForLeftOutputWaveShaperNode\n                        : leftInputForLeftOutputWaveShaperNode.inputs[0]\n                );\n                panGainNode.disconnect(\n                    leftInputForRightOutputWaveShaperNode.inputs === undefined\n                        ? leftInputForRightOutputWaveShaperNode\n                        : leftInputForRightOutputWaveShaperNode.inputs[0]\n                );\n                panGainNode.disconnect(\n                    rightInputForLeftOutputWaveShaperNode.inputs === undefined\n                        ? rightInputForLeftOutputWaveShaperNode\n                        : rightInputForLeftOutputWaveShaperNode.inputs[0]\n                );\n                panGainNode.disconnect(\n                    rightInputForRightOutputWaveShaperNode.inputs === undefined\n                        ? rightInputForRightOutputWaveShaperNode\n                        : rightInputForRightOutputWaveShaperNode.inputs[0]\n                );\n\n                leftInputForLeftOutputWaveShaperNode.disconnect(leftInputForLeftOutputGainNode.gain);\n                leftInputForRightOutputWaveShaperNode.disconnect(leftInputForRightOutputGainNode.gain);\n                rightInputForLeftOutputWaveShaperNode.disconnect(rightInputForLeftOutputGainNode.gain);\n                rightInputForRightOutputWaveShaperNode.disconnect(rightInputForRightOutputGainNode.gain);\n\n                leftInputForLeftOutputGainNode.disconnect(channelMergerNode, 0, 0);\n                rightInputForLeftOutputGainNode.disconnect(channelMergerNode, 0, 0);\n\n                leftInputForRightOutputGainNode.disconnect(channelMergerNode, 0, 1);\n                rightInputForRightOutputGainNode.disconnect(channelMergerNode, 0, 1);\n            }\n        };\n    };\n\n    const buildInternalGraph = (\n        nativeContext: TNativeContext,\n        channelCount: number,\n        inputGainNode: TNativeGainNode,\n        panGainNode: TNativeGainNode,\n        channelMergerNode: TNativeChannelMergerNode\n    ) => {\n        if (channelCount === 1) {\n            return buildInternalGraphForMono(nativeContext, inputGainNode, panGainNode, channelMergerNode);\n        }\n\n        if (channelCount === 2) {\n            return buildInternalGraphForStereo(nativeContext, inputGainNode, panGainNode, channelMergerNode);\n        }\n\n        throw createNotSupportedError();\n    };\n\n    return (nativeContext, { channelCount, channelCountMode, pan, ...audioNodeOptions }) => {\n        if (channelCountMode === 'max') {\n            throw createNotSupportedError();\n        }\n\n        const channelMergerNode = createNativeChannelMergerNode(nativeContext, {\n            ...audioNodeOptions,\n            channelCount: 1,\n            channelCountMode,\n            numberOfInputs: 2\n        });\n        const inputGainNode = createNativeGainNode(nativeContext, { ...audioNodeOptions, channelCount, channelCountMode, gain: 1 });\n        const panGainNode = createNativeGainNode(nativeContext, {\n            channelCount: 1,\n            channelCountMode: 'explicit',\n            channelInterpretation: 'discrete',\n            gain: pan\n        });\n\n        let { connectGraph, disconnectGraph } = buildInternalGraph(\n            nativeContext,\n            channelCount,\n            inputGainNode,\n            panGainNode,\n            channelMergerNode\n        );\n\n        Object.defineProperty(panGainNode.gain, 'defaultValue', { get: () => 0 });\n        Object.defineProperty(panGainNode.gain, 'maxValue', { get: () => 1 });\n        Object.defineProperty(panGainNode.gain, 'minValue', { get: () => -1 });\n\n        const nativeStereoPannerNodeFakerFactory = {\n            get bufferSize(): undefined {\n                return undefined;\n            },\n            get channelCount(): number {\n                return inputGainNode.channelCount;\n            },\n            set channelCount(value) {\n                if (inputGainNode.channelCount !== value) {\n                    if (isConnected) {\n                        disconnectGraph();\n                    }\n\n                    ({ connectGraph, disconnectGraph } = buildInternalGraph(\n                        nativeContext,\n                        value,\n                        inputGainNode,\n                        panGainNode,\n                        channelMergerNode\n                    ));\n\n                    if (isConnected) {\n                        connectGraph();\n                    }\n                }\n\n                inputGainNode.channelCount = value;\n            },\n            get channelCountMode(): TNativeStereoPannerNode['channelCountMode'] {\n                return inputGainNode.channelCountMode;\n            },\n            set channelCountMode(value) {\n                if (value === 'clamped-max' || value === 'max') {\n                    throw createNotSupportedError();\n                }\n\n                inputGainNode.channelCountMode = value;\n            },\n            get channelInterpretation(): TNativeStereoPannerNode['channelInterpretation'] {\n                return inputGainNode.channelInterpretation;\n            },\n            set channelInterpretation(value) {\n                inputGainNode.channelInterpretation = value;\n            },\n            get context(): TNativeStereoPannerNode['context'] {\n                return inputGainNode.context;\n            },\n            get inputs(): TNativeAudioNode[] {\n                return [inputGainNode];\n            },\n            get numberOfInputs(): number {\n                return inputGainNode.numberOfInputs;\n            },\n            get numberOfOutputs(): number {\n                return inputGainNode.numberOfOutputs;\n            },\n            get pan(): TNativeStereoPannerNode['pan'] {\n                return panGainNode.gain;\n            },\n            addEventListener(...args: any[]): void {\n                return inputGainNode.addEventListener(args[0], args[1], args[2]);\n            },\n            dispatchEvent(...args: any[]): boolean {\n                return inputGainNode.dispatchEvent(args[0]);\n            },\n            removeEventListener(...args: any[]): void {\n                return inputGainNode.removeEventListener(args[0], args[1], args[2]);\n            }\n        };\n\n        let isConnected = false;\n\n        const whenConnected = () => {\n            connectGraph();\n\n            isConnected = true;\n        };\n        const whenDisconnected = () => {\n            disconnectGraph();\n\n            isConnected = false;\n        };\n\n        return monitorConnections(\n            interceptConnections(nativeStereoPannerNodeFakerFactory, channelMergerNode),\n            whenConnected,\n            whenDisconnected\n        );\n    };\n};\n","import { assignNativeAudioNodeOption } from '../helpers/assign-native-audio-node-option';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { TNativeWaveShaperNodeFactoryFactory } from '../types';\n\nexport const createNativeWaveShaperNodeFactory: TNativeWaveShaperNodeFactoryFactory = (\n    createConnectedNativeAudioBufferSourceNode,\n    createInvalidStateError,\n    createNativeWaveShaperNodeFaker,\n    isDCCurve,\n    monitorConnections,\n    nativeAudioContextConstructor,\n    overwriteAccessors\n) => {\n    return (nativeContext, options) => {\n        const nativeWaveShaperNode = nativeContext.createWaveShaper();\n\n        /*\n         * Bug #119: Safari does not correctly map the values.\n         * @todo Unfortunately there is no way to test for this behavior in a synchronous fashion which is why testing for the existence of\n         * the webkitAudioContext is used as a workaround here. Testing for the automationRate property is necessary because this workaround\n         * isn't necessary anymore since v14.0.2 of Safari.\n         */\n        if (\n            nativeAudioContextConstructor !== null &&\n            nativeAudioContextConstructor.name === 'webkitAudioContext' &&\n            nativeContext.createGain().gain.automationRate === undefined\n        ) {\n            return createNativeWaveShaperNodeFaker(nativeContext, options);\n        }\n\n        assignNativeAudioNodeOptions(nativeWaveShaperNode, options);\n\n        const curve = options.curve === null || options.curve instanceof Float32Array ? options.curve : new Float32Array(options.curve);\n\n        // Bug #104: Chrome, Edge and Opera will throw an InvalidAccessError when the curve has less than two samples.\n        if (curve !== null && curve.length < 2) {\n            throw createInvalidStateError();\n        }\n\n        // Only values of type Float32Array can be assigned to the curve property.\n        assignNativeAudioNodeOption(nativeWaveShaperNode, { curve }, 'curve');\n        assignNativeAudioNodeOption(nativeWaveShaperNode, options, 'oversample');\n\n        let disconnectNativeAudioBufferSourceNode: null | (() => void) = null;\n        let isConnected = false;\n\n        overwriteAccessors(\n            nativeWaveShaperNode,\n            'curve',\n            (get) => () => get.call(nativeWaveShaperNode),\n            (set) => (value) => {\n                set.call(nativeWaveShaperNode, value);\n\n                if (isConnected) {\n                    if (isDCCurve(value) && disconnectNativeAudioBufferSourceNode === null) {\n                        disconnectNativeAudioBufferSourceNode = createConnectedNativeAudioBufferSourceNode(\n                            nativeContext,\n                            nativeWaveShaperNode\n                        );\n                    } else if (!isDCCurve(value) && disconnectNativeAudioBufferSourceNode !== null) {\n                        disconnectNativeAudioBufferSourceNode();\n                        disconnectNativeAudioBufferSourceNode = null;\n                    }\n                }\n\n                return value;\n            }\n        );\n\n        const whenConnected = () => {\n            isConnected = true;\n\n            if (isDCCurve(nativeWaveShaperNode.curve)) {\n                disconnectNativeAudioBufferSourceNode = createConnectedNativeAudioBufferSourceNode(nativeContext, nativeWaveShaperNode);\n            }\n        };\n        const whenDisconnected = () => {\n            isConnected = false;\n\n            if (disconnectNativeAudioBufferSourceNode !== null) {\n                disconnectNativeAudioBufferSourceNode();\n                disconnectNativeAudioBufferSourceNode = null;\n            }\n        };\n\n        return monitorConnections(nativeWaveShaperNode, whenConnected, whenDisconnected);\n    };\n};\n","import { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { interceptConnections } from '../helpers/intercept-connections';\nimport { TNativeAudioNode, TNativeWaveShaperNode, TNativeWaveShaperNodeFakerFactoryFactory } from '../types';\n\nexport const createNativeWaveShaperNodeFakerFactory: TNativeWaveShaperNodeFakerFactoryFactory = (\n    createConnectedNativeAudioBufferSourceNode,\n    createInvalidStateError,\n    createNativeGainNode,\n    isDCCurve,\n    monitorConnections\n) => {\n    return (nativeContext, { curve, oversample, ...audioNodeOptions }) => {\n        const negativeWaveShaperNode = nativeContext.createWaveShaper();\n        const positiveWaveShaperNode = nativeContext.createWaveShaper();\n\n        assignNativeAudioNodeOptions(negativeWaveShaperNode, audioNodeOptions);\n        assignNativeAudioNodeOptions(positiveWaveShaperNode, audioNodeOptions);\n\n        const inputGainNode = createNativeGainNode(nativeContext, { ...audioNodeOptions, gain: 1 });\n        const invertGainNode = createNativeGainNode(nativeContext, { ...audioNodeOptions, gain: -1 });\n        const outputGainNode = createNativeGainNode(nativeContext, { ...audioNodeOptions, gain: 1 });\n        const revertGainNode = createNativeGainNode(nativeContext, { ...audioNodeOptions, gain: -1 });\n\n        let disconnectNativeAudioBufferSourceNode: null | (() => void) = null;\n        let isConnected = false;\n        let unmodifiedCurve: null | TNativeWaveShaperNode['curve'] = null;\n\n        const nativeWaveShaperNodeFaker = {\n            get bufferSize(): undefined {\n                return undefined;\n            },\n            get channelCount(): number {\n                return negativeWaveShaperNode.channelCount;\n            },\n            set channelCount(value) {\n                inputGainNode.channelCount = value;\n                invertGainNode.channelCount = value;\n                negativeWaveShaperNode.channelCount = value;\n                outputGainNode.channelCount = value;\n                positiveWaveShaperNode.channelCount = value;\n                revertGainNode.channelCount = value;\n            },\n            get channelCountMode(): TNativeWaveShaperNode['channelCountMode'] {\n                return negativeWaveShaperNode.channelCountMode;\n            },\n            set channelCountMode(value) {\n                inputGainNode.channelCountMode = value;\n                invertGainNode.channelCountMode = value;\n                negativeWaveShaperNode.channelCountMode = value;\n                outputGainNode.channelCountMode = value;\n                positiveWaveShaperNode.channelCountMode = value;\n                revertGainNode.channelCountMode = value;\n            },\n            get channelInterpretation(): TNativeWaveShaperNode['channelInterpretation'] {\n                return negativeWaveShaperNode.channelInterpretation;\n            },\n            set channelInterpretation(value) {\n                inputGainNode.channelInterpretation = value;\n                invertGainNode.channelInterpretation = value;\n                negativeWaveShaperNode.channelInterpretation = value;\n                outputGainNode.channelInterpretation = value;\n                positiveWaveShaperNode.channelInterpretation = value;\n                revertGainNode.channelInterpretation = value;\n            },\n            get context(): TNativeWaveShaperNode['context'] {\n                return negativeWaveShaperNode.context;\n            },\n            get curve(): TNativeWaveShaperNode['curve'] {\n                return unmodifiedCurve;\n            },\n            set curve(value) {\n                // Bug #102: Safari does not throw an InvalidStateError when the curve has less than two samples.\n                if (value !== null && value.length < 2) {\n                    throw createInvalidStateError();\n                }\n\n                if (value === null) {\n                    negativeWaveShaperNode.curve = value;\n                    positiveWaveShaperNode.curve = value;\n                } else {\n                    const curveLength = value.length;\n\n                    const negativeCurve = new Float32Array(curveLength + 2 - (curveLength % 2));\n                    const positiveCurve = new Float32Array(curveLength + 2 - (curveLength % 2));\n\n                    negativeCurve[0] = value[0];\n                    positiveCurve[0] = -value[curveLength - 1];\n\n                    const length = Math.ceil((curveLength + 1) / 2);\n                    const centerIndex = (curveLength + 1) / 2 - 1;\n\n                    for (let i = 1; i < length; i += 1) {\n                        const theoreticIndex = (i / length) * centerIndex;\n\n                        const lowerIndex = Math.floor(theoreticIndex);\n                        const upperIndex = Math.ceil(theoreticIndex);\n\n                        negativeCurve[i] =\n                            lowerIndex === upperIndex\n                                ? value[lowerIndex]\n                                : (1 - (theoreticIndex - lowerIndex)) * value[lowerIndex] +\n                                  (1 - (upperIndex - theoreticIndex)) * value[upperIndex];\n                        positiveCurve[i] =\n                            lowerIndex === upperIndex\n                                ? -value[curveLength - 1 - lowerIndex]\n                                : -((1 - (theoreticIndex - lowerIndex)) * value[curveLength - 1 - lowerIndex]) -\n                                  (1 - (upperIndex - theoreticIndex)) * value[curveLength - 1 - upperIndex];\n                    }\n\n                    negativeCurve[length] = curveLength % 2 === 1 ? value[length - 1] : (value[length - 2] + value[length - 1]) / 2;\n\n                    negativeWaveShaperNode.curve = negativeCurve;\n                    positiveWaveShaperNode.curve = positiveCurve;\n                }\n\n                unmodifiedCurve = value;\n\n                if (isConnected) {\n                    if (isDCCurve(unmodifiedCurve) && disconnectNativeAudioBufferSourceNode === null) {\n                        disconnectNativeAudioBufferSourceNode = createConnectedNativeAudioBufferSourceNode(nativeContext, inputGainNode);\n                    } else if (disconnectNativeAudioBufferSourceNode !== null) {\n                        disconnectNativeAudioBufferSourceNode();\n                        disconnectNativeAudioBufferSourceNode = null;\n                    }\n                }\n            },\n            get inputs(): TNativeAudioNode[] {\n                return [inputGainNode];\n            },\n            get numberOfInputs(): number {\n                return negativeWaveShaperNode.numberOfInputs;\n            },\n            get numberOfOutputs(): number {\n                return negativeWaveShaperNode.numberOfOutputs;\n            },\n            get oversample(): TNativeWaveShaperNode['oversample'] {\n                return negativeWaveShaperNode.oversample;\n            },\n            set oversample(value) {\n                negativeWaveShaperNode.oversample = value;\n                positiveWaveShaperNode.oversample = value;\n            },\n            addEventListener(...args: any[]): void {\n                return inputGainNode.addEventListener(args[0], args[1], args[2]);\n            },\n            dispatchEvent(...args: any[]): boolean {\n                return inputGainNode.dispatchEvent(args[0]);\n            },\n            removeEventListener(...args: any[]): void {\n                return inputGainNode.removeEventListener(args[0], args[1], args[2]);\n            }\n        };\n\n        if (curve !== null) {\n            // Only values of type Float32Array can be assigned to the curve property.\n            nativeWaveShaperNodeFaker.curve = curve instanceof Float32Array ? curve : new Float32Array(curve);\n        }\n\n        if (oversample !== nativeWaveShaperNodeFaker.oversample) {\n            nativeWaveShaperNodeFaker.oversample = oversample;\n        }\n\n        const whenConnected = () => {\n            inputGainNode.connect(negativeWaveShaperNode).connect(outputGainNode);\n\n            inputGainNode.connect(invertGainNode).connect(positiveWaveShaperNode).connect(revertGainNode).connect(outputGainNode);\n\n            isConnected = true;\n\n            if (isDCCurve(unmodifiedCurve)) {\n                disconnectNativeAudioBufferSourceNode = createConnectedNativeAudioBufferSourceNode(nativeContext, inputGainNode);\n            }\n        };\n        const whenDisconnected = () => {\n            inputGainNode.disconnect(negativeWaveShaperNode);\n            negativeWaveShaperNode.disconnect(outputGainNode);\n\n            inputGainNode.disconnect(invertGainNode);\n            invertGainNode.disconnect(positiveWaveShaperNode);\n            positiveWaveShaperNode.disconnect(revertGainNode);\n            revertGainNode.disconnect(outputGainNode);\n\n            isConnected = false;\n\n            if (disconnectNativeAudioBufferSourceNode !== null) {\n                disconnectNativeAudioBufferSourceNode();\n                disconnectNativeAudioBufferSourceNode = null;\n            }\n        };\n\n        return monitorConnections(interceptConnections(nativeWaveShaperNodeFaker, outputGainNode), whenConnected, whenDisconnected);\n    };\n};\n","import { TNotSupportedErrorFactory } from '../types';\n\nexport const createNotSupportedError: TNotSupportedErrorFactory = () => new DOMException('', 'NotSupportedError');\n","import { deactivateAudioGraph } from '../helpers/deactivate-audio-graph';\nimport { testPromiseSupport } from '../helpers/test-promise-support';\nimport { IAudioBuffer, IOfflineAudioContext, IOfflineAudioContextOptions } from '../interfaces';\nimport { TAudioContextState, TNativeOfflineAudioContext, TOfflineAudioContextConstructorFactory } from '../types';\n\nconst DEFAULT_OPTIONS = {\n    numberOfChannels: 1\n} as const;\n\nexport const createOfflineAudioContextConstructor: TOfflineAudioContextConstructorFactory = (\n    baseAudioContextConstructor,\n    cacheTestResult,\n    createInvalidStateError,\n    createNativeOfflineAudioContext,\n    startRendering\n) => {\n    return class OfflineAudioContext extends baseAudioContextConstructor<IOfflineAudioContext> implements IOfflineAudioContext {\n        private _length: number;\n\n        private _nativeOfflineAudioContext: TNativeOfflineAudioContext;\n\n        private _state: null | TAudioContextState;\n\n        constructor(options: IOfflineAudioContextOptions);\n        constructor(numberOfChannels: number, length: number, sampleRate: number);\n        constructor(a: number | IOfflineAudioContextOptions, b?: number, c?: number) {\n            let options: IOfflineAudioContextOptions;\n\n            if (typeof a === 'number' && b !== undefined && c !== undefined) {\n                options = { length: b, numberOfChannels: a, sampleRate: c };\n            } else if (typeof a === 'object') {\n                options = a;\n            } else {\n                throw new Error('The given parameters are not valid.');\n            }\n\n            const { length, numberOfChannels, sampleRate } = { ...DEFAULT_OPTIONS, ...options };\n\n            const nativeOfflineAudioContext = createNativeOfflineAudioContext(numberOfChannels, length, sampleRate);\n\n            // #21 Safari does not support promises and therefore would fire the statechange event before the promise can be resolved.\n            if (!cacheTestResult(testPromiseSupport, () => testPromiseSupport(nativeOfflineAudioContext))) {\n                nativeOfflineAudioContext.addEventListener(\n                    'statechange',\n                    (() => {\n                        let i = 0;\n\n                        const delayStateChangeEvent = (event: Event) => {\n                            if (this._state === 'running') {\n                                if (i > 0) {\n                                    nativeOfflineAudioContext.removeEventListener('statechange', delayStateChangeEvent);\n                                    event.stopImmediatePropagation();\n\n                                    this._waitForThePromiseToSettle(event);\n                                } else {\n                                    i += 1;\n                                }\n                            }\n                        };\n\n                        return delayStateChangeEvent;\n                    })()\n                );\n            }\n\n            super(nativeOfflineAudioContext, numberOfChannels);\n\n            this._length = length;\n            this._nativeOfflineAudioContext = nativeOfflineAudioContext;\n            this._state = null;\n        }\n\n        get length(): number {\n            // Bug #17: Safari does not yet expose the length.\n            if (this._nativeOfflineAudioContext.length === undefined) {\n                return this._length;\n            }\n\n            return this._nativeOfflineAudioContext.length;\n        }\n\n        get state(): TAudioContextState {\n            return this._state === null ? this._nativeOfflineAudioContext.state : this._state;\n        }\n\n        public startRendering(): Promise<IAudioBuffer> {\n            /*\n             * Bug #9 & #59: It is theoretically possible that startRendering() will first render a partialOfflineAudioContext. Therefore\n             * the state of the nativeOfflineAudioContext might no transition to running immediately.\n             */\n            if (this._state === 'running') {\n                return Promise.reject(createInvalidStateError());\n            }\n\n            this._state = 'running';\n\n            return startRendering(this.destination, this._nativeOfflineAudioContext).finally(() => {\n                this._state = null;\n\n                deactivateAudioGraph(this);\n            });\n        }\n\n        private _waitForThePromiseToSettle(event: Event): void {\n            if (this._state === null) {\n                this._nativeOfflineAudioContext.dispatchEvent(event);\n            } else {\n                setTimeout(() => this._waitForThePromiseToSettle(event));\n            }\n        }\n    };\n};\n","import { isActiveAudioNode } from '../helpers/is-active-audio-node';\nimport { setInternalStateToActive } from '../helpers/set-internal-state-to-active';\nimport { setInternalStateToPassive } from '../helpers/set-internal-state-to-passive';\nimport { IAudioParam, IMinimalOfflineAudioContext, IOscillatorNode, IOscillatorNodeRenderer, IOscillatorOptions } from '../interfaces';\nimport {\n    TContext,\n    TEventHandler,\n    TNativeOscillatorNode,\n    TOscillatorNodeConstructorFactory,\n    TOscillatorNodeRenderer,\n    TOscillatorType\n} from '../types';\n\nconst DEFAULT_OPTIONS = {\n    channelCount: 2,\n    channelCountMode: 'max', // This attribute has no effect for nodes with no inputs.\n    channelInterpretation: 'speakers', // This attribute has no effect for nodes with no inputs.\n    detune: 0,\n    frequency: 440,\n    periodicWave: undefined,\n    type: 'sine'\n} as const;\n\nexport const createOscillatorNodeConstructor: TOscillatorNodeConstructorFactory = (\n    audioNodeConstructor,\n    createAudioParam,\n    createNativeOscillatorNode,\n    createOscillatorNodeRenderer,\n    getNativeContext,\n    isNativeOfflineAudioContext,\n    wrapEventListener\n) => {\n    return class OscillatorNode<T extends TContext> extends audioNodeConstructor<T> implements IOscillatorNode<T> {\n        private _detune: IAudioParam;\n\n        private _frequency: IAudioParam;\n\n        private _nativeOscillatorNode: TNativeOscillatorNode;\n\n        private _onended: null | TEventHandler<this>;\n\n        private _oscillatorNodeRenderer: TOscillatorNodeRenderer<T>;\n\n        constructor(context: T, options?: Partial<IOscillatorOptions>) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeOscillatorNode = createNativeOscillatorNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const oscillatorNodeRenderer = <TOscillatorNodeRenderer<T>>(isOffline ? createOscillatorNodeRenderer() : null);\n            const nyquist = context.sampleRate / 2;\n\n            super(context, false, nativeOscillatorNode, oscillatorNodeRenderer);\n\n            // Bug #81: Firefox & Safari do not export the correct values for maxValue and minValue.\n            this._detune = createAudioParam(this, isOffline, nativeOscillatorNode.detune, 153600, -153600);\n            // Bug #76: Safari does not export the correct values for maxValue and minValue.\n            this._frequency = createAudioParam(this, isOffline, nativeOscillatorNode.frequency, nyquist, -nyquist);\n            this._nativeOscillatorNode = nativeOscillatorNode;\n            this._onended = null;\n            this._oscillatorNodeRenderer = oscillatorNodeRenderer;\n\n            if (this._oscillatorNodeRenderer !== null && mergedOptions.periodicWave !== undefined) {\n                (<IOscillatorNodeRenderer<IMinimalOfflineAudioContext>>this._oscillatorNodeRenderer).periodicWave =\n                    mergedOptions.periodicWave;\n            }\n        }\n\n        get detune(): IAudioParam {\n            return this._detune;\n        }\n\n        get frequency(): IAudioParam {\n            return this._frequency;\n        }\n\n        get onended(): null | TEventHandler<this> {\n            return this._onended;\n        }\n\n        set onended(value) {\n            const wrappedListener = typeof value === 'function' ? wrapEventListener(this, value) : null;\n\n            this._nativeOscillatorNode.onended = wrappedListener;\n\n            const nativeOnEnded = this._nativeOscillatorNode.onended;\n\n            this._onended = nativeOnEnded !== null && nativeOnEnded === wrappedListener ? value : <null | TEventHandler<this>>nativeOnEnded;\n        }\n\n        get type(): TOscillatorType {\n            return this._nativeOscillatorNode.type;\n        }\n\n        set type(value) {\n            this._nativeOscillatorNode.type = value;\n\n            if (this._oscillatorNodeRenderer !== null) {\n                this._oscillatorNodeRenderer.periodicWave = null;\n            }\n        }\n\n        public setPeriodicWave(periodicWave: PeriodicWave): void {\n            this._nativeOscillatorNode.setPeriodicWave(periodicWave);\n\n            if (this._oscillatorNodeRenderer !== null) {\n                this._oscillatorNodeRenderer.periodicWave = periodicWave;\n            }\n        }\n\n        public start(when = 0): void {\n            this._nativeOscillatorNode.start(when);\n\n            if (this._oscillatorNodeRenderer !== null) {\n                this._oscillatorNodeRenderer.start = when;\n            }\n\n            if (this.context.state !== 'closed') {\n                setInternalStateToActive(this);\n\n                const resetInternalStateToPassive = () => {\n                    this._nativeOscillatorNode.removeEventListener('ended', resetInternalStateToPassive);\n\n                    if (isActiveAudioNode(this)) {\n                        setInternalStateToPassive(this);\n                    }\n                };\n\n                this._nativeOscillatorNode.addEventListener('ended', resetInternalStateToPassive);\n            }\n        }\n\n        public stop(when = 0): void {\n            this._nativeOscillatorNode.stop(when);\n\n            if (this._oscillatorNodeRenderer !== null) {\n                this._oscillatorNodeRenderer.stop = when;\n            }\n        }\n    };\n};\n","import { isOwnedByContext } from '../helpers/is-owned-by-context';\nimport { IAudioNode, IMinimalOfflineAudioContext, IOfflineAudioContext, IOscillatorNode, IPeriodicWave } from '../interfaces';\nimport { TNativeOfflineAudioContext, TNativeOscillatorNode, TOscillatorNodeRendererFactoryFactory } from '../types';\n\nexport const createOscillatorNodeRendererFactory: TOscillatorNodeRendererFactoryFactory = (\n    connectAudioParam,\n    createNativeOscillatorNode,\n    getNativeAudioNode,\n    renderAutomation,\n    renderInputsOfAudioNode\n) => {\n    return <T extends IMinimalOfflineAudioContext | IOfflineAudioContext>() => {\n        const renderedNativeOscillatorNodes = new WeakMap<TNativeOfflineAudioContext, TNativeOscillatorNode>();\n\n        let periodicWave: null | IPeriodicWave = null;\n        let start: null | number = null;\n        let stop: null | number = null;\n\n        const createOscillatorNode = async (\n            proxy: IOscillatorNode<T>,\n            nativeOfflineAudioContext: TNativeOfflineAudioContext,\n            trace: readonly IAudioNode<T>[]\n        ) => {\n            let nativeOscillatorNode = getNativeAudioNode<T, TNativeOscillatorNode>(proxy);\n\n            // If the initially used nativeOscillatorNode was not constructed on the same OfflineAudioContext it needs to be created again.\n            const nativeOscillatorNodeIsOwnedByContext = isOwnedByContext(nativeOscillatorNode, nativeOfflineAudioContext);\n\n            if (!nativeOscillatorNodeIsOwnedByContext) {\n                const options = {\n                    channelCount: nativeOscillatorNode.channelCount,\n                    channelCountMode: nativeOscillatorNode.channelCountMode,\n                    channelInterpretation: nativeOscillatorNode.channelInterpretation,\n                    detune: nativeOscillatorNode.detune.value,\n                    frequency: nativeOscillatorNode.frequency.value,\n                    periodicWave: periodicWave === null ? undefined : periodicWave,\n                    type: nativeOscillatorNode.type\n                };\n\n                nativeOscillatorNode = createNativeOscillatorNode(nativeOfflineAudioContext, options);\n\n                if (start !== null) {\n                    nativeOscillatorNode.start(start);\n                }\n\n                if (stop !== null) {\n                    nativeOscillatorNode.stop(stop);\n                }\n            }\n\n            renderedNativeOscillatorNodes.set(nativeOfflineAudioContext, nativeOscillatorNode);\n\n            if (!nativeOscillatorNodeIsOwnedByContext) {\n                await renderAutomation(nativeOfflineAudioContext, proxy.detune, nativeOscillatorNode.detune, trace);\n                await renderAutomation(nativeOfflineAudioContext, proxy.frequency, nativeOscillatorNode.frequency, trace);\n            } else {\n                await connectAudioParam(nativeOfflineAudioContext, proxy.detune, nativeOscillatorNode.detune, trace);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.frequency, nativeOscillatorNode.frequency, trace);\n            }\n\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeOscillatorNode, trace);\n\n            return nativeOscillatorNode;\n        };\n\n        return {\n            set periodicWave(value: null | IPeriodicWave) {\n                periodicWave = value;\n            },\n            set start(value: number) {\n                start = value;\n            },\n            set stop(value: number) {\n                stop = value;\n            },\n            render(\n                proxy: IOscillatorNode<T>,\n                nativeOfflineAudioContext: TNativeOfflineAudioContext,\n                trace: readonly IAudioNode<T>[]\n            ): Promise<TNativeOscillatorNode> {\n                const renderedNativeOscillatorNode = renderedNativeOscillatorNodes.get(nativeOfflineAudioContext);\n\n                if (renderedNativeOscillatorNode !== undefined) {\n                    return Promise.resolve(renderedNativeOscillatorNode);\n                }\n\n                return createOscillatorNode(proxy, nativeOfflineAudioContext, trace);\n            }\n        };\n    };\n};\n","import { MOST_NEGATIVE_SINGLE_FLOAT, MOST_POSITIVE_SINGLE_FLOAT } from '../constants';\nimport { IAudioParam, IPannerNode, IPannerOptions } from '../interfaces';\nimport {\n    TAudioNodeRenderer,\n    TContext,\n    TDistanceModelType,\n    TNativePannerNode,\n    TPannerNodeConstructorFactory,\n    TPanningModelType\n} from '../types';\n\nconst DEFAULT_OPTIONS = {\n    channelCount: 2,\n    channelCountMode: 'clamped-max',\n    channelInterpretation: 'speakers',\n    coneInnerAngle: 360,\n    coneOuterAngle: 360,\n    coneOuterGain: 0,\n    distanceModel: 'inverse',\n    maxDistance: 10000,\n    orientationX: 1,\n    orientationY: 0,\n    orientationZ: 0,\n    panningModel: 'equalpower',\n    positionX: 0,\n    positionY: 0,\n    positionZ: 0,\n    refDistance: 1,\n    rolloffFactor: 1\n} as const;\n\nexport const createPannerNodeConstructor: TPannerNodeConstructorFactory = (\n    audioNodeConstructor,\n    createAudioParam,\n    createNativePannerNode,\n    createPannerNodeRenderer,\n    getNativeContext,\n    isNativeOfflineAudioContext,\n    setAudioNodeTailTime\n) => {\n    return class PannerNode<T extends TContext> extends audioNodeConstructor<T> implements IPannerNode<T> {\n        private _nativePannerNode: TNativePannerNode;\n\n        private _orientationX: IAudioParam;\n\n        private _orientationY: IAudioParam;\n\n        private _orientationZ: IAudioParam;\n\n        private _positionX: IAudioParam;\n\n        private _positionY: IAudioParam;\n\n        private _positionZ: IAudioParam;\n\n        constructor(context: T, options?: Partial<IPannerOptions>) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativePannerNode = createNativePannerNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const pannerNodeRenderer = <TAudioNodeRenderer<T, this>>(isOffline ? createPannerNodeRenderer() : null);\n\n            super(context, false, nativePannerNode, pannerNodeRenderer);\n\n            this._nativePannerNode = nativePannerNode;\n            // Bug #74: Safari does not export the correct values for maxValue and minValue.\n            this._orientationX = createAudioParam(\n                this,\n                isOffline,\n                nativePannerNode.orientationX,\n                MOST_POSITIVE_SINGLE_FLOAT,\n                MOST_NEGATIVE_SINGLE_FLOAT\n            );\n            this._orientationY = createAudioParam(\n                this,\n                isOffline,\n                nativePannerNode.orientationY,\n                MOST_POSITIVE_SINGLE_FLOAT,\n                MOST_NEGATIVE_SINGLE_FLOAT\n            );\n            this._orientationZ = createAudioParam(\n                this,\n                isOffline,\n                nativePannerNode.orientationZ,\n                MOST_POSITIVE_SINGLE_FLOAT,\n                MOST_NEGATIVE_SINGLE_FLOAT\n            );\n            this._positionX = createAudioParam(\n                this,\n                isOffline,\n                nativePannerNode.positionX,\n                MOST_POSITIVE_SINGLE_FLOAT,\n                MOST_NEGATIVE_SINGLE_FLOAT\n            );\n            this._positionY = createAudioParam(\n                this,\n                isOffline,\n                nativePannerNode.positionY,\n                MOST_POSITIVE_SINGLE_FLOAT,\n                MOST_NEGATIVE_SINGLE_FLOAT\n            );\n            this._positionZ = createAudioParam(\n                this,\n                isOffline,\n                nativePannerNode.positionZ,\n                MOST_POSITIVE_SINGLE_FLOAT,\n                MOST_NEGATIVE_SINGLE_FLOAT\n            );\n\n            // @todo Determine a meaningful tail-time instead of just using one second.\n            setAudioNodeTailTime(this, 1);\n        }\n\n        get coneInnerAngle(): number {\n            return this._nativePannerNode.coneInnerAngle;\n        }\n\n        set coneInnerAngle(value) {\n            this._nativePannerNode.coneInnerAngle = value;\n        }\n\n        get coneOuterAngle(): number {\n            return this._nativePannerNode.coneOuterAngle;\n        }\n\n        set coneOuterAngle(value) {\n            this._nativePannerNode.coneOuterAngle = value;\n        }\n\n        get coneOuterGain(): number {\n            return this._nativePannerNode.coneOuterGain;\n        }\n\n        set coneOuterGain(value) {\n            this._nativePannerNode.coneOuterGain = value;\n        }\n\n        get distanceModel(): TDistanceModelType {\n            return this._nativePannerNode.distanceModel;\n        }\n\n        set distanceModel(value) {\n            this._nativePannerNode.distanceModel = value;\n        }\n\n        get maxDistance(): number {\n            return this._nativePannerNode.maxDistance;\n        }\n\n        set maxDistance(value) {\n            this._nativePannerNode.maxDistance = value;\n        }\n\n        get orientationX(): IAudioParam {\n            return this._orientationX;\n        }\n\n        get orientationY(): IAudioParam {\n            return this._orientationY;\n        }\n\n        get orientationZ(): IAudioParam {\n            return this._orientationZ;\n        }\n\n        get panningModel(): TPanningModelType {\n            return this._nativePannerNode.panningModel;\n        }\n\n        set panningModel(value) {\n            this._nativePannerNode.panningModel = value;\n        }\n\n        get positionX(): IAudioParam {\n            return this._positionX;\n        }\n\n        get positionY(): IAudioParam {\n            return this._positionY;\n        }\n\n        get positionZ(): IAudioParam {\n            return this._positionZ;\n        }\n\n        get refDistance(): number {\n            return this._nativePannerNode.refDistance;\n        }\n\n        set refDistance(value) {\n            this._nativePannerNode.refDistance = value;\n        }\n\n        get rolloffFactor(): number {\n            return this._nativePannerNode.rolloffFactor;\n        }\n\n        set rolloffFactor(value) {\n            this._nativePannerNode.rolloffFactor = value;\n        }\n    };\n};\n","import { isNativeAudioNodeFaker } from '../guards/native-audio-node-faker';\nimport { isOwnedByContext } from '../helpers/is-owned-by-context';\nimport { IAudioNode, IMinimalOfflineAudioContext, INativePannerNodeFaker, IOfflineAudioContext, IPannerNode } from '../interfaces';\nimport {\n    TNativeAudioBuffer,\n    TNativeGainNode,\n    TNativeOfflineAudioContext,\n    TNativePannerNode,\n    TPannerNodeRendererFactoryFactory\n} from '../types';\n\nexport const createPannerNodeRendererFactory: TPannerNodeRendererFactoryFactory = (\n    connectAudioParam,\n    createNativeChannelMergerNode,\n    createNativeConstantSourceNode,\n    createNativeGainNode,\n    createNativePannerNode,\n    getNativeAudioNode,\n    nativeOfflineAudioContextConstructor,\n    renderAutomation,\n    renderInputsOfAudioNode,\n    renderNativeOfflineAudioContext\n) => {\n    return <T extends IMinimalOfflineAudioContext | IOfflineAudioContext>() => {\n        const renderedNativeAudioNodes = new WeakMap<TNativeOfflineAudioContext, TNativeGainNode | TNativePannerNode>();\n\n        let renderedBufferPromise: null | Promise<TNativeAudioBuffer> = null;\n\n        const createAudioNode = async (\n            proxy: IPannerNode<T>,\n            nativeOfflineAudioContext: TNativeOfflineAudioContext,\n            trace: readonly IAudioNode<T>[]\n        ) => {\n            let nativeGainNode: null | TNativeGainNode = null;\n            let nativePannerNode = getNativeAudioNode<T, TNativePannerNode>(proxy);\n\n            const commonAudioNodeOptions = {\n                channelCount: nativePannerNode.channelCount,\n                channelCountMode: nativePannerNode.channelCountMode,\n                channelInterpretation: nativePannerNode.channelInterpretation\n            };\n            const commonNativePannerNodeOptions = {\n                ...commonAudioNodeOptions,\n                coneInnerAngle: nativePannerNode.coneInnerAngle,\n                coneOuterAngle: nativePannerNode.coneOuterAngle,\n                coneOuterGain: nativePannerNode.coneOuterGain,\n                distanceModel: nativePannerNode.distanceModel,\n                maxDistance: nativePannerNode.maxDistance,\n                panningModel: nativePannerNode.panningModel,\n                refDistance: nativePannerNode.refDistance,\n                rolloffFactor: nativePannerNode.rolloffFactor\n            };\n\n            // If the initially used nativePannerNode was not constructed on the same OfflineAudioContext it needs to be created again.\n            const nativePannerNodeIsOwnedByContext = isOwnedByContext(nativePannerNode, nativeOfflineAudioContext);\n\n            // Bug #124: Safari does not support modifying the orientation and the position with AudioParams.\n            if ('bufferSize' in nativePannerNode) {\n                nativeGainNode = createNativeGainNode(nativeOfflineAudioContext, { ...commonAudioNodeOptions, gain: 1 });\n            } else if (!nativePannerNodeIsOwnedByContext) {\n                const options = {\n                    ...commonNativePannerNodeOptions,\n                    orientationX: nativePannerNode.orientationX.value,\n                    orientationY: nativePannerNode.orientationY.value,\n                    orientationZ: nativePannerNode.orientationZ.value,\n                    positionX: nativePannerNode.positionX.value,\n                    positionY: nativePannerNode.positionY.value,\n                    positionZ: nativePannerNode.positionZ.value\n                };\n\n                nativePannerNode = createNativePannerNode(nativeOfflineAudioContext, options);\n            }\n\n            renderedNativeAudioNodes.set(nativeOfflineAudioContext, nativeGainNode === null ? nativePannerNode : nativeGainNode);\n\n            if (nativeGainNode !== null) {\n                if (renderedBufferPromise === null) {\n                    if (nativeOfflineAudioContextConstructor === null) {\n                        throw new Error('Missing the native OfflineAudioContext constructor.');\n                    }\n\n                    const partialOfflineAudioContext = new nativeOfflineAudioContextConstructor(\n                        6,\n                        // Bug #17: Safari does not yet expose the length.\n                        proxy.context.length,\n                        nativeOfflineAudioContext.sampleRate\n                    );\n                    const nativeChannelMergerNode = createNativeChannelMergerNode(partialOfflineAudioContext, {\n                        channelCount: 1,\n                        channelCountMode: 'explicit',\n                        channelInterpretation: 'speakers',\n                        numberOfInputs: 6\n                    });\n                    nativeChannelMergerNode.connect(partialOfflineAudioContext.destination);\n\n                    renderedBufferPromise = (async () => {\n                        const nativeConstantSourceNodes = await Promise.all(\n                            [\n                                proxy.orientationX,\n                                proxy.orientationY,\n                                proxy.orientationZ,\n                                proxy.positionX,\n                                proxy.positionY,\n                                proxy.positionZ\n                            ].map(async (audioParam, index) => {\n                                const nativeConstantSourceNode = createNativeConstantSourceNode(partialOfflineAudioContext, {\n                                    channelCount: 1,\n                                    channelCountMode: 'explicit',\n                                    channelInterpretation: 'discrete',\n                                    offset: index === 0 ? 1 : 0\n                                });\n\n                                await renderAutomation(partialOfflineAudioContext, audioParam, nativeConstantSourceNode.offset, trace);\n\n                                return nativeConstantSourceNode;\n                            })\n                        );\n\n                        for (let i = 0; i < 6; i += 1) {\n                            nativeConstantSourceNodes[i].connect(nativeChannelMergerNode, 0, i);\n                            nativeConstantSourceNodes[i].start(0);\n                        }\n\n                        return renderNativeOfflineAudioContext(partialOfflineAudioContext);\n                    })();\n                }\n\n                const renderedBuffer = await renderedBufferPromise;\n                const inputGainNode = createNativeGainNode(nativeOfflineAudioContext, { ...commonAudioNodeOptions, gain: 1 });\n\n                await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, inputGainNode, trace);\n\n                const channelDatas: Float32Array[] = [];\n\n                for (let i = 0; i < renderedBuffer.numberOfChannels; i += 1) {\n                    channelDatas.push(renderedBuffer.getChannelData(i));\n                }\n\n                let lastOrientation = [channelDatas[0][0], channelDatas[1][0], channelDatas[2][0]];\n                let lastPosition = [channelDatas[3][0], channelDatas[4][0], channelDatas[5][0]];\n                let gateGainNode = createNativeGainNode(nativeOfflineAudioContext, { ...commonAudioNodeOptions, gain: 1 });\n                let partialPannerNode = createNativePannerNode(nativeOfflineAudioContext, {\n                    ...commonNativePannerNodeOptions,\n                    orientationX: lastOrientation[0],\n                    orientationY: lastOrientation[1],\n                    orientationZ: lastOrientation[2],\n                    positionX: lastPosition[0],\n                    positionY: lastPosition[1],\n                    positionZ: lastPosition[2]\n                });\n\n                inputGainNode.connect(gateGainNode).connect((<INativePannerNodeFaker>partialPannerNode).inputs[0]);\n                partialPannerNode.connect(nativeGainNode);\n\n                for (let i = 128; i < renderedBuffer.length; i += 128) {\n                    const orientation: [number, number, number] = [channelDatas[0][i], channelDatas[1][i], channelDatas[2][i]];\n                    const positon: [number, number, number] = [channelDatas[3][i], channelDatas[4][i], channelDatas[5][i]];\n\n                    if (\n                        orientation.some((value, index) => value !== lastOrientation[index]) ||\n                        positon.some((value, index) => value !== lastPosition[index])\n                    ) {\n                        lastOrientation = orientation;\n                        lastPosition = positon;\n\n                        const currentTime = i / nativeOfflineAudioContext.sampleRate;\n\n                        gateGainNode.gain.setValueAtTime(0, currentTime);\n\n                        gateGainNode = createNativeGainNode(nativeOfflineAudioContext, { ...commonAudioNodeOptions, gain: 0 });\n                        partialPannerNode = createNativePannerNode(nativeOfflineAudioContext, {\n                            ...commonNativePannerNodeOptions,\n                            orientationX: lastOrientation[0],\n                            orientationY: lastOrientation[1],\n                            orientationZ: lastOrientation[2],\n                            positionX: lastPosition[0],\n                            positionY: lastPosition[1],\n                            positionZ: lastPosition[2]\n                        });\n\n                        gateGainNode.gain.setValueAtTime(1, currentTime);\n\n                        inputGainNode.connect(gateGainNode).connect((<INativePannerNodeFaker>partialPannerNode).inputs[0]);\n                        partialPannerNode.connect(nativeGainNode);\n                    }\n                }\n\n                return nativeGainNode;\n            }\n\n            if (!nativePannerNodeIsOwnedByContext) {\n                await renderAutomation(nativeOfflineAudioContext, proxy.orientationX, nativePannerNode.orientationX, trace);\n                await renderAutomation(nativeOfflineAudioContext, proxy.orientationY, nativePannerNode.orientationY, trace);\n                await renderAutomation(nativeOfflineAudioContext, proxy.orientationZ, nativePannerNode.orientationZ, trace);\n                await renderAutomation(nativeOfflineAudioContext, proxy.positionX, nativePannerNode.positionX, trace);\n                await renderAutomation(nativeOfflineAudioContext, proxy.positionY, nativePannerNode.positionY, trace);\n                await renderAutomation(nativeOfflineAudioContext, proxy.positionZ, nativePannerNode.positionZ, trace);\n            } else {\n                await connectAudioParam(nativeOfflineAudioContext, proxy.orientationX, nativePannerNode.orientationX, trace);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.orientationY, nativePannerNode.orientationY, trace);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.orientationZ, nativePannerNode.orientationZ, trace);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.positionX, nativePannerNode.positionX, trace);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.positionY, nativePannerNode.positionY, trace);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.positionZ, nativePannerNode.positionZ, trace);\n            }\n\n            if (isNativeAudioNodeFaker(nativePannerNode)) {\n                await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativePannerNode.inputs[0], trace);\n            } else {\n                await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativePannerNode, trace);\n            }\n\n            return nativePannerNode;\n        };\n\n        return {\n            render(\n                proxy: IPannerNode<T>,\n                nativeOfflineAudioContext: TNativeOfflineAudioContext,\n                trace: readonly IAudioNode<T>[]\n            ): Promise<TNativeGainNode | TNativePannerNode> {\n                const renderedNativeGainNodeOrNativePannerNode = renderedNativeAudioNodes.get(nativeOfflineAudioContext);\n\n                if (renderedNativeGainNodeOrNativePannerNode !== undefined) {\n                    return Promise.resolve(renderedNativeGainNodeOrNativePannerNode);\n                }\n\n                return createAudioNode(proxy, nativeOfflineAudioContext, trace);\n            }\n        };\n    };\n};\n","import { IPeriodicWave, IPeriodicWaveOptions } from '../interfaces';\nimport { TContext, TPeriodicWaveConstructorFactory } from '../types';\n\nconst DEFAULT_OPTIONS = {\n    disableNormalization: false\n} as const;\n\nexport const createPeriodicWaveConstructor: TPeriodicWaveConstructorFactory = (\n    createNativePeriodicWave,\n    getNativeContext,\n    periodicWaveStore,\n    sanitizePeriodicWaveOptions\n) => {\n    return class PeriodicWave<T extends TContext> implements IPeriodicWave {\n        constructor(context: T, options?: Partial<IPeriodicWaveOptions>) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = sanitizePeriodicWaveOptions({ ...DEFAULT_OPTIONS, ...options });\n            const periodicWave = createNativePeriodicWave(nativeContext, mergedOptions);\n\n            periodicWaveStore.add(periodicWave);\n\n            // This does violate all good pratices but it is used here to simplify the handling of periodic waves.\n            return periodicWave;\n        }\n\n        public static [Symbol.hasInstance](instance: unknown): boolean {\n            return (\n                (instance !== null && typeof instance === 'object' && Object.getPrototypeOf(instance) === PeriodicWave.prototype) ||\n                periodicWaveStore.has(<any>instance)\n            );\n        }\n    };\n};\n","import { TRenderAutomationFactory } from '../types';\n\nexport const createRenderAutomation: TRenderAutomationFactory = (getAudioParamRenderer, renderInputsOfAudioParam) => {\n    return (nativeOfflineAudioContext, audioParam, nativeAudioParam, trace) => {\n        const audioParamRenderer = getAudioParamRenderer(audioParam);\n\n        audioParamRenderer.replay(nativeAudioParam);\n\n        return renderInputsOfAudioParam(audioParam, nativeOfflineAudioContext, nativeAudioParam, trace);\n    };\n};\n","import { IAudioDestinationNode } from '../interfaces';\nimport { TRenderInputsOfAudioNodeFactory } from '../types';\n\nexport const createRenderInputsOfAudioNode: TRenderInputsOfAudioNodeFactory = (\n    getAudioNodeConnections,\n    getAudioNodeRenderer,\n    isPartOfACycle\n) => {\n    return async (audioNode, nativeOfflineAudioContext, nativeAudioNode, trace) => {\n        const audioNodeConnections = getAudioNodeConnections(audioNode);\n        const nextTrace = [...trace, audioNode];\n\n        await Promise.all(\n            audioNodeConnections.activeInputs\n                .map((connections, input) =>\n                    Array.from(connections)\n                        .filter(([source]) => !nextTrace.includes(source))\n                        .map(async ([source, output]) => {\n                            const audioNodeRenderer = getAudioNodeRenderer(source);\n                            const renderedNativeAudioNode = await audioNodeRenderer.render(source, nativeOfflineAudioContext, nextTrace);\n                            const destination = <IAudioDestinationNode<typeof audioNode.context>>audioNode.context.destination;\n\n                            if (!isPartOfACycle(source) && (audioNode !== destination || !isPartOfACycle(audioNode))) {\n                                renderedNativeAudioNode.connect(nativeAudioNode, output, input);\n                            }\n                        })\n                )\n                .reduce((allRenderingPromises, renderingPromises) => [...allRenderingPromises, ...renderingPromises], [])\n        );\n    };\n};\n","import { IAudioNode, IAudioParam, IMinimalOfflineAudioContext, IOfflineAudioContext } from '../interfaces';\nimport { TNativeAudioParam, TNativeOfflineAudioContext, TRenderInputsOfAudioParamFactory } from '../types';\n\nexport const createRenderInputsOfAudioParam: TRenderInputsOfAudioParamFactory = (\n    getAudioNodeRenderer,\n    getAudioParamConnections,\n    isPartOfACycle\n) => {\n    return async <T extends IMinimalOfflineAudioContext | IOfflineAudioContext>(\n        audioParam: IAudioParam,\n        nativeOfflineAudioContext: TNativeOfflineAudioContext,\n        nativeAudioParam: TNativeAudioParam,\n        trace: readonly IAudioNode<T>[]\n    ): Promise<void> => {\n        const audioParamConnections = getAudioParamConnections<T>(audioParam);\n\n        await Promise.all(\n            Array.from(audioParamConnections.activeInputs).map(async ([source, output]) => {\n                const audioNodeRenderer = getAudioNodeRenderer(source);\n                const renderedNativeAudioNode = await audioNodeRenderer.render(source, nativeOfflineAudioContext, trace);\n\n                if (!isPartOfACycle(source)) {\n                    renderedNativeAudioNode.connect(nativeAudioParam, output);\n                }\n            })\n        );\n    };\n};\n","import { testPromiseSupport } from '../helpers/test-promise-support';\nimport { IOfflineAudioCompletionEvent } from '../interfaces';\nimport { TNativeAudioBuffer, TRenderNativeOfflineAudioContextFactory } from '../types';\n\nexport const createRenderNativeOfflineAudioContext: TRenderNativeOfflineAudioContextFactory = (\n    cacheTestResult,\n    createNativeGainNode,\n    createNativeScriptProcessorNode,\n    testOfflineAudioContextCurrentTimeSupport\n) => {\n    return (nativeOfflineAudioContext) => {\n        // Bug #21: Safari does not support promises yet.\n        if (cacheTestResult(testPromiseSupport, () => testPromiseSupport(nativeOfflineAudioContext))) {\n            // Bug #158: Chrome and Edge do not advance currentTime if it is not accessed while rendering the audio.\n            return Promise.resolve(\n                cacheTestResult(testOfflineAudioContextCurrentTimeSupport, testOfflineAudioContextCurrentTimeSupport)\n            ).then((isOfflineAudioContextCurrentTimeSupported) => {\n                if (!isOfflineAudioContextCurrentTimeSupported) {\n                    const scriptProcessorNode = createNativeScriptProcessorNode(nativeOfflineAudioContext, 512, 0, 1);\n\n                    nativeOfflineAudioContext.oncomplete = () => {\n                        scriptProcessorNode.onaudioprocess = null; // tslint:disable-line:deprecation\n                        scriptProcessorNode.disconnect();\n                    };\n                    scriptProcessorNode.onaudioprocess = () => nativeOfflineAudioContext.currentTime; // tslint:disable-line:deprecation\n\n                    scriptProcessorNode.connect(nativeOfflineAudioContext.destination);\n                }\n\n                return nativeOfflineAudioContext.startRendering();\n            });\n        }\n\n        return new Promise<TNativeAudioBuffer>((resolve) => {\n            // Bug #48: Safari does not render an OfflineAudioContext without any connected node.\n            const gainNode = createNativeGainNode(nativeOfflineAudioContext, {\n                channelCount: 1,\n                channelCountMode: 'explicit',\n                channelInterpretation: 'discrete',\n                gain: 0\n            });\n\n            nativeOfflineAudioContext.oncomplete = (event: IOfflineAudioCompletionEvent) => {\n                gainNode.disconnect();\n\n                resolve(event.renderedBuffer);\n            };\n\n            gainNode.connect(nativeOfflineAudioContext.destination);\n\n            nativeOfflineAudioContext.startRendering();\n        });\n    };\n};\n","import { TSetActiveAudioWorkletNodeInputsFactory } from '../types';\n\nexport const createSetActiveAudioWorkletNodeInputs: TSetActiveAudioWorkletNodeInputsFactory = (activeAudioWorkletNodeInputsStore) => {\n    return (nativeAudioWorkletNode, activeInputs) => {\n        activeAudioWorkletNodeInputsStore.set(nativeAudioWorkletNode, activeInputs);\n    };\n};\n","import { TSetAudioNodeTailTimeFactory } from '../types';\n\nexport const createSetAudioNodeTailTime: TSetAudioNodeTailTimeFactory = (audioNodeTailTimeStore) => {\n    return (audioNode, tailTime) => audioNodeTailTimeStore.set(audioNode, tailTime);\n};\n","import { wrapAudioBufferGetChannelDataMethod } from '../helpers/wrap-audio-buffer-get-channel-data-method';\nimport { TStartRenderingFactory } from '../types';\n\nexport const createStartRendering: TStartRenderingFactory = (\n    audioBufferStore,\n    cacheTestResult,\n    getAudioNodeRenderer,\n    getUnrenderedAudioWorkletNodes,\n    renderNativeOfflineAudioContext,\n    testAudioBufferCopyChannelMethodsOutOfBoundsSupport,\n    wrapAudioBufferCopyChannelMethods,\n    wrapAudioBufferCopyChannelMethodsOutOfBounds\n) => {\n    const trace = [] as const;\n\n    return (destination, nativeOfflineAudioContext) =>\n        getAudioNodeRenderer(destination)\n            .render(destination, nativeOfflineAudioContext, trace)\n            /*\n             * Bug #86 & #87: Invoking the renderer of an AudioWorkletNode might be necessary if it has no direct or indirect connection to the\n             * destination.\n             */\n            .then(() =>\n                Promise.all(\n                    Array.from(getUnrenderedAudioWorkletNodes(nativeOfflineAudioContext)).map((audioWorkletNode) =>\n                        getAudioNodeRenderer(audioWorkletNode).render(audioWorkletNode, nativeOfflineAudioContext, trace)\n                    )\n                )\n            )\n            .then(() => renderNativeOfflineAudioContext(nativeOfflineAudioContext))\n            .then((audioBuffer) => {\n                // Bug #5: Safari does not support copyFromChannel() and copyToChannel().\n                // Bug #100: Safari does throw a wrong error when calling getChannelData() with an out-of-bounds value.\n                if (typeof audioBuffer.copyFromChannel !== 'function') {\n                    wrapAudioBufferCopyChannelMethods(audioBuffer);\n                    wrapAudioBufferGetChannelDataMethod(audioBuffer);\n                    // Bug #157: Firefox does not allow the bufferOffset to be out-of-bounds.\n                } else if (\n                    !cacheTestResult(testAudioBufferCopyChannelMethodsOutOfBoundsSupport, () =>\n                        testAudioBufferCopyChannelMethodsOutOfBoundsSupport(audioBuffer)\n                    )\n                ) {\n                    wrapAudioBufferCopyChannelMethodsOutOfBounds(audioBuffer);\n                }\n\n                audioBufferStore.add(audioBuffer);\n\n                return audioBuffer;\n            });\n};\n","import { IAudioParam, IStereoPannerNode, IStereoPannerOptions } from '../interfaces';\nimport { TAudioNodeRenderer, TContext, TStereoPannerNodeConstructorFactory } from '../types';\n\nconst DEFAULT_OPTIONS = {\n    channelCount: 2,\n    /*\n     * Bug #105: The channelCountMode should be 'clamped-max' according to the spec but is set to 'explicit' to achieve consistent\n     * behavior.\n     */\n    channelCountMode: 'explicit',\n    channelInterpretation: 'speakers',\n    pan: 0\n} as const;\n\nexport const createStereoPannerNodeConstructor: TStereoPannerNodeConstructorFactory = (\n    audioNodeConstructor,\n    createAudioParam,\n    createNativeStereoPannerNode,\n    createStereoPannerNodeRenderer,\n    getNativeContext,\n    isNativeOfflineAudioContext\n) => {\n    return class StereoPannerNode<T extends TContext> extends audioNodeConstructor<T> implements IStereoPannerNode<T> {\n        private _pan: IAudioParam;\n\n        constructor(context: T, options?: Partial<IStereoPannerOptions>) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeStereoPannerNode = createNativeStereoPannerNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const stereoPannerNodeRenderer = <TAudioNodeRenderer<T, this>>(isOffline ? createStereoPannerNodeRenderer() : null);\n\n            super(context, false, nativeStereoPannerNode, stereoPannerNodeRenderer);\n\n            this._pan = createAudioParam(this, isOffline, nativeStereoPannerNode.pan);\n        }\n\n        get pan(): IAudioParam {\n            return this._pan;\n        }\n    };\n};\n","import { isNativeAudioNodeFaker } from '../guards/native-audio-node-faker';\nimport { isOwnedByContext } from '../helpers/is-owned-by-context';\nimport { IAudioNode, IMinimalOfflineAudioContext, IOfflineAudioContext, IStereoPannerNode } from '../interfaces';\nimport { TNativeOfflineAudioContext, TNativeStereoPannerNode, TStereoPannerNodeRendererFactoryFactory } from '../types';\n\nexport const createStereoPannerNodeRendererFactory: TStereoPannerNodeRendererFactoryFactory = (\n    connectAudioParam,\n    createNativeStereoPannerNode,\n    getNativeAudioNode,\n    renderAutomation,\n    renderInputsOfAudioNode\n) => {\n    return <T extends IMinimalOfflineAudioContext | IOfflineAudioContext>() => {\n        const renderedNativeStereoPannerNodes = new WeakMap<TNativeOfflineAudioContext, TNativeStereoPannerNode>();\n\n        const createStereoPannerNode = async (\n            proxy: IStereoPannerNode<T>,\n            nativeOfflineAudioContext: TNativeOfflineAudioContext,\n            trace: readonly IAudioNode<T>[]\n        ) => {\n            let nativeStereoPannerNode = getNativeAudioNode<T, TNativeStereoPannerNode>(proxy);\n\n            /*\n             * If the initially used nativeStereoPannerNode was not constructed on the same OfflineAudioContext it needs to be created\n             * again.\n             */\n            const nativeStereoPannerNodeIsOwnedByContext = isOwnedByContext(nativeStereoPannerNode, nativeOfflineAudioContext);\n\n            if (!nativeStereoPannerNodeIsOwnedByContext) {\n                const options = {\n                    channelCount: nativeStereoPannerNode.channelCount,\n                    channelCountMode: nativeStereoPannerNode.channelCountMode,\n                    channelInterpretation: nativeStereoPannerNode.channelInterpretation,\n                    pan: nativeStereoPannerNode.pan.value\n                };\n\n                nativeStereoPannerNode = createNativeStereoPannerNode(nativeOfflineAudioContext, options);\n            }\n\n            renderedNativeStereoPannerNodes.set(nativeOfflineAudioContext, nativeStereoPannerNode);\n\n            if (!nativeStereoPannerNodeIsOwnedByContext) {\n                await renderAutomation(nativeOfflineAudioContext, proxy.pan, nativeStereoPannerNode.pan, trace);\n            } else {\n                await connectAudioParam(nativeOfflineAudioContext, proxy.pan, nativeStereoPannerNode.pan, trace);\n            }\n\n            if (isNativeAudioNodeFaker(nativeStereoPannerNode)) {\n                await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeStereoPannerNode.inputs[0], trace);\n            } else {\n                await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeStereoPannerNode, trace);\n            }\n\n            return nativeStereoPannerNode;\n        };\n\n        return {\n            render(\n                proxy: IStereoPannerNode<T>,\n                nativeOfflineAudioContext: TNativeOfflineAudioContext,\n                trace: readonly IAudioNode<T>[]\n            ): Promise<TNativeStereoPannerNode> {\n                const renderedNativeStereoPannerNode = renderedNativeStereoPannerNodes.get(nativeOfflineAudioContext);\n\n                if (renderedNativeStereoPannerNode !== undefined) {\n                    return Promise.resolve(renderedNativeStereoPannerNode);\n                }\n\n                return createStereoPannerNode(proxy, nativeOfflineAudioContext, trace);\n            }\n        };\n    };\n};\n","import { TTestAudioBufferConstructorSupportFactory } from '../types';\n\n// Bug #33: Safari exposes an AudioBuffer but it can't be used as a constructor.\nexport const createTestAudioBufferConstructorSupport: TTestAudioBufferConstructorSupportFactory = (nativeAudioBufferConstructor) => {\n    return () => {\n        if (nativeAudioBufferConstructor === null) {\n            return false;\n        }\n\n        try {\n            new nativeAudioBufferConstructor({ length: 1, sampleRate: 44100 }); // tslint:disable-line:no-unused-expression\n        } catch {\n            return false;\n        }\n\n        return true;\n    };\n};\n","import { TTestAudioBufferCopyChannelMethodsSubarraySupportFactory } from '../types';\n\n/*\n * Firefox up to version 67 didn't fully support the copyFromChannel() and copyToChannel() methods. Therefore testing one of those methods\n * is enough to know if the other one is supported as well.\n */\nexport const createTestAudioBufferCopyChannelMethodsSubarraySupport: TTestAudioBufferCopyChannelMethodsSubarraySupportFactory = (\n    nativeOfflineAudioContextConstructor\n) => {\n    return () => {\n        if (nativeOfflineAudioContextConstructor === null) {\n            return false;\n        }\n\n        const nativeOfflineAudioContext = new nativeOfflineAudioContextConstructor(1, 1, 44100);\n        const nativeAudioBuffer = nativeOfflineAudioContext.createBuffer(1, 1, 44100);\n\n        // Bug #5: Safari does not support copyFromChannel() and copyToChannel().\n        if (nativeAudioBuffer.copyToChannel === undefined) {\n            return true;\n        }\n\n        const source = new Float32Array(2);\n\n        try {\n            nativeAudioBuffer.copyFromChannel(source, 0, 0);\n        } catch {\n            return false;\n        }\n\n        return true;\n    };\n};\n","import { TTestAudioContextCloseMethodSupportFactory } from '../types';\n\nexport const createTestAudioContextCloseMethodSupport: TTestAudioContextCloseMethodSupportFactory = (nativeAudioContextConstructor) => {\n    return () => {\n        if (nativeAudioContextConstructor === null) {\n            return false;\n        }\n\n        // Try to check the prototype before constructing the AudioContext.\n        if (nativeAudioContextConstructor.prototype !== undefined && nativeAudioContextConstructor.prototype.close !== undefined) {\n            return true;\n        }\n\n        const audioContext = new nativeAudioContextConstructor();\n\n        const isAudioContextClosable = audioContext.close !== undefined;\n\n        try {\n            audioContext.close();\n        } catch {\n            // Ignore errors.\n        }\n\n        return isAudioContextClosable;\n    };\n};\n","import { TTestAudioContextDecodeAudioDataMethodTypeErrorSupportFactory } from '../types';\n\n/**\n * Edge up to version 14, Firefox up to version 52, Safari up to version 9 and maybe other browsers\n * did not refuse to decode invalid parameters with a TypeError.\n */\nexport const createTestAudioContextDecodeAudioDataMethodTypeErrorSupport: TTestAudioContextDecodeAudioDataMethodTypeErrorSupportFactory = (\n    nativeOfflineAudioContextConstructor\n) => {\n    return () => {\n        if (nativeOfflineAudioContextConstructor === null) {\n            return Promise.resolve(false);\n        }\n\n        const offlineAudioContext = new nativeOfflineAudioContextConstructor(1, 1, 44100);\n\n        // Bug #21: Safari does not support promises yet.\n        return new Promise((resolve) => {\n            let isPending = true;\n\n            const resolvePromise = (err: Error) => {\n                if (isPending) {\n                    isPending = false;\n\n                    offlineAudioContext.startRendering();\n\n                    resolve(err instanceof TypeError);\n                }\n            };\n\n            let promise;\n\n            // Bug #26: Safari throws a synchronous error.\n            try {\n                promise = offlineAudioContext\n                    // Bug #1: Safari requires a successCallback.\n                    .decodeAudioData(\n                        <any>null,\n                        () => {\n                            // Ignore the success callback.\n                        },\n                        resolvePromise\n                    );\n            } catch (err) {\n                resolvePromise(err);\n            }\n\n            // Bug #21: Safari does not support promises yet.\n            if (promise !== undefined) {\n                // Bug #6: Chrome, Edge, Firefox and Opera do not call the errorCallback.\n                promise.catch(resolvePromise);\n            }\n        });\n    };\n};\n","import { TTestAudioContextOptionsSupportFactory } from '../types';\n\nexport const createTestAudioContextOptionsSupport: TTestAudioContextOptionsSupportFactory = (nativeAudioContextConstructor) => {\n    return () => {\n        if (nativeAudioContextConstructor === null) {\n            return false;\n        }\n\n        let audioContext;\n\n        try {\n            audioContext = new nativeAudioContextConstructor({ latencyHint: 'balanced' });\n        } catch {\n            return false;\n        }\n\n        audioContext.close();\n\n        return true;\n    };\n};\n","import { TTestAudioNodeConnectMethodSupportFactory } from '../types';\n\n// Safari up to version 12.0 (but not v12.1) didn't return the destination in case it was an AudioNode.\nexport const createTestAudioNodeConnectMethodSupport: TTestAudioNodeConnectMethodSupportFactory = (\n    nativeOfflineAudioContextConstructor\n) => {\n    return () => {\n        if (nativeOfflineAudioContextConstructor === null) {\n            return false;\n        }\n\n        const nativeOfflineAudioContext = new nativeOfflineAudioContextConstructor(1, 1, 44100);\n        const nativeGainNode = nativeOfflineAudioContext.createGain();\n        const isSupported = nativeGainNode.connect(nativeGainNode) === nativeGainNode;\n\n        nativeGainNode.disconnect(nativeGainNode);\n\n        return isSupported;\n    };\n};\n","import { TTestAudioWorkletProcessorNoOutputsSupportFactory } from '../types';\n\n/**\n * Chrome version 66 and 67 did not call the process() function of an AudioWorkletProcessor if it had no outputs. AudioWorklet support was\n * enabled by default in version 66.\n */\nexport const createTestAudioWorkletProcessorNoOutputsSupport: TTestAudioWorkletProcessorNoOutputsSupportFactory = (\n    nativeAudioWorkletNodeConstructor,\n    nativeOfflineAudioContextConstructor\n) => {\n    return async () => {\n        // Bug #61: If there is no native AudioWorkletNode it gets faked and therefore it is no problem if the it doesn't exist.\n        if (nativeAudioWorkletNodeConstructor === null) {\n            return true;\n        }\n\n        if (nativeOfflineAudioContextConstructor === null) {\n            return false;\n        }\n\n        const blob = new Blob(['class A extends AudioWorkletProcessor{process(){this.port.postMessage(0)}}registerProcessor(\"a\",A)'], {\n            type: 'application/javascript; charset=utf-8'\n        });\n        const offlineAudioContext = new nativeOfflineAudioContextConstructor(1, 128, 8000);\n        const url = URL.createObjectURL(blob);\n\n        let isCallingProcess = false;\n\n        try {\n            await offlineAudioContext.audioWorklet.addModule(url);\n\n            const audioWorkletNode = new nativeAudioWorkletNodeConstructor(offlineAudioContext, 'a', { numberOfOutputs: 0 });\n            const oscillator = offlineAudioContext.createOscillator();\n\n            audioWorkletNode.port.onmessage = () => (isCallingProcess = true);\n\n            oscillator.connect(audioWorkletNode);\n            oscillator.start(0);\n\n            await offlineAudioContext.startRendering();\n\n            if (!isCallingProcess) {\n                await new Promise((resolve) => setTimeout(resolve, 5));\n            }\n        } catch {\n            // Ignore errors.\n        } finally {\n            URL.revokeObjectURL(url);\n        }\n\n        return isCallingProcess;\n    };\n};\n","import { TTestAudioWorkletProcessorPostMessageSupportFactory } from '../types';\n\n// Bug #179: Firefox does not allow to transfer any buffer which has been passed to the process() method as an argument.\nexport const createTestAudioWorkletProcessorPostMessageSupport: TTestAudioWorkletProcessorPostMessageSupportFactory = (\n    nativeAudioWorkletNodeConstructor,\n    nativeOfflineAudioContextConstructor\n) => {\n    return async () => {\n        // Bug #61: If there is no native AudioWorkletNode it gets faked and therefore it is no problem if the it doesn't exist.\n        if (nativeAudioWorkletNodeConstructor === null) {\n            return true;\n        }\n\n        if (nativeOfflineAudioContextConstructor === null) {\n            return false;\n        }\n\n        const blob = new Blob(\n            ['class A extends AudioWorkletProcessor{process(i){this.port.postMessage(i,[i[0][0].buffer])}}registerProcessor(\"a\",A)'],\n            {\n                type: 'application/javascript; charset=utf-8'\n            }\n        );\n        const offlineAudioContext = new nativeOfflineAudioContextConstructor(1, 128, 8000);\n        const url = URL.createObjectURL(blob);\n\n        let isEmittingMessageEvents = false;\n        let isEmittingProcessorErrorEvents = false;\n\n        try {\n            await offlineAudioContext.audioWorklet.addModule(url);\n\n            const audioWorkletNode = new nativeAudioWorkletNodeConstructor(offlineAudioContext, 'a', { numberOfOutputs: 0 });\n            const oscillator = offlineAudioContext.createOscillator();\n\n            audioWorkletNode.port.onmessage = () => (isEmittingMessageEvents = true);\n            audioWorkletNode.onprocessorerror = () => (isEmittingProcessorErrorEvents = true);\n\n            oscillator.connect(audioWorkletNode);\n\n            await offlineAudioContext.startRendering();\n        } catch {\n            // Ignore errors.\n        } finally {\n            URL.revokeObjectURL(url);\n        }\n\n        return isEmittingMessageEvents && !isEmittingProcessorErrorEvents;\n    };\n};\n","import { TTestChannelMergerNodeChannelCountSupportFactory } from '../types';\n\n/**\n * Firefox up to version 69 did not throw an error when setting a different channelCount or channelCountMode.\n */\nexport const createTestChannelMergerNodeChannelCountSupport: TTestChannelMergerNodeChannelCountSupportFactory = (\n    nativeOfflineAudioContextConstructor\n) => {\n    return () => {\n        if (nativeOfflineAudioContextConstructor === null) {\n            return false;\n        }\n\n        const offlineAudioContext = new nativeOfflineAudioContextConstructor(1, 1, 44100);\n        const nativeChannelMergerNode = offlineAudioContext.createChannelMerger();\n\n        /**\n         * Bug #15: Safari does not return the default properties. It still needs to be patched. This test is supposed to test the support\n         * in other browsers.\n         */\n        if (nativeChannelMergerNode.channelCountMode === 'max') {\n            return true;\n        }\n\n        try {\n            nativeChannelMergerNode.channelCount = 2;\n        } catch {\n            return true;\n        }\n\n        return false;\n    };\n};\n","import { TTestConstantSourceNodeAccurateSchedulingSupportFactory } from '../types';\n\nexport const createTestConstantSourceNodeAccurateSchedulingSupport: TTestConstantSourceNodeAccurateSchedulingSupportFactory = (\n    nativeOfflineAudioContextConstructor\n) => {\n    return () => {\n        if (nativeOfflineAudioContextConstructor === null) {\n            return false;\n        }\n\n        const nativeOfflineAudioContext = new nativeOfflineAudioContextConstructor(1, 1, 44100);\n\n        // Bug #62: Safari does not support ConstantSourceNodes.\n        if (nativeOfflineAudioContext.createConstantSource === undefined) {\n            return true;\n        }\n\n        const nativeConstantSourceNode = nativeOfflineAudioContext.createConstantSource();\n\n        /*\n         * @todo This is using bug #75 to detect bug #70. That works because both bugs were unique to\n         * the implementation of Firefox right now, but it could probably be done in a better way.\n         */\n        return nativeConstantSourceNode.offset.maxValue !== Number.POSITIVE_INFINITY;\n    };\n};\n","import { TTestConvolverNodeBufferReassignabilitySupportFactory } from '../types';\n\n// Opera up to version 57 did not allow to reassign the buffer of a ConvolverNode.\nexport const createTestConvolverNodeBufferReassignabilitySupport: TTestConvolverNodeBufferReassignabilitySupportFactory = (\n    nativeOfflineAudioContextConstructor\n) => {\n    return () => {\n        if (nativeOfflineAudioContextConstructor === null) {\n            return false;\n        }\n\n        const offlineAudioContext = new nativeOfflineAudioContextConstructor(1, 1, 44100);\n        const nativeConvolverNode = offlineAudioContext.createConvolver();\n\n        nativeConvolverNode.buffer = offlineAudioContext.createBuffer(1, 1, offlineAudioContext.sampleRate);\n\n        try {\n            nativeConvolverNode.buffer = offlineAudioContext.createBuffer(1, 1, offlineAudioContext.sampleRate);\n        } catch {\n            return false;\n        }\n\n        return true;\n    };\n};\n","import { TTestConvolverNodeChannelCountSupportFactory } from '../types';\n\n// Chrome up to version v80, Edge up to version v80 and Opera up to version v67 did not allow to set the channelCount property of a ConvolverNode to 1. They also did not allow to set the channelCountMode to 'explicit'.\nexport const createTestConvolverNodeChannelCountSupport: TTestConvolverNodeChannelCountSupportFactory = (\n    nativeOfflineAudioContextConstructor\n) => {\n    return () => {\n        if (nativeOfflineAudioContextConstructor === null) {\n            return false;\n        }\n\n        const offlineAudioContext = new nativeOfflineAudioContextConstructor(1, 1, 44100);\n        const nativeConvolverNode = offlineAudioContext.createConvolver();\n\n        try {\n            nativeConvolverNode.channelCount = 1;\n        } catch {\n            return false;\n        }\n\n        return true;\n    };\n};\n","import { TTestIsSecureContextSupportFactory } from '../types';\n\nexport const createTestIsSecureContextSupport: TTestIsSecureContextSupportFactory = (window) => {\n    return () => window !== null && window.hasOwnProperty('isSecureContext');\n};\n","import { TTestMediaStreamAudioSourceNodeMediaStreamWithoutAudioTrackSupportFactory } from '../types';\n\n// Firefox up to version 68 did not throw an error when creating a MediaStreamAudioSourceNode with a mediaStream that had no audio track.\nexport const createTestMediaStreamAudioSourceNodeMediaStreamWithoutAudioTrackSupport: TTestMediaStreamAudioSourceNodeMediaStreamWithoutAudioTrackSupportFactory = (\n    nativeAudioContextConstructor\n) => {\n    return () => {\n        if (nativeAudioContextConstructor === null) {\n            return false;\n        }\n\n        const audioContext = new nativeAudioContextConstructor();\n\n        try {\n            audioContext.createMediaStreamSource(new MediaStream());\n\n            return false;\n        } catch (err) {\n            return true;\n        }\n    };\n};\n","import { TTestOfflineAudioContextCurrentTimeSupportFactory } from '../types';\n\nexport const createTestOfflineAudioContextCurrentTimeSupport: TTestOfflineAudioContextCurrentTimeSupportFactory = (\n    createNativeGainNode,\n    nativeOfflineAudioContextConstructor\n) => {\n    return () => {\n        if (nativeOfflineAudioContextConstructor === null) {\n            return Promise.resolve(false);\n        }\n\n        const nativeOfflineAudioContext = new nativeOfflineAudioContextConstructor(1, 1, 44100);\n\n        // Bug #48: Safari does not render an OfflineAudioContext without any connected node.\n        const gainNode = createNativeGainNode(nativeOfflineAudioContext, {\n            channelCount: 1,\n            channelCountMode: 'explicit',\n            channelInterpretation: 'discrete',\n            gain: 0\n        });\n\n        // Bug #21: Safari does not support promises yet.\n        return new Promise((resolve) => {\n            nativeOfflineAudioContext.oncomplete = () => {\n                gainNode.disconnect();\n\n                resolve(nativeOfflineAudioContext.currentTime !== 0);\n            };\n            nativeOfflineAudioContext.startRendering();\n        });\n    };\n};\n","import { TTestStereoPannerNodeDefaultValueSupportFactory } from '../types';\n\n/**\n * Firefox up to version 62 did not kick off the processing of the StereoPannerNode if the value of pan was zero.\n */\nexport const createTestStereoPannerNodeDefaultValueSupport: TTestStereoPannerNodeDefaultValueSupportFactory = (\n    nativeOfflineAudioContextConstructor\n) => {\n    return () => {\n        if (nativeOfflineAudioContextConstructor === null) {\n            return Promise.resolve(false);\n        }\n\n        const nativeOfflineAudioContext = new nativeOfflineAudioContextConstructor(1, 1, 44100);\n\n        /*\n         * Bug #105: Safari does not support the StereoPannerNode. Therefore the returned value should normally be false but the faker does\n         * support the tested behaviour.\n         */\n        if (nativeOfflineAudioContext.createStereoPanner === undefined) {\n            return Promise.resolve(true);\n        }\n\n        // Bug #62: Safari does not support ConstantSourceNodes.\n        if (nativeOfflineAudioContext.createConstantSource === undefined) {\n            return Promise.resolve(true);\n        }\n\n        const constantSourceNode = nativeOfflineAudioContext.createConstantSource();\n        const stereoPanner = nativeOfflineAudioContext.createStereoPanner();\n\n        constantSourceNode.channelCount = 1;\n        constantSourceNode.offset.value = 1;\n\n        stereoPanner.channelCount = 1;\n\n        constantSourceNode.start();\n\n        constantSourceNode.connect(stereoPanner).connect(nativeOfflineAudioContext.destination);\n\n        return nativeOfflineAudioContext.startRendering().then((buffer) => buffer.getChannelData(0)[0] !== 1);\n    };\n};\n","import { TUnknownErrorFactory } from '../types';\n\nexport const createUnknownError: TUnknownErrorFactory = () => new DOMException('', 'UnknownError');\n","import { IWaveShaperNode, IWaveShaperOptions } from '../interfaces';\nimport { TAudioNodeRenderer, TContext, TNativeWaveShaperNode, TOverSampleType, TWaveShaperNodeConstructorFactory } from '../types';\n\nconst DEFAULT_OPTIONS = {\n    channelCount: 2,\n    channelCountMode: 'max',\n    channelInterpretation: 'speakers',\n    curve: null,\n    oversample: 'none'\n} as const;\n\nexport const createWaveShaperNodeConstructor: TWaveShaperNodeConstructorFactory = (\n    audioNodeConstructor,\n    createInvalidStateError,\n    createNativeWaveShaperNode,\n    createWaveShaperNodeRenderer,\n    getNativeContext,\n    isNativeOfflineAudioContext,\n    setAudioNodeTailTime\n) => {\n    return class WaveShaperNode<T extends TContext> extends audioNodeConstructor<T> implements IWaveShaperNode<T> {\n        private _isCurveNullified: boolean;\n\n        private _nativeWaveShaperNode: TNativeWaveShaperNode;\n\n        constructor(context: T, options?: Partial<IWaveShaperOptions>) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeWaveShaperNode = createNativeWaveShaperNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const waveShaperNodeRenderer = <TAudioNodeRenderer<T, this>>(isOffline ? createWaveShaperNodeRenderer() : null);\n\n            // @todo Add a mechanism to only switch a WaveShaperNode to active while it is connected.\n            super(context, true, nativeWaveShaperNode, waveShaperNodeRenderer);\n\n            this._isCurveNullified = false;\n            this._nativeWaveShaperNode = nativeWaveShaperNode;\n\n            // @todo Determine a meaningful tail-time instead of just using one second.\n            setAudioNodeTailTime(this, 1);\n        }\n\n        get curve(): null | Float32Array {\n            if (this._isCurveNullified) {\n                return null;\n            }\n\n            return this._nativeWaveShaperNode.curve;\n        }\n\n        set curve(value) {\n            // Bug #103: Safari does not allow to set the curve to null.\n            if (value === null) {\n                this._isCurveNullified = true;\n                this._nativeWaveShaperNode.curve = new Float32Array([0, 0]);\n            } else {\n                // Bug #102: Safari does not throw an InvalidStateError when the curve has less than two samples.\n                // Bug #104: Chrome, Edge and Opera will throw an InvalidAccessError when the curve has less than two samples.\n                if (value.length < 2) {\n                    throw createInvalidStateError();\n                }\n\n                this._isCurveNullified = false;\n                this._nativeWaveShaperNode.curve = value;\n            }\n        }\n\n        get oversample(): TOverSampleType {\n            return this._nativeWaveShaperNode.oversample;\n        }\n\n        set oversample(value) {\n            this._nativeWaveShaperNode.oversample = value;\n        }\n    };\n};\n","import { isNativeAudioNodeFaker } from '../guards/native-audio-node-faker';\nimport { isOwnedByContext } from '../helpers/is-owned-by-context';\nimport { IAudioNode, IMinimalOfflineAudioContext, IOfflineAudioContext, IWaveShaperNode } from '../interfaces';\nimport { TNativeOfflineAudioContext, TNativeWaveShaperNode, TWaveShaperNodeRendererFactoryFactory } from '../types';\n\nexport const createWaveShaperNodeRendererFactory: TWaveShaperNodeRendererFactoryFactory = (\n    createNativeWaveShaperNode,\n    getNativeAudioNode,\n    renderInputsOfAudioNode\n) => {\n    return <T extends IMinimalOfflineAudioContext | IOfflineAudioContext>() => {\n        const renderedNativeWaveShaperNodes = new WeakMap<TNativeOfflineAudioContext, TNativeWaveShaperNode>();\n\n        const createWaveShaperNode = async (\n            proxy: IWaveShaperNode<T>,\n            nativeOfflineAudioContext: TNativeOfflineAudioContext,\n            trace: readonly IAudioNode<T>[]\n        ) => {\n            let nativeWaveShaperNode = getNativeAudioNode<T, TNativeWaveShaperNode>(proxy);\n\n            // If the initially used nativeWaveShaperNode was not constructed on the same OfflineAudioContext it needs to be created again.\n            const nativeWaveShaperNodeIsOwnedByContext = isOwnedByContext(nativeWaveShaperNode, nativeOfflineAudioContext);\n\n            if (!nativeWaveShaperNodeIsOwnedByContext) {\n                const options = {\n                    channelCount: nativeWaveShaperNode.channelCount,\n                    channelCountMode: nativeWaveShaperNode.channelCountMode,\n                    channelInterpretation: nativeWaveShaperNode.channelInterpretation,\n                    curve: nativeWaveShaperNode.curve,\n                    oversample: nativeWaveShaperNode.oversample\n                };\n\n                nativeWaveShaperNode = createNativeWaveShaperNode(nativeOfflineAudioContext, options);\n            }\n\n            renderedNativeWaveShaperNodes.set(nativeOfflineAudioContext, nativeWaveShaperNode);\n\n            if (isNativeAudioNodeFaker(nativeWaveShaperNode)) {\n                await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeWaveShaperNode.inputs[0], trace);\n            } else {\n                await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeWaveShaperNode, trace);\n            }\n\n            return nativeWaveShaperNode;\n        };\n\n        return {\n            render(\n                proxy: IWaveShaperNode<T>,\n                nativeOfflineAudioContext: TNativeOfflineAudioContext,\n                trace: readonly IAudioNode<T>[]\n            ): Promise<TNativeWaveShaperNode> {\n                const renderedNativeWaveShaperNode = renderedNativeWaveShaperNodes.get(nativeOfflineAudioContext);\n\n                if (renderedNativeWaveShaperNode !== undefined) {\n                    return Promise.resolve(renderedNativeWaveShaperNode);\n                }\n\n                return createWaveShaperNode(proxy, nativeOfflineAudioContext, trace);\n            }\n        };\n    };\n};\n","import { TWindow, TWindowFactory } from '../types';\n\nexport const createWindow: TWindowFactory = () => (typeof window === 'undefined' ? null : <TWindow>window);\n","import { TNativeAudioBuffer, TWrapAudioBufferCopyChannelMethodsFactory } from '../types';\n\nexport const createWrapAudioBufferCopyChannelMethods: TWrapAudioBufferCopyChannelMethodsFactory = (\n    convertNumberToUnsignedLong,\n    createIndexSizeError\n) => {\n    return (audioBuffer: TNativeAudioBuffer): void => {\n        audioBuffer.copyFromChannel = (destination, channelNumberAsNumber, bufferOffsetAsNumber = 0) => {\n            const bufferOffset = convertNumberToUnsignedLong(bufferOffsetAsNumber);\n            const channelNumber = convertNumberToUnsignedLong(channelNumberAsNumber);\n\n            if (channelNumber >= audioBuffer.numberOfChannels) {\n                throw createIndexSizeError();\n            }\n\n            const audioBufferLength = audioBuffer.length;\n            const channelData = audioBuffer.getChannelData(channelNumber);\n            const destinationLength = destination.length;\n\n            for (let i = bufferOffset < 0 ? -bufferOffset : 0; i + bufferOffset < audioBufferLength && i < destinationLength; i += 1) {\n                destination[i] = channelData[i + bufferOffset];\n            }\n        };\n\n        audioBuffer.copyToChannel = (source, channelNumberAsNumber, bufferOffsetAsNumber = 0) => {\n            const bufferOffset = convertNumberToUnsignedLong(bufferOffsetAsNumber);\n            const channelNumber = convertNumberToUnsignedLong(channelNumberAsNumber);\n\n            if (channelNumber >= audioBuffer.numberOfChannels) {\n                throw createIndexSizeError();\n            }\n\n            const audioBufferLength = audioBuffer.length;\n            const channelData = audioBuffer.getChannelData(channelNumber);\n            const sourceLength = source.length;\n\n            for (let i = bufferOffset < 0 ? -bufferOffset : 0; i + bufferOffset < audioBufferLength && i < sourceLength; i += 1) {\n                channelData[i + bufferOffset] = source[i];\n            }\n        };\n    };\n};\n","import { TNativeAudioBuffer, TWrapAudioBufferCopyChannelMethodsOutOfBoundsFactory } from '../types';\n\nexport const createWrapAudioBufferCopyChannelMethodsOutOfBounds: TWrapAudioBufferCopyChannelMethodsOutOfBoundsFactory = (\n    convertNumberToUnsignedLong\n) => {\n    return (audioBuffer: TNativeAudioBuffer): void => {\n        audioBuffer.copyFromChannel = ((copyFromChannel) => {\n            return (destination: Float32Array, channelNumberAsNumber: number, bufferOffsetAsNumber = 0) => {\n                const bufferOffset = convertNumberToUnsignedLong(bufferOffsetAsNumber);\n                const channelNumber = convertNumberToUnsignedLong(channelNumberAsNumber);\n\n                if (bufferOffset < audioBuffer.length) {\n                    return copyFromChannel.call(audioBuffer, destination, channelNumber, bufferOffset);\n                }\n            };\n        })(audioBuffer.copyFromChannel);\n\n        audioBuffer.copyToChannel = ((copyToChannel) => {\n            return (source: Float32Array, channelNumberAsNumber: number, bufferOffsetAsNumber = 0) => {\n                const bufferOffset = convertNumberToUnsignedLong(bufferOffsetAsNumber);\n                const channelNumber = convertNumberToUnsignedLong(channelNumberAsNumber);\n\n                if (bufferOffset < audioBuffer.length) {\n                    return copyToChannel.call(audioBuffer, source, channelNumber, bufferOffset);\n                }\n            };\n        })(audioBuffer.copyToChannel);\n    };\n};\n","import { TWrapAudioBufferSourceNodeStopMethodNullifiedBufferFactory } from '../types';\n\nexport const createWrapAudioBufferSourceNodeStopMethodNullifiedBuffer: TWrapAudioBufferSourceNodeStopMethodNullifiedBufferFactory = (\n    overwriteAccessors\n) => {\n    return (nativeAudioBufferSourceNode, nativeContext) => {\n        const nullifiedBuffer = nativeContext.createBuffer(1, 1, 44100);\n\n        if (nativeAudioBufferSourceNode.buffer === null) {\n            nativeAudioBufferSourceNode.buffer = nullifiedBuffer;\n        }\n\n        overwriteAccessors(\n            nativeAudioBufferSourceNode,\n            'buffer',\n            (get) => () => {\n                const value = get.call(nativeAudioBufferSourceNode);\n\n                return value === nullifiedBuffer ? null : value;\n            },\n            (set) => (value) => {\n                return set.call(nativeAudioBufferSourceNode, value === null ? nullifiedBuffer : value);\n            }\n        );\n    };\n};\n","import { TWrapChannelMergerNodeFactory } from '../types';\n\nexport const createWrapChannelMergerNode: TWrapChannelMergerNodeFactory = (createInvalidStateError, monitorConnections) => {\n    return (nativeContext, channelMergerNode) => {\n        // Bug #15: Safari does not return the default properties.\n        channelMergerNode.channelCount = 1;\n        channelMergerNode.channelCountMode = 'explicit';\n\n        // Bug #16: Safari does not throw an error when setting a different channelCount or channelCountMode.\n        Object.defineProperty(channelMergerNode, 'channelCount', {\n            get: () => 1,\n            set: () => {\n                throw createInvalidStateError();\n            }\n        });\n\n        Object.defineProperty(channelMergerNode, 'channelCountMode', {\n            get: () => 'explicit',\n            set: () => {\n                throw createInvalidStateError();\n            }\n        });\n\n        // Bug #20: Safari requires a connection of any kind to treat the input signal correctly.\n        const audioBufferSourceNode = nativeContext.createBufferSource();\n\n        const whenConnected = () => {\n            const length = channelMergerNode.numberOfInputs;\n\n            for (let i = 0; i < length; i += 1) {\n                audioBufferSourceNode.connect(channelMergerNode, 0, i);\n            }\n        };\n        const whenDisconnected = () => audioBufferSourceNode.disconnect(channelMergerNode);\n\n        monitorConnections(channelMergerNode, whenConnected, whenDisconnected);\n    };\n};\n","import { TIsDCCurveFunction } from '../types';\n\nexport const isDCCurve: TIsDCCurveFunction = (curve) => {\n    if (curve === null) {\n        return false;\n    }\n\n    const length = curve.length;\n\n    if (length % 2 !== 0) {\n        return curve[Math.floor(length / 2)] !== 0;\n    }\n\n    return curve[length / 2 - 1] + curve[length / 2] !== 0;\n};\n","import { TOverwriteAccessorsFunction } from '../types';\n\nexport const overwriteAccessors: TOverwriteAccessorsFunction = (object, property, createGetter, createSetter) => {\n    let prototype = Object.getPrototypeOf(object);\n\n    while (!prototype.hasOwnProperty(property)) {\n        prototype = Object.getPrototypeOf(prototype);\n    }\n\n    const { get, set } = <Required<PropertyDescriptor>>Object.getOwnPropertyDescriptor(prototype, property);\n\n    Object.defineProperty(object, property, { get: createGetter(get), set: createSetter(set) });\n};\n","import { TSanitizeAudioWorkletNodeOptionsFunction } from '../types';\n\nexport const sanitizeAudioWorkletNodeOptions: TSanitizeAudioWorkletNodeOptionsFunction = (options) => {\n    return {\n        ...options,\n        outputChannelCount:\n            options.outputChannelCount !== undefined\n                ? options.outputChannelCount\n                : options.numberOfInputs === 1 && options.numberOfOutputs === 1\n                ? /*\n                   * Bug #61: This should be the computedNumberOfChannels, but unfortunately that is almost impossible to fake. That's why\n                   * the channelCountMode is required to be 'explicit' as long as there is not a native implementation in every browser. That\n                   * makes sure the computedNumberOfChannels is equivilant to the channelCount which makes it much easier to compute.\n                   */\n                  [options.channelCount]\n                : Array.from({ length: options.numberOfOutputs }, () => 1)\n    };\n};\n","import { TSanitizeChannelSplitterOptionsFunction } from '../types';\n\nexport const sanitizeChannelSplitterOptions: TSanitizeChannelSplitterOptionsFunction = (options) => {\n    return { ...options, channelCount: options.numberOfOutputs };\n};\n","import { TSanitizePeriodicWaveOptionsFunction } from '../types';\n\nexport const sanitizePeriodicWaveOptions: TSanitizePeriodicWaveOptionsFunction = (options) => {\n    const { imag, real } = options;\n\n    if (imag === undefined) {\n        if (real === undefined) {\n            return { ...options, imag: [0, 0], real: [0, 0] };\n        }\n\n        return { ...options, imag: Array.from(real, () => 0), real };\n    }\n\n    if (real === undefined) {\n        return { ...options, imag, real: Array.from(imag, () => 0) };\n    }\n\n    return { ...options, imag, real };\n};\n","import { TSetValueAtTimeUntilPossibleFunction } from '../types';\n\nexport const setValueAtTimeUntilPossible: TSetValueAtTimeUntilPossibleFunction = (audioParam, value, startTime) => {\n    try {\n        audioParam.setValueAtTime(value, startTime);\n    } catch (err) {\n        if (err.code !== 9) {\n            throw err;\n        }\n\n        setValueAtTimeUntilPossible(audioParam, value, startTime + 1e-7);\n    }\n};\n","import { TNativeContext } from '../types';\n\nexport const testAudioBufferSourceNodeStartMethodConsecutiveCallsSupport = (nativeContext: TNativeContext) => {\n    const nativeAudioBufferSourceNode = nativeContext.createBufferSource();\n\n    nativeAudioBufferSourceNode.start();\n\n    try {\n        nativeAudioBufferSourceNode.start();\n    } catch {\n        return true;\n    }\n\n    return false;\n};\n","import { TNativeContext } from '../types';\n\nexport const testAudioBufferSourceNodeStartMethodOffsetClampingSupport = (nativeContext: TNativeContext) => {\n    const nativeAudioBufferSourceNode = nativeContext.createBufferSource();\n    const nativeAudioBuffer = nativeContext.createBuffer(1, 1, 44100);\n\n    nativeAudioBufferSourceNode.buffer = nativeAudioBuffer;\n\n    try {\n        nativeAudioBufferSourceNode.start(0, 1);\n    } catch {\n        return false;\n    }\n\n    return true;\n};\n","import { TNativeContext } from '../types';\n\nexport const testAudioBufferSourceNodeStopMethodNullifiedBufferSupport = (nativeContext: TNativeContext) => {\n    const nativeAudioBufferSourceNode = nativeContext.createBufferSource();\n\n    nativeAudioBufferSourceNode.start();\n\n    try {\n        nativeAudioBufferSourceNode.stop();\n    } catch {\n        return false;\n    }\n\n    return true;\n};\n","import { TNativeContext } from '../types';\n\nexport const testAudioScheduledSourceNodeStartMethodNegativeParametersSupport = (nativeContext: TNativeContext) => {\n    const nativeAudioBufferSourceNode = nativeContext.createOscillator();\n\n    try {\n        nativeAudioBufferSourceNode.start(-1);\n    } catch (err) {\n        return err instanceof RangeError;\n    }\n\n    return false;\n};\n","import { TNativeContext } from '../types';\n\nexport const testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport = (nativeContext: TNativeContext) => {\n    const nativeAudioBuffer = nativeContext.createBuffer(1, 1, 44100);\n    const nativeAudioBufferSourceNode = nativeContext.createBufferSource();\n\n    nativeAudioBufferSourceNode.buffer = nativeAudioBuffer;\n    nativeAudioBufferSourceNode.start();\n    nativeAudioBufferSourceNode.stop();\n\n    try {\n        nativeAudioBufferSourceNode.stop();\n\n        return true;\n    } catch {\n        return false;\n    }\n};\n","import { TNativeContext } from '../types';\n\nexport const testAudioScheduledSourceNodeStopMethodNegativeParametersSupport = (nativeContext: TNativeContext) => {\n    const nativeAudioBufferSourceNode = nativeContext.createOscillator();\n\n    try {\n        nativeAudioBufferSourceNode.stop(-1);\n    } catch (err) {\n        return err instanceof RangeError;\n    }\n\n    return false;\n};\n","/*\n * Bug #122: Edge up to version v18 did not allow to construct a DOMException'. It also had a couple more bugs but since this is easy to\n * test it's used here as a placeholder.\n *\n * Bug #27: Edge up to version v18 did reject an invalid arrayBuffer passed to decodeAudioData() with a DOMException.\n *\n * Bug #50: Edge up to version v18 did not allow to create AudioNodes on a closed context.\n *\n * Bug #57: Edge up to version v18 did not throw an error when assigning the type of an OscillatorNode to 'custom'.\n *\n * Bug #63: Edge up to version v18 did not expose the mediaElement property of a MediaElementAudioSourceNode.\n *\n * Bug #64: Edge up to version v18 did not support the MediaStreamAudioDestinationNode.\n *\n * Bug #71: Edge up to version v18 did not allow to set the buffer of an AudioBufferSourceNode to null.\n *\n * Bug #93: Edge up to version v18 did set the sampleRate of an AudioContext to zero when it was closed.\n *\n * Bug #101: Edge up to version v18 refused to execute decodeAudioData() on a closed context.\n *\n * Bug #106: Edge up to version v18 did not expose the maxValue and minValue properties of the pan AudioParam of a StereoPannerNode.\n *\n * Bug #110: Edge up to version v18 did not expose the maxValue and minValue properties of the attack, knee, ratio, release and threshold AudioParams of a DynamicsCompressorNode.\n *\n * Bug #123: Edge up to version v18 did not support HRTF as the panningModel for a PannerNode.\n *\n * Bug #145: Edge up to version v18 did throw an IndexSizeError when an OfflineAudioContext was created with a sampleRate of zero.\n *\n * Bug #161: Edge up to version v18 did not expose the maxValue and minValue properties of the delayTime AudioParam of a DelayNode.\n */\nexport const testDomExceptionConstructorSupport = () => {\n    try {\n        new DOMException(); // tslint:disable-line:no-unused-expression\n    } catch {\n        return false;\n    }\n\n    return true;\n};\n","// Safari at version 11 did not support transferables.\nexport const testTransferablesSupport = () =>\n    new Promise<boolean>((resolve) => {\n        const arrayBuffer = new ArrayBuffer(0);\n        const { port1, port2 } = new MessageChannel();\n\n        port1.onmessage = ({ data }) => resolve(data !== null);\n        port2.postMessage(arrayBuffer, [arrayBuffer]);\n    });\n","import { TNativeAudioBufferSourceNode } from '../types';\n\nexport const wrapAudioBufferSourceNodeStartMethodOffsetClamping = (nativeAudioBufferSourceNode: TNativeAudioBufferSourceNode): void => {\n    nativeAudioBufferSourceNode.start = ((start) => {\n        return (when = 0, offset = 0, duration?: number) => {\n            const buffer = nativeAudioBufferSourceNode.buffer;\n            // Bug #154: Safari does not clamp the offset if it is equal to or greater than the duration of the buffer.\n            const clampedOffset = buffer === null ? offset : Math.min(buffer.duration, offset);\n\n            // Bug #155: Safari does not handle the offset correctly if it would cause the buffer to be not be played at all.\n            if (buffer !== null && clampedOffset > buffer.duration - 0.5 / nativeAudioBufferSourceNode.context.sampleRate) {\n                start.call(nativeAudioBufferSourceNode, when, 0, 0);\n            } else {\n                start.call(nativeAudioBufferSourceNode, when, clampedOffset, duration);\n            }\n        };\n    })(nativeAudioBufferSourceNode.start);\n};\n","import { TNativeAudioNode, TWrapAudioScheduledSourceNodeStopMethodConsecutiveCallsFunction } from '../types';\nimport { interceptConnections } from './intercept-connections';\n\nexport const wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls: TWrapAudioScheduledSourceNodeStopMethodConsecutiveCallsFunction = (\n    nativeAudioScheduledSourceNode,\n    nativeContext\n) => {\n    const nativeGainNode = nativeContext.createGain();\n\n    nativeAudioScheduledSourceNode.connect(nativeGainNode);\n\n    const disconnectGainNode = ((disconnect) => {\n        return () => {\n            // @todo TypeScript cannot infer the overloaded signature with 1 argument yet.\n            (<(destinaton: TNativeAudioNode) => void>disconnect).call(nativeAudioScheduledSourceNode, nativeGainNode);\n            nativeAudioScheduledSourceNode.removeEventListener('ended', disconnectGainNode);\n        };\n    })(nativeAudioScheduledSourceNode.disconnect);\n\n    nativeAudioScheduledSourceNode.addEventListener('ended', disconnectGainNode);\n\n    interceptConnections(nativeAudioScheduledSourceNode, nativeGainNode);\n\n    nativeAudioScheduledSourceNode.stop = ((stop) => {\n        let isStopped = false;\n\n        return (when = 0) => {\n            if (isStopped) {\n                try {\n                    stop.call(nativeAudioScheduledSourceNode, when);\n                } catch {\n                    nativeGainNode.gain.setValueAtTime(0, when);\n                }\n            } else {\n                stop.call(nativeAudioScheduledSourceNode, when);\n\n                isStopped = true;\n            }\n        };\n    })(nativeAudioScheduledSourceNode.stop);\n};\n","import { TWrapEventListenerFunction } from '../types';\n\nexport const wrapEventListener: TWrapEventListenerFunction = (target, eventListener) => {\n    return (event) => {\n        const descriptor = { value: target };\n\n        Object.defineProperties(event, {\n            currentTarget: descriptor,\n            target: descriptor\n        });\n\n        if (typeof eventListener === 'function') {\n            return eventListener.call(target, event);\n        }\n\n        return eventListener.handleEvent.call(target, event);\n    };\n};\n","export * from './analyser-node';\nexport * from './analyser-options';\nexport * from './audio-buffer';\nexport * from './audio-buffer-options';\nexport * from './audio-buffer-source-node';\nexport * from './audio-buffer-source-node-renderer';\nexport * from './audio-buffer-source-options';\nexport * from './audio-context';\nexport * from './audio-context-options';\nexport * from './audio-destination-node';\nexport * from './audio-listener';\nexport * from './audio-node';\nexport * from './audio-node-options';\nexport * from './audio-node-renderer';\nexport * from './audio-param';\nexport * from './audio-param-descriptor';\nexport * from './audio-param-renderer';\nexport * from './audio-scheduled-source-node';\nexport * from './audio-scheduled-source-node-event-map';\nexport * from './audio-worklet';\nexport * from './audio-worklet-node';\nexport * from './audio-worklet-node-event-map';\nexport * from './audio-worklet-node-options';\nexport * from './audio-worklet-processor';\nexport * from './audio-worklet-processor-constructor';\nexport * from './automation';\nexport * from './base-audio-context';\nexport * from './biquad-filter-node';\nexport * from './biquad-filter-options';\nexport * from './channel-merger-options';\nexport * from './channel-splitter-options';\nexport * from './common-audio-context';\nexport * from './common-offline-audio-context';\nexport * from './constant-source-node';\nexport * from './constant-source-node-renderer';\nexport * from './constant-source-options';\nexport * from './convolver-node';\nexport * from './convolver-options';\nexport * from './delay-node';\nexport * from './delay-options';\nexport * from './dynamics-compressor-node';\nexport * from './dynamics-compressor-options';\nexport * from './gain-node';\nexport * from './gain-options';\nexport * from './iir-filter-node';\nexport * from './iir-filter-options';\nexport * from './media-element-audio-source-node';\nexport * from './media-element-audio-source-options';\nexport * from './media-stream-audio-destination-node';\nexport * from './media-stream-audio-source-node';\nexport * from './media-stream-audio-source-options';\nexport * from './media-stream-track-audio-source-node';\nexport * from './media-stream-track-audio-source-options';\nexport * from './minimal-audio-context';\nexport * from './minimal-base-audio-context';\nexport * from './minimal-base-audio-context-event-map';\nexport * from './minimal-offline-audio-context';\nexport * from './native-audio-node-faker';\nexport * from './native-audio-worklet-node-faker';\nexport * from './native-constant-source-node-faker';\nexport * from './native-convolver-node-faker';\nexport * from './native-iir-filter-node-faker';\nexport * from './native-panner-node-faker';\nexport * from './native-stereo-panner-node-faker';\nexport * from './native-wave-shaper-node-faker';\nexport * from './offline-audio-completion-event';\nexport * from './offline-audio-context';\nexport * from './offline-audio-context-constructor';\nexport * from './offline-audio-context-options';\nexport * from './oscillator-node';\nexport * from './oscillator-node-renderer';\nexport * from './oscillator-options';\nexport * from './panner-node';\nexport * from './panner-options';\nexport * from './periodic-wave';\nexport * from './periodic-wave-constraints';\nexport * from './periodic-wave-options';\nexport * from './read-only-map';\nexport * from './stereo-panner-node';\nexport * from './stereo-panner-options';\nexport * from './wave-shaper-node';\nexport * from './wave-shaper-options';\nexport * from './worklet-options';\n","export * from './abort-error-factory';\nexport * from './active-audio-worklet-node-inputs-store';\nexport * from './active-input-connection';\nexport * from './add-active-input-connection-to-audio-node-factory';\nexport * from './add-active-input-connection-to-audio-node-function';\nexport * from './add-audio-node-connections-factory';\nexport * from './add-audio-node-connections-function';\nexport * from './add-audio-param-connections-factory';\nexport * from './add-audio-param-connections-function';\nexport * from './add-audio-worklet-module-factory';\nexport * from './add-audio-worklet-module-function';\nexport * from './add-connection-to-audio-node-factory';\nexport * from './add-connection-to-audio-node-function';\nexport * from './add-passive-input-connection-to-audio-node-factory';\nexport * from './add-passive-input-connection-to-audio-node-function';\nexport * from './add-silent-connection-factory';\nexport * from './add-silent-connection-function';\nexport * from './add-unrendered-audio-worklet-node-factory';\nexport * from './add-unrendered-audio-worklet-node-function';\nexport * from './analyser-node-constructor';\nexport * from './analyser-node-constructor-factory';\nexport * from './analyser-node-renderer-factory';\nexport * from './analyser-node-renderer-factory-factory';\nexport * from './any-audio-buffer';\nexport * from './any-context';\nexport * from './audio-buffer-constructor';\nexport * from './audio-buffer-constructor-factory';\nexport * from './audio-buffer-source-node-constructor';\nexport * from './audio-buffer-source-node-constructor-factory';\nexport * from './audio-buffer-source-node-renderer';\nexport * from './audio-buffer-source-node-renderer-factory';\nexport * from './audio-buffer-source-node-renderer-factory-factory';\nexport * from './audio-buffer-store';\nexport * from './audio-context-constructor';\nexport * from './audio-context-constructor-factory';\nexport * from './audio-context-latency-category';\nexport * from './audio-context-state';\nexport * from './audio-destination-node-constructor';\nexport * from './audio-destination-node-constructor-factory';\nexport * from './audio-destination-node-renderer-factory';\nexport * from './audio-listener-factory';\nexport * from './audio-listener-factory-factory';\nexport * from './audio-node-connections';\nexport * from './audio-node-connections-store';\nexport * from './audio-node-constructor';\nexport * from './audio-node-constructor-factory';\nexport * from './audio-node-output-connection';\nexport * from './audio-node-renderer';\nexport * from './audio-node-store';\nexport * from './audio-node-tail-time-store';\nexport * from './audio-param-audio-node-store';\nexport * from './audio-param-connections';\nexport * from './audio-param-connections-store';\nexport * from './audio-param-factory';\nexport * from './audio-param-factory-factory';\nexport * from './audio-param-map';\nexport * from './audio-param-output-connection';\nexport * from './audio-param-renderer-factory';\nexport * from './audio-param-store';\nexport * from './audio-worklet-node-constructor';\nexport * from './audio-worklet-node-constructor-factory';\nexport * from './audio-worklet-node-renderer-factory';\nexport * from './audio-worklet-node-renderer-factory-factory';\nexport * from './backup-offline-audio-context-store';\nexport * from './base-audio-context-constructor';\nexport * from './base-audio-context-constructor-factory';\nexport * from './biquad-filter-node-constructor';\nexport * from './biquad-filter-node-constructor-factory';\nexport * from './biquad-filter-node-renderer-factory';\nexport * from './biquad-filter-node-renderer-factory-factory';\nexport * from './biquad-filter-type';\nexport * from './channel-count-mode';\nexport * from './channel-interpretation';\nexport * from './channel-merger-node-constructor';\nexport * from './channel-merger-node-constructor-factory';\nexport * from './channel-merger-node-renderer-factory';\nexport * from './channel-merger-node-renderer-factory-factory';\nexport * from './channel-splitter-node-constructor';\nexport * from './channel-splitter-node-constructor-factory';\nexport * from './channel-splitter-node-renderer-factory';\nexport * from './channel-splitter-node-renderer-factory-factory';\nexport * from './cache-test-result-factory';\nexport * from './cache-test-result-function';\nexport * from './connect-audio-param-factory';\nexport * from './connect-audio-param-function';\nexport * from './connect-multiple-outputs-factory';\nexport * from './connect-multiple-outputs-function';\nexport * from './connect-native-audio-node-to-native-audio-node-function';\nexport * from './connected-native-audio-buffer-source-node-factory';\nexport * from './connected-native-audio-buffer-source-node-factory-factory';\nexport * from './constant-source-node-constructor';\nexport * from './constant-source-node-constructor-factory';\nexport * from './constant-source-node-renderer';\nexport * from './constant-source-node-renderer-factory';\nexport * from './constant-source-node-renderer-factory-factory';\nexport * from './constructor';\nexport * from './context';\nexport * from './context-store';\nexport * from './convert-number-to-unsigned-long-factory';\nexport * from './convert-number-to-unsigned-long-function';\nexport * from './convolver-node-constructor';\nexport * from './convolver-node-constructor-factory';\nexport * from './convolver-node-renderer-factory';\nexport * from './convolver-node-renderer-factory-factory';\nexport * from './create-native-offline-audio-context-factory';\nexport * from './create-native-offline-audio-context-function';\nexport * from './cycle-counters';\nexport * from './data-clone-error-factory';\nexport * from './decode-audio-data-factory';\nexport * from './decode-audio-data-function';\nexport * from './decode-error-callback';\nexport * from './decode-success-callback';\nexport * from './decrement-cycle-counter-factory';\nexport * from './decrement-cycle-counter-function';\nexport * from './delay-node-constructor';\nexport * from './delay-node-constructor-factory';\nexport * from './delay-node-renderer-factory';\nexport * from './delay-node-renderer-factory-factory';\nexport * from './delete-active-input-connection-to-audio-node-factory';\nexport * from './delete-active-input-connection-to-audio-node-function';\nexport * from './delete-unrendered-audio-worklet-node-factory';\nexport * from './delete-unrendered-audio-worklet-node-function';\nexport * from './detect-cycles-factory';\nexport * from './detect-cycles-function';\nexport * from './disconnect-multiple-outputs-factory';\nexport * from './disconnect-multiple-outputs-function';\nexport * from './disconnect-native-audio-node-from-native-audio-node-function';\nexport * from './distance-model-type';\nexport * from './dynamics-compressor-node-constructor';\nexport * from './dynamics-compressor-node-constructor-factory';\nexport * from './dynamics-compressor-node-renderer-factory';\nexport * from './dynamics-compressor-node-renderer-factory-factory';\nexport * from './encoding-error-factory';\nexport * from './error-event-handler';\nexport * from './evaluate-audio-worklet-global-scope-function';\nexport * from './evaluate-source-factory';\nexport * from './evaluate-source-function';\nexport * from './event-handler';\nexport * from './event-target-constructor';\nexport * from './event-target-constructor-factory';\nexport * from './expose-current-frame-and-current-time-factory';\nexport * from './expose-current-frame-and-current-time-function';\nexport * from './fetch-source-factory';\nexport * from './fetch-source-function';\nexport * from './gain-node-constructor';\nexport * from './gain-node-constructor-factory';\nexport * from './gain-node-renderer-factory';\nexport * from './gain-node-renderer-factory-factory';\nexport * from './get-active-audio-worklet-node-inputs-factory';\nexport * from './get-active-audio-worklet-node-inputs-function';\nexport * from './get-audio-node-connections-function';\nexport * from './get-audio-node-renderer-factory';\nexport * from './get-audio-node-renderer-function';\nexport * from './get-audio-node-tail-time-factory';\nexport * from './get-audio-node-tail-time-function';\nexport * from './get-audio-param-connections-function';\nexport * from './get-audio-param-renderer-factory';\nexport * from './get-audio-param-renderer-function';\nexport * from './get-backup-offline-audio-context-factory';\nexport * from './get-backup-offline-audio-context-function';\nexport * from './get-event-listeners-of-audio-node-function';\nexport * from './get-native-audio-node-function';\nexport * from './get-native-audio-param-function';\nexport * from './get-native-context-factory';\nexport * from './get-native-context-function';\nexport * from './get-or-create-backup-offline-audio-context-factory';\nexport * from './get-or-create-backup-offline-audio-context-function';\nexport * from './get-unrendered-audio-worklet-nodes-factory';\nexport * from './get-unrendered-audio-worklet-nodes-function';\nexport * from './get-value-for-key-function';\nexport * from './iir-filter-node-constructor';\nexport * from './iir-filter-node-constructor-factory';\nexport * from './iir-filter-node-renderer-factory';\nexport * from './iir-filter-node-renderer-factory-factory';\nexport * from './increment-cycle-counter-factory';\nexport * from './increment-cycle-counter-factory-factory';\nexport * from './increment-cycle-counter-function';\nexport * from './index-size-error-factory';\nexport * from './insert-element-in-set-function';\nexport * from './internal-state-event-listener';\nexport * from './invalid-access-error-factory';\nexport * from './invalid-state-error-factory';\nexport * from './is-active-audio-node-function';\nexport * from './is-any-audio-context-factory';\nexport * from './is-any-audio-context-function';\nexport * from './is-any-audio-node-factory';\nexport * from './is-any-audio-node-function';\nexport * from './is-any-audio-param-factory';\nexport * from './is-any-audio-param-function';\nexport * from './is-any-offline-audio-context-factory';\nexport * from './is-any-offline-audio-context-function';\nexport * from './is-dc-curve-function';\nexport * from './is-native-audio-context-factory';\nexport * from './is-native-audio-context-function';\nexport * from './is-native-audio-node-factory';\nexport * from './is-native-audio-node-function';\nexport * from './is-native-audio-param-factory';\nexport * from './is-native-audio-param-function';\nexport * from './is-native-context-factory';\nexport * from './is-native-context-function';\nexport * from './is-native-offline-audio-context-factory';\nexport * from './is-native-offline-audio-context-function';\nexport * from './is-part-of-a-cycle-function';\nexport * from './is-passive-audio-node-function';\nexport * from './is-secure-context-factory';\nexport * from './is-supported-promise-factory';\nexport * from './media-element-audio-source-node-constructor';\nexport * from './media-element-audio-source-node-constructor-factory';\nexport * from './media-stream-audio-destination-node-constructor';\nexport * from './media-stream-audio-destination-node-constructor-factory';\nexport * from './media-stream-audio-source-node-constructor';\nexport * from './media-stream-audio-source-node-constructor-factory';\nexport * from './media-stream-track-audio-source-node-constructor';\nexport * from './media-stream-track-audio-source-node-constructor-factory';\nexport * from './minimal-audio-context-constructor';\nexport * from './minimal-audio-context-constructor-factory';\nexport * from './minimal-base-audio-context-constructor';\nexport * from './minimal-base-audio-context-constructor-factory';\nexport * from './minimal-offline-audio-context-constructor';\nexport * from './minimal-offline-audio-context-constructor-factory';\nexport * from './monitor-connections-factory';\nexport * from './monitor-connections-function';\nexport * from './native-analyser-node';\nexport * from './native-analyser-node-factory';\nexport * from './native-analyser-node-factory-factory';\nexport * from './native-audio-buffer';\nexport * from './native-audio-buffer-constructor';\nexport * from './native-audio-buffer-constructor-factory';\nexport * from './native-audio-buffer-source-node';\nexport * from './native-audio-buffer-source-node-factory';\nexport * from './native-audio-buffer-source-node-factory-factory';\nexport * from './native-audio-context';\nexport * from './native-audio-context-constructor';\nexport * from './native-audio-context-constructor-factory';\nexport * from './native-audio-destination-node';\nexport * from './native-audio-destination-node-factory';\nexport * from './native-audio-destination-node-factory-factory';\nexport * from './native-audio-listener';\nexport * from './native-audio-node';\nexport * from './native-audio-param';\nexport * from './native-audio-param-map';\nexport * from './native-audio-worklet';\nexport * from './native-audio-worklet-node';\nexport * from './native-audio-worklet-node-constructor';\nexport * from './native-audio-worklet-node-constructor-factory';\nexport * from './native-audio-worklet-node-factory';\nexport * from './native-audio-worklet-node-factory-factory';\nexport * from './native-audio-worklet-node-faker-factory';\nexport * from './native-audio-worklet-node-faker-factory-factory';\nexport * from './native-audio-worklet-node-options';\nexport * from './native-biquad-filter-node';\nexport * from './native-biquad-filter-node-factory';\nexport * from './native-channel-merger-node';\nexport * from './native-channel-merger-node-factory';\nexport * from './native-channel-merger-node-factory-factory';\nexport * from './native-channel-splitter-node';\nexport * from './native-channel-splitter-node-factory';\nexport * from './native-constant-source-node';\nexport * from './native-constant-source-node-factory';\nexport * from './native-constant-source-node-factory-factory';\nexport * from './native-constant-source-node-faker-factory';\nexport * from './native-constant-source-node-faker-factory-factory';\nexport * from './native-context';\nexport * from './native-convolver-node';\nexport * from './native-convolver-node-factory';\nexport * from './native-convolver-node-factory-factory';\nexport * from './native-delay-node-factory';\nexport * from './native-delay-node';\nexport * from './native-dynamics-compressor-node';\nexport * from './native-dynamics-compressor-node-factory';\nexport * from './native-dynamics-compressor-node-factory-factory';\nexport * from './native-event-target';\nexport * from './native-gain-node';\nexport * from './native-gain-node-factory';\nexport * from './native-iir-filter-node';\nexport * from './native-iir-filter-node-factory';\nexport * from './native-iir-filter-node-factory-factory';\nexport * from './native-iir-filter-node-faker-factory';\nexport * from './native-iir-filter-node-faker-factory-factory';\nexport * from './native-media-element-audio-source-node';\nexport * from './native-media-element-audio-source-node-factory';\nexport * from './native-media-stream-audio-destination-node';\nexport * from './native-media-stream-audio-destination-node-factory';\nexport * from './native-media-stream-audio-source-node';\nexport * from './native-media-stream-audio-source-node-factory';\nexport * from './native-media-stream-track-audio-source-node';\nexport * from './native-media-stream-track-audio-source-node-factory';\nexport * from './native-media-stream-track-audio-source-node-factory-factory';\nexport * from './native-offline-audio-context';\nexport * from './native-offline-audio-context-constructor';\nexport * from './native-offline-audio-context-constructor-factory';\nexport * from './native-oscillator-node';\nexport * from './native-oscillator-node-factory';\nexport * from './native-oscillator-node-factory-factory';\nexport * from './native-panner-node';\nexport * from './native-panner-node-factory';\nexport * from './native-panner-node-factory-factory';\nexport * from './native-panner-node-faker-factory';\nexport * from './native-panner-node-faker-factory-factory';\nexport * from './native-periodic-wave';\nexport * from './native-periodic-wave-factory';\nexport * from './native-periodic-wave-factory-factory';\nexport * from './native-script-processor-node';\nexport * from './native-script-processor-node-factory';\nexport * from './native-stereo-panner-node';\nexport * from './native-stereo-panner-node-factory';\nexport * from './native-stereo-panner-node-factory-factory';\nexport * from './native-stereo-panner-node-faker-factory';\nexport * from './native-stereo-panner-node-faker-factory-factory';\nexport * from './native-wave-shaper-node';\nexport * from './native-wave-shaper-node-factory';\nexport * from './native-wave-shaper-node-factory-factory';\nexport * from './native-wave-shaper-node-faker-factory';\nexport * from './native-wave-shaper-node-faker-factory-factory';\nexport * from './not-supported-error-factory';\nexport * from './offline-audio-context-constructor-factory';\nexport * from './oscillator-node-constructor';\nexport * from './oscillator-node-constructor-factory';\nexport * from './oscillator-node-renderer';\nexport * from './oscillator-node-renderer-factory';\nexport * from './oscillator-node-renderer-factory-factory';\nexport * from './oscillator-type';\nexport * from './output-connection';\nexport * from './over-sample-type';\nexport * from './overwrite-accessors-function';\nexport * from './panner-node-constructor';\nexport * from './panner-node-constructor-factory';\nexport * from './panner-node-renderer-factory';\nexport * from './panner-node-renderer-factory-factory';\nexport * from './panning-model-type';\nexport * from './passive-audio-node-input-connection';\nexport * from './passive-audio-param-input-connection';\nexport * from './periodic-wave-constructor';\nexport * from './periodic-wave-constructor-factory';\nexport * from './pick-element-from-set-function';\nexport * from './render-automation-factory';\nexport * from './render-automation-function';\nexport * from './render-inputs-of-audio-node-factory';\nexport * from './render-inputs-of-audio-node-function';\nexport * from './render-inputs-of-audio-param-factory';\nexport * from './render-inputs-of-audio-param-function';\nexport * from './render-native-offline-audio-context-factory';\nexport * from './render-native-offline-audio-context-function';\nexport * from './sanitize-audio-worklet-node-options-function';\nexport * from './sanitize-channel-splitter-options-function';\nexport * from './sanitize-periodic-wave-options-function';\nexport * from './set-active-audio-worklet-node-inputs-factory';\nexport * from './set-active-audio-worklet-node-inputs-function';\nexport * from './set-audio-node-tail-time-factory';\nexport * from './set-audio-node-tail-time-function';\nexport * from './set-value-at-time-until-possible-function';\nexport * from './start-rendering-factory';\nexport * from './start-rendering-function';\nexport * from './stereo-panner-node-constructor';\nexport * from './stereo-panner-node-constructor-factory';\nexport * from './stereo-panner-node-renderer-factory-factory';\nexport * from './stereo-panner-node-renderer-factory';\nexport * from './test-audio-buffer-copy-channel-methods-subarray-support-factory';\nexport * from './test-audio-buffer-constructor-support-factory';\nexport * from './test-audio-context-close-method-support-factory';\nexport * from './test-audio-context-decode-audio-data-method-type-error-support-factory';\nexport * from './test-audio-context-options-support-factory';\nexport * from './test-audio-node-connect-method-support-factory';\nexport * from './test-audio-worklet-processor-no-outputs-support-factory';\nexport * from './test-audio-worklet-processor-post-message-support-factory';\nexport * from './test-channel-merger-node-channel-count-support-factory';\nexport * from './test-constant-source-node-accurate-scheduling-support-factory';\nexport * from './test-convolver-node-buffer-reassignability-support-factory';\nexport * from './test-convolver-node-channel-count-support-factory';\nexport * from './test-is-secure-context-support-factory';\nexport * from './test-media-stream-audio-source-node-media-stream-without-audio-track-support';\nexport * from './test-offline-audio-context-current-time-support-factory';\nexport * from './test-stereo-panner-node-default-value-support-factory';\nexport * from './unknown-error-factory';\nexport * from './unrendered-audio-worklet-node-store';\nexport * from './unrendered-audio-worklet-nodes';\nexport * from './wave-shaper-node-constructor';\nexport * from './wave-shaper-node-constructor-factory';\nexport * from './wave-shaper-node-renderer-factory-factory';\nexport * from './wave-shaper-node-renderer-factory';\nexport * from './window';\nexport * from './window-factory';\nexport * from './wrap-audio-buffer-copy-channel-methods-factory';\nexport * from './wrap-audio-buffer-copy-channel-methods-function';\nexport * from './wrap-audio-buffer-copy-channel-methods-out-of-bounds-factory';\nexport * from './wrap-audio-buffer-copy-channel-methods-out-of-bounds-function';\nexport * from './wrap-audio-buffer-source-node-start-method-offset-clamping-function';\nexport * from './wrap-audio-buffer-source-node-stop-method-nullified-buffer-factory';\nexport * from './wrap-audio-buffer-source-node-stop-method-nullified-buffer-function';\nexport * from './wrap-audio-scheduled-source-node-stop-method-consecutive-calls-function';\nexport * from './wrap-channel-merger-node-factory';\nexport * from './wrap-channel-merger-node-function';\nexport * from './wrap-event-listener-function';\n","import {\n    createCancelAndHoldAutomationEvent,\n    createCancelScheduledValuesAutomationEvent,\n    createExponentialRampToValueAutomationEvent,\n    createLinearRampToValueAutomationEvent,\n    createSetTargetAutomationEvent,\n    createSetValueAutomationEvent,\n    createSetValueCurveAutomationEvent\n} from 'automation-events';\nimport { createAbortError } from './factories/abort-error';\nimport { createAddActiveInputConnectionToAudioNode } from './factories/add-active-input-connection-to-audio-node';\nimport { createAddAudioNodeConnections } from './factories/add-audio-node-connections';\nimport { createAddAudioParamConnections } from './factories/add-audio-param-connections';\nimport { createAddAudioWorkletModule } from './factories/add-audio-worklet-module';\nimport { createAddConnectionToAudioNode } from './factories/add-connection-to-audio-node';\nimport { createAddPassiveInputConnectionToAudioNode } from './factories/add-passive-input-connection-to-audio-node';\nimport { createAddSilentConnection } from './factories/add-silent-connection';\nimport { createAddUnrenderedAudioWorkletNode } from './factories/add-unrendered-audio-worklet-node';\nimport { createAnalyserNodeConstructor } from './factories/analyser-node-constructor';\nimport { createAnalyserNodeRendererFactory } from './factories/analyser-node-renderer-factory';\nimport { createAudioBufferConstructor } from './factories/audio-buffer-constructor';\nimport { createAudioBufferSourceNodeConstructor } from './factories/audio-buffer-source-node-constructor';\nimport { createAudioBufferSourceNodeRendererFactory } from './factories/audio-buffer-source-node-renderer-factory';\nimport { createAudioContextConstructor } from './factories/audio-context-constructor';\nimport { createAudioDestinationNodeConstructor } from './factories/audio-destination-node-constructor';\nimport { createAudioDestinationNodeRenderer } from './factories/audio-destination-node-renderer-factory';\nimport { createAudioListenerFactory } from './factories/audio-listener-factory';\nimport { createAudioNodeConstructor } from './factories/audio-node-constructor';\nimport { createAudioParamFactory } from './factories/audio-param-factory';\nimport { createAudioParamRenderer } from './factories/audio-param-renderer';\nimport { createAudioWorkletNodeConstructor } from './factories/audio-worklet-node-constructor';\nimport { createAudioWorkletNodeRendererFactory } from './factories/audio-worklet-node-renderer-factory';\nimport { createBaseAudioContextConstructor } from './factories/base-audio-context-constructor';\nimport { createBiquadFilterNodeConstructor } from './factories/biquad-filter-node-constructor';\nimport { createBiquadFilterNodeRendererFactory } from './factories/biquad-filter-node-renderer-factory';\nimport { createCacheTestResult } from './factories/cache-test-result';\nimport { createChannelMergerNodeConstructor } from './factories/channel-merger-node-constructor';\nimport { createChannelMergerNodeRendererFactory } from './factories/channel-merger-node-renderer-factory';\nimport { createChannelSplitterNodeConstructor } from './factories/channel-splitter-node-constructor';\nimport { createChannelSplitterNodeRendererFactory } from './factories/channel-splitter-node-renderer-factory';\nimport { createConnectAudioParam } from './factories/connect-audio-param';\nimport { createConnectMultipleOutputs } from './factories/connect-multiple-outputs';\nimport { createConnectedNativeAudioBufferSourceNodeFactory } from './factories/connected-native-audio-buffer-source-node-factory';\nimport { createConstantSourceNodeConstructor } from './factories/constant-source-node-constructor';\nimport { createConstantSourceNodeRendererFactory } from './factories/constant-source-node-renderer-factory';\nimport { createConvertNumberToUnsignedLong } from './factories/convert-number-to-unsigned-long';\nimport { createConvolverNodeConstructor } from './factories/convolver-node-constructor';\nimport { createConvolverNodeRendererFactory } from './factories/convolver-node-renderer-factory';\nimport { createCreateNativeOfflineAudioContext } from './factories/create-native-offline-audio-context';\nimport { createDataCloneError } from './factories/data-clone-error';\nimport { createDecodeAudioData } from './factories/decode-audio-data';\nimport { createDecrementCycleCounter } from './factories/decrement-cycle-counter';\nimport { createDelayNodeConstructor } from './factories/delay-node-constructor';\nimport { createDelayNodeRendererFactory } from './factories/delay-node-renderer-factory';\nimport { createDeleteActiveInputConnectionToAudioNode } from './factories/delete-active-input-connection-to-audio-node';\nimport { createDeleteUnrenderedAudioWorkletNode } from './factories/delete-unrendered-audio-worklet-node';\nimport { createDetectCycles } from './factories/detect-cycles';\nimport { createDisconnectMultipleOutputs } from './factories/disconnect-multiple-outputs';\nimport { createDynamicsCompressorNodeConstructor } from './factories/dynamics-compressor-node-constructor';\nimport { createDynamicsCompressorNodeRendererFactory } from './factories/dynamics-compressor-node-renderer-factory';\nimport { createEncodingError } from './factories/encoding-error';\nimport { createEvaluateSource } from './factories/evaluate-source';\nimport { createEventTargetConstructor } from './factories/event-target-constructor';\nimport { createExposeCurrentFrameAndCurrentTime } from './factories/expose-current-frame-and-current-time';\nimport { createFetchSource } from './factories/fetch-source';\nimport { createGainNodeConstructor } from './factories/gain-node-constructor';\nimport { createGainNodeRendererFactory } from './factories/gain-node-renderer-factory';\nimport { createGetActiveAudioWorkletNodeInputs } from './factories/get-active-audio-worklet-node-inputs';\nimport { createGetAudioNodeRenderer } from './factories/get-audio-node-renderer';\nimport { createGetAudioNodeTailTime } from './factories/get-audio-node-tail-time';\nimport { createGetAudioParamRenderer } from './factories/get-audio-param-renderer';\nimport { createGetBackupOfflineAudioContext } from './factories/get-backup-offline-audio-context';\nimport { createGetNativeContext } from './factories/get-native-context';\nimport { createGetOrCreateBackupOfflineAudioContext } from './factories/get-or-create-backup-offline-audio-context';\nimport { createGetUnrenderedAudioWorkletNodes } from './factories/get-unrendered-audio-worklet-nodes';\nimport { createIIRFilterNodeConstructor } from './factories/iir-filter-node-constructor';\nimport { createIIRFilterNodeRendererFactory } from './factories/iir-filter-node-renderer-factory';\nimport { createIncrementCycleCounterFactory } from './factories/increment-cycle-counter-factory';\nimport { createIndexSizeError } from './factories/index-size-error';\nimport { createInvalidAccessError } from './factories/invalid-access-error';\nimport { createInvalidStateError } from './factories/invalid-state-error';\nimport { createIsAnyAudioContext } from './factories/is-any-audio-context';\nimport { createIsAnyAudioNode } from './factories/is-any-audio-node';\nimport { createIsAnyAudioParam } from './factories/is-any-audio-param';\nimport { createIsAnyOfflineAudioContext } from './factories/is-any-offline-audio-context';\nimport { createIsNativeAudioContext } from './factories/is-native-audio-context';\nimport { createIsNativeAudioNode } from './factories/is-native-audio-node';\nimport { createIsNativeAudioParam } from './factories/is-native-audio-param';\nimport { createIsNativeContext } from './factories/is-native-context';\nimport { createIsNativeOfflineAudioContext } from './factories/is-native-offline-audio-context';\nimport { createIsSecureContext } from './factories/is-secure-context';\nimport { createIsSupportedPromise } from './factories/is-supported-promise';\nimport { createMediaElementAudioSourceNodeConstructor } from './factories/media-element-audio-source-node-constructor';\nimport { createMediaStreamAudioDestinationNodeConstructor } from './factories/media-stream-audio-destination-node-constructor';\nimport { createMediaStreamAudioSourceNodeConstructor } from './factories/media-stream-audio-source-node-constructor';\nimport { createMediaStreamTrackAudioSourceNodeConstructor } from './factories/media-stream-track-audio-source-node-constructor';\nimport { createMinimalAudioContextConstructor } from './factories/minimal-audio-context-constructor';\nimport { createMinimalBaseAudioContextConstructor } from './factories/minimal-base-audio-context-constructor';\nimport { createMinimalOfflineAudioContextConstructor } from './factories/minimal-offline-audio-context-constructor';\nimport { createMonitorConnections } from './factories/monitor-connections';\nimport { createNativeAnalyserNodeFactory } from './factories/native-analyser-node-factory';\nimport { createNativeAudioBufferConstructor } from './factories/native-audio-buffer-constructor';\nimport { createNativeAudioBufferSourceNodeFactory } from './factories/native-audio-buffer-source-node-factory';\nimport { createNativeAudioContextConstructor } from './factories/native-audio-context-constructor';\nimport { createNativeAudioDestinationNodeFactory } from './factories/native-audio-destination-node';\nimport { createNativeAudioWorkletNodeConstructor } from './factories/native-audio-worklet-node-constructor';\nimport { createNativeAudioWorkletNodeFactory } from './factories/native-audio-worklet-node-factory';\nimport { createNativeAudioWorkletNodeFakerFactory } from './factories/native-audio-worklet-node-faker-factory';\nimport { createNativeBiquadFilterNode } from './factories/native-biquad-filter-node';\nimport { createNativeChannelMergerNodeFactory } from './factories/native-channel-merger-node-factory';\nimport { createNativeChannelSplitterNode } from './factories/native-channel-splitter-node';\nimport { createNativeConstantSourceNodeFactory } from './factories/native-constant-source-node-factory';\nimport { createNativeConstantSourceNodeFakerFactory } from './factories/native-constant-source-node-faker-factory';\nimport { createNativeConvolverNodeFactory } from './factories/native-convolver-node-factory';\nimport { createNativeDelayNode } from './factories/native-delay-node';\nimport { createNativeDynamicsCompressorNodeFactory } from './factories/native-dynamics-compressor-node-factory';\nimport { createNativeGainNode } from './factories/native-gain-node';\nimport { createNativeIIRFilterNodeFactory } from './factories/native-iir-filter-node-factory';\nimport { createNativeIIRFilterNodeFakerFactory } from './factories/native-iir-filter-node-faker-factory';\nimport { createNativeMediaElementAudioSourceNode } from './factories/native-media-element-audio-source-node';\nimport { createNativeMediaStreamAudioDestinationNode } from './factories/native-media-stream-audio-destination-node';\nimport { createNativeMediaStreamAudioSourceNode } from './factories/native-media-stream-audio-source-node';\nimport { createNativeMediaStreamTrackAudioSourceNodeFactory } from './factories/native-media-stream-track-audio-source-node-factory';\nimport { createNativeOfflineAudioContextConstructor } from './factories/native-offline-audio-context-constructor';\nimport { createNativeOscillatorNodeFactory } from './factories/native-oscillator-node-factory';\nimport { createNativePannerNodeFactory } from './factories/native-panner-node-factory';\nimport { createNativePannerNodeFakerFactory } from './factories/native-panner-node-faker-factory';\nimport { createNativePeriodicWaveFactory } from './factories/native-periodic-wave-factory';\nimport { createNativeScriptProcessorNode } from './factories/native-script-processor-node';\nimport { createNativeStereoPannerNodeFactory } from './factories/native-stereo-panner-node-factory';\nimport { createNativeStereoPannerNodeFakerFactory } from './factories/native-stereo-panner-node-faker-factory';\nimport { createNativeWaveShaperNodeFactory } from './factories/native-wave-shaper-node-factory';\nimport { createNativeWaveShaperNodeFakerFactory } from './factories/native-wave-shaper-node-faker-factory';\nimport { createNotSupportedError } from './factories/not-supported-error';\nimport { createOfflineAudioContextConstructor } from './factories/offline-audio-context-constructor';\nimport { createOscillatorNodeConstructor } from './factories/oscillator-node-constructor';\nimport { createOscillatorNodeRendererFactory } from './factories/oscillator-node-renderer-factory';\nimport { createPannerNodeConstructor } from './factories/panner-node-constructor';\nimport { createPannerNodeRendererFactory } from './factories/panner-node-renderer-factory';\nimport { createPeriodicWaveConstructor } from './factories/periodic-wave-constructor';\nimport { createRenderAutomation } from './factories/render-automation';\nimport { createRenderInputsOfAudioNode } from './factories/render-inputs-of-audio-node';\nimport { createRenderInputsOfAudioParam } from './factories/render-inputs-of-audio-param';\nimport { createRenderNativeOfflineAudioContext } from './factories/render-native-offline-audio-context';\nimport { createSetActiveAudioWorkletNodeInputs } from './factories/set-active-audio-worklet-node-inputs';\nimport { createSetAudioNodeTailTime } from './factories/set-audio-node-tail-time';\nimport { createStartRendering } from './factories/start-rendering';\nimport { createStereoPannerNodeConstructor } from './factories/stereo-panner-node-constructor';\nimport { createStereoPannerNodeRendererFactory } from './factories/stereo-panner-node-renderer-factory';\nimport { createTestAudioBufferConstructorSupport } from './factories/test-audio-buffer-constructor-support';\nimport { createTestAudioBufferCopyChannelMethodsSubarraySupport } from './factories/test-audio-buffer-copy-channel-methods-subarray-support';\nimport { createTestAudioContextCloseMethodSupport } from './factories/test-audio-context-close-method-support';\nimport { createTestAudioContextDecodeAudioDataMethodTypeErrorSupport } from './factories/test-audio-context-decode-audio-data-method-type-error-support';\nimport { createTestAudioContextOptionsSupport } from './factories/test-audio-context-options-support';\nimport { createTestAudioNodeConnectMethodSupport } from './factories/test-audio-node-connect-method-support';\nimport { createTestAudioWorkletProcessorNoOutputsSupport } from './factories/test-audio-worklet-processor-no-outputs-support';\nimport { createTestAudioWorkletProcessorPostMessageSupport } from './factories/test-audio-worklet-processor-post-message-support';\nimport { createTestChannelMergerNodeChannelCountSupport } from './factories/test-channel-merger-node-channel-count-support';\nimport { createTestConstantSourceNodeAccurateSchedulingSupport } from './factories/test-constant-source-node-accurate-scheduling-support';\nimport { createTestConvolverNodeBufferReassignabilitySupport } from './factories/test-convolver-node-buffer-reassignability-support';\nimport { createTestConvolverNodeChannelCountSupport } from './factories/test-convolver-node-channel-count-support';\nimport { createTestIsSecureContextSupport } from './factories/test-is-secure-context-support';\nimport { createTestMediaStreamAudioSourceNodeMediaStreamWithoutAudioTrackSupport } from './factories/test-media-stream-audio-source-node-media-stream-without-audio-track-support';\nimport { createTestOfflineAudioContextCurrentTimeSupport } from './factories/test-offline-audio-context-current-time-support';\nimport { createTestStereoPannerNodeDefaultValueSupport } from './factories/test-stereo-panner-node-default-value-support';\nimport { createUnknownError } from './factories/unknown-error';\nimport { createWaveShaperNodeConstructor } from './factories/wave-shaper-node-constructor';\nimport { createWaveShaperNodeRendererFactory } from './factories/wave-shaper-node-renderer-factory';\nimport { createWindow } from './factories/window';\nimport { createWrapAudioBufferCopyChannelMethods } from './factories/wrap-audio-buffer-copy-channel-methods';\nimport { createWrapAudioBufferCopyChannelMethodsOutOfBounds } from './factories/wrap-audio-buffer-copy-channel-methods-out-of-bounds';\nimport { createWrapAudioBufferSourceNodeStopMethodNullifiedBuffer } from './factories/wrap-audio-buffer-source-node-stop-method-nullified-buffer';\nimport { createWrapChannelMergerNode } from './factories/wrap-channel-merger-node';\nimport {\n    AUDIO_NODE_CONNECTIONS_STORE,\n    AUDIO_NODE_STORE,\n    AUDIO_PARAM_CONNECTIONS_STORE,\n    AUDIO_PARAM_STORE,\n    CONTEXT_STORE,\n    CYCLE_COUNTERS\n} from './globals';\nimport { connectNativeAudioNodeToNativeAudioNode } from './helpers/connect-native-audio-node-to-native-audio-node';\nimport { disconnectNativeAudioNodeFromNativeAudioNode } from './helpers/disconnect-native-audio-node-from-native-audio-node';\nimport { getAudioNodeConnections } from './helpers/get-audio-node-connections';\nimport { getAudioParamConnections } from './helpers/get-audio-param-connections';\nimport { getEventListenersOfAudioNode } from './helpers/get-event-listeners-of-audio-node';\nimport { getNativeAudioNode } from './helpers/get-native-audio-node';\nimport { getNativeAudioParam } from './helpers/get-native-audio-param';\nimport { getValueForKey } from './helpers/get-value-for-key';\nimport { insertElementInSet } from './helpers/insert-element-in-set';\nimport { isActiveAudioNode } from './helpers/is-active-audio-node';\nimport { isDCCurve } from './helpers/is-dc-curve';\nimport { isPartOfACycle } from './helpers/is-part-of-a-cycle';\nimport { isPassiveAudioNode } from './helpers/is-passive-audio-node';\nimport { overwriteAccessors } from './helpers/overwrite-accessors';\nimport { pickElementFromSet } from './helpers/pick-element-from-set';\nimport { sanitizeAudioWorkletNodeOptions } from './helpers/sanitize-audio-worklet-node-options';\nimport { sanitizeChannelSplitterOptions } from './helpers/sanitize-channel-splitter-options';\nimport { sanitizePeriodicWaveOptions } from './helpers/sanitize-periodic-wave-options';\nimport { setValueAtTimeUntilPossible } from './helpers/set-value-at-time-until-possible';\nimport { testAudioBufferCopyChannelMethodsOutOfBoundsSupport } from './helpers/test-audio-buffer-copy-channel-methods-out-of-bounds-support';\nimport { testAudioBufferSourceNodeStartMethodConsecutiveCallsSupport } from './helpers/test-audio-buffer-source-node-start-method-consecutive-calls-support';\nimport { testAudioBufferSourceNodeStartMethodOffsetClampingSupport } from './helpers/test-audio-buffer-source-node-start-method-offset-clamping-support';\nimport { testAudioBufferSourceNodeStopMethodNullifiedBufferSupport } from './helpers/test-audio-buffer-source-node-stop-method-nullified-buffer-support';\nimport { testAudioScheduledSourceNodeStartMethodNegativeParametersSupport } from './helpers/test-audio-scheduled-source-node-start-method-negative-parameters-support';\nimport { testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport } from './helpers/test-audio-scheduled-source-node-stop-method-consecutive-calls-support';\nimport { testAudioScheduledSourceNodeStopMethodNegativeParametersSupport } from './helpers/test-audio-scheduled-source-node-stop-method-negative-parameters-support';\nimport { testDomExceptionConstructorSupport } from './helpers/test-dom-exception-constructor-support';\nimport { testPromiseSupport } from './helpers/test-promise-support';\nimport { testTransferablesSupport } from './helpers/test-transferables-support';\nimport { wrapAudioBufferSourceNodeStartMethodOffsetClamping } from './helpers/wrap-audio-buffer-source-node-start-method-offset-clamping';\nimport { wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls } from './helpers/wrap-audio-scheduled-source-node-stop-method-consecutive-calls';\nimport { wrapEventListener } from './helpers/wrap-event-listener';\nimport {\n    IAnalyserNode,\n    IAudioBuffer,\n    IAudioBufferSourceNode,\n    IAudioContext,\n    IAudioNode,\n    IAudioWorkletNode,\n    IBiquadFilterNode,\n    IConstantSourceNode,\n    IConvolverNode,\n    IDelayNode,\n    IDynamicsCompressorNode,\n    IGainNode,\n    IIIRFilterNode,\n    IMediaElementAudioSourceNode,\n    IMediaStreamAudioDestinationNode,\n    IMediaStreamAudioSourceNode,\n    IMediaStreamTrackAudioSourceNode,\n    IMinimalAudioContext,\n    IMinimalOfflineAudioContext,\n    IOfflineAudioContext,\n    IOfflineAudioContextConstructor,\n    IOscillatorNode,\n    IPannerNode,\n    IPeriodicWave,\n    IStereoPannerNode,\n    IWaveShaperNode\n} from './interfaces';\nimport {\n    TActiveAudioWorkletNodeInputsStore,\n    TAddAudioWorkletModuleFunction,\n    TAnalyserNodeConstructor,\n    TAudioBufferConstructor,\n    TAudioBufferSourceNodeConstructor,\n    TAudioBufferStore,\n    TAudioContextConstructor,\n    TAudioParamAudioNodeStore,\n    TAudioWorkletNodeConstructor,\n    TBackupOfflineAudioContextStore,\n    TBiquadFilterNodeConstructor,\n    TChannelMergerNodeConstructor,\n    TChannelSplitterNodeConstructor,\n    TConstantSourceNodeConstructor,\n    TContext,\n    TConvolverNodeConstructor,\n    TDecodeAudioDataFunction,\n    TDelayNodeConstructor,\n    TDynamicsCompressorNodeConstructor,\n    TGainNodeConstructor,\n    TIIRFilterNodeConstructor,\n    TMediaElementAudioSourceNodeConstructor,\n    TMediaStreamAudioDestinationNodeConstructor,\n    TMediaStreamAudioSourceNodeConstructor,\n    TMediaStreamTrackAudioSourceNodeConstructor,\n    TMinimalAudioContextConstructor,\n    TMinimalOfflineAudioContextConstructor,\n    TOscillatorNodeConstructor,\n    TPannerNodeConstructor,\n    TPeriodicWaveConstructor,\n    TStereoPannerNodeConstructor,\n    TUnrenderedAudioWorkletNodeStore,\n    TWaveShaperNodeConstructor\n} from './types';\n\n/*\n * @todo Explicitly referencing the barrel file seems to be necessary when enabling the\n * isolatedModules compiler option.\n */\nexport * from './interfaces/index';\nexport * from './types/index';\n\nconst addActiveInputConnectionToAudioNode = createAddActiveInputConnectionToAudioNode(insertElementInSet);\nconst addPassiveInputConnectionToAudioNode = createAddPassiveInputConnectionToAudioNode(insertElementInSet);\nconst deleteActiveInputConnectionToAudioNode = createDeleteActiveInputConnectionToAudioNode(pickElementFromSet);\nconst audioNodeTailTimeStore = new WeakMap();\nconst getAudioNodeTailTime = createGetAudioNodeTailTime(audioNodeTailTimeStore);\nconst cacheTestResult = createCacheTestResult(new Map(), new WeakMap());\nconst window = createWindow();\nconst createNativeAnalyserNode = createNativeAnalyserNodeFactory(cacheTestResult, createIndexSizeError);\nconst getAudioNodeRenderer = createGetAudioNodeRenderer(getAudioNodeConnections);\nconst renderInputsOfAudioNode = createRenderInputsOfAudioNode(getAudioNodeConnections, getAudioNodeRenderer, isPartOfACycle);\nconst createAnalyserNodeRenderer = createAnalyserNodeRendererFactory(createNativeAnalyserNode, getNativeAudioNode, renderInputsOfAudioNode);\nconst getNativeContext = createGetNativeContext(CONTEXT_STORE);\nconst nativeOfflineAudioContextConstructor = createNativeOfflineAudioContextConstructor(window);\nconst isNativeOfflineAudioContext = createIsNativeOfflineAudioContext(nativeOfflineAudioContextConstructor);\nconst audioParamAudioNodeStore: TAudioParamAudioNodeStore = new WeakMap();\nconst eventTargetConstructor = createEventTargetConstructor(wrapEventListener);\nconst nativeAudioContextConstructor = createNativeAudioContextConstructor(window);\nconst isNativeAudioContext = createIsNativeAudioContext(nativeAudioContextConstructor);\nconst isNativeAudioNode = createIsNativeAudioNode(window);\nconst isNativeAudioParam = createIsNativeAudioParam(window);\nconst audioNodeConstructor = createAudioNodeConstructor(\n    createAddAudioNodeConnections(AUDIO_NODE_CONNECTIONS_STORE),\n    createAddConnectionToAudioNode(\n        addActiveInputConnectionToAudioNode,\n        addPassiveInputConnectionToAudioNode,\n        connectNativeAudioNodeToNativeAudioNode,\n        deleteActiveInputConnectionToAudioNode,\n        disconnectNativeAudioNodeFromNativeAudioNode,\n        getAudioNodeConnections,\n        getAudioNodeTailTime,\n        getEventListenersOfAudioNode,\n        getNativeAudioNode,\n        insertElementInSet,\n        isActiveAudioNode,\n        isPartOfACycle,\n        isPassiveAudioNode\n    ),\n    cacheTestResult,\n    createIncrementCycleCounterFactory(\n        CYCLE_COUNTERS,\n        disconnectNativeAudioNodeFromNativeAudioNode,\n        getAudioNodeConnections,\n        getNativeAudioNode,\n        getNativeAudioParam,\n        isActiveAudioNode\n    ),\n    createIndexSizeError,\n    createInvalidAccessError,\n    createNotSupportedError,\n    createDecrementCycleCounter(\n        connectNativeAudioNodeToNativeAudioNode,\n        CYCLE_COUNTERS,\n        getAudioNodeConnections,\n        getNativeAudioNode,\n        getNativeAudioParam,\n        getNativeContext,\n        isActiveAudioNode,\n        isNativeOfflineAudioContext\n    ),\n    createDetectCycles(audioParamAudioNodeStore, getAudioNodeConnections, getValueForKey),\n    eventTargetConstructor,\n    getNativeContext,\n    isNativeAudioContext,\n    isNativeAudioNode,\n    isNativeAudioParam,\n    isNativeOfflineAudioContext\n);\nconst analyserNodeConstructor: TAnalyserNodeConstructor = createAnalyserNodeConstructor(\n    audioNodeConstructor,\n    createAnalyserNodeRenderer,\n    createIndexSizeError,\n    createNativeAnalyserNode,\n    getNativeContext,\n    isNativeOfflineAudioContext\n);\n\ntype analyserNodeConstructor<T extends TContext> = IAnalyserNode<T>;\n\nexport { analyserNodeConstructor as AnalyserNode };\n\nconst audioBufferStore: TAudioBufferStore = new WeakSet();\nconst nativeAudioBufferConstructor = createNativeAudioBufferConstructor(window);\nconst convertNumberToUnsignedLong = createConvertNumberToUnsignedLong(new Uint32Array(1));\nconst wrapAudioBufferCopyChannelMethods = createWrapAudioBufferCopyChannelMethods(convertNumberToUnsignedLong, createIndexSizeError);\nconst wrapAudioBufferCopyChannelMethodsOutOfBounds = createWrapAudioBufferCopyChannelMethodsOutOfBounds(convertNumberToUnsignedLong);\nconst audioBufferConstructor: TAudioBufferConstructor = createAudioBufferConstructor(\n    audioBufferStore,\n    cacheTestResult,\n    createNotSupportedError,\n    nativeAudioBufferConstructor,\n    nativeOfflineAudioContextConstructor,\n    createTestAudioBufferConstructorSupport(nativeAudioBufferConstructor),\n    wrapAudioBufferCopyChannelMethods,\n    wrapAudioBufferCopyChannelMethodsOutOfBounds\n);\n\ntype audioBufferConstructor = IAudioBuffer;\n\nexport { audioBufferConstructor as AudioBuffer };\n\nconst addSilentConnection = createAddSilentConnection(createNativeGainNode);\nconst renderInputsOfAudioParam = createRenderInputsOfAudioParam(getAudioNodeRenderer, getAudioParamConnections, isPartOfACycle);\nconst connectAudioParam = createConnectAudioParam(renderInputsOfAudioParam);\nconst createNativeAudioBufferSourceNode = createNativeAudioBufferSourceNodeFactory(\n    addSilentConnection,\n    cacheTestResult,\n    testAudioBufferSourceNodeStartMethodConsecutiveCallsSupport,\n    testAudioBufferSourceNodeStartMethodOffsetClampingSupport,\n    testAudioBufferSourceNodeStopMethodNullifiedBufferSupport,\n    testAudioScheduledSourceNodeStartMethodNegativeParametersSupport,\n    testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport,\n    testAudioScheduledSourceNodeStopMethodNegativeParametersSupport,\n    wrapAudioBufferSourceNodeStartMethodOffsetClamping,\n    createWrapAudioBufferSourceNodeStopMethodNullifiedBuffer(overwriteAccessors),\n    wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls\n);\nconst renderAutomation = createRenderAutomation(createGetAudioParamRenderer(getAudioParamConnections), renderInputsOfAudioParam);\nconst createAudioBufferSourceNodeRenderer = createAudioBufferSourceNodeRendererFactory(\n    connectAudioParam,\n    createNativeAudioBufferSourceNode,\n    getNativeAudioNode,\n    renderAutomation,\n    renderInputsOfAudioNode\n);\nconst createAudioParam = createAudioParamFactory(\n    createAddAudioParamConnections(AUDIO_PARAM_CONNECTIONS_STORE),\n    audioParamAudioNodeStore,\n    AUDIO_PARAM_STORE,\n    createAudioParamRenderer,\n    createCancelAndHoldAutomationEvent,\n    createCancelScheduledValuesAutomationEvent,\n    createExponentialRampToValueAutomationEvent,\n    createLinearRampToValueAutomationEvent,\n    createSetTargetAutomationEvent,\n    createSetValueAutomationEvent,\n    createSetValueCurveAutomationEvent,\n    nativeAudioContextConstructor,\n    setValueAtTimeUntilPossible\n);\nconst audioBufferSourceNodeConstructor: TAudioBufferSourceNodeConstructor = createAudioBufferSourceNodeConstructor(\n    audioNodeConstructor,\n    createAudioBufferSourceNodeRenderer,\n    createAudioParam,\n    createInvalidStateError,\n    createNativeAudioBufferSourceNode,\n    getNativeContext,\n    isNativeOfflineAudioContext,\n    wrapEventListener\n);\n\ntype audioBufferSourceNodeConstructor<T extends TContext> = IAudioBufferSourceNode<T>;\n\nexport { audioBufferSourceNodeConstructor as AudioBufferSourceNode };\n\nconst audioDestinationNodeConstructor = createAudioDestinationNodeConstructor(\n    audioNodeConstructor,\n    createAudioDestinationNodeRenderer,\n    createIndexSizeError,\n    createInvalidStateError,\n    createNativeAudioDestinationNodeFactory(createNativeGainNode, overwriteAccessors),\n    getNativeContext,\n    isNativeOfflineAudioContext,\n    renderInputsOfAudioNode\n);\nconst createBiquadFilterNodeRenderer = createBiquadFilterNodeRendererFactory(\n    connectAudioParam,\n    createNativeBiquadFilterNode,\n    getNativeAudioNode,\n    renderAutomation,\n    renderInputsOfAudioNode\n);\nconst setAudioNodeTailTime = createSetAudioNodeTailTime(audioNodeTailTimeStore);\nconst biquadFilterNodeConstructor: TBiquadFilterNodeConstructor = createBiquadFilterNodeConstructor(\n    audioNodeConstructor,\n    createAudioParam,\n    createBiquadFilterNodeRenderer,\n    createInvalidAccessError,\n    createNativeBiquadFilterNode,\n    getNativeContext,\n    isNativeOfflineAudioContext,\n    setAudioNodeTailTime\n);\nconst monitorConnections = createMonitorConnections(insertElementInSet, isNativeAudioNode);\nconst wrapChannelMergerNode = createWrapChannelMergerNode(createInvalidStateError, monitorConnections);\nconst createNativeChannelMergerNode = createNativeChannelMergerNodeFactory(nativeAudioContextConstructor, wrapChannelMergerNode);\nconst createChannelMergerNodeRenderer = createChannelMergerNodeRendererFactory(\n    createNativeChannelMergerNode,\n    getNativeAudioNode,\n    renderInputsOfAudioNode\n);\nconst channelMergerNodeConstructor: TChannelMergerNodeConstructor = createChannelMergerNodeConstructor(\n    audioNodeConstructor,\n    createChannelMergerNodeRenderer,\n    createNativeChannelMergerNode,\n    getNativeContext,\n    isNativeOfflineAudioContext\n);\nconst createChannelSplitterNodeRenderer = createChannelSplitterNodeRendererFactory(\n    createNativeChannelSplitterNode,\n    getNativeAudioNode,\n    renderInputsOfAudioNode\n);\nconst channelSplitterNodeConstructor: TChannelSplitterNodeConstructor = createChannelSplitterNodeConstructor(\n    audioNodeConstructor,\n    createChannelSplitterNodeRenderer,\n    createNativeChannelSplitterNode,\n    getNativeContext,\n    isNativeOfflineAudioContext,\n    sanitizeChannelSplitterOptions\n);\nconst createNativeConstantSourceNodeFaker = createNativeConstantSourceNodeFakerFactory(\n    addSilentConnection,\n    createNativeAudioBufferSourceNode,\n    createNativeGainNode,\n    monitorConnections\n);\nconst createNativeConstantSourceNode = createNativeConstantSourceNodeFactory(\n    addSilentConnection,\n    cacheTestResult,\n    createNativeConstantSourceNodeFaker,\n    testAudioScheduledSourceNodeStartMethodNegativeParametersSupport,\n    testAudioScheduledSourceNodeStopMethodNegativeParametersSupport\n);\nconst createConstantSourceNodeRenderer = createConstantSourceNodeRendererFactory(\n    connectAudioParam,\n    createNativeConstantSourceNode,\n    getNativeAudioNode,\n    renderAutomation,\n    renderInputsOfAudioNode\n);\nconst constantSourceNodeConstructor: TConstantSourceNodeConstructor = createConstantSourceNodeConstructor(\n    audioNodeConstructor,\n    createAudioParam,\n    createConstantSourceNodeRenderer,\n    createNativeConstantSourceNode,\n    getNativeContext,\n    isNativeOfflineAudioContext,\n    wrapEventListener\n);\nconst createNativeConvolverNode = createNativeConvolverNodeFactory(createNotSupportedError, overwriteAccessors);\nconst createConvolverNodeRenderer = createConvolverNodeRendererFactory(\n    createNativeConvolverNode,\n    getNativeAudioNode,\n    renderInputsOfAudioNode\n);\nconst convolverNodeConstructor: TConvolverNodeConstructor = createConvolverNodeConstructor(\n    audioNodeConstructor,\n    createConvolverNodeRenderer,\n    createNativeConvolverNode,\n    getNativeContext,\n    isNativeOfflineAudioContext,\n    setAudioNodeTailTime\n);\nconst createDelayNodeRenderer = createDelayNodeRendererFactory(\n    connectAudioParam,\n    createNativeDelayNode,\n    getNativeAudioNode,\n    renderAutomation,\n    renderInputsOfAudioNode\n);\nconst delayNodeConstructor: TDelayNodeConstructor = createDelayNodeConstructor(\n    audioNodeConstructor,\n    createAudioParam,\n    createDelayNodeRenderer,\n    createNativeDelayNode,\n    getNativeContext,\n    isNativeOfflineAudioContext,\n    setAudioNodeTailTime\n);\nconst createNativeDynamicsCompressorNode = createNativeDynamicsCompressorNodeFactory(createNotSupportedError);\nconst createDynamicsCompressorNodeRenderer = createDynamicsCompressorNodeRendererFactory(\n    connectAudioParam,\n    createNativeDynamicsCompressorNode,\n    getNativeAudioNode,\n    renderAutomation,\n    renderInputsOfAudioNode\n);\nconst dynamicsCompressorNodeConstructor: TDynamicsCompressorNodeConstructor = createDynamicsCompressorNodeConstructor(\n    audioNodeConstructor,\n    createAudioParam,\n    createDynamicsCompressorNodeRenderer,\n    createNativeDynamicsCompressorNode,\n    createNotSupportedError,\n    getNativeContext,\n    isNativeOfflineAudioContext,\n    setAudioNodeTailTime\n);\nconst createGainNodeRenderer = createGainNodeRendererFactory(\n    connectAudioParam,\n    createNativeGainNode,\n    getNativeAudioNode,\n    renderAutomation,\n    renderInputsOfAudioNode\n);\nconst gainNodeConstructor: TGainNodeConstructor = createGainNodeConstructor(\n    audioNodeConstructor,\n    createAudioParam,\n    createGainNodeRenderer,\n    createNativeGainNode,\n    getNativeContext,\n    isNativeOfflineAudioContext\n);\nconst createNativeIIRFilterNodeFaker = createNativeIIRFilterNodeFakerFactory(\n    createInvalidAccessError,\n    createInvalidStateError,\n    createNativeScriptProcessorNode,\n    createNotSupportedError\n);\nconst renderNativeOfflineAudioContext = createRenderNativeOfflineAudioContext(\n    cacheTestResult,\n    createNativeGainNode,\n    createNativeScriptProcessorNode,\n    createTestOfflineAudioContextCurrentTimeSupport(createNativeGainNode, nativeOfflineAudioContextConstructor)\n);\nconst createIIRFilterNodeRenderer = createIIRFilterNodeRendererFactory(\n    createNativeAudioBufferSourceNode,\n    getNativeAudioNode,\n    nativeOfflineAudioContextConstructor,\n    renderInputsOfAudioNode,\n    renderNativeOfflineAudioContext\n);\nconst createNativeIIRFilterNode = createNativeIIRFilterNodeFactory(createNativeIIRFilterNodeFaker);\nconst iIRFilterNodeConstructor: TIIRFilterNodeConstructor = createIIRFilterNodeConstructor(\n    audioNodeConstructor,\n    createNativeIIRFilterNode,\n    createIIRFilterNodeRenderer,\n    getNativeContext,\n    isNativeOfflineAudioContext,\n    setAudioNodeTailTime\n);\nconst createAudioListener = createAudioListenerFactory(\n    createAudioParam,\n    createNativeChannelMergerNode,\n    createNativeConstantSourceNode,\n    createNativeScriptProcessorNode,\n    isNativeOfflineAudioContext\n);\nconst unrenderedAudioWorkletNodeStore: TUnrenderedAudioWorkletNodeStore = new WeakMap();\nconst minimalBaseAudioContextConstructor = createMinimalBaseAudioContextConstructor(\n    audioDestinationNodeConstructor,\n    createAudioListener,\n    eventTargetConstructor,\n    isNativeOfflineAudioContext,\n    unrenderedAudioWorkletNodeStore,\n    wrapEventListener\n);\nconst createNativeOscillatorNode = createNativeOscillatorNodeFactory(\n    addSilentConnection,\n    cacheTestResult,\n    testAudioScheduledSourceNodeStartMethodNegativeParametersSupport,\n    testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport,\n    testAudioScheduledSourceNodeStopMethodNegativeParametersSupport,\n    wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls\n);\nconst createOscillatorNodeRenderer = createOscillatorNodeRendererFactory(\n    connectAudioParam,\n    createNativeOscillatorNode,\n    getNativeAudioNode,\n    renderAutomation,\n    renderInputsOfAudioNode\n);\nconst oscillatorNodeConstructor: TOscillatorNodeConstructor = createOscillatorNodeConstructor(\n    audioNodeConstructor,\n    createAudioParam,\n    createNativeOscillatorNode,\n    createOscillatorNodeRenderer,\n    getNativeContext,\n    isNativeOfflineAudioContext,\n    wrapEventListener\n);\nconst createConnectedNativeAudioBufferSourceNode = createConnectedNativeAudioBufferSourceNodeFactory(createNativeAudioBufferSourceNode);\nconst createNativeWaveShaperNodeFaker = createNativeWaveShaperNodeFakerFactory(\n    createConnectedNativeAudioBufferSourceNode,\n    createInvalidStateError,\n    createNativeGainNode,\n    isDCCurve,\n    monitorConnections\n);\nconst createNativeWaveShaperNode = createNativeWaveShaperNodeFactory(\n    createConnectedNativeAudioBufferSourceNode,\n    createInvalidStateError,\n    createNativeWaveShaperNodeFaker,\n    isDCCurve,\n    monitorConnections,\n    nativeAudioContextConstructor,\n    overwriteAccessors\n);\nconst createNativePannerNodeFaker = createNativePannerNodeFakerFactory(\n    connectNativeAudioNodeToNativeAudioNode,\n    createInvalidStateError,\n    createNativeChannelMergerNode,\n    createNativeGainNode,\n    createNativeScriptProcessorNode,\n    createNativeWaveShaperNode,\n    createNotSupportedError,\n    disconnectNativeAudioNodeFromNativeAudioNode,\n    monitorConnections\n);\nconst createNativePannerNode = createNativePannerNodeFactory(createNativePannerNodeFaker);\nconst createPannerNodeRenderer = createPannerNodeRendererFactory(\n    connectAudioParam,\n    createNativeChannelMergerNode,\n    createNativeConstantSourceNode,\n    createNativeGainNode,\n    createNativePannerNode,\n    getNativeAudioNode,\n    nativeOfflineAudioContextConstructor,\n    renderAutomation,\n    renderInputsOfAudioNode,\n    renderNativeOfflineAudioContext\n);\nconst pannerNodeConstructor: TPannerNodeConstructor = createPannerNodeConstructor(\n    audioNodeConstructor,\n    createAudioParam,\n    createNativePannerNode,\n    createPannerNodeRenderer,\n    getNativeContext,\n    isNativeOfflineAudioContext,\n    setAudioNodeTailTime\n);\nconst createNativePeriodicWave = createNativePeriodicWaveFactory(createIndexSizeError);\nconst periodicWaveConstructor: TPeriodicWaveConstructor = createPeriodicWaveConstructor(\n    createNativePeriodicWave,\n    getNativeContext,\n    new WeakSet(),\n    sanitizePeriodicWaveOptions\n);\nconst nativeStereoPannerNodeFakerFactory = createNativeStereoPannerNodeFakerFactory(\n    createNativeChannelMergerNode,\n    createNativeChannelSplitterNode,\n    createNativeGainNode,\n    createNativeWaveShaperNode,\n    createNotSupportedError,\n    monitorConnections\n);\nconst createNativeStereoPannerNode = createNativeStereoPannerNodeFactory(nativeStereoPannerNodeFakerFactory, createNotSupportedError);\nconst createStereoPannerNodeRenderer = createStereoPannerNodeRendererFactory(\n    connectAudioParam,\n    createNativeStereoPannerNode,\n    getNativeAudioNode,\n    renderAutomation,\n    renderInputsOfAudioNode\n);\nconst stereoPannerNodeConstructor: TStereoPannerNodeConstructor = createStereoPannerNodeConstructor(\n    audioNodeConstructor,\n    createAudioParam,\n    createNativeStereoPannerNode,\n    createStereoPannerNodeRenderer,\n    getNativeContext,\n    isNativeOfflineAudioContext\n);\nconst createWaveShaperNodeRenderer = createWaveShaperNodeRendererFactory(\n    createNativeWaveShaperNode,\n    getNativeAudioNode,\n    renderInputsOfAudioNode\n);\nconst waveShaperNodeConstructor: TWaveShaperNodeConstructor = createWaveShaperNodeConstructor(\n    audioNodeConstructor,\n    createInvalidStateError,\n    createNativeWaveShaperNode,\n    createWaveShaperNodeRenderer,\n    getNativeContext,\n    isNativeOfflineAudioContext,\n    setAudioNodeTailTime\n);\nconst isSecureContext = createIsSecureContext(window);\nconst exposeCurrentFrameAndCurrentTime = createExposeCurrentFrameAndCurrentTime(window);\nconst backupOfflineAudioContextStore: TBackupOfflineAudioContextStore = new WeakMap();\nconst getOrCreateBackupOfflineAudioContext = createGetOrCreateBackupOfflineAudioContext(\n    backupOfflineAudioContextStore,\n    nativeOfflineAudioContextConstructor\n);\nconst nativeAudioWorkletNodeConstructor = createNativeAudioWorkletNodeConstructor(window);\n\n// The addAudioWorkletModule() function is only available in a SecureContext.\nexport const addAudioWorkletModule: undefined | TAddAudioWorkletModuleFunction = isSecureContext\n    ? createAddAudioWorkletModule(\n          cacheTestResult,\n          createNotSupportedError,\n          createEvaluateSource(window),\n          exposeCurrentFrameAndCurrentTime,\n          createFetchSource(createAbortError),\n          getNativeContext,\n          getOrCreateBackupOfflineAudioContext,\n          isNativeOfflineAudioContext,\n          new WeakMap(),\n          new WeakMap(),\n          createTestAudioWorkletProcessorPostMessageSupport(nativeAudioWorkletNodeConstructor, nativeOfflineAudioContextConstructor),\n          // @todo window is guaranteed to be defined because isSecureContext checks that as well.\n          <NonNullable<typeof window>>window\n      )\n    : undefined;\n\nconst isNativeContext = createIsNativeContext(isNativeAudioContext, isNativeOfflineAudioContext);\n\nexport const decodeAudioData: TDecodeAudioDataFunction = createDecodeAudioData(\n    audioBufferStore,\n    cacheTestResult,\n    createDataCloneError,\n    createEncodingError,\n    new WeakSet(),\n    getNativeContext,\n    isNativeContext,\n    testAudioBufferCopyChannelMethodsOutOfBoundsSupport,\n    testPromiseSupport,\n    wrapAudioBufferCopyChannelMethods,\n    wrapAudioBufferCopyChannelMethodsOutOfBounds\n);\n\nconst baseAudioContextConstructor = createBaseAudioContextConstructor(\n    addAudioWorkletModule,\n    analyserNodeConstructor,\n    audioBufferConstructor,\n    audioBufferSourceNodeConstructor,\n    biquadFilterNodeConstructor,\n    channelMergerNodeConstructor,\n    channelSplitterNodeConstructor,\n    constantSourceNodeConstructor,\n    convolverNodeConstructor,\n    decodeAudioData,\n    delayNodeConstructor,\n    dynamicsCompressorNodeConstructor,\n    gainNodeConstructor,\n    iIRFilterNodeConstructor,\n    minimalBaseAudioContextConstructor,\n    oscillatorNodeConstructor,\n    pannerNodeConstructor,\n    periodicWaveConstructor,\n    stereoPannerNodeConstructor,\n    waveShaperNodeConstructor\n);\nconst mediaElementAudioSourceNodeConstructor: TMediaElementAudioSourceNodeConstructor = createMediaElementAudioSourceNodeConstructor(\n    audioNodeConstructor,\n    createNativeMediaElementAudioSourceNode,\n    getNativeContext,\n    isNativeOfflineAudioContext\n);\nconst mediaStreamAudioDestinationNodeConstructor: TMediaStreamAudioDestinationNodeConstructor = createMediaStreamAudioDestinationNodeConstructor(\n    audioNodeConstructor,\n    createNativeMediaStreamAudioDestinationNode,\n    getNativeContext,\n    isNativeOfflineAudioContext\n);\nconst mediaStreamAudioSourceNodeConstructor: TMediaStreamAudioSourceNodeConstructor = createMediaStreamAudioSourceNodeConstructor(\n    audioNodeConstructor,\n    createNativeMediaStreamAudioSourceNode,\n    getNativeContext,\n    isNativeOfflineAudioContext\n);\nconst createNativeMediaStreamTrackAudioSourceNode = createNativeMediaStreamTrackAudioSourceNodeFactory(\n    createInvalidStateError,\n    isNativeOfflineAudioContext\n);\nconst mediaStreamTrackAudioSourceNodeConstructor: TMediaStreamTrackAudioSourceNodeConstructor = createMediaStreamTrackAudioSourceNodeConstructor(\n    audioNodeConstructor,\n    createNativeMediaStreamTrackAudioSourceNode,\n    getNativeContext\n);\nconst audioContextConstructor: TAudioContextConstructor = createAudioContextConstructor(\n    baseAudioContextConstructor,\n    createInvalidStateError,\n    createNotSupportedError,\n    createUnknownError,\n    mediaElementAudioSourceNodeConstructor,\n    mediaStreamAudioDestinationNodeConstructor,\n    mediaStreamAudioSourceNodeConstructor,\n    mediaStreamTrackAudioSourceNodeConstructor,\n    nativeAudioContextConstructor\n);\n\ntype audioContextConstructor = IAudioContext;\n\nexport { audioContextConstructor as AudioContext };\n\nconst getUnrenderedAudioWorkletNodes = createGetUnrenderedAudioWorkletNodes(unrenderedAudioWorkletNodeStore);\nconst addUnrenderedAudioWorkletNode = createAddUnrenderedAudioWorkletNode(getUnrenderedAudioWorkletNodes);\nconst connectMultipleOutputs = createConnectMultipleOutputs(createIndexSizeError);\nconst deleteUnrenderedAudioWorkletNode = createDeleteUnrenderedAudioWorkletNode(getUnrenderedAudioWorkletNodes);\nconst disconnectMultipleOutputs = createDisconnectMultipleOutputs(createIndexSizeError);\nconst activeAudioWorkletNodeInputsStore: TActiveAudioWorkletNodeInputsStore = new WeakMap();\nconst getActiveAudioWorkletNodeInputs = createGetActiveAudioWorkletNodeInputs(activeAudioWorkletNodeInputsStore, getValueForKey);\nconst createNativeAudioWorkletNodeFaker = createNativeAudioWorkletNodeFakerFactory(\n    connectMultipleOutputs,\n    createIndexSizeError,\n    createInvalidStateError,\n    createNativeChannelMergerNode,\n    createNativeChannelSplitterNode,\n    createNativeConstantSourceNode,\n    createNativeGainNode,\n    createNativeScriptProcessorNode,\n    createNotSupportedError,\n    disconnectMultipleOutputs,\n    exposeCurrentFrameAndCurrentTime,\n    getActiveAudioWorkletNodeInputs,\n    monitorConnections\n);\nconst createNativeAudioWorkletNode = createNativeAudioWorkletNodeFactory(\n    createInvalidStateError,\n    createNativeAudioWorkletNodeFaker,\n    createNativeGainNode,\n    createNotSupportedError,\n    monitorConnections\n);\nconst createAudioWorkletNodeRenderer = createAudioWorkletNodeRendererFactory(\n    connectAudioParam,\n    connectMultipleOutputs,\n    createNativeAudioBufferSourceNode,\n    createNativeChannelMergerNode,\n    createNativeChannelSplitterNode,\n    createNativeConstantSourceNode,\n    createNativeGainNode,\n    deleteUnrenderedAudioWorkletNode,\n    disconnectMultipleOutputs,\n    exposeCurrentFrameAndCurrentTime,\n    getNativeAudioNode,\n    nativeAudioWorkletNodeConstructor,\n    nativeOfflineAudioContextConstructor,\n    renderAutomation,\n    renderInputsOfAudioNode,\n    renderNativeOfflineAudioContext\n);\nconst getBackupOfflineAudioContext = createGetBackupOfflineAudioContext(backupOfflineAudioContextStore);\nconst setActiveAudioWorkletNodeInputs = createSetActiveAudioWorkletNodeInputs(activeAudioWorkletNodeInputsStore);\n\n// The AudioWorkletNode constructor is only available in a SecureContext.\nconst audioWorkletNodeConstructor: undefined | TAudioWorkletNodeConstructor = isSecureContext\n    ? createAudioWorkletNodeConstructor(\n          addUnrenderedAudioWorkletNode,\n          audioNodeConstructor,\n          createAudioParam,\n          createAudioWorkletNodeRenderer,\n          createNativeAudioWorkletNode,\n          getAudioNodeConnections,\n          getBackupOfflineAudioContext,\n          getNativeContext,\n          isNativeOfflineAudioContext,\n          nativeAudioWorkletNodeConstructor,\n          sanitizeAudioWorkletNodeOptions,\n          setActiveAudioWorkletNodeInputs,\n          wrapEventListener\n      )\n    : undefined;\n\ntype audioWorkletNodeConstructor<T extends TContext> = undefined | IAudioWorkletNode<T>;\n\nexport { audioWorkletNodeConstructor as AudioWorkletNode };\n\ntype biquadFilterNodeConstructor<T extends TContext> = IBiquadFilterNode<T>;\n\nexport { biquadFilterNodeConstructor as BiquadFilterNode };\n\ntype channelMergerNodeConstructor<T extends TContext> = IAudioNode<T>;\n\nexport { channelMergerNodeConstructor as ChannelMergerNode };\n\ntype channelSplitterNodeConstructor<T extends TContext> = IAudioNode<T>;\n\nexport { channelSplitterNodeConstructor as ChannelSplitterNode };\n\ntype constantSourceNodeConstructor<T extends TContext> = IConstantSourceNode<T>;\n\nexport { convolverNodeConstructor as ConvolverNode };\n\ntype convolverNodeConstructor<T extends TContext> = IConvolverNode<T>;\n\nexport { constantSourceNodeConstructor as ConstantSourceNode };\n\ntype delayNodeConstructor<T extends TContext> = IDelayNode<T>;\n\nexport { delayNodeConstructor as DelayNode };\n\ntype dynamicsCompressorNodeConstructor<T extends TContext> = IDynamicsCompressorNode<T>;\n\nexport { dynamicsCompressorNodeConstructor as DynamicsCompressorNode };\n\ntype gainNodeConstructor<T extends TContext> = IGainNode<T>;\n\nexport { gainNodeConstructor as GainNode };\n\ntype iIRFilterNodeConstructor<T extends TContext> = IIIRFilterNode<T>;\n\nexport { iIRFilterNodeConstructor as IIRFilterNode };\n\ntype mediaElementAudioSourceNodeConstructor<T extends IAudioContext | IMinimalAudioContext> = IMediaElementAudioSourceNode<T>;\n\nexport { mediaElementAudioSourceNodeConstructor as MediaElementAudioSourceNode };\n\ntype mediaStreamAudioDestinationNodeConstructor<T extends IAudioContext | IMinimalAudioContext> = IMediaStreamAudioDestinationNode<T>;\n\nexport { mediaStreamAudioDestinationNodeConstructor as MediaStreamAudioDestinationNode };\n\ntype mediaStreamAudioSourceNodeConstructor<T extends IAudioContext | IMinimalAudioContext> = IMediaStreamAudioSourceNode<T>;\n\nexport { mediaStreamAudioSourceNodeConstructor as MediaStreamAudioSourceNode };\n\ntype mediaStreamTrackAudioSourceNodeConstructor<T extends IAudioContext | IMinimalAudioContext> = IMediaStreamTrackAudioSourceNode<T>;\n\nexport { mediaStreamTrackAudioSourceNodeConstructor as MediaStreamTrackAudioSourceNode };\n\nconst minimalAudioContextConstructor: TMinimalAudioContextConstructor = createMinimalAudioContextConstructor(\n    createInvalidStateError,\n    createNotSupportedError,\n    createUnknownError,\n    minimalBaseAudioContextConstructor,\n    nativeAudioContextConstructor\n);\n\ntype minimalAudioContextConstructor = IMinimalAudioContext;\n\nexport { minimalAudioContextConstructor as MinimalAudioContext };\n\nconst createNativeOfflineAudioContext = createCreateNativeOfflineAudioContext(\n    createNotSupportedError,\n    nativeOfflineAudioContextConstructor\n);\nconst startRendering = createStartRendering(\n    audioBufferStore,\n    cacheTestResult,\n    getAudioNodeRenderer,\n    getUnrenderedAudioWorkletNodes,\n    renderNativeOfflineAudioContext,\n    testAudioBufferCopyChannelMethodsOutOfBoundsSupport,\n    wrapAudioBufferCopyChannelMethods,\n    wrapAudioBufferCopyChannelMethodsOutOfBounds\n);\nconst minimalOfflineAudioContextConstructor: TMinimalOfflineAudioContextConstructor = createMinimalOfflineAudioContextConstructor(\n    cacheTestResult,\n    createInvalidStateError,\n    createNativeOfflineAudioContext,\n    minimalBaseAudioContextConstructor,\n    startRendering\n);\n\ntype minimalOfflineAudioContextConstructor = IMinimalOfflineAudioContext;\n\nexport { minimalOfflineAudioContextConstructor as MinimalOfflineAudioContext };\n\nconst offlineAudioContextConstructor: IOfflineAudioContextConstructor = createOfflineAudioContextConstructor(\n    baseAudioContextConstructor,\n    cacheTestResult,\n    createInvalidStateError,\n    createNativeOfflineAudioContext,\n    startRendering\n);\n\ntype offlineAudioContextConstructor = IOfflineAudioContext;\n\nexport { offlineAudioContextConstructor as OfflineAudioContext };\n\ntype oscillatorNodeConstructor<T extends TContext> = IOscillatorNode<T>;\n\nexport { oscillatorNodeConstructor as OscillatorNode };\n\ntype pannerNodeConstructor<T extends TContext> = IPannerNode<T>;\n\nexport { pannerNodeConstructor as PannerNode };\n\ntype periodicWaveConstructor = IPeriodicWave;\n\nexport { periodicWaveConstructor as PeriodicWave };\n\ntype stereoPannerNodeConstructor<T extends TContext> = IStereoPannerNode<T>;\n\nexport { stereoPannerNodeConstructor as StereoPannerNode };\n\ntype waveShaperNodeConstructor<T extends TContext> = IWaveShaperNode<T>;\n\nexport { waveShaperNodeConstructor as WaveShaperNode };\n\nexport const isAnyAudioContext = createIsAnyAudioContext(CONTEXT_STORE, isNativeAudioContext);\n\nexport const isAnyAudioNode = createIsAnyAudioNode(AUDIO_NODE_STORE, isNativeAudioNode);\n\nexport const isAnyAudioParam = createIsAnyAudioParam(AUDIO_PARAM_STORE, isNativeAudioParam);\n\nexport const isAnyOfflineAudioContext = createIsAnyOfflineAudioContext(CONTEXT_STORE, isNativeOfflineAudioContext);\n\nexport const isSupported = () =>\n    createIsSupportedPromise(\n        cacheTestResult,\n        createTestAudioBufferCopyChannelMethodsSubarraySupport(nativeOfflineAudioContextConstructor),\n        createTestAudioContextCloseMethodSupport(nativeAudioContextConstructor),\n        createTestAudioContextDecodeAudioDataMethodTypeErrorSupport(nativeOfflineAudioContextConstructor),\n        createTestAudioContextOptionsSupport(nativeAudioContextConstructor),\n        createTestAudioNodeConnectMethodSupport(nativeOfflineAudioContextConstructor),\n        createTestAudioWorkletProcessorNoOutputsSupport(nativeAudioWorkletNodeConstructor, nativeOfflineAudioContextConstructor),\n        createTestChannelMergerNodeChannelCountSupport(nativeOfflineAudioContextConstructor),\n        createTestConstantSourceNodeAccurateSchedulingSupport(nativeOfflineAudioContextConstructor),\n        createTestConvolverNodeBufferReassignabilitySupport(nativeOfflineAudioContextConstructor),\n        createTestConvolverNodeChannelCountSupport(nativeOfflineAudioContextConstructor),\n        testDomExceptionConstructorSupport,\n        createTestIsSecureContextSupport(window),\n        createTestMediaStreamAudioSourceNodeMediaStreamWithoutAudioTrackSupport(nativeAudioContextConstructor),\n        createTestStereoPannerNodeDefaultValueSupport(nativeOfflineAudioContextConstructor),\n        testTransferablesSupport\n    );\n","/**\n * Assert that the statement is true, otherwise invoke the error.\n * @param statement\n * @param error The message which is passed into an Error\n */\nexport function assert(statement: boolean, error: string): void {\n\tif (!statement) {\n\t\tthrow new Error(error);\n\t}\n}\n\n/**\n * Make sure that the given value is within the range\n */\nexport function assertRange(value: number, gte: number, lte = Infinity): void {\n\tif (!(gte <= value && value <= lte)) {\n\t\tthrow new RangeError(`Value must be within [${gte}, ${lte}], got: ${value}`);\n\t}\n}\n\n/**\n * Make sure that the given value is within the range\n */\nexport function assertContextRunning(context: import(\"../context/BaseContext\").BaseContext): void {\n\t// add a warning if the context is not started\n\tif (!context.isOffline && context.state !== \"running\") {\n\t\twarn(\"The AudioContext is \\\"suspended\\\". Invoke Tone.start() from a user action to start the audio.\");\n\t}\n}\n\n/**\n * A basic logging interface\n */\ninterface Logger {\n\tlog: (args?: any[]) => void;\n\twarn: (args?: any[]) => void;\n}\n\n/**\n * The default logger is the console\n */\nlet defaultLogger: Logger = console;\n\n/**\n * Set the logging interface\n */\nexport function setLogger(logger: Logger): void {\n\tdefaultLogger = logger;\n}\n\n/**\n * Log anything\n */\nexport function log(...args: any[]): void {\n\tdefaultLogger.log(...args);\n}\n\n/**\n * Warn anything\n */\nexport function warn(...args: any[]): void {\n\tdefaultLogger.warn(...args);\n}\n","import { Note } from \"../type/Units\";\n\n/**\n * Test if the arg is undefined\n */\nexport function isUndef(arg: any): arg is undefined {\n\treturn typeof arg === \"undefined\";\n}\n\n/**\n * Test if the arg is not undefined\n */\nexport function isDefined<T>(arg: T | undefined): arg is T {\n\treturn !isUndef(arg);\n}\n\n/**\n * Test if the arg is a function\n */\nexport function isFunction(arg: any): arg is (a: any) => any {\n\treturn typeof arg === \"function\";\n}\n\n/**\n * Test if the argument is a number.\n */\nexport function isNumber(arg: any): arg is number {\n\treturn (typeof arg === \"number\");\n}\n\n/**\n * Test if the given argument is an object literal (i.e. `{}`);\n */\nexport function isObject(arg: any): arg is object {\n\treturn (Object.prototype.toString.call(arg) === \"[object Object]\" && arg.constructor === Object);\n}\n\n/**\n * Test if the argument is a boolean.\n */\nexport function isBoolean(arg: any): arg is boolean {\n\treturn (typeof arg === \"boolean\");\n}\n\n/**\n * Test if the argument is an Array\n */\nexport function isArray(arg: any): arg is any[] {\n\treturn (Array.isArray(arg));\n}\n\n/**\n * Test if the argument is a string.\n */\nexport function isString(arg: any): arg is string {\n\treturn (typeof arg === \"string\");\n}\n\n/**\n * Test if the argument is in the form of a note in scientific pitch notation.\n * e.g. \"C4\"\n */\nexport function isNote(arg: any): arg is Note {\n\treturn isString(arg) && /^([a-g]{1}(?:b|#|x|bb)?)(-?[0-9]+)/i.test(arg);\n}\n","import {\n\tAudioContext as stdAudioContext,\n\tAudioWorkletNode as stdAudioWorkletNode,\n\tOfflineAudioContext as stdOfflineAudioContext\n} from \"standardized-audio-context\";\nimport { assert } from \"../util/Debug\";\nimport { isDefined } from \"../util/TypeCheck\";\n\n/**\n * Create a new AudioContext\n */\nexport function createAudioContext(options?: AudioContextOptions): AudioContext {\n\treturn new stdAudioContext(options) as unknown as AudioContext;\n}\n\n/**\n * Create a new OfflineAudioContext\n */\nexport function createOfflineAudioContext(channels: number, length: number, sampleRate: number): OfflineAudioContext {\n\treturn new stdOfflineAudioContext(channels, length, sampleRate) as unknown as OfflineAudioContext;\n}\n\n/**\n * Either the online or offline audio context\n */\nexport type AnyAudioContext = AudioContext | OfflineAudioContext;\n\n/**\n * Interface for things that Tone.js adds to the window\n */\ninterface ToneWindow extends Window {\n\tTONE_SILENCE_LOGGING?: boolean;\n\tTONE_DEBUG_CLASS?: string;\n}\n\n/**\n * A reference to the window object\n * @hidden\n */\nexport const theWindow: ToneWindow | null = typeof self === \"object\" ? self : null;\n\n/**\n * If the browser has a window object which has an AudioContext\n * @hidden\n */\nexport const hasAudioContext = theWindow &&\n\t(theWindow.hasOwnProperty(\"AudioContext\") || theWindow.hasOwnProperty(\"webkitAudioContext\"));\n\nexport function createAudioWorkletNode(context: AnyAudioContext, name: string, options?: Partial<AudioWorkletNodeOptions>): AudioWorkletNode {\n\tassert(isDefined(stdAudioWorkletNode), \"This node only works in a secure context (https or localhost)\");\n\t// @ts-ignore\n\treturn new stdAudioWorkletNode(context, name, options);\n}\n\n/**\n * This promise resolves to a boolean which indicates if the \n * functionality is supported within the currently used browse. \n * Taken from [standardized-audio-context](https://github.com/chrisguttandin/standardized-audio-context#issupported)\n */\nexport { isSupported as supported } from \"standardized-audio-context\";\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from) {\r\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\r\n        to[j] = from[i];\r\n    return to;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n","import { Seconds } from \"../type/Units\";\n\nexport type TickerClockSource = \"worker\" | \"timeout\" | \"offline\";\n\n/**\n * A class which provides a reliable callback using either\n * a Web Worker, or if that isn't supported, falls back to setTimeout.\n */\nexport class Ticker {\n\n\t/**\n\t * Either \"worker\" or \"timeout\" or \"offline\"\n\t */\n\tprivate _type: TickerClockSource;\n\n\t/**\n\t * The update interval of the worker\n\t */\n\tprivate _updateInterval: Seconds;\n\n\t/**\n\t * The callback to invoke at regular intervals\n\t */\n\tprivate _callback: () => void;\n\n\t/**\n\t * track the callback interval\n\t */\n\tprivate _timeout!: ReturnType<typeof setTimeout>;\n\n\t/**\n\t * private reference to the worker\n\t */\n\tprivate _worker!: Worker;\n\n\tconstructor(callback: () => void, type: TickerClockSource, updateInterval: Seconds) {\n\n\t\tthis._callback = callback;\n\t\tthis._type = type;\n\t\tthis._updateInterval = updateInterval;\n\n\t\t// create the clock source for the first time\n\t\tthis._createClock();\n\t}\n\n\t/**\n\t * Generate a web worker\n\t */\n\tprivate _createWorker(): void {\n\n\t\tconst blob = new Blob([\n\t\t\t/* javascript */`\n\t\t\t// the initial timeout time\n\t\t\tlet timeoutTime =  ${(this._updateInterval * 1000).toFixed(1)};\n\t\t\t// onmessage callback\n\t\t\tself.onmessage = function(msg){\n\t\t\t\ttimeoutTime = parseInt(msg.data);\n\t\t\t};\n\t\t\t// the tick function which posts a message\n\t\t\t// and schedules a new tick\n\t\t\tfunction tick(){\n\t\t\t\tsetTimeout(tick, timeoutTime);\n\t\t\t\tself.postMessage('tick');\n\t\t\t}\n\t\t\t// call tick initially\n\t\t\ttick();\n\t\t\t`\n\t\t], { type: \"text/javascript\" });\n\t\tconst blobUrl = URL.createObjectURL(blob);\n\t\tconst worker = new Worker(blobUrl);\n\n\t\tworker.onmessage = this._callback.bind(this);\n\n\t\tthis._worker = worker;\n\t}\n\n\t/**\n\t * Create a timeout loop\n\t */\n\tprivate _createTimeout(): void {\n\t\tthis._timeout = setTimeout(() => {\n\t\t\tthis._createTimeout();\n\t\t\tthis._callback();\n\t\t}, this._updateInterval * 1000);\n\t}\n\n\t/**\n\t * Create the clock source.\n\t */\n\tprivate _createClock(): void {\n\t\tif (this._type === \"worker\") {\n\t\t\ttry {\n\t\t\t\tthis._createWorker();\n\t\t\t} catch (e) {\n\t\t\t\t// workers not supported, fallback to timeout\n\t\t\t\tthis._type = \"timeout\";\n\t\t\t\tthis._createClock();\n\t\t\t}\n\t\t} else if (this._type === \"timeout\") {\n\t\t\tthis._createTimeout();\n\t\t}\n\t}\n\n\t/**\n\t * Clean up the current clock source\n\t */\n\tprivate _disposeClock(): void {\n\t\tif (this._timeout) {\n\t\t\tclearTimeout(this._timeout);\n\t\t\tthis._timeout = 0;\n\t\t}\n\t\tif (this._worker) {\n\t\t\tthis._worker.terminate();\n\t\t\tthis._worker.onmessage = null;\n\t\t}\n\t}\n\n\t/**\n\t * The rate in seconds the ticker will update\n\t */\n\tget updateInterval(): Seconds {\n\t\treturn this._updateInterval;\n\t}\n\tset updateInterval(interval: Seconds) {\n\t\tthis._updateInterval = Math.max(interval, 128 / 44100);\n\t\tif (this._type === \"worker\") {\n\t\t\tthis._worker.postMessage(Math.max(interval * 1000, 1));\n\t\t}\n\t}\n\n\t/**\n\t * The type of the ticker, either a worker or a timeout\n\t */\n\tget type(): TickerClockSource {\n\t\treturn this._type;\n\t}\n\tset type(type: TickerClockSource) {\n\t\tthis._disposeClock();\n\t\tthis._type = type;\n\t\tthis._createClock();\n\t}\n\n\t/**\n\t * Clean up\n\t */\n\tdispose(): void {\n\t\tthis._disposeClock();\n\t}\n}\n","import {\n\tAudioBuffer, isAnyAudioContext,\n\tisAnyAudioNode, isAnyAudioParam,\n\tisAnyOfflineAudioContext\n} from \"standardized-audio-context\";\n\n/**\n * Test if the given value is an instanceof AudioParam\n */\nexport function isAudioParam(arg: any): arg is AudioParam {\n\treturn isAnyAudioParam(arg);\n}\n\n/**\n * Test if the given value is an instanceof AudioNode\n */\nexport function isAudioNode(arg: any): arg is AudioNode {\n\treturn isAnyAudioNode(arg);\n}\n\n/**\n * Test if the arg is instanceof an OfflineAudioContext\n */\nexport function isOfflineAudioContext(arg: any): arg is OfflineAudioContext {\n\treturn isAnyOfflineAudioContext(arg);\n}\n\n/**\n * Test if the arg is an instanceof AudioContext\n */\nexport function isAudioContext(arg: any): arg is AudioContext {\n\treturn isAnyAudioContext(arg);\n}\n\n/**\n * Test if the arg is instanceof an AudioBuffer\n */\nexport function isAudioBuffer(arg: any): arg is AudioBuffer {\n\treturn arg instanceof AudioBuffer;\n}\n","import { isAudioBuffer, isAudioNode, isAudioParam } from \"./AdvancedTypeCheck\";\nimport { isDefined, isObject, isUndef } from \"./TypeCheck\";\n\ntype BaseToneOptions = import(\"../Tone\").BaseToneOptions;\n\n/**\n * Some objects should not be merged\n */\nfunction noCopy(key: string, arg: any): boolean {\n\treturn key === \"value\" || isAudioParam(arg) || isAudioNode(arg) || isAudioBuffer(arg);\n}\n\n/**\n * Recursively merge an object\n * @param target the object to merge into\n * @param sources the source objects to merge\n */\nexport function deepMerge<T>(target: T): T;\nexport function deepMerge<T, U>(target: T, source1: U): T & U;\nexport function deepMerge<T, U, V>(target: T, source1: U, source2: V): T & U & V;\nexport function deepMerge<T, U, V, W>(target: T, source1: U, source2: V, source3: W): T & U & V & W;\nexport function deepMerge(target: any, ...sources: any[]): any {\n\tif (!sources.length) {\n\t\treturn target; \n\t}\n\tconst source = sources.shift();\n\n\tif (isObject(target) && isObject(source)) {\n\t\tfor (const key in source) {\n\t\t\tif (noCopy(key, source[key])) {\n\t\t\t\ttarget[key] = source[key];\n\t\t\t} else if (isObject(source[key])) {\n\t\t\t\tif (!target[key]) {\n\t\t\t\t\tObject.assign(target, { [key]: {} }); \n\t\t\t\t}\n\t\t\t\tdeepMerge(target[key], source[key] as any);\n\t\t\t} else {\n\t\t\t\tObject.assign(target, { [key]: source[key] as any });\n\t\t\t}\n\t\t}\n\t}\n\t// @ts-ignore\n\treturn deepMerge(target, ...sources);\n}\n\n/**\n * Returns true if the two arrays have the same value for each of the elements\n */\nexport function deepEquals<T>(arrayA: T[], arrayB: T[]): boolean {\n\treturn arrayA.length === arrayB.length && arrayA.every((element, index) => arrayB[index] === element);\n}\n\n/**\n * Convert an args array into an object.\n */\nexport function optionsFromArguments<T extends object>(\n\tdefaults: T,\n\targsArray: IArguments,\n\tkeys: Array<keyof T> = [],\n\tobjKey?: keyof T,\n): T {\n\tconst opts: Partial<T> = {};\n\tconst args = Array.from(argsArray);\n\t// if the first argument is an object and has an object key\n\tif (isObject(args[0]) && objKey && !Reflect.has(args[0], objKey)) {\n\t\t// if it's not part of the defaults\n\t\tconst partOfDefaults = Object.keys(args[0]).some(key => Reflect.has(defaults, key));\n\t\tif (!partOfDefaults) {\n\t\t\t// merge that key\n\t\t\tdeepMerge(opts, { [objKey]: args[0] });\n\t\t\t// remove the obj key from the keys\n\t\t\tkeys.splice(keys.indexOf(objKey), 1);\n\t\t\t// shift the first argument off\n\t\t\targs.shift();\n\t\t}\n\t}\n\tif (args.length === 1 && isObject(args[0])) {\n\t\tdeepMerge(opts, args[0]);\n\t} else {\n\t\tfor (let i = 0; i < keys.length; i++) {\n\t\t\tif (isDefined(args[i])) {\n\t\t\t\topts[keys[i]] = args[i];\n\t\t\t}\n\t\t}\n\t}\n\treturn deepMerge(defaults, opts);\n}\n\n/**\n * Return this instances default values by calling Constructor.getDefaults()\n */\nexport function getDefaultsFromInstance<T>(instance: T): BaseToneOptions {\n\ttype ToneClass = {\n\t\tconstructor: ToneClass;\n\t\tgetDefaults: () => BaseToneOptions;\n\t} & T;\n\n\treturn (instance as ToneClass).constructor.getDefaults();\n}\n\n/**\n * Returns the fallback if the given object is undefined.\n * Take an array of arguments and return a formatted options object.\n */\nexport function defaultArg<T>(given: T, fallback: T): T {\n\tif (isUndef(given)) {\n\t\treturn fallback;\n\t} else {\n\t\treturn given;\n\t}\n}\n\n/**\n * Remove all of the properties belonging to omit from obj.\n */\nexport function omitFromObject<T extends object, O extends string[]>(obj: T, omit: O): Omit<T, keyof O> {\n\tomit.forEach(prop => {\n\t\tif (Reflect.has(obj, prop)) {\n\t\t\tdelete obj[prop];\n\t\t}\n\t});\n\treturn obj;\n}\n","/**\n * Tone.js\n * @author Yotam Mann\n * @license http://opensource.org/licenses/MIT MIT License\n * @copyright 2014-2019 Yotam Mann\n */\nimport { version } from \"../version\";\nimport { theWindow } from \"./context/AudioContext\";\nimport { log } from \"./util/Debug\";\n\n//-------------------------------------\n// \tTONE\n//-------------------------------------\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\nexport interface BaseToneOptions { }\n\n/**\n * Tone is the base class of all other classes.\n * \n * @category Core\n * @constructor\n */\nexport abstract class Tone {\n\n\t/**\n\t * The version number semver\n\t */\n\tstatic version: string = version;\n\n\t/**\n\t * The name of the class\n\t */\n\tprotected abstract name: string;\n\n\t/**\n\t * Returns all of the default options belonging to the class.\n\t */\n\tstatic getDefaults(): BaseToneOptions {\n\t\treturn {};\n\t}\n\n\t//-------------------------------------\n\t// \tDEBUGGING\n\t//-------------------------------------\n\n\t/**\n\t * Set this debug flag to log all events that happen in this class.\n\t */\n\tdebug = false;\n\n\t/**\n\t * Prints the outputs to the console log for debugging purposes.\n\t * Prints the contents only if either the object has a property\n\t * called `debug` set to true, or a variable called TONE_DEBUG_CLASS\n\t * is set to the name of the class.\n\t * @example\n\t * const osc = new Tone.Oscillator();\n\t * // prints all logs originating from this oscillator\n\t * osc.debug = true;\n\t * // calls to start/stop will print in the console\n\t * osc.start();\n\t */\n\tprotected log(...args: any[]): void {\n\t\t// if the object is either set to debug = true\n\t\t// or if there is a string on the Tone.global.with the class name\n\t\tif (this.debug || (theWindow && this.toString() === theWindow.TONE_DEBUG_CLASS)) {\n\t\t\tlog(this, ...args);\n\t\t}\n\t}\n\n\t//-------------------------------------\n\t// \tDISPOSING\n\t//-------------------------------------\n\n\t/**\n\t * Indicates if the instance was disposed\n\t */\n\tprivate _wasDisposed = false;\n\n\t/**\n\t * disconnect and dispose.\n\t */\n\tdispose(): this {\n\t\tthis._wasDisposed = true;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Indicates if the instance was disposed. 'Disposing' an\n\t * instance means that all of the Web Audio nodes that were\n\t * created for the instance are disconnected and freed for garbage collection.\n\t */\n\tget disposed(): boolean {\n\t\treturn this._wasDisposed;\n\t}\n\n\t/**\n\t * Convert the class to a string\n\t * @example\n\t * const osc = new Tone.Oscillator();\n\t * console.log(osc.toString());\n\t */\n\ttoString(): string {\n\t\treturn this.name;\n\t}\n}\n","/**\n * The threshold for correctness for operators. Less than one sample even \n * at very high sampling rates (e.g. `1e-6 < 1 / 192000`).\n */\nconst EPSILON = 1e-6;\n\n/**\n * Test if A is greater than B\n */\nexport function GT(a: number, b: number): boolean {\n\treturn a > b + EPSILON;\n}\n\n/**\n * Test if A is greater than or equal to B\n */\nexport function GTE(a: number, b: number): boolean {\n\treturn GT(a, b) || EQ(a, b);\n}\n\n/**\n * Test if A is less than B\n */\nexport function LT(a: number, b: number): boolean {\n\treturn a + EPSILON < b;\n}\n\n/**\n * Test if A is less than B\n */\nexport function EQ(a: number, b: number): boolean {\n\treturn Math.abs(a - b) < EPSILON;\n}\n\n/**\n * Clamp the value within the given range\n */\nexport function clamp(value: number, min: number, max: number): number {\n\treturn Math.max(Math.min(value, max), min);\n}\n","import { Tone } from \"../Tone\";\nimport { Seconds } from \"../type/Units\";\nimport { optionsFromArguments } from \"./Defaults\";\nimport { assert } from \"./Debug\";\nimport { EQ, GT, GTE, LT } from \"./Math\";\n\ntype TimelineSearchParam = \"ticks\" | \"time\";\n\n/**\n * The options object for Timeline\n */\ninterface TimelineOptions {\n\tmemory: number;\n\tincreasing: boolean;\n}\n\n/**\n * An event must have a time number\n */\nexport interface TimelineEvent {\n\ttime: number;\n}\n\n/**\n * A Timeline class for scheduling and maintaining state\n * along a timeline. All events must have a \"time\" property.\n * Internally, events are stored in time order for fast\n * retrieval.\n */\nexport class Timeline<GenericEvent extends TimelineEvent> extends Tone {\n\n\treadonly name: string = \"Timeline\";\n\n\t/**\n\t * The memory of the timeline, i.e.\n\t * how many events in the past it will retain\n\t */\n\tmemory: number;\n\n\t/**\n\t * The array of scheduled timeline events\n\t */\n\tprotected _timeline: GenericEvent[] = [];\n\n\t/**\n\t * If the time value must always be greater than or equal to the last \n\t * element on the list. \n\t */\n\tincreasing: boolean;\n\n\t/**\n\t * @param memory The number of previous events that are retained.\n\t */\n\tconstructor(memory?: number);\n\tconstructor(options?: Partial<TimelineOptions>);\n\tconstructor() {\n\t\tsuper();\n\t\tconst options = optionsFromArguments(Timeline.getDefaults(), arguments, [\"memory\"]);\n\n\t\tthis.memory = options.memory;\n\t\tthis.increasing = options.increasing;\n\t}\n\n\tstatic getDefaults(): TimelineOptions {\n\t\treturn {\n\t\t\tmemory: Infinity,\n\t\t\tincreasing: false,\n\t\t};\n\t}\n\n\t/**\n\t * The number of items in the timeline.\n\t */\n\tget length(): number {\n\t\treturn this._timeline.length;\n\t}\n\n\t/**\n\t * Insert an event object onto the timeline. Events must have a \"time\" attribute.\n\t * @param event  The event object to insert into the timeline.\n\t */\n\tadd(event: GenericEvent): this {\n\t\t// the event needs to have a time attribute\n\t\tassert(Reflect.has(event, \"time\"), \"Timeline: events must have a time attribute\");\n\t\tevent.time = event.time.valueOf();\n\t\tif (this.increasing && this.length) {\n\t\t\tconst lastValue = this._timeline[this.length - 1] as GenericEvent;\n\t\t\tassert(GTE(event.time, lastValue.time), \"The time must be greater than or equal to the last scheduled time\");\n\t\t\tthis._timeline.push(event);\n\t\t} else {\n\t\t\tconst index = this._search(event.time);\n\t\t\tthis._timeline.splice(index + 1, 0, event);\n\t\t}\n\t\t// if the length is more than the memory, remove the previous ones\n\t\tif (this.length > this.memory) {\n\t\t\tconst diff = this.length - this.memory;\n\t\t\tthis._timeline.splice(0, diff);\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Remove an event from the timeline.\n\t * @param  {Object}  event  The event object to remove from the list.\n\t * @returns {Timeline} this\n\t */\n\tremove(event: GenericEvent): this {\n\t\tconst index = this._timeline.indexOf(event);\n\t\tif (index !== -1) {\n\t\t\tthis._timeline.splice(index, 1);\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Get the nearest event whose time is less than or equal to the given time.\n\t * @param  time  The time to query.\n\t */\n\tget(time: number, param: TimelineSearchParam = \"time\"): GenericEvent | null {\n\t\tconst index = this._search(time, param);\n\t\tif (index !== -1) {\n\t\t\treturn this._timeline[index];\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}\n\n\t/**\n\t * Return the first event in the timeline without removing it\n\t * @returns {Object} The first event object\n\t */\n\tpeek(): GenericEvent | undefined {\n\t\treturn this._timeline[0];\n\t}\n\n\t/**\n\t * Return the first event in the timeline and remove it\n\t */\n\tshift(): GenericEvent | undefined {\n\t\treturn this._timeline.shift();\n\t}\n\n\t/**\n\t * Get the event which is scheduled after the given time.\n\t * @param  time  The time to query.\n\t */\n\tgetAfter(time: number, param: TimelineSearchParam = \"time\"): GenericEvent | null {\n\t\tconst index = this._search(time, param);\n\t\tif (index + 1 < this._timeline.length) {\n\t\t\treturn this._timeline[index + 1];\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}\n\n\t/**\n\t * Get the event before the event at the given time.\n\t * @param  time  The time to query.\n\t */\n\tgetBefore(time: number): GenericEvent | null {\n\t\tconst len = this._timeline.length;\n\t\t// if it's after the last item, return the last item\n\t\tif (len > 0 && this._timeline[len - 1].time < time) {\n\t\t\treturn this._timeline[len - 1];\n\t\t}\n\t\tconst index = this._search(time);\n\t\tif (index - 1 >= 0) {\n\t\t\treturn this._timeline[index - 1];\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}\n\n\t/**\n\t * Cancel events at and after the given time\n\t * @param  after  The time to query.\n\t */\n\tcancel(after: number): this {\n\t\tif (this._timeline.length > 1) {\n\t\t\tlet index = this._search(after);\n\t\t\tif (index >= 0) {\n\t\t\t\tif (EQ(this._timeline[index].time, after)) {\n\t\t\t\t\t// get the first item with that time\n\t\t\t\t\tfor (let i = index; i >= 0; i--) {\n\t\t\t\t\t\tif (EQ(this._timeline[i].time, after)) {\n\t\t\t\t\t\t\tindex = i;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tthis._timeline = this._timeline.slice(0, index);\n\t\t\t\t} else {\n\t\t\t\t\tthis._timeline = this._timeline.slice(0, index + 1);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis._timeline = [];\n\t\t\t}\n\t\t} else if (this._timeline.length === 1) {\n\t\t\t// the first item's time\n\t\t\tif (GTE(this._timeline[0].time, after)) {\n\t\t\t\tthis._timeline = [];\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Cancel events before or equal to the given time.\n\t * @param  time  The time to cancel before.\n\t */\n\tcancelBefore(time: number): this {\n\t\tconst index = this._search(time);\n\t\tif (index >= 0) {\n\t\t\tthis._timeline = this._timeline.slice(index + 1);\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Returns the previous event if there is one. null otherwise\n\t * @param  event The event to find the previous one of\n\t * @return The event right before the given event\n\t */\n\tpreviousEvent(event: GenericEvent): GenericEvent | null {\n\t\tconst index = this._timeline.indexOf(event);\n\t\tif (index > 0) {\n\t\t\treturn this._timeline[index - 1];\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}\n\n\t/**\n\t * Does a binary search on the timeline array and returns the\n\t * nearest event index whose time is after or equal to the given time.\n\t * If a time is searched before the first index in the timeline, -1 is returned.\n\t * If the time is after the end, the index of the last item is returned.\n\t */\n\tprotected _search(time: number, param: TimelineSearchParam = \"time\"): number {\n\t\tif (this._timeline.length === 0) {\n\t\t\treturn -1;\n\t\t}\n\t\tlet beginning = 0;\n\t\tconst len = this._timeline.length;\n\t\tlet end = len;\n\t\tif (len > 0 && this._timeline[len - 1][param] <= time) {\n\t\t\treturn len - 1;\n\t\t}\n\t\twhile (beginning < end) {\n\t\t\t// calculate the midpoint for roughly equal partition\n\t\t\tlet midPoint = Math.floor(beginning + (end - beginning) / 2);\n\t\t\tconst event = this._timeline[midPoint];\n\t\t\tconst nextEvent = this._timeline[midPoint + 1];\n\t\t\tif (EQ(event[param], time)) {\n\t\t\t\t// choose the last one that has the same time\n\t\t\t\tfor (let i = midPoint; i < this._timeline.length; i++) {\n\t\t\t\t\tconst testEvent = this._timeline[i];\n\t\t\t\t\tif (EQ(testEvent[param], time)) {\n\t\t\t\t\t\tmidPoint = i;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn midPoint;\n\t\t\t} else if (LT(event[param], time) && GT(nextEvent[param], time)) {\n\t\t\t\treturn midPoint;\n\t\t\t} else if (GT(event[param], time)) {\n\t\t\t\t// search lower\n\t\t\t\tend = midPoint;\n\t\t\t} else {\n\t\t\t\t// search upper\n\t\t\t\tbeginning = midPoint + 1;\n\t\t\t}\n\t\t}\n\t\treturn -1;\n\t}\n\n\t/**\n\t * Internal iterator. Applies extra safety checks for\n\t * removing items from the array.\n\t */\n\tprivate _iterate(\n\t\tcallback: (event: GenericEvent) => void,\n\t\tlowerBound = 0, upperBound = this._timeline.length - 1,\n\t): void {\n\t\tthis._timeline.slice(lowerBound, upperBound + 1).forEach(callback);\n\t}\n\n\t/**\n\t * Iterate over everything in the array\n\t * @param  callback The callback to invoke with every item\n\t */\n\tforEach(callback: (event: GenericEvent) => void): this {\n\t\tthis._iterate(callback);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Iterate over everything in the array at or before the given time.\n\t * @param  time The time to check if items are before\n\t * @param  callback The callback to invoke with every item\n\t */\n\tforEachBefore(time: Seconds, callback: (event: GenericEvent) => void): this {\n\t\t// iterate over the items in reverse so that removing an item doesn't break things\n\t\tconst upperBound = this._search(time);\n\t\tif (upperBound !== -1) {\n\t\t\tthis._iterate(callback, 0, upperBound);\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Iterate over everything in the array after the given time.\n\t * @param  time The time to check if items are before\n\t * @param  callback The callback to invoke with every item\n\t */\n\tforEachAfter(time: Seconds, callback: (event: GenericEvent) => void): this {\n\t\t// iterate over the items in reverse so that removing an item doesn't break things\n\t\tconst lowerBound = this._search(time);\n\t\tthis._iterate(callback, lowerBound + 1);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Iterate over everything in the array between the startTime and endTime.\n\t * The timerange is inclusive of the startTime, but exclusive of the endTime.\n\t * range = [startTime, endTime).\n\t * @param  startTime The time to check if items are before\n\t * @param  endTime The end of the test interval.\n\t * @param  callback The callback to invoke with every item\n\t */\n\tforEachBetween(startTime: number, endTime: number, callback: (event: GenericEvent) => void): this {\n\t\tlet lowerBound = this._search(startTime);\n\t\tlet upperBound = this._search(endTime);\n\t\tif (lowerBound !== -1 && upperBound !== -1) {\n\t\t\tif (this._timeline[lowerBound].time !== startTime) {\n\t\t\t\tlowerBound += 1;\n\t\t\t}\n\t\t\t// exclusive of the end time\n\t\t\tif (this._timeline[upperBound].time === endTime) {\n\t\t\t\tupperBound -= 1;\n\t\t\t}\n\t\t\tthis._iterate(callback, lowerBound, upperBound);\n\t\t} else if (lowerBound === -1) {\n\t\t\tthis._iterate(callback, 0, upperBound);\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Iterate over everything in the array at or after the given time. Similar to\n\t * forEachAfter, but includes the item(s) at the given time.\n\t * @param  time The time to check if items are before\n\t * @param  callback The callback to invoke with every item\n\t */\n\tforEachFrom(time: number, callback: (event: GenericEvent) => void): this {\n\t\t// iterate over the items in reverse so that removing an item doesn't break things\n\t\tlet lowerBound = this._search(time);\n\t\t// work backwards until the event time is less than time\n\t\twhile (lowerBound >= 0 && this._timeline[lowerBound].time >= time) {\n\t\t\tlowerBound--;\n\t\t}\n\t\tthis._iterate(callback, lowerBound + 1);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Iterate over everything in the array at the given time\n\t * @param  time The time to check if items are before\n\t * @param  callback The callback to invoke with every item\n\t */\n\tforEachAtTime(time: number, callback: (event: GenericEvent) => void): this {\n\t\t// iterate over the items in reverse so that removing an item doesn't break things\n\t\tconst upperBound = this._search(time);\n\t\tif (upperBound !== -1 && EQ(this._timeline[upperBound].time, time)) {\n\t\t\tlet lowerBound = upperBound;\n\t\t\tfor (let i = upperBound; i >= 0; i--) {\n\t\t\t\tif (EQ(this._timeline[i].time, time)) {\n\t\t\t\t\tlowerBound = i;\n\t\t\t\t} else {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._iterate(event => {\n\t\t\t\tcallback(event);\n\t\t\t}, lowerBound, upperBound);\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Clean up.\n\t */\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._timeline = [];\n\t\treturn this;\n\t}\n}\n","//-------------------------------------\n// INITIALIZING NEW CONTEXT\n//-------------------------------------\n\ntype Context = import(\"./Context\").Context;\n\n/**\n * Array of callbacks to invoke when a new context is created\n */\nconst notifyNewContext: Array<(ctx: Context) => void> = [];\n\n/**\n * Used internally to setup a new Context\n */\nexport function onContextInit(cb: (ctx: Context) => void): void {\n\tnotifyNewContext.push(cb);\n}\n\n/**\n * Invoke any classes which need to also be initialized when a new context is created.\n */\nexport function initializeContext(ctx: Context): void {\n\t// add any additional modules\n\tnotifyNewContext.forEach(cb => cb(ctx));\n}\n\n/**\n * Array of callbacks to invoke when a new context is closed\n */\nconst notifyCloseContext: Array<(ctx: Context) => void> = [];\n\n/**\n * Used internally to tear down a Context\n */\nexport function onContextClose(cb: (ctx: Context) => void): void {\n\tnotifyCloseContext.push(cb);\n}\n\nexport function closeContext(ctx: Context): void {\n\t// remove any additional modules\n\tnotifyCloseContext.forEach(cb => cb(ctx));\n}\n","import { Tone } from \"../Tone\";\nimport { isUndef } from \"./TypeCheck\";\n\nexport interface EmitterEventObject {\n\t[event: string]: Array<(...args: any[]) => void>;\n}\n\n/**\n * Emitter gives classes which extend it\n * the ability to listen for and emit events.\n * Inspiration and reference from Jerome Etienne's [MicroEvent](https://github.com/jeromeetienne/microevent.js).\n * MIT (c) 2011 Jerome Etienne.\n * @category Core\n */\nexport class Emitter<EventType extends string = string> extends Tone {\n\n\treadonly name: string = \"Emitter\";\n\n\t/**\n\t * Private container for the events\n\t */\n\tprivate _events?: EmitterEventObject;\n\n\t/**\n\t * Bind a callback to a specific event.\n\t * @param  event     The name of the event to listen for.\n\t * @param  callback  The callback to invoke when the event is emitted\n\t */\n\ton(event: EventType, callback: (...args: any[]) => void): this {\n\t\t// split the event\n\t\tconst events = event.split(/\\W+/);\n\t\tevents.forEach(eventName => {\n\t\t\tif (isUndef(this._events)) {\n\t\t\t\tthis._events = {};\n\t\t\t}\n\t\t\tif (!this._events.hasOwnProperty(eventName)) {\n\t\t\t\tthis._events[eventName] = [];\n\t\t\t}\n\t\t\tthis._events[eventName].push(callback);\n\t\t});\n\t\treturn this;\n\t}\n\n\t/**\n\t * Bind a callback which is only invoked once\n\t * @param  event     The name of the event to listen for.\n\t * @param  callback  The callback to invoke when the event is emitted\n\t */\n\tonce(event: EventType, callback: (...args: any[]) => void): this {\n\t\tconst boundCallback = (...args: any[]) => {\n\t\t\t// invoke the callback\n\t\t\tcallback(...args);\n\t\t\t// remove the event\n\t\t\tthis.off(event, boundCallback);\n\t\t};\n\t\tthis.on(event, boundCallback);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Remove the event listener.\n\t * @param  event     The event to stop listening to.\n\t * @param  callback  The callback which was bound to the event with Emitter.on.\n\t *                   If no callback is given, all callbacks events are removed.\n\t */\n\toff(event: EventType, callback?: (...args: any[]) => void): this {\n\t\tconst events = event.split(/\\W+/);\n\t\tevents.forEach(eventName => {\n\t\t\tif (isUndef(this._events)) {\n\t\t\t\tthis._events = {};\n\t\t\t}\n\t\t\tif (this._events.hasOwnProperty(eventName)) {\n\t\t\t\tif (isUndef(callback)) {\n\t\t\t\t\tthis._events[eventName] = [];\n\t\t\t\t} else {\n\t\t\t\t\tconst eventList = this._events[eventName];\n\t\t\t\t\tfor (let i = eventList.length - 1; i >= 0; i--) {\n\t\t\t\t\t\tif (eventList[i] === callback) {\n\t\t\t\t\t\t\teventList.splice(i, 1);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\treturn this;\n\t}\n\n\t/**\n\t * Invoke all of the callbacks bound to the event\n\t * with any arguments passed in.\n\t * @param  event  The name of the event.\n\t * @param args The arguments to pass to the functions listening.\n\t */\n\temit(event, ...args: any[]): this {\n\t\tif (this._events) {\n\t\t\tif (this._events.hasOwnProperty(event)) {\n\t\t\t\tconst eventList = this._events[event].slice(0);\n\t\t\t\tfor (let i = 0, len = eventList.length; i < len; i++) {\n\t\t\t\t\teventList[i].apply(this, args);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Add Emitter functions (on/off/emit) to the object\n\t */\n\tstatic mixin(constr: any): void {\n\t\t// instance._events = {};\n\t\t[\"on\", \"once\", \"off\", \"emit\"].forEach(name => {\n\t\t\tconst property = Object.getOwnPropertyDescriptor(Emitter.prototype, name) as PropertyDescriptor;\n\t\t\tObject.defineProperty(constr.prototype, name, property);\n\t\t});\n\t}\n\n\t/**\n\t * Clean up\n\t */\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._events = undefined;\n\t\treturn this;\n\t}\n}\n","import { Seconds } from \"../type/Units\";\nimport { Emitter } from \"../util/Emitter\";\nimport { AnyAudioContext } from \"./AudioContext\";\n\ntype Draw = import(\"../util/Draw\").Draw;\ntype Destination = import(\"./Destination\").Destination;\ntype Transport = import(\"../clock/Transport\").Transport;\ntype Listener = import(\"./Listener\").Listener;\n\n// these are either not used in Tone.js or deprecated and not implemented.\nexport type ExcludedFromBaseAudioContext =\n\t| \"onstatechange\"\n\t| \"addEventListener\"\n\t| \"removeEventListener\"\n\t| \"listener\"\n\t| \"dispatchEvent\"\n\t| \"audioWorklet\"\n\t| \"destination\"\n\t| \"createScriptProcessor\";\n\n// the subset of the BaseAudioContext which Tone.Context implements.\nexport type BaseAudioContextSubset = Omit<\nBaseAudioContext,\nExcludedFromBaseAudioContext\n>;\n\nexport type ContextLatencyHint = AudioContextLatencyCategory;\n\nexport abstract class BaseContext\n\textends Emitter<\"statechange\" | \"tick\">\n\timplements BaseAudioContextSubset {\n\t//---------------------------\n\t// BASE AUDIO CONTEXT METHODS\n\t//---------------------------\n\tabstract createAnalyser(): AnalyserNode;\n\n\tabstract createOscillator(): OscillatorNode;\n\n\tabstract createBufferSource(): AudioBufferSourceNode;\n\n\tabstract createBiquadFilter(): BiquadFilterNode;\n\n\tabstract createBuffer(\n\t\t_numberOfChannels: number,\n\t\t_length: number,\n\t\t_sampleRate: number\n\t): AudioBuffer;\n\n\tabstract createChannelMerger(\n\t\t_numberOfInputs?: number | undefined\n\t): ChannelMergerNode;\n\n\tabstract createChannelSplitter(\n\t\t_numberOfOutputs?: number | undefined\n\t): ChannelSplitterNode;\n\n\tabstract createConstantSource(): ConstantSourceNode;\n\n\tabstract createConvolver(): ConvolverNode;\n\n\tabstract createDelay(_maxDelayTime?: number | undefined): DelayNode;\n\n\tabstract createDynamicsCompressor(): DynamicsCompressorNode;\n\n\tabstract createGain(): GainNode;\n\n\tabstract createIIRFilter(\n\t\t_feedForward: number[] | Float32Array,\n\t\t_feedback: number[] | Float32Array\n\t): IIRFilterNode;\n\n\tabstract createPanner(): PannerNode;\n\n\tabstract createPeriodicWave(\n\t\t_real: number[] | Float32Array,\n\t\t_imag: number[] | Float32Array,\n\t\t_constraints?: PeriodicWaveConstraints | undefined\n\t): PeriodicWave;\n\n\tabstract createStereoPanner(): StereoPannerNode;\n\n\tabstract createWaveShaper(): WaveShaperNode;\n\n\tabstract createMediaStreamSource(\n\t\t_stream: MediaStream\n\t): MediaStreamAudioSourceNode;\n\n\tabstract createMediaElementSource(\n\t\t_element: HTMLMediaElement\n\t): MediaElementAudioSourceNode;\n\n\tabstract createMediaStreamDestination(): MediaStreamAudioDestinationNode;\n\n\tabstract decodeAudioData(_audioData: ArrayBuffer): Promise<AudioBuffer>;\n\n\t//---------------------------\n\t// TONE AUDIO CONTEXT METHODS\n\t//---------------------------\n\n\tabstract createAudioWorkletNode(\n\t\t_name: string,\n\t\t_options?: Partial<AudioWorkletNodeOptions>\n\t): AudioWorkletNode;\n\n\tabstract get rawContext(): AnyAudioContext;\n\n\tabstract async addAudioWorkletModule(\n\t\t_url: string,\n\t\t_name: string\n\t): Promise<void>;\n\n\tabstract lookAhead: number;\n\n\tabstract latencyHint: ContextLatencyHint | Seconds;\n\n\tabstract resume(): Promise<void>;\n\n\tabstract setTimeout(\n\t\t_fn: (...args: any[]) => void,\n\t\t_timeout: Seconds\n\t): number;\n\n\tabstract clearTimeout(_id: number): this;\n\n\tabstract setInterval(\n\t\t_fn: (...args: any[]) => void,\n\t\t_interval: Seconds\n\t): number;\n\n\tabstract clearInterval(_id: number): this;\n\n\tabstract getConstant(_val: number): AudioBufferSourceNode;\n\n\tabstract get currentTime(): Seconds;\n\n\tabstract get state(): AudioContextState;\n\n\tabstract get sampleRate(): number;\n\n\tabstract get listener(): Listener;\n\n\tabstract get transport(): Transport;\n\n\tabstract get draw(): Draw;\n\n\tabstract get destination(): Destination;\n\n\tabstract now(): Seconds;\n\n\tabstract immediate(): Seconds;\n\n\t/*\n\t * This is a placeholder so that JSON.stringify does not throw an error\n\t * This matches what JSON.stringify(audioContext) returns on a native\n\t * audioContext instance.\n\t */\n\ttoJSON(): Record<string, any> {\n\t\treturn {};\n\t}\n\n\treadonly isOffline: boolean = false;\n}\n","import { Ticker, TickerClockSource } from \"../clock/Ticker\";\nimport { Seconds } from \"../type/Units\";\nimport { isAudioContext } from \"../util/AdvancedTypeCheck\";\nimport { optionsFromArguments } from \"../util/Defaults\";\nimport { Timeline } from \"../util/Timeline\";\nimport { isDefined, isString } from \"../util/TypeCheck\";\nimport {\n\tAnyAudioContext,\n\tcreateAudioContext,\n\tcreateAudioWorkletNode,\n} from \"./AudioContext\";\nimport { closeContext, initializeContext } from \"./ContextInitialization\";\nimport { BaseContext, ContextLatencyHint } from \"./BaseContext\";\nimport { assert } from \"../util/Debug\";\n\ntype Transport = import(\"../clock/Transport\").Transport;\ntype Destination = import(\"./Destination\").Destination;\ntype Listener = import(\"./Listener\").Listener;\ntype Draw = import(\"../util/Draw\").Draw;\n\nexport interface ContextOptions {\n\tclockSource: TickerClockSource;\n\tlatencyHint: ContextLatencyHint;\n\tlookAhead: Seconds;\n\tupdateInterval: Seconds;\n\tcontext: AnyAudioContext;\n}\n\nexport interface ContextTimeoutEvent {\n\tcallback: (...args: any[]) => void;\n\tid: number;\n\ttime: Seconds;\n}\n\n/**\n * Wrapper around the native AudioContext.\n * @category Core\n */\nexport class Context extends BaseContext {\n\treadonly name: string = \"Context\";\n\n\t/**\n\t * The amount of time into the future events are scheduled. Giving Web Audio\n\t * a short amount of time into the future to schedule events can reduce clicks and\n\t * improve performance. This value can be set to 0 to get the lowest latency.\n\t */\n\tlookAhead: Seconds;\n\n\t/**\n\t * private reference to the BaseAudioContext\n\t */\n\tprotected readonly _context: AnyAudioContext;\n\n\t/**\n\t * A reliable callback method\n\t */\n\tprivate readonly _ticker: Ticker;\n\n\t/**\n\t * The default latency hint\n\t */\n\tprivate _latencyHint!: ContextLatencyHint | Seconds;\n\n\t/**\n\t * An object containing all of the constants AudioBufferSourceNodes\n\t */\n\tprivate _constants = new Map<number, AudioBufferSourceNode>();\n\n\t/**\n\t * All of the setTimeout events.\n\t */\n\tprivate _timeouts: Timeline<ContextTimeoutEvent> = new Timeline();\n\n\t/**\n\t * The timeout id counter\n\t */\n\tprivate _timeoutIds = 0;\n\n\t/**\n\t * A reference the Transport singleton belonging to this context\n\t */\n\tprivate _transport!: Transport;\n\n\t/**\n\t * A reference the Listener singleton belonging to this context\n\t */\n\tprivate _listener!: Listener;\n\n\t/**\n\t * A reference the Destination singleton belonging to this context\n\t */\n\tprivate _destination!: Destination;\n\n\t/**\n\t * A reference the Transport singleton belonging to this context\n\t */\n\tprivate _draw!: Draw;\n\n\t/**\n\t * Private indicator if the context has been initialized\n\t */\n\tprivate _initialized = false;\n\n\t/**\n\t * Indicates if the context is an OfflineAudioContext or an AudioContext\n\t */\n\treadonly isOffline: boolean = false;\n\n\tconstructor(context?: AnyAudioContext);\n\tconstructor(options?: Partial<ContextOptions>);\n\tconstructor() {\n\t\tsuper();\n\t\tconst options = optionsFromArguments(Context.getDefaults(), arguments, [\n\t\t\t\"context\",\n\t\t]);\n\n\t\tif (options.context) {\n\t\t\tthis._context = options.context;\n\t\t} else {\n\t\t\tthis._context = createAudioContext({\n\t\t\t\tlatencyHint: options.latencyHint,\n\t\t\t});\n\t\t}\n\n\t\tthis._ticker = new Ticker(\n\t\t\tthis.emit.bind(this, \"tick\"),\n\t\t\toptions.clockSource,\n\t\t\toptions.updateInterval\n\t\t);\n\t\tthis.on(\"tick\", this._timeoutLoop.bind(this));\n\n\t\t// fwd events from the context\n\t\tthis._context.onstatechange = () => {\n\t\t\tthis.emit(\"statechange\", this.state);\n\t\t};\n\n\t\tthis._setLatencyHint(options.latencyHint);\n\t\tthis.lookAhead = options.lookAhead;\n\t}\n\n\tstatic getDefaults(): ContextOptions {\n\t\treturn {\n\t\t\tclockSource: \"worker\",\n\t\t\tlatencyHint: \"interactive\",\n\t\t\tlookAhead: 0.1,\n\t\t\tupdateInterval: 0.05,\n\t\t} as ContextOptions;\n\t}\n\n\t/**\n\t * Finish setting up the context. **You usually do not need to do this manually.**\n\t */\n\tprivate initialize(): this {\n\t\tif (!this._initialized) {\n\t\t\t// add any additional modules\n\t\t\tinitializeContext(this);\n\t\t\tthis._initialized = true;\n\t\t}\n\t\treturn this;\n\t}\n\n\t//---------------------------\n\t// BASE AUDIO CONTEXT METHODS\n\t//---------------------------\n\n\tcreateAnalyser(): AnalyserNode {\n\t\treturn this._context.createAnalyser();\n\t}\n\tcreateOscillator(): OscillatorNode {\n\t\treturn this._context.createOscillator();\n\t}\n\tcreateBufferSource(): AudioBufferSourceNode {\n\t\treturn this._context.createBufferSource();\n\t}\n\tcreateBiquadFilter(): BiquadFilterNode {\n\t\treturn this._context.createBiquadFilter();\n\t}\n\tcreateBuffer(\n\t\tnumberOfChannels: number,\n\t\tlength: number,\n\t\tsampleRate: number\n\t): AudioBuffer {\n\t\treturn this._context.createBuffer(numberOfChannels, length, sampleRate);\n\t}\n\tcreateChannelMerger(\n\t\tnumberOfInputs?: number | undefined\n\t): ChannelMergerNode {\n\t\treturn this._context.createChannelMerger(numberOfInputs);\n\t}\n\tcreateChannelSplitter(\n\t\tnumberOfOutputs?: number | undefined\n\t): ChannelSplitterNode {\n\t\treturn this._context.createChannelSplitter(numberOfOutputs);\n\t}\n\tcreateConstantSource(): ConstantSourceNode {\n\t\treturn this._context.createConstantSource();\n\t}\n\tcreateConvolver(): ConvolverNode {\n\t\treturn this._context.createConvolver();\n\t}\n\tcreateDelay(maxDelayTime?: number | undefined): DelayNode {\n\t\treturn this._context.createDelay(maxDelayTime);\n\t}\n\tcreateDynamicsCompressor(): DynamicsCompressorNode {\n\t\treturn this._context.createDynamicsCompressor();\n\t}\n\tcreateGain(): GainNode {\n\t\treturn this._context.createGain();\n\t}\n\tcreateIIRFilter(\n\t\tfeedForward: number[] | Float32Array,\n\t\tfeedback: number[] | Float32Array\n\t): IIRFilterNode {\n\t\t// @ts-ignore\n\t\treturn this._context.createIIRFilter(feedForward, feedback);\n\t}\n\tcreatePanner(): PannerNode {\n\t\treturn this._context.createPanner();\n\t}\n\tcreatePeriodicWave(\n\t\treal: number[] | Float32Array,\n\t\timag: number[] | Float32Array,\n\t\tconstraints?: PeriodicWaveConstraints | undefined\n\t): PeriodicWave {\n\t\treturn this._context.createPeriodicWave(real, imag, constraints);\n\t}\n\tcreateStereoPanner(): StereoPannerNode {\n\t\treturn this._context.createStereoPanner();\n\t}\n\tcreateWaveShaper(): WaveShaperNode {\n\t\treturn this._context.createWaveShaper();\n\t}\n\tcreateMediaStreamSource(stream: MediaStream): MediaStreamAudioSourceNode {\n\t\tassert(\n\t\t\tisAudioContext(this._context),\n\t\t\t\"Not available if OfflineAudioContext\"\n\t\t);\n\t\tconst context = this._context as AudioContext;\n\t\treturn context.createMediaStreamSource(stream);\n\t}\n\tcreateMediaElementSource(\n\t\telement: HTMLMediaElement\n\t): MediaElementAudioSourceNode {\n\t\tassert(\n\t\t\tisAudioContext(this._context),\n\t\t\t\"Not available if OfflineAudioContext\"\n\t\t);\n\t\tconst context = this._context as AudioContext;\n\t\treturn context.createMediaElementSource(element);\n\t}\n\tcreateMediaStreamDestination(): MediaStreamAudioDestinationNode {\n\t\tassert(\n\t\t\tisAudioContext(this._context),\n\t\t\t\"Not available if OfflineAudioContext\"\n\t\t);\n\t\tconst context = this._context as AudioContext;\n\t\treturn context.createMediaStreamDestination();\n\t}\n\tdecodeAudioData(audioData: ArrayBuffer): Promise<AudioBuffer> {\n\t\treturn this._context.decodeAudioData(audioData);\n\t}\n\n\t/**\n\t * The current time in seconds of the AudioContext.\n\t */\n\tget currentTime(): Seconds {\n\t\treturn this._context.currentTime;\n\t}\n\t/**\n\t * The current time in seconds of the AudioContext.\n\t */\n\tget state(): AudioContextState {\n\t\treturn this._context.state;\n\t}\n\t/**\n\t * The current time in seconds of the AudioContext.\n\t */\n\tget sampleRate(): number {\n\t\treturn this._context.sampleRate;\n\t}\n\n\t/**\n\t * The listener\n\t */\n\tget listener(): Listener {\n\t\tthis.initialize();\n\t\treturn this._listener;\n\t}\n\tset listener(l) {\n\t\tassert(\n\t\t\t!this._initialized,\n\t\t\t\"The listener cannot be set after initialization.\"\n\t\t);\n\t\tthis._listener = l;\n\t}\n\n\t/**\n\t * There is only one Transport per Context. It is created on initialization.\n\t */\n\tget transport(): Transport {\n\t\tthis.initialize();\n\t\treturn this._transport;\n\t}\n\tset transport(t: Transport) {\n\t\tassert(\n\t\t\t!this._initialized,\n\t\t\t\"The transport cannot be set after initialization.\"\n\t\t);\n\t\tthis._transport = t;\n\t}\n\n\t/**\n\t * This is the Draw object for the context which is useful for synchronizing the draw frame with the Tone.js clock.\n\t */\n\tget draw(): Draw {\n\t\tthis.initialize();\n\t\treturn this._draw;\n\t}\n\tset draw(d) {\n\t\tassert(!this._initialized, \"Draw cannot be set after initialization.\");\n\t\tthis._draw = d;\n\t}\n\n\t/**\n\t * A reference to the Context's destination node.\n\t */\n\tget destination(): Destination {\n\t\tthis.initialize();\n\t\treturn this._destination;\n\t}\n\tset destination(d: Destination) {\n\t\tassert(\n\t\t\t!this._initialized,\n\t\t\t\"The destination cannot be set after initialization.\"\n\t\t);\n\t\tthis._destination = d;\n\t}\n\n\t//--------------------------------------------\n\t// AUDIO WORKLET\n\t//--------------------------------------------\n\n\t/**\n\t * Maps a module name to promise of the addModule method\n\t */\n\tprivate _workletModules: Map<string, Promise<void>> = new Map();\n\n\t/**\n\t * Create an audio worklet node from a name and options. The module\n\t * must first be loaded using [[addAudioWorkletModule]].\n\t */\n\tcreateAudioWorkletNode(\n\t\tname: string,\n\t\toptions?: Partial<AudioWorkletNodeOptions>\n\t): AudioWorkletNode {\n\t\treturn createAudioWorkletNode(this.rawContext, name, options);\n\t}\n\n\t/**\n\t * Add an AudioWorkletProcessor module\n\t * @param url The url of the module\n\t * @param name The name of the module\n\t */\n\tasync addAudioWorkletModule(url: string, name: string): Promise<void> {\n\t\tassert(\n\t\t\tisDefined(this.rawContext.audioWorklet),\n\t\t\t\"AudioWorkletNode is only available in a secure context (https or localhost)\"\n\t\t);\n\t\tif (!this._workletModules.has(name)) {\n\t\t\tthis._workletModules.set(\n\t\t\t\tname,\n\t\t\t\tthis.rawContext.audioWorklet.addModule(url)\n\t\t\t);\n\t\t}\n\t\tawait this._workletModules.get(name);\n\t}\n\n\t/**\n\t * Returns a promise which resolves when all of the worklets have been loaded on this context\n\t */\n\tprotected async workletsAreReady(): Promise<void> {\n\t\tconst promises: Promise<void>[] = [];\n\t\tthis._workletModules.forEach((promise) => promises.push(promise));\n\t\tawait Promise.all(promises);\n\t}\n\n\t//---------------------------\n\t// TICKER\n\t//---------------------------\n\n\t/**\n\t * How often the interval callback is invoked.\n\t * This number corresponds to how responsive the scheduling\n\t * can be. context.updateInterval + context.lookAhead gives you the\n\t * total latency between scheduling an event and hearing it.\n\t */\n\tget updateInterval(): Seconds {\n\t\treturn this._ticker.updateInterval;\n\t}\n\tset updateInterval(interval: Seconds) {\n\t\tthis._ticker.updateInterval = interval;\n\t}\n\n\t/**\n\t * What the source of the clock is, either \"worker\" (default),\n\t * \"timeout\", or \"offline\" (none).\n\t */\n\tget clockSource(): TickerClockSource {\n\t\treturn this._ticker.type;\n\t}\n\tset clockSource(type: TickerClockSource) {\n\t\tthis._ticker.type = type;\n\t}\n\n\t/**\n\t * The type of playback, which affects tradeoffs between audio\n\t * output latency and responsiveness.\n\t * In addition to setting the value in seconds, the latencyHint also\n\t * accepts the strings \"interactive\" (prioritizes low latency),\n\t * \"playback\" (prioritizes sustained playback), \"balanced\" (balances\n\t * latency and performance).\n\t * @example\n\t * // prioritize sustained playback\n\t * const context = new Tone.Context({ latencyHint: \"playback\" });\n\t * // set this context as the global Context\n\t * Tone.setContext(context);\n\t * // the global context is gettable with Tone.getContext()\n\t * console.log(Tone.getContext().latencyHint);\n\t */\n\tget latencyHint(): ContextLatencyHint | Seconds {\n\t\treturn this._latencyHint;\n\t}\n\n\t/**\n\t * Update the lookAhead and updateInterval based on the latencyHint\n\t */\n\tprivate _setLatencyHint(hint: ContextLatencyHint | Seconds): void {\n\t\tlet lookAheadValue = 0;\n\t\tthis._latencyHint = hint;\n\t\tif (isString(hint)) {\n\t\t\tswitch (hint) {\n\t\t\t\tcase \"interactive\":\n\t\t\t\t\tlookAheadValue = 0.1;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"playback\":\n\t\t\t\t\tlookAheadValue = 0.5;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"balanced\":\n\t\t\t\t\tlookAheadValue = 0.25;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tthis.lookAhead = lookAheadValue;\n\t\tthis.updateInterval = lookAheadValue / 2;\n\t}\n\n\t/**\n\t * The unwrapped AudioContext or OfflineAudioContext\n\t */\n\tget rawContext(): AnyAudioContext {\n\t\treturn this._context;\n\t}\n\n\t/**\n\t * The current audio context time plus a short [[lookAhead]].\n\t */\n\tnow(): Seconds {\n\t\treturn this._context.currentTime + this.lookAhead;\n\t}\n\n\t/**\n\t * The current audio context time without the [[lookAhead]].\n\t * In most cases it is better to use [[now]] instead of [[immediate]] since\n\t * with [[now]] the [[lookAhead]] is applied equally to _all_ components including internal components,\n\t * to making sure that everything is scheduled in sync. Mixing [[now]] and [[immediate]]\n\t * can cause some timing issues. If no lookAhead is desired, you can set the [[lookAhead]] to `0`.\n\t */\n\timmediate(): Seconds {\n\t\treturn this._context.currentTime;\n\t}\n\n\t/**\n\t * Starts the audio context from a suspended state. This is required\n\t * to initially start the AudioContext. See [[Tone.start]]\n\t */\n\tresume(): Promise<void> {\n\t\tif (isAudioContext(this._context)) {\n\t\t\treturn this._context.resume();\n\t\t} else {\n\t\t\treturn Promise.resolve();\n\t\t}\n\t}\n\n\t/**\n\t * Close the context. Once closed, the context can no longer be used and\n\t * any AudioNodes created from the context will be silent.\n\t */\n\tasync close(): Promise<void> {\n\t\tif (isAudioContext(this._context)) {\n\t\t\tawait this._context.close();\n\t\t}\n\t\tif (this._initialized) {\n\t\t\tcloseContext(this);\n\t\t}\n\t}\n\n\t/**\n\t * **Internal** Generate a looped buffer at some constant value.\n\t */\n\tgetConstant(val: number): AudioBufferSourceNode {\n\t\tif (this._constants.has(val)) {\n\t\t\treturn this._constants.get(val) as AudioBufferSourceNode;\n\t\t} else {\n\t\t\tconst buffer = this._context.createBuffer(\n\t\t\t\t1,\n\t\t\t\t128,\n\t\t\t\tthis._context.sampleRate\n\t\t\t);\n\t\t\tconst arr = buffer.getChannelData(0);\n\t\t\tfor (let i = 0; i < arr.length; i++) {\n\t\t\t\tarr[i] = val;\n\t\t\t}\n\t\t\tconst constant = this._context.createBufferSource();\n\t\t\tconstant.channelCount = 1;\n\t\t\tconstant.channelCountMode = \"explicit\";\n\t\t\tconstant.buffer = buffer;\n\t\t\tconstant.loop = true;\n\t\t\tconstant.start(0);\n\t\t\tthis._constants.set(val, constant);\n\t\t\treturn constant;\n\t\t}\n\t}\n\n\t/**\n\t * Clean up. Also closes the audio context.\n\t */\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._ticker.dispose();\n\t\tthis._timeouts.dispose();\n\t\tObject.keys(this._constants).map((val) =>\n\t\t\tthis._constants[val].disconnect()\n\t\t);\n\t\treturn this;\n\t}\n\n\t//---------------------------\n\t// TIMEOUTS\n\t//---------------------------\n\n\t/**\n\t * The private loop which keeps track of the context scheduled timeouts\n\t * Is invoked from the clock source\n\t */\n\tprivate _timeoutLoop(): void {\n\t\tconst now = this.now();\n\t\tlet firstEvent = this._timeouts.peek();\n\t\twhile (this._timeouts.length && firstEvent && firstEvent.time <= now) {\n\t\t\t// invoke the callback\n\t\t\tfirstEvent.callback();\n\t\t\t// shift the first event off\n\t\t\tthis._timeouts.shift();\n\t\t\t// get the next one\n\t\t\tfirstEvent = this._timeouts.peek();\n\t\t}\n\t}\n\n\t/**\n\t * A setTimeout which is guaranteed by the clock source.\n\t * Also runs in the offline context.\n\t * @param  fn       The callback to invoke\n\t * @param  timeout  The timeout in seconds\n\t * @returns ID to use when invoking Context.clearTimeout\n\t */\n\tsetTimeout(fn: (...args: any[]) => void, timeout: Seconds): number {\n\t\tthis._timeoutIds++;\n\t\tconst now = this.now();\n\t\tthis._timeouts.add({\n\t\t\tcallback: fn,\n\t\t\tid: this._timeoutIds,\n\t\t\ttime: now + timeout,\n\t\t});\n\t\treturn this._timeoutIds;\n\t}\n\n\t/**\n\t * Clears a previously scheduled timeout with Tone.context.setTimeout\n\t * @param  id  The ID returned from setTimeout\n\t */\n\tclearTimeout(id: number): this {\n\t\tthis._timeouts.forEach((event) => {\n\t\t\tif (event.id === id) {\n\t\t\t\tthis._timeouts.remove(event);\n\t\t\t}\n\t\t});\n\t\treturn this;\n\t}\n\n\t/**\n\t * Clear the function scheduled by [[setInterval]]\n\t */\n\tclearInterval(id: number): this {\n\t\treturn this.clearTimeout(id);\n\t}\n\n\t/**\n\t * Adds a repeating event to the context's callback clock\n\t */\n\tsetInterval(fn: (...args: any[]) => void, interval: Seconds): number {\n\t\tconst id = ++this._timeoutIds;\n\t\tconst intervalFn = () => {\n\t\t\tconst now = this.now();\n\t\t\tthis._timeouts.add({\n\t\t\t\tcallback: () => {\n\t\t\t\t\t// invoke the callback\n\t\t\t\t\tfn();\n\t\t\t\t\t// invoke the event to repeat it\n\t\t\t\t\tintervalFn();\n\t\t\t\t},\n\t\t\t\tid,\n\t\t\t\ttime: now + interval,\n\t\t\t});\n\t\t};\n\t\t// kick it off\n\t\tintervalFn();\n\t\treturn id;\n\t}\n}\n","import { BaseContext } from \"./BaseContext\";\nimport { Seconds } from \"../type/Units\";\nimport { AnyAudioContext } from \"./AudioContext\";\n\ntype Draw = import(\"../util/Draw\").Draw;\ntype Destination = import(\"./Destination\").Destination;\ntype Transport = import(\"../clock/Transport\").Transport;\ntype Listener = import(\"./Listener\").Listener;\n\nexport class DummyContext extends BaseContext {\n\t//---------------------------\n\t// BASE AUDIO CONTEXT METHODS\n\t//---------------------------\n\tcreateAnalyser(): AnalyserNode {\n\t\treturn {} as AnalyserNode;\n\t}\n\n\tcreateOscillator(): OscillatorNode {\n\t\treturn {} as OscillatorNode;\n\t}\n\n\tcreateBufferSource() {\n\t\treturn {} as AudioBufferSourceNode;\n\t}\n\n\tcreateBiquadFilter(): BiquadFilterNode {\n\t\treturn {} as BiquadFilterNode;\n\t}\n\n\tcreateBuffer(\n\t\t_numberOfChannels: number,\n\t\t_length: number,\n\t\t_sampleRate: number\n\t): AudioBuffer {\n\t\treturn {} as AudioBuffer;\n\t}\n\n\tcreateChannelMerger(\n\t\t_numberOfInputs?: number | undefined\n\t): ChannelMergerNode {\n\t\treturn {} as ChannelMergerNode;\n\t}\n\n\tcreateChannelSplitter(\n\t\t_numberOfOutputs?: number | undefined\n\t): ChannelSplitterNode {\n\t\treturn {} as ChannelSplitterNode;\n\t}\n\n\tcreateConstantSource(): ConstantSourceNode {\n\t\treturn {} as ConstantSourceNode;\n\t}\n\n\tcreateConvolver(): ConvolverNode {\n\t\treturn {} as ConvolverNode;\n\t}\n\n\tcreateDelay(_maxDelayTime?: number | undefined): DelayNode {\n\t\treturn {} as DelayNode;\n\t}\n\n\tcreateDynamicsCompressor(): DynamicsCompressorNode {\n\t\treturn {} as DynamicsCompressorNode;\n\t}\n\n\tcreateGain(): GainNode {\n\t\treturn {} as GainNode;\n\t}\n\n\tcreateIIRFilter(\n\t\t_feedForward: number[] | Float32Array,\n\t\t_feedback: number[] | Float32Array\n\t): IIRFilterNode {\n\t\treturn {} as IIRFilterNode;\n\t}\n\n\tcreatePanner(): PannerNode {\n\t\treturn {} as PannerNode;\n\t}\n\n\tcreatePeriodicWave(\n\t\t_real: number[] | Float32Array,\n\t\t_imag: number[] | Float32Array,\n\t\t_constraints?: PeriodicWaveConstraints | undefined\n\t): PeriodicWave {\n\t\treturn {} as PeriodicWave;\n\t}\n\n\tcreateStereoPanner(): StereoPannerNode {\n\t\treturn {} as StereoPannerNode;\n\t}\n\n\tcreateWaveShaper(): WaveShaperNode {\n\t\treturn {} as WaveShaperNode;\n\t}\n\n\tcreateMediaStreamSource(_stream: MediaStream): MediaStreamAudioSourceNode {\n\t\treturn {} as MediaStreamAudioSourceNode;\n\t}\n\n\tcreateMediaElementSource(\n\t\t_element: HTMLMediaElement\n\t): MediaElementAudioSourceNode {\n\t\treturn {} as MediaElementAudioSourceNode;\n\t}\n\n\tcreateMediaStreamDestination(): MediaStreamAudioDestinationNode {\n\t\treturn {} as MediaStreamAudioDestinationNode;\n\t}\n\n\tdecodeAudioData(_audioData: ArrayBuffer): Promise<AudioBuffer> {\n\t\treturn Promise.resolve({} as AudioBuffer);\n\t}\n\n\t//---------------------------\n\t// TONE AUDIO CONTEXT METHODS\n\t//---------------------------\n\n\tcreateAudioWorkletNode(\n\t\t_name: string,\n\t\t_options?: Partial<AudioWorkletNodeOptions>\n\t): AudioWorkletNode {\n\t\treturn {} as AudioWorkletNode;\n\t}\n\n\tget rawContext(): AnyAudioContext {\n\t\treturn {} as AnyAudioContext;\n\t}\n\n\tasync addAudioWorkletModule(_url: string, _name: string): Promise<void> {\n\t\treturn Promise.resolve();\n\t}\n\n\tlookAhead = 0;\n\n\tlatencyHint = 0;\n\n\tresume(): Promise<void> {\n\t\treturn Promise.resolve();\n\t}\n\n\tsetTimeout(_fn: (...args: any[]) => void, _timeout: Seconds): number {\n\t\treturn 0;\n\t}\n\n\tclearTimeout(_id: number): this {\n\t\treturn this;\n\t}\n\n\tsetInterval(_fn: (...args: any[]) => void, _interval: Seconds): number {\n\t\treturn 0;\n\t}\n\n\tclearInterval(_id: number): this {\n\t\treturn this;\n\t}\n\n\tgetConstant(_val: number): AudioBufferSourceNode {\n\t\treturn {} as AudioBufferSourceNode;\n\t}\n\n\tget currentTime(): Seconds {\n\t\treturn 0;\n\t}\n\n\tget state(): AudioContextState {\n\t\treturn {} as AudioContextState;\n\t}\n\n\tget sampleRate(): number {\n\t\treturn 0;\n\t}\n\n\tget listener(): Listener {\n\t\treturn {} as Listener;\n\t}\n\n\tget transport(): Transport {\n\t\treturn {} as Transport;\n\t}\n\n\tget draw(): Draw {\n\t\treturn {} as Draw;\n\t}\n\tset draw(_d) {}\n\n\tget destination(): Destination {\n\t\treturn {} as Destination;\n\t}\n\tset destination(_d: Destination) {}\n\n\tnow() {\n\t\treturn 0;\n\t}\n\n\timmediate() {\n\t\treturn 0;\n\t}\n\n\treadonly isOffline: boolean = false;\n}\n","import { isArray } from \"./TypeCheck\";\n\n// return an interface which excludes certain keys\nexport type Omit<T, K extends keyof T> = Pick<T, Exclude<keyof T, K>>;\n\n/**\n * Make the property not writable using `defineProperty`. Internal use only.\n */\nexport function readOnly(target: object, property: string | string[]): void {\n\tif (isArray(property)) {\n\t\tproperty.forEach(str => readOnly(target, str));\n\t} else {\n\t\tObject.defineProperty(target, property, {\n\t\t\tenumerable: true,\n\t\t\twritable: false,\n\t\t});\n\t}\n}\n\n/**\n * Make an attribute writeable. Internal use only.\n */\nexport function writable(target: object, property: string | string[]): void {\n\tif (isArray(property)) {\n\t\tproperty.forEach(str => writable(target, str));\n\t} else {\n\t\tObject.defineProperty(target, property, {\n\t\t\twritable: true,\n\t\t});\n\t}\n}\n\nexport const noOp: (...args: any[]) => any = () => {\n\t// no operation here!\n};\n\n/**\n * Recursive Partial taken from here: https://stackoverflow.com/a/51365037\n */\nexport type RecursivePartial<T> = {\n\t[P in keyof T]?:\n\tT[P] extends Array<infer U> ? Array<RecursivePartial<U>> :\n\t\tT[P] extends object ? RecursivePartial<T[P]> :\n\t\t\tT[P];\n};\n","import { getContext } from \"../Global\";\nimport { Tone } from \"../Tone\";\nimport { Samples, Seconds } from \"../type/Units\";\nimport { isAudioBuffer } from \"../util/AdvancedTypeCheck\";\nimport { optionsFromArguments } from \"../util/Defaults\";\nimport { noOp } from \"../util/Interface\";\nimport { isArray, isNumber, isString } from \"../util/TypeCheck\";\nimport { assert } from \"../util/Debug\";\n\ninterface ToneAudioBufferOptions {\n\turl?: string | AudioBuffer | ToneAudioBuffer;\n\treverse: boolean;\n\tonload: (buffer?: ToneAudioBuffer) => void;\n\tonerror: (error: Error) => void;\n}\n\n/**\n * AudioBuffer loading and storage. ToneAudioBuffer is used internally by all\n * classes that make requests for audio files such as Tone.Player,\n * Tone.Sampler and Tone.Convolver.\n * @example\n * const buffer = new Tone.ToneAudioBuffer(\"https://tonejs.github.io/audio/casio/A1.mp3\", () => {\n * \tconsole.log(\"loaded\");\n * });\n * @category Core\n */\nexport class ToneAudioBuffer extends Tone {\n\n\treadonly name: string = \"ToneAudioBuffer\";\n\n\t/**\n\t * stores the loaded AudioBuffer\n\t */\n\tprivate _buffer?: AudioBuffer;\n\n\t/**\n\t * indicates if the buffer should be reversed or not\n\t */\n\tprivate _reversed!: boolean;\n\n\t/**\n\t * Callback when the buffer is loaded.\n\t */\n\tonload: (buffer: ToneAudioBuffer) => void = noOp;\n\n\t/**\n\t *\n\t * @param url The url to load, or the audio buffer to set.\n\t * @param onload A callback which is invoked after the buffer is loaded.\n\t *                           It's recommended to use `ToneAudioBuffer.on('load', callback)` instead\n\t *                           since it will give you a callback when _all_ buffers are loaded.\n\t * @param onerror The callback to invoke if there is an error\n\t */\n\tconstructor(\n\t\turl?: string | ToneAudioBuffer | AudioBuffer,\n\t\tonload?: (buffer: ToneAudioBuffer) => void,\n\t\tonerror?: (error: Error) => void,\n\t);\n\tconstructor(options?: Partial<ToneAudioBufferOptions>);\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tconst options = optionsFromArguments(ToneAudioBuffer.getDefaults(), arguments, [\"url\", \"onload\", \"onerror\"]);\n\n\t\tthis.reverse = options.reverse;\n\t\tthis.onload = options.onload;\n\n\t\tif (options.url && isAudioBuffer(options.url) || options.url instanceof ToneAudioBuffer) {\n\t\t\tthis.set(options.url);\n\t\t} else if (isString(options.url)) {\n\t\t\t// initiate the download\n\t\t\tthis.load(options.url).catch(options.onerror);\n\t\t}\n\t}\n\n\tstatic getDefaults(): ToneAudioBufferOptions {\n\t\treturn {\n\t\t\tonerror: noOp,\n\t\t\tonload: noOp,\n\t\t\treverse: false,\n\t\t};\n\t}\n\n\t/**\n\t * The sample rate of the AudioBuffer\n\t */\n\tget sampleRate(): number {\n\t\tif (this._buffer) {\n\t\t\treturn this._buffer.sampleRate;\n\t\t} else {\n\t\t\treturn getContext().sampleRate;\n\t\t}\n\t}\n\n\t/**\n\t * Pass in an AudioBuffer or ToneAudioBuffer to set the value of this buffer.\n\t */\n\tset(buffer: AudioBuffer | ToneAudioBuffer): this {\n\t\tif (buffer instanceof ToneAudioBuffer) {\n\t\t\t// if it's loaded, set it\n\t\t\tif (buffer.loaded) {\n\t\t\t\tthis._buffer = buffer.get();\n\t\t\t} else {\n\t\t\t\t// otherwise when it's loaded, invoke it's callback\n\t\t\t\tbuffer.onload = () => {\n\t\t\t\t\tthis.set(buffer);\n\t\t\t\t\tthis.onload(this);\n\t\t\t\t};\n\t\t\t}\n\t\t} else {\n\t\t\tthis._buffer = buffer;\n\t\t}\n\t\t// reverse it initially\n\t\tif (this._reversed) {\n\t\t\tthis._reverse();\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * The audio buffer stored in the object.\n\t */\n\tget(): AudioBuffer | undefined {\n\t\treturn this._buffer;\n\t}\n\n\t/**\n\t * Makes an fetch request for the selected url then decodes the file as an audio buffer.\n\t * Invokes the callback once the audio buffer loads.\n\t * @param url The url of the buffer to load. filetype support depends on the browser.\n\t * @returns A Promise which resolves with this ToneAudioBuffer\n\t */\n\tasync load(url: string): Promise<this> {\n\t\tconst doneLoading: Promise<void> = ToneAudioBuffer.load(url).then(audioBuffer => {\n\t\t\tthis.set(audioBuffer);\n\t\t\t// invoke the onload method\n\t\t\tthis.onload(this);\n\t\t});\n\t\tToneAudioBuffer.downloads.push(doneLoading);\n\t\ttry {\n\t\t\tawait doneLoading;\n\t\t} finally {\n\t\t\t// remove the downloaded file\n\t\t\tconst index = ToneAudioBuffer.downloads.indexOf(doneLoading);\n\t\t\tToneAudioBuffer.downloads.splice(index, 1);\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * clean up\n\t */\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._buffer = undefined;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Set the audio buffer from the array.\n\t * To create a multichannel AudioBuffer, pass in a multidimensional array.\n\t * @param array The array to fill the audio buffer\n\t */\n\tfromArray(array: Float32Array | Float32Array[]): this {\n\t\tconst isMultidimensional = isArray(array) && array[0].length > 0;\n\t\tconst channels = isMultidimensional ? array.length : 1;\n\t\tconst len = isMultidimensional ? (array[0] as Float32Array).length : array.length;\n\t\tconst context = getContext();\n\t\tconst buffer = context.createBuffer(channels, len, context.sampleRate);\n\t\tconst multiChannelArray: Float32Array[] = !isMultidimensional && channels === 1 ?\n\t\t\t[array as Float32Array] : array as Float32Array[];\n\n\t\tfor (let c = 0; c < channels; c++) {\n\t\t\tbuffer.copyToChannel(multiChannelArray[c], c);\n\t\t}\n\t\tthis._buffer = buffer;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sums multiple channels into 1 channel\n\t * @param chanNum Optionally only copy a single channel from the array.\n\t */\n\ttoMono(chanNum?: number): this {\n\t\tif (isNumber(chanNum)) {\n\t\t\tthis.fromArray(this.toArray(chanNum));\n\t\t} else {\n\t\t\tlet outputArray = new Float32Array(this.length as number);\n\t\t\tconst numChannels = this.numberOfChannels;\n\t\t\tfor (let channel = 0; channel < numChannels; channel++) {\n\t\t\t\tconst channelArray = this.toArray(channel) as Float32Array;\n\t\t\t\tfor (let i = 0; i < channelArray.length; i++) {\n\t\t\t\t\toutputArray[i] += channelArray[i];\n\t\t\t\t}\n\t\t\t}\n\t\t\t// divide by the number of channels\n\t\t\toutputArray = outputArray.map(sample => sample / numChannels);\n\t\t\tthis.fromArray(outputArray);\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Get the buffer as an array. Single channel buffers will return a 1-dimensional\n\t * Float32Array, and multichannel buffers will return multidimensional arrays.\n\t * @param channel Optionally only copy a single channel from the array.\n\t */\n\ttoArray(channel?: number): Float32Array | Float32Array[] {\n\t\tif (isNumber(channel)) {\n\t\t\treturn this.getChannelData(channel);\n\t\t} else if (this.numberOfChannels === 1) {\n\t\t\treturn this.toArray(0);\n\t\t} else {\n\t\t\tconst ret: Float32Array[] = [];\n\t\t\tfor (let c = 0; c < this.numberOfChannels; c++) {\n\t\t\t\tret[c] = this.getChannelData(c);\n\t\t\t}\n\t\t\treturn ret;\n\t\t}\n\t}\n\n\t/**\n\t * Returns the Float32Array representing the PCM audio data for the specific channel.\n\t * @param  channel  The channel number to return\n\t * @return The audio as a TypedArray\n\t */\n\tgetChannelData(channel: number): Float32Array {\n\t\tif (this._buffer) {\n\t\t\treturn this._buffer.getChannelData(channel);\n\t\t} else {\n\t\t\treturn new Float32Array(0);\n\t\t}\n\t}\n\n\t/**\n\t * Cut a subsection of the array and return a buffer of the\n\t * subsection. Does not modify the original buffer\n\t * @param start The time to start the slice\n\t * @param end The end time to slice. If none is given will default to the end of the buffer\n\t */\n\tslice(start: Seconds, end: Seconds = this.duration): ToneAudioBuffer {\n\t\tconst startSamples = Math.floor(start * this.sampleRate);\n\t\tconst endSamples = Math.floor(end * this.sampleRate);\n\t\tassert(startSamples < endSamples, \"The start time must be less than the end time\");\n\t\tconst length = endSamples - startSamples;\n\t\tconst retBuffer = getContext().createBuffer(this.numberOfChannels, length, this.sampleRate);\n\t\tfor (let channel = 0; channel < this.numberOfChannels; channel++) {\n\t\t\tretBuffer.copyToChannel(this.getChannelData(channel).subarray(startSamples, endSamples), channel);\n\t\t}\n\t\treturn new ToneAudioBuffer(retBuffer);\n\t}\n\n\t/**\n\t * Reverse the buffer.\n\t */\n\tprivate _reverse(): this {\n\t\tif (this.loaded) {\n\t\t\tfor (let i = 0; i < this.numberOfChannels; i++) {\n\t\t\t\tthis.getChannelData(i).reverse();\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * If the buffer is loaded or not\n\t */\n\tget loaded(): boolean {\n\t\treturn this.length > 0;\n\t}\n\n\t/**\n\t * The duration of the buffer in seconds.\n\t */\n\tget duration(): Seconds {\n\t\tif (this._buffer) {\n\t\t\treturn this._buffer.duration;\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\t}\n\n\t/**\n\t * The length of the buffer in samples\n\t */\n\tget length(): Samples {\n\t\tif (this._buffer) {\n\t\t\treturn this._buffer.length;\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\t}\n\n\t/**\n\t * The number of discrete audio channels. Returns 0 if no buffer is loaded.\n\t */\n\tget numberOfChannels(): number {\n\t\tif (this._buffer) {\n\t\t\treturn this._buffer.numberOfChannels;\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\t}\n\n\t/**\n\t * Reverse the buffer.\n\t */\n\tget reverse(): boolean {\n\t\treturn this._reversed;\n\t}\n\tset reverse(rev: boolean) {\n\t\tif (this._reversed !== rev) {\n\t\t\tthis._reversed = rev;\n\t\t\tthis._reverse();\n\t\t}\n\t}\n\n\t//-------------------------------------\n\t// STATIC METHODS\n\t//-------------------------------------\n\n\t/**\n\t * A path which is prefixed before every url.\n\t */\n\tstatic baseUrl = \"\";\n\n\t/**\n\t * Create a ToneAudioBuffer from the array. To create a multichannel AudioBuffer,\n\t * pass in a multidimensional array.\n\t * @param array The array to fill the audio buffer\n\t * @return A ToneAudioBuffer created from the array\n\t */\n\tstatic fromArray(array: Float32Array | Float32Array[]): ToneAudioBuffer {\n\t\treturn (new ToneAudioBuffer()).fromArray(array);\n\t}\n\n\t/**\n\t * Creates a ToneAudioBuffer from a URL, returns a promise which resolves to a ToneAudioBuffer\n\t * @param  url The url to load.\n\t * @return A promise which resolves to a ToneAudioBuffer\n\t */\n\tstatic async fromUrl(url: string): Promise<ToneAudioBuffer> {\n\t\tconst buffer = new ToneAudioBuffer();\n\t\treturn await buffer.load(url);\n\t}\n\n\t/**\n\t * All of the downloads\n\t */\n\tstatic downloads: Array<Promise<void>> = [];\n\n\t/**\n\t * Loads a url using fetch and returns the AudioBuffer.\n\t */\n\tstatic async load(url: string): Promise<AudioBuffer> {\n\n\t\t// test if the url contains multiple extensions\n\t\tconst matches = url.match(/\\[([^\\]\\[]+\\|.+)\\]$/);\n\t\tif (matches) {\n\t\t\tconst extensions = matches[1].split(\"|\");\n\t\t\tlet extension = extensions[0];\n\t\t\tfor (const ext of extensions) {\n\t\t\t\tif (ToneAudioBuffer.supportsType(ext)) {\n\t\t\t\t\textension = ext;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\turl = url.replace(matches[0], extension);\n\t\t}\n\n\t\t// make sure there is a slash between the baseUrl and the url\n\t\tconst baseUrl = ToneAudioBuffer.baseUrl === \"\" || ToneAudioBuffer.baseUrl.endsWith(\"/\") ? ToneAudioBuffer.baseUrl : ToneAudioBuffer.baseUrl + \"/\";\n\t\tconst response = await fetch(baseUrl + url);\n\t\tif (!response.ok) {\n\t\t\tthrow new Error(`could not load url: ${url}`);\n\t\t}\n\t\tconst arrayBuffer = await response.arrayBuffer();\n\n\t\tconst audioBuffer = await getContext().decodeAudioData(arrayBuffer);\n\n\t\treturn audioBuffer;\n\t}\n\n\t/**\n\t * Checks a url's extension to see if the current browser can play that file type.\n\t * @param url The url/extension to test\n\t * @return If the file extension can be played\n\t * @static\n\t * @example\n\t * Tone.ToneAudioBuffer.supportsType(\"wav\"); // returns true\n\t * Tone.ToneAudioBuffer.supportsType(\"path/to/file.wav\"); // returns true\n\t */\n\tstatic supportsType(url: string): boolean {\n\t\tconst extensions = url.split(\".\");\n\t\tconst extension = extensions[extensions.length - 1];\n\t\tconst response = document.createElement(\"audio\").canPlayType(\"audio/\" + extension);\n\t\treturn response !== \"\";\n\t}\n\n\t/**\n\t * Returns a Promise which resolves when all of the buffers have loaded\n\t */\n\tstatic async loaded(): Promise<void> {\n\t\t// this makes sure that the function is always async\n\t\tawait Promise.resolve();\n\t\twhile (ToneAudioBuffer.downloads.length) {\n\t\t\tawait ToneAudioBuffer.downloads[0];\n\t\t}\n\t}\n}\n","import { createOfflineAudioContext } from \"../context/AudioContext\";\nimport { Context } from \"../context/Context\";\nimport { Seconds } from \"../type/Units\";\nimport { isOfflineAudioContext } from \"../util/AdvancedTypeCheck\";\nimport { ToneAudioBuffer } from \"./ToneAudioBuffer\";\n\n/**\n * Wrapper around the OfflineAudioContext\n * @category Core\n * @example\n * // generate a single channel, 0.5 second buffer\n * const context = new Tone.OfflineContext(1, 0.5, 44100);\n * const osc = new Tone.Oscillator({ context });\n * context.render().then(buffer => {\n * \tconsole.log(buffer.numberOfChannels, buffer.duration);\n * });\n */\nexport class OfflineContext extends Context {\n\n\treadonly name: string = \"OfflineContext\";\n\n\t/**\n\t * A private reference to the duration\n\t */\n\tprivate readonly _duration: Seconds;\n\n\t/**\n\t * An artificial clock source\n\t */\n\tprivate _currentTime: Seconds = 0;\n\n\t/**\n\t * Private reference to the OfflineAudioContext.\n\t */\n\tprotected _context!: OfflineAudioContext;\n\n\treadonly isOffline: boolean = true;\n\n\t/**\n\t * @param  channels  The number of channels to render\n\t * @param  duration  The duration to render in seconds\n\t * @param sampleRate the sample rate to render at\n\t */\n\tconstructor(\n\t\tchannels: number,\n\t\tduration: Seconds, \n\t\tsampleRate: number,\n\t);\n\tconstructor(context: OfflineAudioContext);\n\tconstructor() {\n\n\t\tsuper({\n\t\t\tclockSource: \"offline\",\n\t\t\tcontext: isOfflineAudioContext(arguments[0]) ?\n\t\t\t\targuments[0] : createOfflineAudioContext(arguments[0], arguments[1] * arguments[2], arguments[2]),\n\t\t\tlookAhead: 0,\n\t\t\tupdateInterval: isOfflineAudioContext(arguments[0]) ?\n\t\t\t\t128 / arguments[0].sampleRate : 128 / arguments[2],\n\t\t});\n\n\t\tthis._duration = isOfflineAudioContext(arguments[0]) ?\n\t\t\targuments[0].length / arguments[0].sampleRate : arguments[1];\n\t}\n\n\t/**\n\t * Override the now method to point to the internal clock time\n\t */\n\tnow(): Seconds {\n\t\treturn this._currentTime;\n\t}\n\n\t/**\n\t * Same as this.now()\n\t */\n\tget currentTime(): Seconds {\n\t\treturn this._currentTime;\n\t}\n\n\t/**\n\t * Render just the clock portion of the audio context.\n\t */\n\tprivate async _renderClock(asynchronous: boolean): Promise<void> {\n\t\tlet index = 0;\n\t\twhile (this._duration - this._currentTime >= 0) {\n\n\t\t\t// invoke all the callbacks on that time\n\t\t\tthis.emit(\"tick\");\n\n\t\t\t// increment the clock in block-sized chunks\n\t\t\tthis._currentTime += 128 / this.sampleRate;\n\n\t\t\t// yield once a second of audio\n\t\t\tindex++;\n\t\t\tconst yieldEvery = Math.floor(this.sampleRate / 128);\n\t\t\tif (asynchronous && index % yieldEvery === 0) {\n\t\t\t\tawait new Promise(done => setTimeout(done, 1));\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Render the output of the OfflineContext\n\t * @param asynchronous If the clock should be rendered asynchronously, which will not block the main thread, but be slightly slower.\n\t */\n\tasync render(asynchronous = true): Promise<ToneAudioBuffer> {\n\t\tawait this.workletsAreReady();\n\t\tawait this._renderClock(asynchronous);\n\t\tconst buffer = await this._context.startRendering();\n\t\treturn new ToneAudioBuffer(buffer);\n\t}\n\n\t/**\n\t * Close the context\n\t */\n\tclose(): Promise<void> {\n\t\treturn Promise.resolve();\n\t}\n}\n","import { version } from \"../version\";\nimport { AnyAudioContext, hasAudioContext, theWindow } from \"./context/AudioContext\";\nimport { Context } from \"./context/Context\";\nimport { DummyContext } from \"./context/DummyContext\";\nimport { BaseContext } from \"./context/BaseContext\";\nimport { OfflineContext } from \"./context/OfflineContext\";\nimport { isAudioContext, isOfflineAudioContext } from \"./util/AdvancedTypeCheck\";\n\n/**\n * This dummy context is used to avoid throwing immediate errors when importing in Node.js\n */\nconst dummyContext = new DummyContext();\n\n/**\n * The global audio context which is getable and assignable through\n * getContext and setContext\n */\nlet globalContext: BaseContext = dummyContext;\n\n/**\n * Returns the default system-wide [[Context]]\n * @category Core\n */\nexport function getContext(): BaseContext {\n\tif (globalContext === dummyContext && hasAudioContext) {\n\t\tsetContext(new Context());\n\t}\n\treturn globalContext;\n}\n\n/**\n * Set the default audio context\n * @category Core\n */\nexport function setContext(context: BaseContext | AnyAudioContext): void {\n\tif (isAudioContext(context)) {\n\t\tglobalContext = new Context(context);\n\t} else if (isOfflineAudioContext(context)) {\n\t\tglobalContext = new OfflineContext(context);\n\t} else {\n\t\tglobalContext = context;\n\t}\n}\n\n/**\n * Most browsers will not play _any_ audio until a user\n * clicks something (like a play button). Invoke this method\n * on a click or keypress event handler to start the audio context.\n * More about the Autoplay policy\n * [here](https://developers.google.com/web/updates/2017/09/autoplay-policy-changes#webaudio)\n * @example\n * document.querySelector(\"button\").addEventListener(\"click\", async () => {\n * \tawait Tone.start();\n * \tconsole.log(\"context started\");\n * });\n * @category Core\n */\nexport function start(): Promise<void> {\n\treturn globalContext.resume();\n}\n\n/**\n * Log Tone.js + version in the console.\n */\nif (theWindow && !theWindow.TONE_SILENCE_LOGGING) {\n\tlet prefix = \"v\";\n\tif (version === \"dev\") {\n\t\tprefix = \"\";\n\t}\n\tconst printString = ` * Tone.js ${prefix}${version} * `;\n\t// eslint-disable-next-line no-console\n\tconsole.log(`%c${printString}`, \"background: #000; color: #fff\");\n}\n","import { Decibels, GainFactor, Hertz, Interval, MidiNote, NormalRange } from \"./Units\";\n\n/**\n * Equal power gain scale. Good for cross-fading.\n * @param  percent (0-1)\n */\nexport function equalPowerScale(percent: NormalRange): number {\n\tconst piFactor = 0.5 * Math.PI;\n\treturn Math.sin(percent * piFactor);\n}\n\n/**\n * Convert decibels into gain.\n */\nexport function dbToGain(db: Decibels): GainFactor {\n\treturn Math.pow(10, db / 20);\n}\n\n/**\n * Convert gain to decibels.\n */\nexport function gainToDb(gain: GainFactor): Decibels {\n\treturn 20 * (Math.log(gain) / Math.LN10);\n}\n\n/**\n * Convert an interval (in semitones) to a frequency ratio.\n * @param interval the number of semitones above the base note\n * @example\n * Tone.intervalToFrequencyRatio(0); // 1\n * Tone.intervalToFrequencyRatio(12); // 2\n * Tone.intervalToFrequencyRatio(-12); // 0.5\n */\nexport function intervalToFrequencyRatio(interval: Interval): number {\n\treturn Math.pow(2, (interval / 12));\n}\n\n/**\n * The Global [concert tuning pitch](https://en.wikipedia.org/wiki/Concert_pitch) which is used\n * to generate all the other pitch values from notes. A4's values in Hertz.\n */\nlet A4: Hertz = 440;\n\nexport function getA4(): Hertz {\n\treturn A4;\n}\n\nexport function setA4(freq: Hertz): void {\n\tA4 = freq;\n}\n\n/**\n * Convert a frequency value to a MIDI note.\n * @param frequency The value to frequency value to convert.\n * @example\n * Tone.ftom(440); // returns 69\n */\nexport function ftom(frequency: Hertz): MidiNote {\n\treturn Math.round(ftomf(frequency)) as MidiNote;\n}\n\n/**\n * Convert a frequency to a floating point midi value\n */\nexport function ftomf(frequency: Hertz): number {\n\treturn 69 + 12 * Math.log2(frequency / A4);\n}\n\n/**\n * Convert a MIDI note to frequency value.\n * @param  midi The midi number to convert.\n * @return The corresponding frequency value\n * @example\n * Tone.mtof(69); // 440\n */\nexport function mtof(midi: MidiNote): Hertz {\n\treturn A4 * Math.pow(2, (midi - 69) / 12);\n}\n","import { BaseContext } from \"../context/BaseContext\";\nimport { Tone } from \"../Tone\";\nimport { isDefined, isObject, isString, isUndef } from \"../util/TypeCheck\";\nimport { BPM, Hertz, MidiNote, Milliseconds, Samples, Seconds, Ticks, Time } from \"./Units\";\n\nexport type TimeValue = Time | TimeBaseClass<any, any>;\n\n/**\n * The units that the TimeBase can accept. extended by other classes\n */\nexport type TimeBaseUnit = \"s\" | \"n\" | \"t\" | \"m\" | \"i\" | \"hz\" | \"tr\" | \"samples\" | \"number\";\n\nexport interface TypeFunction {\n\tregexp: RegExp;\n\tmethod: (value: string, ...args: string[]) => number;\n}\n\nexport interface TimeExpression<Type extends number> {\n\t[key: string]: {\n\t\tregexp: RegExp;\n\t\tmethod: (value: string, ...args: string[]) => Type;\n\t};\n}\n\n/**\n * TimeBase is a flexible encoding of time which can be evaluated to and from a string.\n */\nexport abstract class TimeBaseClass<Type extends number, Unit extends string> extends Tone {\n\n\treadonly context: BaseContext;\n\n\t/**\n\t * The value of the units\n\t */\n\tprotected _val?: TimeValue;\n\n\t/**\n\t * The units of time\n\t */\n\tprotected _units?: Unit;\n\n\t/**\n\t * All of the conversion expressions\n\t */\n\tprotected _expressions: TimeExpression<Type>;\n\n\t/**\n\t * The default units\n\t */\n\treadonly defaultUnits: Unit = \"s\" as Unit;\n\n\t/**\n\t * @param context The context associated with the time value. Used to compute\n\t * Transport and context-relative timing.\n\t * @param  value  The time value as a number, string or object\n\t * @param  units  Unit values\n\t */\n\tconstructor(context: BaseContext, value?: TimeValue, units?: Unit) {\n\t\tsuper();\n\n\t\tthis._val = value;\n\t\tthis._units = units;\n\t\tthis.context = context;\n\t\tthis._expressions = this._getExpressions();\n\t}\n\n\t/**\n\t * All of the time encoding expressions\n\t */\n\tprotected _getExpressions(): TimeExpression<Type> {\n\t\treturn {\n\t\t\thz: {\n\t\t\t\tmethod: (value) => {\n\t\t\t\t\treturn this._frequencyToUnits(parseFloat(value));\n\t\t\t\t},\n\t\t\t\tregexp: /^(\\d+(?:\\.\\d+)?)hz$/i,\n\t\t\t},\n\t\t\ti: {\n\t\t\t\tmethod: (value) => {\n\t\t\t\t\treturn this._ticksToUnits(parseInt(value, 10));\n\t\t\t\t},\n\t\t\t\tregexp: /^(\\d+)i$/i,\n\t\t\t},\n\t\t\tm: {\n\t\t\t\tmethod: (value) => {\n\t\t\t\t\treturn this._beatsToUnits(parseInt(value, 10) * this._getTimeSignature());\n\t\t\t\t},\n\t\t\t\tregexp: /^(\\d+)m$/i,\n\t\t\t},\n\t\t\tn: {\n\t\t\t\tmethod: (value, dot) => {\n\t\t\t\t\tconst numericValue = parseInt(value, 10);\n\t\t\t\t\tconst scalar = dot === \".\" ? 1.5 : 1;\n\t\t\t\t\tif (numericValue === 1) {\n\t\t\t\t\t\treturn this._beatsToUnits(this._getTimeSignature()) * scalar as Type;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn this._beatsToUnits(4 / numericValue) * scalar as Type;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tregexp: /^(\\d+)n(\\.?)$/i,\n\t\t\t},\n\t\t\tnumber: {\n\t\t\t\tmethod: (value) => {\n\t\t\t\t\treturn this._expressions[this.defaultUnits].method.call(this, value);\n\t\t\t\t},\n\t\t\t\tregexp: /^(\\d+(?:\\.\\d+)?)$/,\n\t\t\t},\n\t\t\ts: {\n\t\t\t\tmethod: (value): Type => {\n\t\t\t\t\treturn this._secondsToUnits(parseFloat(value));\n\t\t\t\t},\n\t\t\t\tregexp: /^(\\d+(?:\\.\\d+)?)s$/,\n\t\t\t},\n\t\t\tsamples: {\n\t\t\t\tmethod: (value) => {\n\t\t\t\t\treturn parseInt(value, 10) / this.context.sampleRate as Type;\n\t\t\t\t},\n\t\t\t\tregexp: /^(\\d+)samples$/,\n\t\t\t},\n\t\t\tt: {\n\t\t\t\tmethod: (value) => {\n\t\t\t\t\tconst numericValue = parseInt(value, 10);\n\t\t\t\t\treturn this._beatsToUnits(8 / (Math.floor(numericValue) * 3));\n\t\t\t\t},\n\t\t\t\tregexp: /^(\\d+)t$/i,\n\t\t\t},\n\t\t\ttr: {\n\t\t\t\tmethod: (m, q, s) => {\n\t\t\t\t\tlet total = 0;\n\t\t\t\t\tif (m && m !== \"0\") {\n\t\t\t\t\t\ttotal += this._beatsToUnits(this._getTimeSignature() * parseFloat(m));\n\t\t\t\t\t}\n\t\t\t\t\tif (q && q !== \"0\") {\n\t\t\t\t\t\ttotal += this._beatsToUnits(parseFloat(q));\n\t\t\t\t\t}\n\t\t\t\t\tif (s && s !== \"0\") {\n\t\t\t\t\t\ttotal += this._beatsToUnits(parseFloat(s) / 4);\n\t\t\t\t\t}\n\t\t\t\t\treturn total as Type;\n\t\t\t\t},\n\t\t\t\tregexp: /^(\\d+(?:\\.\\d+)?):(\\d+(?:\\.\\d+)?):?(\\d+(?:\\.\\d+)?)?$/,\n\t\t\t},\n\t\t};\n\t}\n\n\t//-------------------------------------\n\t// \tVALUE OF\n\t//-------------------------------------\n\n\t/**\n\t * Evaluate the time value. Returns the time in seconds.\n\t */\n\tvalueOf(): Type {\n\t\tif (this._val instanceof TimeBaseClass) {\n\t\t\tthis.fromType(this._val);\n\t\t}\n\t\tif (isUndef(this._val)) {\n\t\t\treturn this._noArg();\n\t\t} else if (isString(this._val) && isUndef(this._units)) {\n\t\t\tfor (const units in this._expressions) {\n\t\t\t\tif (this._expressions[units].regexp.test(this._val.trim())) {\n\t\t\t\t\tthis._units = units as Unit;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (isObject(this._val)) {\n\t\t\tlet total = 0;\n\t\t\tfor (const typeName in this._val) {\n\t\t\t\tif (isDefined(this._val[typeName])) {\n\t\t\t\t\tconst quantity = this._val[typeName];\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\tconst time = (new this.constructor(this.context, typeName)).valueOf() * quantity;\n\t\t\t\t\ttotal += time;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn total as Type;\n\t\t}\n\t\tif (isDefined(this._units)) {\n\t\t\tconst expr = this._expressions[this._units];\n\t\t\tconst matching = this._val.toString().trim().match(expr.regexp);\n\t\t\tif (matching) {\n\t\t\t\treturn expr.method.apply(this, matching.slice(1));\n\t\t\t} else {\n\t\t\t\treturn expr.method.call(this, this._val);\n\t\t\t}\n\t\t} else if (isString(this._val)) {\n\t\t\treturn parseFloat(this._val) as Type;\n\t\t} else {\n\t\t\treturn this._val as Type;\n\t\t}\n\t}\n\n\t//-------------------------------------\n\t// \tUNIT CONVERSIONS\n\t//-------------------------------------\n\n\t/**\n\t * Returns the value of a frequency in the current units\n\t */\n\tprotected _frequencyToUnits(freq: Hertz): Type {\n\t\treturn 1 / freq as Type;\n\t}\n\n\t/**\n\t * Return the value of the beats in the current units\n\t */\n\tprotected _beatsToUnits(beats: number): Type {\n\t\treturn (60 / this._getBpm()) * beats as Type;\n\t}\n\n\t/**\n\t * Returns the value of a second in the current units\n\t */\n\tprotected _secondsToUnits(seconds: Seconds): Type {\n\t\treturn seconds as Type;\n\t}\n\n\t/**\n\t * Returns the value of a tick in the current time units\n\t */\n\tprotected _ticksToUnits(ticks: Ticks): Type {\n\t\treturn (ticks * (this._beatsToUnits(1)) / this._getPPQ()) as Type;\n\t}\n\n\t/**\n\t * With no arguments, return 'now'\n\t */\n\tprotected _noArg(): Type {\n\t\treturn this._now();\n\t}\n\n\t//-------------------------------------\n\t// \tTEMPO CONVERSIONS\n\t//-------------------------------------\n\n\t/**\n\t * Return the bpm\n\t */\n\tprotected _getBpm(): BPM {\n\t\treturn this.context.transport.bpm.value;\n\t}\n\n\t/**\n\t * Return the timeSignature\n\t */\n\tprotected _getTimeSignature(): number {\n\t\treturn this.context.transport.timeSignature as number;\n\t}\n\n\t/**\n\t * Return the PPQ or 192 if Transport is not available\n\t */\n\tprotected _getPPQ(): number {\n\t\treturn this.context.transport.PPQ;\n\t}\n\n\t/**\n\t * Return the current time in whichever context is relevant\n\t */\n\tprotected abstract _now(): Type;\n\n\t//-------------------------------------\n\t// \tCONVERSION INTERFACE\n\t//-------------------------------------\n\n\t/**\n\t * Coerce a time type into this units type.\n\t * @param type Any time type units\n\t */\n\tfromType(type: TimeBaseClass<any, any>): this {\n\t\tthis._units = undefined;\n\t\tswitch (this.defaultUnits) {\n\t\t\tcase \"s\":\n\t\t\t\tthis._val = type.toSeconds();\n\t\t\t\tbreak;\n\t\t\tcase \"i\":\n\t\t\t\tthis._val = type.toTicks();\n\t\t\t\tbreak;\n\t\t\tcase \"hz\":\n\t\t\t\tthis._val = type.toFrequency();\n\t\t\t\tbreak;\n\t\t\tcase \"midi\":\n\t\t\t\tthis._val = type.toMidi();\n\t\t\t\tbreak;\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Return the value in seconds\n\t */\n\tabstract toSeconds(): Seconds;\n\n\t/**\n\t * Return the value as a Midi note\n\t */\n\tabstract toMidi(): MidiNote;\n\n\t/**\n\t * Convert the value into ticks\n\t */\n\tabstract toTicks(): Ticks;\n\n\t/**\n\t * Return the value in hertz\n\t */\n\ttoFrequency(): Hertz {\n\t\treturn 1 / this.toSeconds();\n\t}\n\n\t/**\n\t * Return the time in samples\n\t */\n\ttoSamples(): Samples {\n\t\treturn this.toSeconds() * this.context.sampleRate;\n\t}\n\n\t/**\n\t * Return the time in milliseconds.\n\t */\n\ttoMilliseconds(): Milliseconds {\n\t\treturn this.toSeconds() * 1000;\n\t}\n}\n","import { getContext } from \"../Global\";\nimport { ftom } from \"./Conversions\";\nimport { TimeBaseClass, TimeBaseUnit, TimeExpression, TimeValue } from \"./TimeBase\";\nimport { BarsBeatsSixteenths, MidiNote, Seconds, Subdivision, Ticks, Time } from \"./Units\";\n\n/**\n * TimeClass is a primitive type for encoding and decoding Time values.\n * TimeClass can be passed into the parameter of any method which takes time as an argument.\n * @param  val    The time value.\n * @param  units  The units of the value.\n * @example\n * const time = Tone.Time(\"4n\"); // a quarter note\n * @category Unit\n */\nexport class TimeClass<Type extends Seconds | Ticks = Seconds, Unit extends string = TimeBaseUnit>\n\textends TimeBaseClass<Type, Unit> {\n\n\treadonly name: string = \"TimeClass\";\n\n\tprotected _getExpressions(): TimeExpression<Type> {\n\t\treturn Object.assign(super._getExpressions(), {\n\t\t\tnow: {\n\t\t\t\tmethod: (capture: string): Type => {\n\t\t\t\t\treturn this._now() + new (this.constructor as typeof TimeClass)(this.context, capture).valueOf() as Type;\n\t\t\t\t},\n\t\t\t\tregexp: /^\\+(.+)/,\n\t\t\t},\n\t\t\tquantize: {\n\t\t\t\tmethod: (capture: string): Type => {\n\t\t\t\t\tconst quantTo = new TimeClass(this.context, capture).valueOf();\n\t\t\t\t\treturn this._secondsToUnits(this.context.transport.nextSubdivision(quantTo));\n\t\t\t\t},\n\t\t\t\tregexp: /^@(.+)/,\n\t\t\t},\n\t\t});\n\t}\n\n\t/**\n\t * Quantize the time by the given subdivision. Optionally add a\n\t * percentage which will move the time value towards the ideal\n\t * quantized value by that percentage.\n\t * @param  subdiv    The subdivision to quantize to\n\t * @param  percent  Move the time value towards the quantized value by a percentage.\n\t * @example\n\t * Tone.Time(21).quantize(2); // returns 22\n\t * Tone.Time(0.6).quantize(\"4n\", 0.5); // returns 0.55\n\t */\n\tquantize(subdiv: Time, percent = 1): Type {\n\t\tconst subdivision = new (this.constructor as typeof TimeClass)(this.context, subdiv).valueOf();\n\t\tconst value = this.valueOf();\n\t\tconst multiple = Math.round(value / subdivision);\n\t\tconst ideal = multiple * subdivision;\n\t\tconst diff = ideal - value;\n\t\treturn value + diff * percent as Type;\n\t}\n\n\t//-------------------------------------\n\t// CONVERSIONS\n\t//-------------------------------------\n\t/**\n\t * Convert a Time to Notation. The notation values are will be the\n\t * closest representation between 1m to 128th note.\n\t * @return {Notation}\n\t * @example\n\t * // if the Transport is at 120bpm:\n\t * Tone.Time(2).toNotation(); // returns \"1m\"\n\t */\n\ttoNotation(): Subdivision {\n\t\tconst time = this.toSeconds();\n\t\tconst testNotations: Subdivision[] = [\"1m\"];\n\t\tfor (let power = 1; power < 9; power++) {\n\t\t\tconst subdiv = Math.pow(2, power);\n\t\t\ttestNotations.push(subdiv + \"n.\" as Subdivision);\n\t\t\ttestNotations.push(subdiv + \"n\" as Subdivision);\n\t\t\ttestNotations.push(subdiv + \"t\" as Subdivision);\n\t\t}\n\t\ttestNotations.push(\"0\");\n\t\t// find the closets notation representation\n\t\tlet closest = testNotations[0];\n\t\tlet closestSeconds = new TimeClass(this.context, testNotations[0]).toSeconds();\n\t\ttestNotations.forEach(notation => {\n\t\t\tconst notationSeconds = new TimeClass(this.context, notation).toSeconds();\n\t\t\tif (Math.abs(notationSeconds - time) < Math.abs(closestSeconds - time)) {\n\t\t\t\tclosest = notation;\n\t\t\t\tclosestSeconds = notationSeconds;\n\t\t\t}\n\t\t});\n\t\treturn closest;\n\t}\n\n\t/**\n\t * Return the time encoded as Bars:Beats:Sixteenths.\n\t */\n\ttoBarsBeatsSixteenths(): BarsBeatsSixteenths {\n\t\tconst quarterTime = this._beatsToUnits(1);\n\t\tlet quarters = this.valueOf() / quarterTime;\n\t\tquarters = parseFloat(quarters.toFixed(4));\n\t\tconst measures = Math.floor(quarters / this._getTimeSignature());\n\t\tlet sixteenths = (quarters % 1) * 4;\n\t\tquarters = Math.floor(quarters) % this._getTimeSignature();\n\t\tconst sixteenthString = sixteenths.toString();\n\t\tif (sixteenthString.length > 3) {\n\t\t\t// the additional parseFloat removes insignificant trailing zeroes\n\t\t\tsixteenths = parseFloat(parseFloat(sixteenthString).toFixed(3));\n\t\t}\n\t\tconst progress = [measures, quarters, sixteenths];\n\t\treturn progress.join(\":\");\n\t}\n\n\t/**\n\t * Return the time in ticks.\n\t */\n\ttoTicks(): Ticks {\n\t\tconst quarterTime = this._beatsToUnits(1);\n\t\tconst quarters = this.valueOf() / quarterTime;\n\t\treturn quarters * this._getPPQ();\n\t}\n\n\t/**\n\t * Return the time in seconds.\n\t */\n\ttoSeconds(): Seconds {\n\t\treturn this.valueOf();\n\t}\n\n\t/**\n\t * Return the value as a midi note.\n\t */\n\ttoMidi(): MidiNote {\n\t\treturn ftom(this.toFrequency());\n\t}\n\n\tprotected _now(): Type {\n\t\treturn this.context.now() as Type;\n\t}\n}\n\n/**\n * Create a TimeClass from a time string or number. The time is computed against the \n * global Tone.Context. To use a specific context, use [[TimeClass]]\n * @param value A value which represents time\n * @param units The value's units if they can't be inferred by the value.\n * @category Unit\n * @example\n * const time = Tone.Time(\"4n\").toSeconds();\n * console.log(time);\n * @example\n * const note = Tone.Time(1).toNotation();\n * console.log(note);\n * @example\n * const freq = Tone.Time(0.5).toFrequency();\n * console.log(freq);\n */\nexport function Time(value?: TimeValue, units?: TimeBaseUnit): TimeClass<Seconds> {\n\treturn new TimeClass(getContext(), value, units);\n}\n","import { getContext } from \"../Global\";\nimport { intervalToFrequencyRatio, mtof } from \"./Conversions\";\nimport { ftom, getA4, setA4 } from \"./Conversions\";\nimport { TimeClass } from \"./Time\";\nimport { TimeBaseUnit, TimeExpression, TimeValue } from \"./TimeBase\";\nimport { Frequency, Hertz, Interval, MidiNote, Note, Seconds, Ticks } from \"./Units\";\n\nexport type FrequencyUnit = TimeBaseUnit | \"midi\";\n\n/**\n * Frequency is a primitive type for encoding Frequency values.\n * Eventually all time values are evaluated to hertz using the `valueOf` method.\n * @example\n * Tone.Frequency(\"C3\"); // 261\n * Tone.Frequency(38, \"midi\");\n * Tone.Frequency(\"C3\").transpose(4);\n * @category Unit\n */\nexport class FrequencyClass<Type extends number = Hertz> extends TimeClass<Type, FrequencyUnit> {\n\n\treadonly name: string = \"Frequency\";\n\n\treadonly defaultUnits: FrequencyUnit = \"hz\";\n\n\t/**\n\t * The [concert tuning pitch](https://en.wikipedia.org/wiki/Concert_pitch) which is used\n\t * to generate all the other pitch values from notes. A4's values in Hertz.\n\t */\n\tstatic get A4(): Hertz {\n\t\treturn getA4();\n\t}\n\tstatic set A4(freq: Hertz) {\n\t\tsetA4(freq);\n\t}\n\n\t//-------------------------------------\n\t// \tAUGMENT BASE EXPRESSIONS\n\t//-------------------------------------\n\n\tprotected _getExpressions(): TimeExpression<Type> {\n\t\treturn Object.assign({}, super._getExpressions(), {\n\t\t\tmidi: {\n\t\t\t\tregexp: /^(\\d+(?:\\.\\d+)?midi)/,\n\t\t\t\tmethod(value): number {\n\t\t\t\t\tif (this.defaultUnits === \"midi\") {\n\t\t\t\t\t\treturn value;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn FrequencyClass.mtof(value);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t},\n\t\t\tnote: {\n\t\t\t\tregexp: /^([a-g]{1}(?:b|#|x|bb)?)(-?[0-9]+)/i,\n\t\t\t\tmethod(pitch, octave): number {\n\t\t\t\t\tconst index = noteToScaleIndex[pitch.toLowerCase()];\n\t\t\t\t\tconst noteNumber = index + (parseInt(octave, 10) + 1) * 12;\n\t\t\t\t\tif (this.defaultUnits === \"midi\") {\n\t\t\t\t\t\treturn noteNumber;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn FrequencyClass.mtof(noteNumber);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t},\n\t\t\ttr: {\n\t\t\t\tregexp: /^(\\d+(?:\\.\\d+)?):(\\d+(?:\\.\\d+)?):?(\\d+(?:\\.\\d+)?)?/,\n\t\t\t\tmethod(m, q, s): number {\n\t\t\t\t\tlet total = 1;\n\t\t\t\t\tif (m && m !== \"0\") {\n\t\t\t\t\t\ttotal *= this._beatsToUnits(this._getTimeSignature() * parseFloat(m));\n\t\t\t\t\t}\n\t\t\t\t\tif (q && q !== \"0\") {\n\t\t\t\t\t\ttotal *= this._beatsToUnits(parseFloat(q));\n\t\t\t\t\t}\n\t\t\t\t\tif (s && s !== \"0\") {\n\t\t\t\t\t\ttotal *= this._beatsToUnits(parseFloat(s) / 4);\n\t\t\t\t\t}\n\t\t\t\t\treturn total;\n\t\t\t\t},\n\t\t\t},\n\t\t});\n\t}\n\n\t//-------------------------------------\n\t// \tEXPRESSIONS\n\t//-------------------------------------\n\n\t/**\n\t * Transposes the frequency by the given number of semitones.\n\t * @return  A new transposed frequency\n\t * @example\n\t * Tone.Frequency(\"A4\").transpose(3); // \"C5\"\n\t */\n\ttranspose(interval: Interval): FrequencyClass {\n\t\treturn new FrequencyClass(this.context, this.valueOf() * intervalToFrequencyRatio(interval));\n\t}\n\n\t/**\n\t * Takes an array of semitone intervals and returns\n\t * an array of frequencies transposed by those intervals.\n\t * @return  Returns an array of Frequencies\n\t * @example\n\t * Tone.Frequency(\"A4\").harmonize([0, 3, 7]); // [\"A4\", \"C5\", \"E5\"]\n\t */\n\tharmonize(intervals: Interval[]): FrequencyClass[] {\n\t\treturn intervals.map(interval => {\n\t\t\treturn this.transpose(interval);\n\t\t});\n\t}\n\n\t//-------------------------------------\n\t// \tUNIT CONVERSIONS\n\t//-------------------------------------\n\n\t/**\n\t * Return the value of the frequency as a MIDI note\n\t * @example\n\t * Tone.Frequency(\"C4\").toMidi(); // 60\n\t */\n\ttoMidi(): MidiNote {\n\t\treturn ftom(this.valueOf());\n\t}\n\n\t/**\n\t * Return the value of the frequency in Scientific Pitch Notation\n\t * @example\n\t * Tone.Frequency(69, \"midi\").toNote(); // \"A4\"\n\t */\n\ttoNote(): Note {\n\t\tconst freq = this.toFrequency();\n\t\tconst log = Math.log2(freq / FrequencyClass.A4);\n\t\tlet noteNumber = Math.round(12 * log) + 57;\n\t\tconst octave = Math.floor(noteNumber / 12);\n\t\tif (octave < 0) {\n\t\t\tnoteNumber += -12 * octave;\n\t\t}\n\t\tconst noteName = scaleIndexToNote[noteNumber % 12];\n\t\treturn noteName + octave.toString() as Note;\n\t}\n\n\t/**\n\t * Return the duration of one cycle in seconds.\n\t */\n\ttoSeconds(): Seconds {\n\t\treturn 1 / super.toSeconds();\n\t}\n\n\t/**\n\t * Return the duration of one cycle in ticks\n\t */\n\ttoTicks(): Ticks {\n\t\tconst quarterTime = this._beatsToUnits(1);\n\t\tconst quarters = this.valueOf() / quarterTime;\n\t\treturn Math.floor(quarters * this._getPPQ());\n\t}\n\n\t//-------------------------------------\n\t// \tUNIT CONVERSIONS HELPERS\n\t//-------------------------------------\n\n\t/**\n\t * With no arguments, return 0\n\t */\n\tprotected _noArg(): Type {\n\t\treturn 0 as Type;\n\t}\n\n\t/**\n\t * Returns the value of a frequency in the current units\n\t */\n\tprotected _frequencyToUnits(freq: Hertz): Type {\n\t\treturn freq as Type;\n\t}\n\n\t/**\n\t * Returns the value of a tick in the current time units\n\t */\n\tprotected _ticksToUnits(ticks: Ticks): Type {\n\t\treturn 1 / ((ticks * 60) / (this._getBpm() * this._getPPQ())) as Type;\n\t}\n\n\t/**\n\t * Return the value of the beats in the current units\n\t */\n\tprotected _beatsToUnits(beats: number): Type {\n\t\treturn 1 / super._beatsToUnits(beats) as Type;\n\t}\n\n\t/**\n\t * Returns the value of a second in the current units\n\t */\n\tprotected _secondsToUnits(seconds: Seconds): Type {\n\t\treturn 1 / seconds as Type;\n\t}\n\n\t/**\n\t * Convert a MIDI note to frequency value.\n\t * @param  midi The midi number to convert.\n\t * @return The corresponding frequency value\n\t */\n\tstatic mtof(midi: MidiNote): Hertz {\n\t\treturn mtof(midi);\n\t}\n\n\t/**\n\t * Convert a frequency value to a MIDI note.\n\t * @param frequency The value to frequency value to convert.\n\t */\n\tstatic ftom(frequency: Hertz): MidiNote {\n\t\treturn ftom(frequency);\n\t}\n}\n\n//-------------------------------------\n// \tFREQUENCY CONVERSIONS\n//-------------------------------------\n\n/**\n * Note to scale index. \n * @hidden\n */\nconst noteToScaleIndex = {\n\tcbb: -2, cb: -1, c: 0, \"c#\": 1, cx: 2,\n\tdbb: 0, db: 1, d: 2, \"d#\": 3, dx: 4,\n\tebb: 2, eb: 3, e: 4, \"e#\": 5, ex: 6,\n\tfbb: 3, fb: 4, f: 5, \"f#\": 6, fx: 7,\n\tgbb: 5, gb: 6, g: 7, \"g#\": 8, gx: 9,\n\tabb: 7, ab: 8, a: 9, \"a#\": 10, ax: 11,\n\tbbb: 9, bb: 10, b: 11, \"b#\": 12, bx: 13,\n};\n\n/**\n * scale index to note (sharps)\n * @hidden\n */\nconst scaleIndexToNote = [\"C\", \"C#\", \"D\", \"D#\", \"E\", \"F\", \"F#\", \"G\", \"G#\", \"A\", \"A#\", \"B\"];\n\n/**\n * Convert a value into a FrequencyClass object.\n * @category Unit\n * @example\n * const midi = Tone.Frequency(\"C3\").toMidi();\n * console.log(midi);\n * @example\n * const hertz = Tone.Frequency(38, \"midi\").toFrequency();\n * console.log(hertz);\n */\nexport function Frequency(value?: TimeValue | Frequency, units?: FrequencyUnit): FrequencyClass {\n\treturn new FrequencyClass(getContext(), value, units);\n}\n","import { getContext } from \"../Global\";\nimport { Seconds, Ticks } from \"../type/Units\";\nimport { TimeClass } from \"./Time\";\nimport { TimeBaseUnit, TimeValue } from \"./TimeBase\";\n\n/**\n * TransportTime is a the time along the Transport's\n * timeline. It is similar to Tone.Time, but instead of evaluating\n * against the AudioContext's clock, it is evaluated against\n * the Transport's position. See [TransportTime wiki](https://github.com/Tonejs/Tone.js/wiki/TransportTime).\n * @category Unit\n */\nexport class TransportTimeClass<Type extends Seconds | Ticks = Seconds> extends TimeClass<Type> {\n\n\treadonly name: string = \"TransportTime\";\n\n\t/**\n\t * Return the current time in whichever context is relevant\n\t */\n\tprotected _now(): Type {\n\t\treturn this.context.transport.seconds as Type;\n\t}\n}\n\n/**\n * TransportTime is a the time along the Transport's\n * timeline. It is similar to [[Time]], but instead of evaluating\n * against the AudioContext's clock, it is evaluated against\n * the Transport's position. See [TransportTime wiki](https://github.com/Tonejs/Tone.js/wiki/TransportTime).\n * @category Unit\n */\nexport function TransportTime(value?: TimeValue, units?: TimeBaseUnit): TransportTimeClass {\n\treturn new TransportTimeClass(getContext(), value, units);\n}\n","import { getContext } from \"../Global\";\nimport { Tone } from \"../Tone\";\nimport { FrequencyClass } from \"../type/Frequency\";\nimport { TimeClass } from \"../type/Time\";\nimport { TransportTimeClass } from \"../type/TransportTime\";\nimport { Frequency, Hertz, Seconds, Ticks, Time } from \"../type/Units\";\nimport { getDefaultsFromInstance, optionsFromArguments } from \"../util/Defaults\";\nimport { RecursivePartial } from \"../util/Interface\";\nimport { isArray, isBoolean, isDefined, isNumber, isString, isUndef } from \"../util/TypeCheck\";\nimport { BaseContext } from \"./BaseContext\";\n\n/**\n * A unit which process audio\n */\nexport interface ToneWithContextOptions {\n\tcontext: BaseContext;\n}\n\n/**\n * The Base class for all nodes that have an AudioContext.\n */\nexport abstract class ToneWithContext<Options extends ToneWithContextOptions> extends Tone {\n\n\t/**\n\t * The context belonging to the node.\n\t */\n\treadonly context: BaseContext;\n\n\t/**\n\t * The default context to use if no AudioContext is passed in to the constructor.\n\t * Probably should not be set manually. Used internally.\n\t * @hidden\n\t */\n\treadonly defaultContext?: BaseContext;\n\n\t/**\n\t * Pass in a constructor as the first argument\n\t */\n\tconstructor(context?: BaseContext)\n\tconstructor(options?: Partial<ToneWithContextOptions>);\n\tconstructor() {\n\t\tsuper();\n\t\tconst options = optionsFromArguments(ToneWithContext.getDefaults(), arguments, [\"context\"]);\n\t\tif (this.defaultContext) {\n\t\t\tthis.context = this.defaultContext;\n\t\t} else {\n\t\t\tthis.context = options.context;\n\t\t}\n\t}\n\n\tstatic getDefaults(): ToneWithContextOptions {\n\t\treturn {\n\t\t\tcontext: getContext(),\n\t\t};\n\t}\n\n\t/**\n\t * Return the current time of the Context clock plus the lookAhead.\n\t * @example\n\t * setInterval(() => {\n\t * \tconsole.log(Tone.now());\n\t * }, 100);\n\t */\n\tnow(): Seconds {\n\t\treturn this.context.currentTime + this.context.lookAhead;\n\t}\n\n\t/**\n\t * Return the current time of the Context clock without any lookAhead.\n\t * @example\n\t * setInterval(() => {\n\t * \tconsole.log(Tone.immediate());\n\t * }, 100);\n\t */\n\timmediate(): Seconds {\n\t\treturn this.context.currentTime;\n\t}\n\n\t/**\n\t * The duration in seconds of one sample.\n\t * @example\n\t * console.log(Tone.Transport.sampleTime);\n\t */\n\tget sampleTime(): Seconds {\n\t\treturn 1 / this.context.sampleRate;\n\t}\n\n\t/**\n\t * The number of seconds of 1 processing block (128 samples)\n\t * @example\n\t * console.log(Tone.Destination.blockTime);\n\t */\n\tget blockTime(): Seconds {\n\t\treturn 128 / this.context.sampleRate;\n\t}\n\n\t/**\n\t * Convert the incoming time to seconds. \n\t * This is calculated against the current [[Tone.Transport]] bpm\n\t * @example\n\t * const gain = new Tone.Gain();\n\t * setInterval(() => console.log(gain.toSeconds(\"4n\")), 100);\n\t * // ramp the tempo to 60 bpm over 30 seconds\n\t * Tone.getTransport().bpm.rampTo(60, 30);\n\t */\n\ttoSeconds(time?: Time): Seconds {\n\t\treturn new TimeClass(this.context, time).toSeconds();\n\t}\n\n\t/**\n\t * Convert the input to a frequency number\n\t * @example\n\t * const gain = new Tone.Gain();\n\t * console.log(gain.toFrequency(\"4n\"));\n\t */\n\ttoFrequency(freq: Frequency): Hertz {\n\t\treturn new FrequencyClass(this.context, freq).toFrequency();\n\t}\n\n\t/**\n\t * Convert the input time into ticks\n\t * @example\n\t * const gain = new Tone.Gain();\n\t * console.log(gain.toTicks(\"4n\"));\n\t */\n\ttoTicks(time?: Time | TimeClass): Ticks {\n\t\treturn new TransportTimeClass(this.context, time).toTicks();\n\t}\n\n\t//-------------------------------------\n\t// \tGET/SET\n\t//-------------------------------------\n\n\t/**\n\t * Get a subset of the properties which are in the partial props\n\t */\n\tprotected _getPartialProperties(props: Options): Partial<Options> {\n\t\tconst options = this.get();\n\t\t// remove attributes from the prop that are not in the partial\n\t\tObject.keys(options).forEach(name => {\n\t\t\tif (isUndef(props[name])) {\n\t\t\t\tdelete options[name];\n\t\t\t}\n\t\t});\n\t\treturn options;\n\t}\n\n\t/**\n\t * Get the object's attributes.\n\t * @example\n\t * const osc = new Tone.Oscillator();\n\t * console.log(osc.get());\n\t */\n\tget(): Options {\n\t\tconst defaults = getDefaultsFromInstance(this) as Options;\n\t\tObject.keys(defaults).forEach(attribute => {\n\t\t\tif (Reflect.has(this, attribute)) {\n\t\t\t\tconst member = this[attribute];\n\t\t\t\tif (isDefined(member) && isDefined(member.value) && isDefined(member.setValueAtTime)) {\n\t\t\t\t\tdefaults[attribute] = member.value;\n\t\t\t\t} else if (member instanceof ToneWithContext) {\n\t\t\t\t\tdefaults[attribute] = member._getPartialProperties(defaults[attribute]);\n\t\t\t\t\t// otherwise make sure it's a serializable type\n\t\t\t\t} else if (isArray(member) || isNumber(member) || isString(member) || isBoolean(member)) {\n\t\t\t\t\tdefaults[attribute] = member;\n\t\t\t\t} else {\n\t\t\t\t\t// remove all undefined and unserializable attributes\n\t\t\t\t\tdelete defaults[attribute];\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\treturn defaults;\n\t}\n\n\t/**\n\t * Set multiple properties at once with an object.\n\t * @example\n\t * const filter = new Tone.Filter().toDestination();\n\t * // set values using an object\n\t * filter.set({\n\t * \tfrequency: \"C6\",\n\t * \ttype: \"highpass\"\n\t * });\n\t * const player = new Tone.Player(\"https://tonejs.github.io/audio/berklee/Analogsynth_octaves_highmid.mp3\").connect(filter);\n\t * player.autostart = true;\n\t */\n\tset(props: RecursivePartial<Options>): this {\n\t\tObject.keys(props).forEach(attribute => {\n\t\t\tif (Reflect.has(this, attribute) && isDefined(this[attribute])) {\n\t\t\t\tif (this[attribute] && isDefined(this[attribute].value) && isDefined(this[attribute].setValueAtTime)) {\n\t\t\t\t\t// small optimization\n\t\t\t\t\tif (this[attribute].value !== props[attribute]) {\n\t\t\t\t\t\tthis[attribute].value = props[attribute];\n\t\t\t\t\t}\n\t\t\t\t} else if (this[attribute] instanceof ToneWithContext) {\n\t\t\t\t\tthis[attribute].set(props[attribute]);\n\t\t\t\t} else {\n\t\t\t\t\tthis[attribute] = props[attribute];\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\treturn this;\n\t}\n}\n","import { Seconds } from \"../type/Units\";\nimport { Timeline, TimelineEvent } from \"./Timeline\";\nimport { assertRange } from \"./Debug\";\n\nexport type BasicPlaybackState = \"started\" | \"stopped\";\nexport type PlaybackState = BasicPlaybackState | \"paused\";\n\nexport interface StateTimelineEvent extends TimelineEvent {\n\tstate: PlaybackState;\n}\n\n/**\n * A Timeline State. Provides the methods: `setStateAtTime(\"state\", time)` and `getValueAtTime(time)`\n * @param initial The initial state of the StateTimeline.  Defaults to `undefined`\n */\nexport class StateTimeline<AdditionalOptions extends {} = {}> extends Timeline<StateTimelineEvent & AdditionalOptions> {\n\n\treadonly name: string = \"StateTimeline\";\n\n\t/**\n\t * The initial state\n\t */\n\tprivate _initial: PlaybackState;\n\n\tconstructor(initial: PlaybackState = \"stopped\") {\n\t\tsuper();\n\t\tthis._initial = initial;\n\t\tthis.setStateAtTime(this._initial, 0);\n\t}\n\n\t/**\n\t * Returns the scheduled state scheduled before or at\n\t * the given time.\n\t * @param  time  The time to query.\n\t * @return  The name of the state input in setStateAtTime.\n\t */\n\tgetValueAtTime(time: Seconds): PlaybackState {\n\t\tconst event = this.get(time);\n\t\tif (event !== null) {\n\t\t\treturn event.state;\n\t\t} else {\n\t\t\treturn this._initial;\n\t\t}\n\t}\n\n\t/**\n\t * Add a state to the timeline.\n\t * @param  state The name of the state to set.\n\t * @param  time  The time to query.\n\t * @param options Any additional options that are needed in the timeline.\n\t */\n\tsetStateAtTime(state: PlaybackState, time: Seconds, options?: AdditionalOptions): this {\n\t\tassertRange(time, 0);\n\t\tthis.add(Object.assign({}, options, {\n\t\t\tstate,\n\t\t\ttime,\n\t\t}));\n\t\treturn this;\n\t}\n\n\t/**\n\t * Return the event before the time with the given state\n\t * @param  state The state to look for\n\t * @param  time  When to check before\n\t * @return  The event with the given state before the time\n\t */\n\tgetLastState(state: PlaybackState, time: number): StateTimelineEvent & AdditionalOptions | undefined {\n\t\t// time = this.toSeconds(time);\n\t\tconst index = this._search(time);\n\t\tfor (let i = index; i >= 0; i--) {\n\t\t\tconst event = this._timeline[i];\n\t\t\tif (event.state === state) {\n\t\t\t\treturn event;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Return the event after the time with the given state\n\t * @param  state The state to look for\n\t * @param  time  When to check from\n\t * @return  The event with the given state after the time\n\t */\n\tgetNextState(state: PlaybackState, time: number): StateTimelineEvent & AdditionalOptions | undefined {\n\t\t// time = this.toSeconds(time);\n\t\tconst index = this._search(time);\n\t\tif (index !== -1) {\n\t\t\tfor (let i = index; i < this._timeline.length; i++) {\n\t\t\t\tconst event = this._timeline[i];\n\t\t\t\tif (event.state === state) {\n\t\t\t\t\treturn event;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n","import { AbstractParam } from \"../context/AbstractParam\";\nimport { dbToGain, gainToDb } from \"../type/Conversions\";\nimport { Decibels, Frequency, Positive, Time, UnitMap, UnitName } from \"../type/Units\";\nimport { isAudioParam } from \"../util/AdvancedTypeCheck\";\nimport { optionsFromArguments } from \"../util/Defaults\";\nimport { Timeline } from \"../util/Timeline\";\nimport { isDefined } from \"../util/TypeCheck\";\nimport { ToneWithContext, ToneWithContextOptions } from \"./ToneWithContext\";\nimport { EQ } from \"../util/Math\";\nimport { assert, assertRange } from \"../util/Debug\";\n\nexport interface ParamOptions<TypeName extends UnitName> extends ToneWithContextOptions {\n\tunits: TypeName;\n\tvalue?: UnitMap[TypeName];\n\tparam: AudioParam | Param<TypeName>;\n\tconvert: boolean;\n\tminValue?: number;\n\tmaxValue?: number;\n\tswappable?: boolean;\n}\n\n/**\n * the possible automation types\n */\ntype AutomationType = \"linearRampToValueAtTime\" | \"exponentialRampToValueAtTime\" | \"setValueAtTime\" | \"setTargetAtTime\" | \"cancelScheduledValues\";\n\ninterface TargetAutomationEvent {\n\ttype: \"setTargetAtTime\";\n\ttime: number;\n\tvalue: number;\n\tconstant: number;\n}\n\ninterface NormalAutomationEvent {\n\ttype: Exclude<AutomationType, \"setTargetAtTime\">;\n\ttime: number;\n\tvalue: number;\n}\n/**\n * The events on the automation\n */\nexport type AutomationEvent = NormalAutomationEvent | TargetAutomationEvent;\n\n/**\n * Param wraps the native Web Audio's AudioParam to provide\n * additional unit conversion functionality. It also\n * serves as a base-class for classes which have a single,\n * automatable parameter.\n * @category Core\n */\nexport class Param<TypeName extends UnitName = \"number\">\n\textends ToneWithContext<ParamOptions<TypeName>>\n\timplements AbstractParam<TypeName> {\n\n\treadonly name: string = \"Param\";\n\n\treadonly input: GainNode | AudioParam;\n\n\treadonly units: UnitName;\n\tconvert: boolean;\n\toverridden = false;\n\n\t/**\n\t * The timeline which tracks all of the automations.\n\t */\n\tprotected _events: Timeline<AutomationEvent>;\n\n\t/**\n\t * The native parameter to control\n\t */\n\tprotected _param: AudioParam;\n\n\t/**\n\t * The default value before anything is assigned\n\t */\n\tprotected _initialValue: number;\n\n\t/**\n\t * The minimum output value\n\t */\n\tprivate _minOutput = 1e-7;\n\n\t/**\n\t * Private reference to the min and max values if passed into the constructor\n\t */\n\tprivate readonly _minValue?: number;\n\tprivate readonly _maxValue?: number;\n\n\t/**\n\t * If the underlying AudioParam can be swapped out\n\t * using the setParam method. \n\t */\n\tprotected readonly _swappable: boolean;\n\n\t/**\n\t * @param param The AudioParam to wrap\n\t * @param units The unit name\n\t * @param convert Whether or not to convert the value to the target units\n\t */\n\tconstructor(param: AudioParam, units?: TypeName, convert?: boolean);\n\tconstructor(options: Partial<ParamOptions<TypeName>>);\n\tconstructor() {\n\t\tsuper(optionsFromArguments(Param.getDefaults(), arguments, [\"param\", \"units\", \"convert\"]));\n\n\t\tconst options = optionsFromArguments(Param.getDefaults(), arguments, [\"param\", \"units\", \"convert\"]);\n\n\t\tassert(isDefined(options.param) &&\n\t\t\t(isAudioParam(options.param) || options.param instanceof Param), \"param must be an AudioParam\");\n\n\t\twhile (!isAudioParam(options.param)) {\n\t\t\toptions.param = options.param._param;\n\t\t}\n\n\t\tthis._swappable = isDefined(options.swappable) ? options.swappable : false;\n\t\tif (this._swappable) {\n\t\t\tthis.input = this.context.createGain();\n\t\t\t// initialize\n\t\t\tthis._param = options.param;\n\t\t\tthis.input.connect(this._param);\n\t\t} else {\n\t\t\tthis._param = this.input = options.param;\n\t\t}\n\t\tthis._events = new Timeline<AutomationEvent>(1000);\n\t\tthis._initialValue = this._param.defaultValue;\n\t\tthis.units = options.units;\n\t\tthis.convert = options.convert;\n\t\tthis._minValue = options.minValue;\n\t\tthis._maxValue = options.maxValue;\n\n\t\t// if the value is defined, set it immediately\n\t\tif (isDefined(options.value) && options.value !== this._toType(this._initialValue)) {\n\t\t\tthis.setValueAtTime(options.value, 0);\n\t\t}\n\t}\n\n\tstatic getDefaults(): ParamOptions<any> {\n\t\treturn Object.assign(ToneWithContext.getDefaults(), {\n\t\t\tconvert: true,\n\t\t\tunits: \"number\" as UnitName,\n\t\t} as ParamOptions<any>);\n\t}\n\n\tget value(): UnitMap[TypeName] {\n\t\tconst now = this.now();\n\t\treturn this.getValueAtTime(now);\n\t}\n\tset value(value) {\n\t\tthis.cancelScheduledValues(this.now());\n\t\tthis.setValueAtTime(value, this.now());\n\t}\n\n\tget minValue(): number {\n\t\t// if it's not the default minValue, return it\n\t\tif (isDefined(this._minValue)) {\n\t\t\treturn this._minValue;\n\t\t} else if (this.units === \"time\" || this.units === \"frequency\" ||\n\t\t\tthis.units === \"normalRange\" || this.units === \"positive\" ||\n\t\t\tthis.units === \"transportTime\" || this.units === \"ticks\" ||\n\t\t\tthis.units === \"bpm\" || this.units === \"hertz\" || this.units === \"samples\") {\n\t\t\treturn 0;\n\t\t} else if (this.units === \"audioRange\") {\n\t\t\treturn -1;\n\t\t} else if (this.units === \"decibels\") {\n\t\t\treturn -Infinity;\n\t\t} else {\n\t\t\treturn this._param.minValue;\n\t\t}\n\t}\n\n\tget maxValue(): number {\n\t\tif (isDefined(this._maxValue)) {\n\t\t\treturn this._maxValue;\n\t\t} else if (this.units === \"normalRange\" ||\n\t\t\tthis.units === \"audioRange\") {\n\t\t\treturn 1;\n\t\t} else {\n\t\t\treturn this._param.maxValue;\n\t\t}\n\t}\n\n\t/**\n\t * Type guard based on the unit name\n\t */\n\tprivate _is<T>(arg: any, type: UnitName): arg is T {\n\t\treturn this.units === type;\n\t}\n\n\t/**\n\t * Make sure the value is always in the defined range\n\t */\n\tprivate _assertRange(value: number): number {\n\t\tif (isDefined(this.maxValue) && isDefined(this.minValue)) {\n\t\t\tassertRange(value, this._fromType(this.minValue), this._fromType(this.maxValue));\n\t\t}\n\t\treturn value;\n\t}\n\n\t/**\n\t * Convert the given value from the type specified by Param.units\n\t * into the destination value (such as Gain or Frequency).\n\t */\n\tprotected _fromType(val: UnitMap[TypeName]): number {\n\t\tif (this.convert && !this.overridden) {\n\t\t\tif (this._is<Time>(val, \"time\")) {\n\t\t\t\treturn this.toSeconds(val);\n\t\t\t} else if (this._is<Decibels>(val, \"decibels\")) {\n\t\t\t\treturn dbToGain(val);\n\t\t\t} else if (this._is<Frequency>(val, \"frequency\")) {\n\t\t\t\treturn this.toFrequency(val);\n\t\t\t} else {\n\t\t\t\treturn val as number;\n\t\t\t}\n\t\t} else if (this.overridden) {\n\t\t\t// if it's overridden, should only schedule 0s\n\t\t\treturn 0;\n\t\t} else {\n\t\t\treturn val as number;\n\t\t}\n\t}\n\n\t/**\n\t * Convert the parameters value into the units specified by Param.units.\n\t */\n\tprotected _toType(val: number): UnitMap[TypeName] {\n\t\tif (this.convert && this.units === \"decibels\") {\n\t\t\treturn gainToDb(val) as UnitMap[TypeName];\n\t\t} else {\n\t\t\treturn val as UnitMap[TypeName];\n\t\t}\n\t}\n\n\t//-------------------------------------\n\t// ABSTRACT PARAM INTERFACE\n\t// all docs are generated from ParamInterface.ts\n\t//-------------------------------------\n\n\tsetValueAtTime(value: UnitMap[TypeName], time: Time): this {\n\t\tconst computedTime = this.toSeconds(time);\n\t\tconst numericValue = this._fromType(value);\n\t\tassert(isFinite(numericValue) && isFinite(computedTime),\n\t\t\t`Invalid argument(s) to setValueAtTime: ${JSON.stringify(value)}, ${JSON.stringify(time)}`);\n\t\tthis._assertRange(numericValue);\n\t\tthis.log(this.units, \"setValueAtTime\", value, computedTime);\n\t\tthis._events.add({\n\t\t\ttime: computedTime,\n\t\t\ttype: \"setValueAtTime\",\n\t\t\tvalue: numericValue,\n\t\t});\n\t\tthis._param.setValueAtTime(numericValue, computedTime);\n\t\treturn this;\n\t}\n\n\tgetValueAtTime(time: Time): UnitMap[TypeName] {\n\t\tconst computedTime = Math.max(this.toSeconds(time), 0);\n\t\tconst after = this._events.getAfter(computedTime);\n\t\tconst before = this._events.get(computedTime);\n\t\tlet value = this._initialValue;\n\t\t// if it was set by\n\t\tif (before === null) {\n\t\t\tvalue = this._initialValue;\n\t\t} else if (before.type === \"setTargetAtTime\" && (after === null || after.type === \"setValueAtTime\")) {\n\t\t\tconst previous = this._events.getBefore(before.time);\n\t\t\tlet previousVal;\n\t\t\tif (previous === null) {\n\t\t\t\tpreviousVal = this._initialValue;\n\t\t\t} else {\n\t\t\t\tpreviousVal = previous.value;\n\t\t\t}\n\t\t\tif (before.type === \"setTargetAtTime\") {\n\t\t\t\tvalue = this._exponentialApproach(before.time, previousVal, before.value, before.constant, computedTime);\n\t\t\t}\n\t\t} else if (after === null) {\n\t\t\tvalue = before.value;\n\t\t} else if (after.type === \"linearRampToValueAtTime\" || after.type === \"exponentialRampToValueAtTime\") {\n\t\t\tlet beforeValue = before.value;\n\t\t\tif (before.type === \"setTargetAtTime\") {\n\t\t\t\tconst previous = this._events.getBefore(before.time);\n\t\t\t\tif (previous === null) {\n\t\t\t\t\tbeforeValue = this._initialValue;\n\t\t\t\t} else {\n\t\t\t\t\tbeforeValue = previous.value;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (after.type === \"linearRampToValueAtTime\") {\n\t\t\t\tvalue = this._linearInterpolate(before.time, beforeValue, after.time, after.value, computedTime);\n\t\t\t} else {\n\t\t\t\tvalue = this._exponentialInterpolate(before.time, beforeValue, after.time, after.value, computedTime);\n\t\t\t}\n\t\t} else {\n\t\t\tvalue = before.value;\n\t\t}\n\t\treturn this._toType(value);\n\t}\n\n\tsetRampPoint(time: Time): this {\n\t\ttime = this.toSeconds(time);\n\t\tlet currentVal = this.getValueAtTime(time);\n\t\tthis.cancelAndHoldAtTime(time);\n\t\tif (this._fromType(currentVal) === 0) {\n\t\t\tcurrentVal = this._toType(this._minOutput);\n\t\t}\n\t\tthis.setValueAtTime(currentVal, time);\n\t\treturn this;\n\t}\n\n\tlinearRampToValueAtTime(value: UnitMap[TypeName], endTime: Time): this {\n\t\tconst numericValue = this._fromType(value);\n\t\tconst computedTime = this.toSeconds(endTime);\n\t\tassert(isFinite(numericValue) && isFinite(computedTime),\n\t\t\t`Invalid argument(s) to linearRampToValueAtTime: ${JSON.stringify(value)}, ${JSON.stringify(endTime)}`);\n\t\tthis._assertRange(numericValue);\n\t\tthis._events.add({\n\t\t\ttime: computedTime,\n\t\t\ttype: \"linearRampToValueAtTime\",\n\t\t\tvalue: numericValue,\n\t\t});\n\t\tthis.log(this.units, \"linearRampToValueAtTime\", value, computedTime);\n\t\tthis._param.linearRampToValueAtTime(numericValue, computedTime);\n\t\treturn this;\n\t}\n\n\texponentialRampToValueAtTime(value: UnitMap[TypeName], endTime: Time): this {\n\t\tlet numericValue = this._fromType(value);\n\t\t// the value can't be 0\n\t\tnumericValue = EQ(numericValue, 0) ? this._minOutput : numericValue;\n\t\tthis._assertRange(numericValue);\n\t\tconst computedTime = this.toSeconds(endTime);\n\t\tassert(isFinite(numericValue) && isFinite(computedTime),\n\t\t\t`Invalid argument(s) to exponentialRampToValueAtTime: ${JSON.stringify(value)}, ${JSON.stringify(endTime)}`);\n\t\t// store the event\n\t\tthis._events.add({\n\t\t\ttime: computedTime,\n\t\t\ttype: \"exponentialRampToValueAtTime\",\n\t\t\tvalue: numericValue,\n\t\t});\n\t\tthis.log(this.units, \"exponentialRampToValueAtTime\", value, computedTime);\n\t\tthis._param.exponentialRampToValueAtTime(numericValue, computedTime);\n\t\treturn this;\n\t}\n\n\texponentialRampTo(value: UnitMap[TypeName], rampTime: Time, startTime?: Time): this {\n\t\tstartTime = this.toSeconds(startTime);\n\t\tthis.setRampPoint(startTime);\n\t\tthis.exponentialRampToValueAtTime(value, startTime + this.toSeconds(rampTime));\n\t\treturn this;\n\t}\n\n\tlinearRampTo(value: UnitMap[TypeName], rampTime: Time, startTime?: Time): this {\n\t\tstartTime = this.toSeconds(startTime);\n\t\tthis.setRampPoint(startTime);\n\t\tthis.linearRampToValueAtTime(value, startTime + this.toSeconds(rampTime));\n\t\treturn this;\n\t}\n\n\ttargetRampTo(value: UnitMap[TypeName], rampTime: Time, startTime?: Time): this {\n\t\tstartTime = this.toSeconds(startTime);\n\t\tthis.setRampPoint(startTime);\n\t\tthis.exponentialApproachValueAtTime(value, startTime, rampTime);\n\t\treturn this;\n\t}\n\n\texponentialApproachValueAtTime(value: UnitMap[TypeName], time: Time, rampTime: Time): this {\n\t\ttime = this.toSeconds(time);\n\t\trampTime = this.toSeconds(rampTime);\n\t\tconst timeConstant = Math.log(rampTime + 1) / Math.log(200);\n\t\tthis.setTargetAtTime(value, time, timeConstant);\n\t\t// at 90% start a linear ramp to the final value\n\t\tthis.cancelAndHoldAtTime(time + rampTime * 0.9);\n\t\tthis.linearRampToValueAtTime(value, time + rampTime);\n\t\treturn this;\n\t}\n\n\tsetTargetAtTime(value: UnitMap[TypeName], startTime: Time, timeConstant: Positive): this {\n\t\tconst numericValue = this._fromType(value);\n\t\t// The value will never be able to approach without timeConstant > 0.\n\t\tassert(isFinite(timeConstant) && timeConstant > 0, \"timeConstant must be a number greater than 0\");\n\t\tconst computedTime = this.toSeconds(startTime);\n\t\tthis._assertRange(numericValue);\n\t\tassert(isFinite(numericValue) && isFinite(computedTime),\n\t\t\t`Invalid argument(s) to setTargetAtTime: ${JSON.stringify(value)}, ${JSON.stringify(startTime)}`);\n\t\tthis._events.add({\n\t\t\tconstant: timeConstant,\n\t\t\ttime: computedTime,\n\t\t\ttype: \"setTargetAtTime\",\n\t\t\tvalue: numericValue,\n\t\t});\n\t\tthis.log(this.units, \"setTargetAtTime\", value, computedTime, timeConstant);\n\t\tthis._param.setTargetAtTime(numericValue, computedTime, timeConstant);\n\t\treturn this;\n\t}\n\n\tsetValueCurveAtTime(values: UnitMap[TypeName][], startTime: Time, duration: Time, scaling = 1): this {\n\t\tduration = this.toSeconds(duration);\n\t\tstartTime = this.toSeconds(startTime);\n\t\tconst startingValue = this._fromType(values[0]) * scaling;\n\t\tthis.setValueAtTime(this._toType(startingValue), startTime);\n\t\tconst segTime = duration / (values.length - 1);\n\t\tfor (let i = 1; i < values.length; i++) {\n\t\t\tconst numericValue = this._fromType(values[i]) * scaling;\n\t\t\tthis.linearRampToValueAtTime(this._toType(numericValue), startTime + i * segTime);\n\t\t}\n\t\treturn this;\n\t}\n\n\tcancelScheduledValues(time: Time): this {\n\t\tconst computedTime = this.toSeconds(time);\n\t\tassert(isFinite(computedTime), `Invalid argument to cancelScheduledValues: ${JSON.stringify(time)}`);\n\t\tthis._events.cancel(computedTime);\n\t\tthis._param.cancelScheduledValues(computedTime);\n\t\tthis.log(this.units, \"cancelScheduledValues\", computedTime);\n\t\treturn this;\n\t}\n\n\tcancelAndHoldAtTime(time: Time): this {\n\t\tconst computedTime = this.toSeconds(time);\n\t\tconst valueAtTime = this._fromType(this.getValueAtTime(computedTime));\n\t\t// remove the schedule events\n\t\tassert(isFinite(computedTime), `Invalid argument to cancelAndHoldAtTime: ${JSON.stringify(time)}`);\n\n\t\tthis.log(this.units, \"cancelAndHoldAtTime\", computedTime, \"value=\" + valueAtTime);\n\t\t\n\t\t// if there is an event at the given computedTime\n\t\t// and that even is not a \"set\"\n\t\tconst before = this._events.get(computedTime);\n\t\tconst after = this._events.getAfter(computedTime);\n\t\tif (before && EQ(before.time, computedTime)) {\n\t\t\t// remove everything after\n\t\t\tif (after) {\n\t\t\t\tthis._param.cancelScheduledValues(after.time);\n\t\t\t\tthis._events.cancel(after.time);\n\t\t\t} else {\n\t\t\t\tthis._param.cancelAndHoldAtTime(computedTime);\n\t\t\t\tthis._events.cancel(computedTime + this.sampleTime);\n\t\t\t}\n\t\t} else if (after) {\n\t\t\tthis._param.cancelScheduledValues(after.time);\n\t\t\t// cancel the next event(s)\n\t\t\tthis._events.cancel(after.time);\n\t\t\tif (after.type === \"linearRampToValueAtTime\") {\n\t\t\t\tthis.linearRampToValueAtTime(this._toType(valueAtTime), computedTime);\n\t\t\t} else if (after.type === \"exponentialRampToValueAtTime\") {\n\t\t\t\tthis.exponentialRampToValueAtTime(this._toType(valueAtTime), computedTime);\n\t\t\t}\n\t\t}\n\n\t\t// set the value at the given time\n\t\tthis._events.add({\n\t\t\ttime: computedTime,\n\t\t\ttype: \"setValueAtTime\",\n\t\t\tvalue: valueAtTime,\n\t\t});\n\t\tthis._param.setValueAtTime(valueAtTime, computedTime);\n\t\treturn this;\n\t}\n\n\trampTo(value: UnitMap[TypeName], rampTime: Time = 0.1, startTime?: Time): this {\n\t\tif (this.units === \"frequency\" || this.units === \"bpm\" || this.units === \"decibels\") {\n\t\t\tthis.exponentialRampTo(value, rampTime, startTime);\n\t\t} else {\n\t\t\tthis.linearRampTo(value, rampTime, startTime);\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Apply all of the previously scheduled events to the passed in Param or AudioParam.\n\t * The applied values will start at the context's current time and schedule\n\t * all of the events which are scheduled on this Param onto the passed in param.\n\t */\n\tapply(param: Param | AudioParam): this {\n\t\tconst now = this.context.currentTime;\n\t\t// set the param's value at the current time and schedule everything else\n\t\tparam.setValueAtTime(this.getValueAtTime(now) as number, now);\n\t\t// if the previous event was a curve, then set the rest of it\n\t\tconst previousEvent = this._events.get(now);\n\t\tif (previousEvent && previousEvent.type === \"setTargetAtTime\") {\n\t\t\t// approx it until the next event with linear ramps\n\t\t\tconst nextEvent = this._events.getAfter(previousEvent.time);\n\t\t\t// or for 2 seconds if there is no event\n\t\t\tconst endTime = nextEvent ? nextEvent.time : now + 2;\n\t\t\tconst subdivisions = (endTime - now) / 10;\n\t\t\tfor (let i = now; i < endTime; i += subdivisions) {\n\t\t\t\tparam.linearRampToValueAtTime(this.getValueAtTime(i) as number, i);\n\t\t\t}\n\t\t}\n\t\tthis._events.forEachAfter(this.context.currentTime, event => {\n\t\t\tif (event.type === \"cancelScheduledValues\") {\n\t\t\t\tparam.cancelScheduledValues(event.time);\n\t\t\t} else if (event.type === \"setTargetAtTime\") {\n\t\t\t\tparam.setTargetAtTime(event.value, event.time, event.constant);\n\t\t\t} else {\n\t\t\t\tparam[event.type](event.value, event.time);\n\t\t\t}\n\t\t});\n\t\treturn this;\n\t}\n\n\t/**\n\t * Replace the Param's internal AudioParam. Will apply scheduled curves \n\t * onto the parameter and replace the connections.\n\t */\n\tsetParam(param: AudioParam): this {\n\t\tassert(this._swappable, \"The Param must be assigned as 'swappable' in the constructor\");\n\t\tconst input = this.input as GainNode;\n\t\tinput.disconnect(this._param);\n\t\tthis.apply(param);\n\t\tthis._param = param;\n\t\tinput.connect(this._param);\n\t\treturn this;\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._events.dispose();\n\t\treturn this;\n\t}\n\n\tget defaultValue(): UnitMap[TypeName] {\n\t\treturn this._toType(this._param.defaultValue);\n\t}\n\n\t//-------------------------------------\n\t// \tAUTOMATION CURVE CALCULATIONS\n\t// \tMIT License, copyright (c) 2014 Jordan Santell\n\t//-------------------------------------\n\n\t// Calculates the the value along the curve produced by setTargetAtTime\n\tprotected _exponentialApproach(t0: number, v0: number, v1: number, timeConstant: number, t: number): number {\n\t\treturn v1 + (v0 - v1) * Math.exp(-(t - t0) / timeConstant);\n\t}\n\n\t// Calculates the the value along the curve produced by linearRampToValueAtTime\n\tprotected _linearInterpolate(t0: number, v0: number, t1: number, v1: number, t: number): number {\n\t\treturn v0 + (v1 - v0) * ((t - t0) / (t1 - t0));\n\t}\n\n\t// Calculates the the value along the curve produced by exponentialRampToValueAtTime\n\tprotected _exponentialInterpolate(t0: number, v0: number, t1: number, v1: number, t: number): number {\n\t\treturn v0 * Math.pow(v1 / v0, (t - t0) / (t1 - t0));\n\t}\n}\n","import { isAudioNode, isAudioParam } from \"../util/AdvancedTypeCheck\";\nimport { isDefined } from \"../util/TypeCheck\";\nimport { Param } from \"./Param\";\nimport { ToneWithContext, ToneWithContextOptions } from \"./ToneWithContext\";\nimport { assert, warn } from \"../util/Debug\";\n\nexport type InputNode = ToneAudioNode | AudioNode | Param<any> | AudioParam;\nexport type OutputNode = ToneAudioNode | AudioNode;\n\ninterface ChannelProperties {\n\tchannelCount: number;\n\tchannelCountMode: ChannelCountMode;\n\tchannelInterpretation: ChannelInterpretation;\n}\n\n/**\n * The possible options for this node\n */\nexport type ToneAudioNodeOptions = ToneWithContextOptions;\n\n/**\n * ToneAudioNode is the base class for classes which process audio.\n */\nexport abstract class ToneAudioNode<Options extends ToneAudioNodeOptions = ToneAudioNodeOptions>\n\textends ToneWithContext<Options> {\n\n\t/**\n\t * The name of the class\n\t */\n\tabstract readonly name: string = \"ToneAudioNode\";\n\n\t/**\n\t * The input node or nodes. If the object is a source,\n\t * it does not have any input and this.input is undefined.\n\t */\n\tabstract input: InputNode | undefined;\n\n\t/**\n\t * The output nodes. If the object is a sink,\n\t * it does not have any output and this.output is undefined.\n\t */\n\tabstract output: OutputNode | undefined;\n\n\t/**\n\t * The number of inputs feeding into the AudioNode.\n\t * For source nodes, this will be 0.\n\t * @example\n\t * const node = new Tone.Gain();\n\t * console.log(node.numberOfInputs);\n\t */\n\tget numberOfInputs(): number {\n\t\tif (isDefined(this.input)) {\n\t\t\tif (isAudioParam(this.input) || this.input instanceof Param) {\n\t\t\t\treturn 1;\n\t\t\t} else {\n\t\t\t\treturn this.input.numberOfInputs;\n\t\t\t}\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\t}\n\n\t/**\n\t * The number of outputs of the AudioNode.\n\t * @example\n\t * const node = new Tone.Gain();\n\t * console.log(node.numberOfOutputs);\n\t */\n\tget numberOfOutputs(): number {\n\t\tif (isDefined(this.output)) {\n\t\t\treturn this.output.numberOfOutputs;\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\t}\n\n\t/**\n\t * List all of the node that must be set to match the ChannelProperties\n\t */\n\tprotected _internalChannels: OutputNode[] = [];\n\n\t//-------------------------------------\n\t// AUDIO PROPERTIES\n\t//-------------------------------------\n\n\t/**\n\t * Used to decide which nodes to get/set properties on\n\t */\n\tprivate _isAudioNode(node: any): node is AudioNode | ToneAudioNode {\n\t\treturn isDefined(node) && (node instanceof ToneAudioNode || isAudioNode(node));\n\t}\n\n\t/**\n\t * Get all of the audio nodes (either internal or input/output) which together\n\t * make up how the class node responds to channel input/output\n\t */\n\tprivate _getInternalNodes(): OutputNode[] {\n\t\tconst nodeList = this._internalChannels.slice(0);\n\t\tif (this._isAudioNode(this.input)) {\n\t\t\tnodeList.push(this.input);\n\t\t}\n\t\tif (this._isAudioNode(this.output)) {\n\t\t\tif (this.input !== this.output) {\n\t\t\t\tnodeList.push(this.output);\n\t\t\t}\n\t\t}\n\t\treturn nodeList;\n\t}\n\n\t/**\n\t * Set the audio options for this node such as channelInterpretation\n\t * channelCount, etc.\n\t * @param options\n\t */\n\tprivate _setChannelProperties(options: ChannelProperties): void {\n\t\tconst nodeList = this._getInternalNodes();\n\t\tnodeList.forEach(node => {\n\t\t\tnode.channelCount = options.channelCount;\n\t\t\tnode.channelCountMode = options.channelCountMode;\n\t\t\tnode.channelInterpretation = options.channelInterpretation;\n\t\t});\n\t}\n\n\t/**\n\t * Get the current audio options for this node such as channelInterpretation\n\t * channelCount, etc.\n\t */\n\tprivate _getChannelProperties(): ChannelProperties {\n\t\tconst nodeList = this._getInternalNodes();\n\t\tassert(nodeList.length > 0, \"ToneAudioNode does not have any internal nodes\");\n\t\t// use the first node to get properties\n\t\t// they should all be the same\n\t\tconst node = nodeList[0];\n\t\treturn {\n\t\t\tchannelCount: node.channelCount,\n\t\t\tchannelCountMode: node.channelCountMode,\n\t\t\tchannelInterpretation: node.channelInterpretation,\n\t\t};\n\t}\n\n\t/**\n\t * channelCount is the number of channels used when up-mixing and down-mixing\n\t * connections to any inputs to the node. The default value is 2 except for\n\t * specific nodes where its value is specially determined.\n\t */\n\tget channelCount(): number {\n\t\treturn this._getChannelProperties().channelCount;\n\t}\n\tset channelCount(channelCount) {\n\t\tconst props = this._getChannelProperties();\n\t\t// merge it with the other properties\n\t\tthis._setChannelProperties(Object.assign(props, { channelCount }));\n\t}\n\n\t/**\n\t * channelCountMode determines how channels will be counted when up-mixing and\n\t * down-mixing connections to any inputs to the node.\n\t * The default value is \"max\". This attribute has no effect for nodes with no inputs.\n\t * * \"max\" - computedNumberOfChannels is the maximum of the number of channels of all connections to an input. In this mode channelCount is ignored.\n\t * * \"clamped-max\" - computedNumberOfChannels is determined as for \"max\" and then clamped to a maximum value of the given channelCount.\n\t * * \"explicit\" - computedNumberOfChannels is the exact value as specified by the channelCount.\n\t */\n\tget channelCountMode(): ChannelCountMode {\n\t\treturn this._getChannelProperties().channelCountMode;\n\t}\n\tset channelCountMode(channelCountMode) {\n\t\tconst props = this._getChannelProperties();\n\t\t// merge it with the other properties\n\t\tthis._setChannelProperties(Object.assign(props, { channelCountMode }));\n\t}\n\n\t/**\n\t * channelInterpretation determines how individual channels will be treated\n\t * when up-mixing and down-mixing connections to any inputs to the node.\n\t * The default value is \"speakers\".\n\t */\n\tget channelInterpretation(): ChannelInterpretation {\n\t\treturn this._getChannelProperties().channelInterpretation;\n\t}\n\tset channelInterpretation(channelInterpretation) {\n\t\tconst props = this._getChannelProperties();\n\t\t// merge it with the other properties\n\t\tthis._setChannelProperties(Object.assign(props, { channelInterpretation }));\n\t}\n\n\t//-------------------------------------\n\t// CONNECTIONS\n\t//-------------------------------------\n\n\t/**\n\t * connect the output of a ToneAudioNode to an AudioParam, AudioNode, or ToneAudioNode\n\t * @param destination The output to connect to\n\t * @param outputNum The output to connect from\n\t * @param inputNum The input to connect to\n\t */\n\tconnect(destination: InputNode, outputNum = 0, inputNum = 0): this {\n\t\tconnect(this, destination, outputNum, inputNum);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Connect the output to the context's destination node.\n\t * @example\n\t * const osc = new Tone.Oscillator(\"C2\").start();\n\t * osc.toDestination();\n\t */\n\ttoDestination(): this {\n\t\tthis.connect(this.context.destination);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Connect the output to the context's destination node.\n\t * See [[toDestination]]\n\t * @deprecated\n\t */\n\ttoMaster(): this {\n\t\twarn(\"toMaster() has been renamed toDestination()\");\n\t\treturn this.toDestination();\n\t}\n\n\t/**\n\t * disconnect the output\n\t */\n\tdisconnect(destination?: InputNode, outputNum = 0, inputNum = 0): this {\n\t\tdisconnect(this, destination, outputNum, inputNum);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Connect the output of this node to the rest of the nodes in series.\n\t * @example\n\t * const player = new Tone.Player(\"https://tonejs.github.io/audio/drum-samples/handdrum-loop.mp3\");\n\t * player.autostart = true;\n\t * const filter = new Tone.AutoFilter(4).start();\n\t * const distortion = new Tone.Distortion(0.5);\n\t * // connect the player to the filter, distortion and then to the master output\n\t * player.chain(filter, distortion, Tone.Destination);\n\t */\n\tchain(...nodes: InputNode[]): this {\n\t\tconnectSeries(this, ...nodes);\n\t\treturn this;\n\t}\n\n\t/**\n\t * connect the output of this node to the rest of the nodes in parallel.\n\t * @example\n\t * const player = new Tone.Player(\"https://tonejs.github.io/audio/drum-samples/conga-rhythm.mp3\");\n\t * player.autostart = true;\n\t * const pitchShift = new Tone.PitchShift(4).toDestination();\n\t * const filter = new Tone.Filter(\"G5\").toDestination();\n\t * // connect a node to the pitch shift and filter in parallel\n\t * player.fan(pitchShift, filter);\n\t */\n\tfan(...nodes: InputNode[]): this {\n\t\tnodes.forEach(node => this.connect(node));\n\t\treturn this;\n\t}\n\n\t/**\n\t * Dispose and disconnect\n\t */\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tif (isDefined(this.input)) {\n\t\t\tif (this.input instanceof ToneAudioNode) {\n\t\t\t\tthis.input.dispose();\n\t\t\t} else if (isAudioNode(this.input)) {\n\t\t\t\tthis.input.disconnect();\n\t\t\t}\n\t\t}\n\t\tif (isDefined(this.output)) {\n\t\t\tif (this.output instanceof ToneAudioNode) {\n\t\t\t\tthis.output.dispose();\n\t\t\t} else if (isAudioNode(this.output)) {\n\t\t\t\tthis.output.disconnect();\n\t\t\t}\n\t\t}\n\t\tthis._internalChannels = [];\n\t\treturn this;\n\t}\n}\n\n//-------------------------------------\n// CONNECTIONS\n//-------------------------------------\n\n/**\n * connect together all of the arguments in series\n * @param nodes\n */\nexport function connectSeries(...nodes: InputNode[]): void {\n\tconst first = nodes.shift();\n\tnodes.reduce((prev, current) => {\n\t\tif (prev instanceof ToneAudioNode) {\n\t\t\tprev.connect(current);\n\t\t} else if (isAudioNode(prev)) {\n\t\t\tconnect(prev, current);\n\t\t}\n\t\treturn current;\n\t}, first);\n}\n\n/**\n * Connect two nodes together so that signal flows from the\n * first node to the second. Optionally specify the input and output channels.\n * @param srcNode The source node\n * @param dstNode The destination node\n * @param outputNumber The output channel of the srcNode\n * @param inputNumber The input channel of the dstNode\n */\nexport function connect(srcNode: OutputNode, dstNode: InputNode, outputNumber = 0, inputNumber = 0): void {\n\n\tassert(isDefined(srcNode), \"Cannot connect from undefined node\");\n\tassert(isDefined(dstNode), \"Cannot connect to undefined node\");\n\n\tif (dstNode instanceof ToneAudioNode || isAudioNode(dstNode)) {\n\t\tassert(dstNode.numberOfInputs > 0, \"Cannot connect to node with no inputs\");\n\t}\n\tassert(srcNode.numberOfOutputs > 0, \"Cannot connect from node with no outputs\");\n\n\t// resolve the input of the dstNode\n\twhile ((dstNode instanceof ToneAudioNode || dstNode instanceof Param)) {\n\t\tif (isDefined(dstNode.input)) {\n\t\t\tdstNode = dstNode.input;\n\t\t}\n\t}\n\n\twhile (srcNode instanceof ToneAudioNode) {\n\t\tif (isDefined(srcNode.output)) {\n\t\t\tsrcNode = srcNode.output;\n\t\t}\n\t}\n\n\t// make the connection\n\tif (isAudioParam(dstNode)) {\n\t\tsrcNode.connect(dstNode as AudioParam, outputNumber);\n\t} else {\n\t\tsrcNode.connect(dstNode, outputNumber, inputNumber);\n\t}\n}\n\n/**\n * Disconnect a node from all nodes or optionally include a destination node and input/output channels.\n * @param srcNode The source node\n * @param dstNode The destination node\n * @param outputNumber The output channel of the srcNode\n * @param inputNumber The input channel of the dstNode\n */\nexport function disconnect(\n\tsrcNode: OutputNode,\n\tdstNode?: InputNode,\n\toutputNumber = 0,\n\tinputNumber = 0,\n): void {\n\n\t// resolve the destination node\n\tif (isDefined(dstNode)) {\n\t\twhile (dstNode instanceof ToneAudioNode) {\n\t\t\tdstNode = dstNode.input;\n\t\t}\n\t}\n\n\t// resolve the src node\n\twhile (!(isAudioNode(srcNode))) {\n\t\tif (isDefined(srcNode.output)) {\n\t\t\tsrcNode = srcNode.output;\n\t\t}\n\t}\n\n\tif (isAudioParam(dstNode)) {\n\t\tsrcNode.disconnect(dstNode, outputNumber);\n\t} else if (isAudioNode(dstNode)) {\n\t\tsrcNode.disconnect(dstNode, outputNumber, inputNumber);\n\t} else {\n\t\tsrcNode.disconnect();\n\t}\n}\n","import { Param } from \"../context/Param\";\nimport { UnitMap, UnitName } from \"../type/Units\";\nimport { optionsFromArguments } from \"../util/Defaults\";\nimport { readOnly } from \"../util/Interface\";\nimport { ToneAudioNode, ToneAudioNodeOptions } from \"./ToneAudioNode\";\n\ninterface GainOptions<TypeName extends UnitName> extends ToneAudioNodeOptions {\n\tgain: UnitMap[TypeName];\n\tunits: TypeName;\n\tconvert: boolean;\n\tminValue?: number;\n\tmaxValue?: number;\n}\n\n/**\n * A thin wrapper around the Native Web Audio GainNode.\n * The GainNode is a basic building block of the Web Audio\n * API and is useful for routing audio and adjusting gains.\n * @category Core\n * @example\n * return Tone.Offline(() => {\n * \tconst gainNode = new Tone.Gain(0).toDestination();\n * \tconst osc = new Tone.Oscillator(30).connect(gainNode).start();\n * \tgainNode.gain.rampTo(1, 0.1);\n * \tgainNode.gain.rampTo(0, 0.4, 0.2);\n * }, 0.7, 1);\n */\nexport class Gain<TypeName extends \"gain\" | \"decibels\" | \"normalRange\" = \"gain\"> extends ToneAudioNode<GainOptions<TypeName>> {\n\n\treadonly name: string = \"Gain\";\n\n\t/**\n\t * The gain parameter of the gain node.\n\t * @example\n\t * const gainNode = new Tone.Gain(0).toDestination();\n\t * const osc = new Tone.Oscillator().connect(gainNode).start();\n\t * gainNode.gain.rampTo(1, 0.1);\n\t * gainNode.gain.rampTo(0, 2, \"+0.5\");\n\t */\n\treadonly gain: Param<TypeName>;\n\n\t/**\n\t * The wrapped GainNode.\n\t */\n\tprivate _gainNode: GainNode = this.context.createGain();\n\n\t// input = output\n\treadonly input: GainNode = this._gainNode;\n\treadonly output: GainNode = this._gainNode;\n\n\t/**\n\t * @param  gain The initial gain of the GainNode\n\t * @param units The units of the gain parameter.\n\t */\n\tconstructor(gain?: UnitMap[TypeName], units?: TypeName);\n\tconstructor(options?: Partial<GainOptions<TypeName>>);\n\tconstructor() {\n\t\tsuper(optionsFromArguments(Gain.getDefaults(), arguments, [\"gain\", \"units\"]));\n\t\tconst options = optionsFromArguments(Gain.getDefaults(), arguments, [\"gain\", \"units\"]);\n\n\t\tthis.gain = new Param({\n\t\t\tcontext: this.context,\n\t\t\tconvert: options.convert,\n\t\t\tparam: this._gainNode.gain,\n\t\t\tunits: options.units,\n\t\t\tvalue: options.gain,\n\t\t\tminValue: options.minValue,\n\t\t\tmaxValue: options.maxValue,\n\t\t});\n\t\treadOnly(this, \"gain\");\n\t}\n\n\tstatic getDefaults(): GainOptions<any> {\n\t\treturn Object.assign(ToneAudioNode.getDefaults(), {\n\t\t\tconvert: true,\n\t\t\tgain: 1,\n\t\t\tunits: \"gain\",\n\t\t});\n\t}\n\n\t/**\n\t * Clean up.\n\t */\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._gainNode.disconnect();\n\t\tthis.gain.dispose();\n\t\treturn this;\n\t}\n}\n","import { Gain } from \"../core/context/Gain\";\nimport {\n\tToneAudioNode,\n\tToneAudioNodeOptions,\n} from \"../core/context/ToneAudioNode\";\nimport { GainFactor, Seconds, Time } from \"../core/type/Units\";\nimport { noOp } from \"../core/util/Interface\";\nimport { assert } from \"../core/util/Debug\";\nimport { BasicPlaybackState } from \"../core/util/StateTimeline\";\n\nexport type OneShotSourceCurve = \"linear\" | \"exponential\";\n\ntype onEndedCallback = (source: OneShotSource<any>) => void;\n\nexport interface OneShotSourceOptions extends ToneAudioNodeOptions {\n\tonended: onEndedCallback;\n\tfadeIn: Time;\n\tfadeOut: Time;\n\tcurve: OneShotSourceCurve;\n}\n\n/**\n * Base class for fire-and-forget nodes\n */\nexport abstract class OneShotSource<\n\tOptions extends ToneAudioNodeOptions\n> extends ToneAudioNode<Options> {\n\t/**\n\t * The callback to invoke after the\n\t * source is done playing.\n\t */\n\tonended: onEndedCallback = noOp;\n\n\t/**\n\t * Sources do not have input nodes\n\t */\n\tinput: undefined;\n\n\t/**\n\t * The start time\n\t */\n\tprotected _startTime = -1;\n\n\t/**\n\t * The stop time\n\t */\n\tprotected _stopTime = -1;\n\n\t/**\n\t * The id of the timeout\n\t */\n\tprivate _timeout = -1;\n\n\t/**\n\t * The public output node\n\t */\n\toutput: Gain = new Gain({\n\t\tcontext: this.context,\n\t\tgain: 0,\n\t});\n\n\t/**\n\t * The output gain node.\n\t */\n\tprotected _gainNode = this.output;\n\n\t/**\n\t * The fadeIn time of the amplitude envelope.\n\t */\n\tprotected _fadeIn: Time;\n\n\t/**\n\t * The fadeOut time of the amplitude envelope.\n\t */\n\tprotected _fadeOut: Time;\n\n\t/**\n\t * The curve applied to the fades, either \"linear\" or \"exponential\"\n\t */\n\tprotected _curve: OneShotSourceCurve;\n\n\tconstructor(options: OneShotSourceOptions) {\n\t\tsuper(options);\n\n\t\tthis._fadeIn = options.fadeIn;\n\t\tthis._fadeOut = options.fadeOut;\n\t\tthis._curve = options.curve;\n\t\tthis.onended = options.onended;\n\t}\n\n\tstatic getDefaults(): OneShotSourceOptions {\n\t\treturn Object.assign(ToneAudioNode.getDefaults(), {\n\t\t\tcurve: \"linear\" as OneShotSourceCurve,\n\t\t\tfadeIn: 0,\n\t\t\tfadeOut: 0,\n\t\t\tonended: noOp,\n\t\t});\n\t}\n\n\t/**\n\t * Stop the source node\n\t */\n\tprotected abstract _stopSource(time: Seconds): void;\n\n\t/**\n\t * Start the source node at the given time\n\t * @param  time When to start the node\n\t */\n\tprotected abstract start(time?: Time): this;\n\t/**\n\t * Start the source at the given time\n\t * @param  time When to start the source\n\t */\n\tprotected _startGain(time: Seconds, gain: GainFactor = 1): this {\n\t\tassert(\n\t\t\tthis._startTime === -1,\n\t\t\t\"Source cannot be started more than once\"\n\t\t);\n\t\t// apply a fade in envelope\n\t\tconst fadeInTime = this.toSeconds(this._fadeIn);\n\n\t\t// record the start time\n\t\tthis._startTime = time + fadeInTime;\n\t\tthis._startTime = Math.max(this._startTime, this.context.currentTime);\n\n\t\t// schedule the envelope\n\t\tif (fadeInTime > 0) {\n\t\t\tthis._gainNode.gain.setValueAtTime(0, time);\n\t\t\tif (this._curve === \"linear\") {\n\t\t\t\tthis._gainNode.gain.linearRampToValueAtTime(\n\t\t\t\t\tgain,\n\t\t\t\t\ttime + fadeInTime\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tthis._gainNode.gain.exponentialApproachValueAtTime(\n\t\t\t\t\tgain,\n\t\t\t\t\ttime,\n\t\t\t\t\tfadeInTime\n\t\t\t\t);\n\t\t\t}\n\t\t} else {\n\t\t\tthis._gainNode.gain.setValueAtTime(gain, time);\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Stop the source node at the given time.\n\t * @param time When to stop the source\n\t */\n\tstop(time?: Time): this {\n\t\tthis.log(\"stop\", time);\n\t\tthis._stopGain(this.toSeconds(time));\n\t\treturn this;\n\t}\n\n\t/**\n\t * Stop the source at the given time\n\t * @param  time When to stop the source\n\t */\n\tprotected _stopGain(time: Seconds): this {\n\t\tassert(this._startTime !== -1, \"'start' must be called before 'stop'\");\n\t\t// cancel the previous stop\n\t\tthis.cancelStop();\n\n\t\t// the fadeOut time\n\t\tconst fadeOutTime = this.toSeconds(this._fadeOut);\n\n\t\t// schedule the stop callback\n\t\tthis._stopTime = this.toSeconds(time) + fadeOutTime;\n\t\tthis._stopTime = Math.max(this._stopTime, this.context.currentTime);\n\t\tif (fadeOutTime > 0) {\n\t\t\t// start the fade out curve at the given time\n\t\t\tif (this._curve === \"linear\") {\n\t\t\t\tthis._gainNode.gain.linearRampTo(0, fadeOutTime, time);\n\t\t\t} else {\n\t\t\t\tthis._gainNode.gain.targetRampTo(0, fadeOutTime, time);\n\t\t\t}\n\t\t} else {\n\t\t\t// stop any ongoing ramps, and set the value to 0\n\t\t\tthis._gainNode.gain.cancelAndHoldAtTime(time);\n\t\t\tthis._gainNode.gain.setValueAtTime(0, time);\n\t\t}\n\t\tthis.context.clearTimeout(this._timeout);\n\t\tthis._timeout = this.context.setTimeout(() => {\n\t\t\t// allow additional time for the exponential curve to fully decay\n\t\t\tconst additionalTail =\n\t\t\t\tthis._curve === \"exponential\" ? fadeOutTime * 2 : 0;\n\t\t\tthis._stopSource(this.now() + additionalTail);\n\t\t\tthis._onended();\n\t\t}, this._stopTime - this.context.currentTime);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Invoke the onended callback\n\t */\n\tprotected _onended(): void {\n\t\tif (this.onended !== noOp) {\n\t\t\tthis.onended(this);\n\t\t\t// overwrite onended to make sure it only is called once\n\t\t\tthis.onended = noOp;\n\t\t\t// dispose when it's ended to free up for garbage collection only in the online context\n\t\t\tif (!this.context.isOffline) {\n\t\t\t\tconst disposeCallback = () => this.dispose();\n\t\t\t\t// @ts-ignore\n\t\t\t\tif (typeof window.requestIdleCallback !== \"undefined\") {\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\twindow.requestIdleCallback(disposeCallback);\n\t\t\t\t} else {\n\t\t\t\t\tsetTimeout(disposeCallback, 1000);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Get the playback state at the given time\n\t */\n\tgetStateAtTime = function(time: Time): BasicPlaybackState {\n\t\tconst computedTime = this.toSeconds(time);\n\t\tif (\n\t\t\tthis._startTime !== -1 &&\n\t\t\tcomputedTime >= this._startTime &&\n\t\t\t(this._stopTime === -1 || computedTime <= this._stopTime)\n\t\t) {\n\t\t\treturn \"started\";\n\t\t} else {\n\t\t\treturn \"stopped\";\n\t\t}\n\t};\n\n\t/**\n\t * Get the playback state at the current time\n\t */\n\tget state(): BasicPlaybackState {\n\t\treturn this.getStateAtTime(this.now());\n\t}\n\n\t/**\n\t * Cancel a scheduled stop event\n\t */\n\tcancelStop(): this {\n\t\tthis.log(\"cancelStop\");\n\t\tassert(this._startTime !== -1, \"Source is not started\");\n\t\t// cancel the stop envelope\n\t\tthis._gainNode.gain.cancelScheduledValues(\n\t\t\tthis._startTime + this.sampleTime\n\t\t);\n\t\tthis.context.clearTimeout(this._timeout);\n\t\tthis._stopTime = -1;\n\t\treturn this;\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._gainNode.disconnect();\n\t\treturn this;\n\t}\n}\n","import { connect } from \"../core/context/ToneAudioNode\";\nimport { Param } from \"../core/context/Param\";\nimport { Seconds, Time, UnitMap, UnitName } from \"../core/type/Units\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { OneShotSource, OneShotSourceOptions } from \"../source/OneShotSource\";\n\nexport interface ToneConstantSourceOptions<TypeName extends UnitName> extends OneShotSourceOptions {\n\tconvert: boolean;\n\toffset: UnitMap[TypeName];\n\tunits: TypeName;\n\tminValue?: number;\n\tmaxValue?: number;\n}\n\n/**\n * Wrapper around the native fire-and-forget ConstantSource.\n * Adds the ability to reschedule the stop method.\n * @category Signal\n */\nexport class ToneConstantSource<TypeName extends UnitName = \"number\"> extends OneShotSource<ToneConstantSourceOptions<TypeName>> {\n\n\treadonly name: string = \"ToneConstantSource\";\n\n\t/**\n\t * The signal generator\n\t */\n\tprivate _source = this.context.createConstantSource();\n\n\t/**\n\t * The offset of the signal generator\n\t */\n\treadonly offset: Param<TypeName>;\n\n\t/**\n\t * @param  offset   The offset value\n\t */\n\tconstructor(offset: UnitMap[TypeName]);\n\tconstructor(options?: Partial<ToneConstantSourceOptions<TypeName>>);\n\tconstructor() {\n\n\t\tsuper(optionsFromArguments(ToneConstantSource.getDefaults(), arguments, [\"offset\"]));\n\t\tconst options = optionsFromArguments(ToneConstantSource.getDefaults(), arguments, [\"offset\"]);\n\n\t\tconnect(this._source, this._gainNode);\n\n\t\tthis.offset = new Param({\n\t\t\tcontext: this.context,\n\t\t\tconvert: options.convert,\n\t\t\tparam: this._source.offset,\n\t\t\tunits: options.units,\n\t\t\tvalue: options.offset,\n\t\t\tminValue: options.minValue,\n\t\t\tmaxValue: options.maxValue,\n\t\t});\n\t}\n\n\tstatic getDefaults(): ToneConstantSourceOptions<any> {\n\t\treturn Object.assign(OneShotSource.getDefaults(), {\n\t\t\tconvert: true,\n\t\t\toffset: 1,\n\t\t\tunits: \"number\" as UnitName,\n\t\t});\n\t}\n\n\t/**\n\t * Start the source node at the given time\n\t * @param  time When to start the source\n\t */\n\tstart(time?: Time): this {\n\t\tconst computedTime = this.toSeconds(time);\n\t\tthis.log(\"start\", computedTime);\n\t\tthis._startGain(computedTime);\n\t\tthis._source.start(computedTime);\n\t\treturn this;\n\t}\n\n\tprotected _stopSource(time?: Seconds): void {\n\t\tthis._source.stop(time);\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tif (this.state === \"started\") {\n\t\t\tthis.stop();\n\t\t}\n\t\tthis._source.disconnect();\n\t\tthis.offset.dispose();\n\t\treturn this;\n\t}\n}\n","import { AbstractParam } from \"../core/context/AbstractParam\";\nimport { Param } from \"../core/context/Param\";\nimport { InputNode, OutputNode, ToneAudioNode, ToneAudioNodeOptions } from \"../core/context/ToneAudioNode\";\nimport { connect } from \"../core/context/ToneAudioNode\";\nimport { Time, UnitMap, UnitName } from \"../core/type/Units\";\nimport { isAudioParam } from \"../core/util/AdvancedTypeCheck\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { ToneConstantSource } from \"./ToneConstantSource\";\n\nexport interface SignalOptions<TypeName extends UnitName> extends ToneAudioNodeOptions {\n\tvalue: UnitMap[TypeName];\n\tunits: TypeName;\n\tconvert: boolean;\n\tminValue?: number;\n\tmaxValue?: number;\n}\n\n/**\n * A signal is an audio-rate value. Tone.Signal is a core component of the library.\n * Unlike a number, Signals can be scheduled with sample-level accuracy. Tone.Signal\n * has all of the methods available to native Web Audio\n * [AudioParam](http://webaudio.github.io/web-audio-api/#the-audioparam-interface)\n * as well as additional conveniences. Read more about working with signals\n * [here](https://github.com/Tonejs/Tone.js/wiki/Signals).\n *\n * @example\n * const osc = new Tone.Oscillator().toDestination().start();\n * // a scheduleable signal which can be connected to control an AudioParam or another Signal\n * const signal = new Tone.Signal({\n * \tvalue: \"C4\",\n * \tunits: \"frequency\"\n * }).connect(osc.frequency);\n * // the scheduled ramp controls the connected signal\n * signal.rampTo(\"C2\", 4, \"+0.5\");\n * @category Signal\n */\nexport class Signal<TypeName extends UnitName = \"number\"> extends ToneAudioNode<SignalOptions<any>>\n\timplements AbstractParam<TypeName> {\n\n\treadonly name: string = \"Signal\";\n\n\t/**\n\t * Indicates if the value should be overridden on connection.\n\t */\n\treadonly override: boolean = true;\n\n\t/**\n\t * The constant source node which generates the signal\n\t */\n\tprotected _constantSource: ToneConstantSource<TypeName>;\n\treadonly output: OutputNode;\n\tprotected _param: Param<TypeName>;\n\treadonly input: InputNode;\n\n\t/**\n\t * @param value Initial value of the signal\n\t * @param units The unit name, e.g. \"frequency\"\n\t */\n\tconstructor(value?: UnitMap[TypeName], units?: TypeName);\n\tconstructor(options?: Partial<SignalOptions<TypeName>>);\n\tconstructor() {\n\n\t\tsuper(optionsFromArguments(Signal.getDefaults(), arguments, [\"value\", \"units\"]));\n\n\t\tconst options = optionsFromArguments(Signal.getDefaults(), arguments, [\"value\", \"units\"]) as SignalOptions<TypeName>;\n\n\t\tthis.output = this._constantSource = new ToneConstantSource({\n\t\t\tcontext: this.context,\n\t\t\tconvert: options.convert,\n\t\t\toffset: options.value,\n\t\t\tunits: options.units,\n\t\t\tminValue: options.minValue,\n\t\t\tmaxValue: options.maxValue,\n\t\t});\n\t\tthis._constantSource.start(0);\n\t\tthis.input = this._param = this._constantSource.offset;\n\t}\n\n\tstatic getDefaults(): SignalOptions<any> {\n\t\treturn Object.assign(ToneAudioNode.getDefaults(), {\n\t\t\tconvert: true,\n\t\t\tunits: \"number\" as UnitName,\n\t\t\tvalue: 0,\n\t\t});\n\t}\n\n\tconnect(destination: InputNode, outputNum = 0, inputNum = 0): this {\n\t\t// start it only when connected to something\n\t\tconnectSignal(this, destination, outputNum, inputNum);\n\t\treturn this;\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._param.dispose();\n\t\tthis._constantSource.dispose();\n\t\treturn this;\n\t}\n\n\t//-------------------------------------\n\t// ABSTRACT PARAM INTERFACE\n\t// just a proxy for the ConstantSourceNode's offset AudioParam\n\t// all docs are generated from AbstractParam.ts\n\t//-------------------------------------\n\n\tsetValueAtTime(value: UnitMap[TypeName], time: Time): this {\n\t\tthis._param.setValueAtTime(value, time);\n\t\treturn this;\n\t}\n\tgetValueAtTime(time: Time): UnitMap[TypeName] {\n\t\treturn this._param.getValueAtTime(time);\n\t}\n\tsetRampPoint(time: Time): this {\n\t\tthis._param.setRampPoint(time);\n\t\treturn this;\n\t}\n\tlinearRampToValueAtTime(value: UnitMap[TypeName], time: Time): this {\n\t\tthis._param.linearRampToValueAtTime(value, time);\n\t\treturn this;\n\t}\n\texponentialRampToValueAtTime(value: UnitMap[TypeName], time: Time): this {\n\t\tthis._param.exponentialRampToValueAtTime(value, time);\n\t\treturn this;\n\t}\n\texponentialRampTo(value: UnitMap[TypeName], rampTime: Time, startTime?: Time): this {\n\t\tthis._param.exponentialRampTo(value, rampTime, startTime);\n\t\treturn this;\n\t}\n\tlinearRampTo(value: UnitMap[TypeName], rampTime: Time, startTime?: Time): this {\n\t\tthis._param.linearRampTo(value, rampTime, startTime);\n\t\treturn this;\n\t}\n\ttargetRampTo(value: UnitMap[TypeName], rampTime: Time, startTime?: Time): this {\n\t\tthis._param.targetRampTo(value, rampTime, startTime);\n\t\treturn this;\n\t}\n\texponentialApproachValueAtTime(value: UnitMap[TypeName], time: Time, rampTime: Time): this {\n\t\tthis._param.exponentialApproachValueAtTime(value, time, rampTime);\n\t\treturn this;\n\t}\n\tsetTargetAtTime(value: UnitMap[TypeName], startTime: Time, timeConstant: number): this {\n\t\tthis._param.setTargetAtTime(value, startTime, timeConstant);\n\t\treturn this;\n\t}\n\tsetValueCurveAtTime(values: UnitMap[TypeName][], startTime: Time, duration: Time, scaling?: number): this {\n\t\tthis._param.setValueCurveAtTime(values, startTime, duration, scaling);\n\t\treturn this;\n\t}\n\tcancelScheduledValues(time: Time): this {\n\t\tthis._param.cancelScheduledValues(time);\n\t\treturn this;\n\t}\n\tcancelAndHoldAtTime(time: Time): this {\n\t\tthis._param.cancelAndHoldAtTime(time);\n\t\treturn this;\n\t}\n\trampTo(value: UnitMap[TypeName], rampTime: Time, startTime?: Time): this {\n\t\tthis._param.rampTo(value, rampTime, startTime);\n\t\treturn this;\n\t}\n\n\tget value(): UnitMap[TypeName] {\n\t\treturn this._param.value;\n\t}\n\tset value(value: UnitMap[TypeName]) {\n\t\tthis._param.value = value;\n\t}\n\n\tget convert(): boolean {\n\t\treturn this._param.convert;\n\t}\n\tset convert(convert: boolean) {\n\t\tthis._param.convert = convert;\n\t}\n\n\tget units(): UnitName {\n\t\treturn this._param.units;\n\t}\n\n\tget overridden(): boolean {\n\t\treturn this._param.overridden;\n\t}\n\tset overridden(overridden: boolean) {\n\t\tthis._param.overridden = overridden;\n\t}\n\n\tget maxValue(): number {\n\t\treturn this._param.maxValue;\n\t}\n\tget minValue(): number {\n\t\treturn this._param.minValue;\n\t}\n\n\t/**\n\t * See [[Param.apply]].\n\t */\n\tapply(param: Param | AudioParam): this {\n\t\tthis._param.apply(param);\n\t\treturn this;\n\t}\n}\n\n/**\n * When connecting from a signal, it's necessary to zero out the node destination\n * node if that node is also a signal. If the destination is not 0, then the values\n * will be summed. This method insures that the output of the destination signal will\n * be the same as the source signal, making the destination signal a pass through node.\n * @param signal The output signal to connect from\n * @param destination the destination to connect to\n * @param outputNum the optional output number\n * @param inputNum the input number\n */\nexport function connectSignal(signal: OutputNode, destination: InputNode, outputNum?: number, inputNum?: number): void {\n\tif (destination instanceof Param || isAudioParam(destination) ||\n\t\t(destination instanceof Signal && destination.override)) {\n\t\t// cancel changes\n\t\tdestination.cancelScheduledValues(0);\n\t\t// reset the value\n\t\tdestination.setValueAtTime(0, 0);\n\t\t// mark the value as overridden\n\t\tif (destination instanceof Signal) {\n\t\t\tdestination.overridden = true;\n\t\t}\n\t}\n\tconnect(signal, destination, outputNum, inputNum);\n}\n","import { AutomationEvent, Param, ParamOptions } from \"../context/Param\";\nimport { Seconds, Ticks, Time, UnitMap, UnitName } from \"../type/Units\";\nimport { optionsFromArguments } from \"../util/Defaults\";\nimport { Timeline } from \"../util/Timeline\";\nimport { isUndef } from \"../util/TypeCheck\";\n\ntype TickAutomationEvent = AutomationEvent & {\n\tticks: number;\n};\n\ninterface TickParamOptions<TypeName extends UnitName> extends ParamOptions<TypeName> {\n\tmultiplier: number;\n}\n\n/**\n * A Param class just for computing ticks. Similar to the [[Param]] class,\n * but offers conversion to BPM values as well as ability to compute tick\n * duration and elapsed ticks\n */\nexport class TickParam<TypeName extends \"hertz\" | \"bpm\"> extends Param<TypeName> {\n\n\treadonly name: string = \"TickParam\";\n\n\t/**\n\t * The timeline which tracks all of the automations.\n\t */\n\tprotected _events: Timeline<TickAutomationEvent> = new Timeline(Infinity);\n\n\t/**\n\t * The internal holder for the multiplier value\n\t */\n\tprivate _multiplier = 1;\n\n\t/**\n\t * @param param The AudioParam to wrap\n\t * @param units The unit name\n\t * @param convert Whether or not to convert the value to the target units\n\t */\n\t/**\n\t * @param value The initial value of the signal\n\t */\n\tconstructor(value?: number);\n\tconstructor(options: Partial<TickParamOptions<TypeName>>);\n\tconstructor() {\n\n\t\tsuper(optionsFromArguments(TickParam.getDefaults(), arguments, [\"value\"]));\n\t\tconst options = optionsFromArguments(TickParam.getDefaults(), arguments, [\"value\"]);\n\n\t\t// set the multiplier\n\t\tthis._multiplier = options.multiplier;\n\n\t\t// clear the ticks from the beginning\n\t\tthis._events.cancel(0);\n\t\t// set an initial event\n\t\tthis._events.add({\n\t\t\tticks: 0,\n\t\t\ttime: 0,\n\t\t\ttype: \"setValueAtTime\",\n\t\t\tvalue: this._fromType(options.value),\n\t\t});\n\t\tthis.setValueAtTime(options.value, 0);\n\t}\n\n\tstatic getDefaults(): TickParamOptions<any> {\n\t\treturn Object.assign(Param.getDefaults(), {\n\t\t\tmultiplier: 1,\n\t\t\tunits: \"hertz\",\n\t\t\tvalue: 1,\n\t\t});\n\t}\n\n\tsetTargetAtTime(value: UnitMap[TypeName], time: Time, constant: number): this {\n\t\t// approximate it with multiple linear ramps\n\t\ttime = this.toSeconds(time);\n\t\tthis.setRampPoint(time);\n\t\tconst computedValue = this._fromType(value);\n\n\t\t// start from previously scheduled value\n\t\tconst prevEvent = this._events.get(time) as TickAutomationEvent;\n\t\tconst segments = Math.round(Math.max(1 / constant, 1));\n\t\tfor (let i = 0; i <= segments; i++) {\n\t\t\tconst segTime = constant * i + time;\n\t\t\tconst rampVal = this._exponentialApproach(prevEvent.time, prevEvent.value, computedValue, constant, segTime);\n\t\t\tthis.linearRampToValueAtTime(this._toType(rampVal), segTime);\n\t\t}\n\t\treturn this;\n\t}\n\n\tsetValueAtTime(value: UnitMap[TypeName], time: Time): this {\n\t\tconst computedTime = this.toSeconds(time);\n\t\tsuper.setValueAtTime(value, time);\n\t\tconst event = this._events.get(computedTime) as TickAutomationEvent;\n\t\tconst previousEvent = this._events.previousEvent(event);\n\t\tconst ticksUntilTime = this._getTicksUntilEvent(previousEvent, computedTime);\n\t\tevent.ticks = Math.max(ticksUntilTime, 0);\n\t\treturn this;\n\t}\n\n\tlinearRampToValueAtTime(value: UnitMap[TypeName], time: Time): this {\n\t\tconst computedTime = this.toSeconds(time);\n\t\tsuper.linearRampToValueAtTime(value, time);\n\t\tconst event = this._events.get(computedTime) as TickAutomationEvent;\n\t\tconst previousEvent = this._events.previousEvent(event);\n\t\tconst ticksUntilTime = this._getTicksUntilEvent(previousEvent, computedTime);\n\t\tevent.ticks = Math.max(ticksUntilTime, 0);\n\t\treturn this;\n\t}\n\n\texponentialRampToValueAtTime(value: UnitMap[TypeName], time: Time): this {\n\t\t// aproximate it with multiple linear ramps\n\t\ttime = this.toSeconds(time);\n\t\tconst computedVal = this._fromType(value);\n\n\t\t// start from previously scheduled value\n\t\tconst prevEvent = this._events.get(time) as TickAutomationEvent;\n\t\t// approx 10 segments per second\n\t\tconst segments = Math.round(Math.max((time - prevEvent.time) * 10, 1));\n\t\tconst segmentDur = ((time - prevEvent.time) / segments);\n\t\tfor (let i = 0; i <= segments; i++) {\n\t\t\tconst segTime = segmentDur * i + prevEvent.time;\n\t\t\tconst rampVal = this._exponentialInterpolate(prevEvent.time, prevEvent.value, time, computedVal, segTime);\n\t\t\tthis.linearRampToValueAtTime(this._toType(rampVal), segTime);\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Returns the tick value at the time. Takes into account\n\t * any automation curves scheduled on the signal.\n\t * @param  event The time to get the tick count at\n\t * @return The number of ticks which have elapsed at the time given any automations.\n\t */\n\tprivate _getTicksUntilEvent(event: TickAutomationEvent | null, time: number): Ticks {\n\t\tif (event === null) {\n\t\t\tevent = {\n\t\t\t\tticks: 0,\n\t\t\t\ttime: 0,\n\t\t\t\ttype: \"setValueAtTime\",\n\t\t\t\tvalue: 0,\n\t\t\t};\n\t\t} else if (isUndef(event.ticks)) {\n\t\t\tconst previousEvent = this._events.previousEvent(event);\n\t\t\tevent.ticks = this._getTicksUntilEvent(previousEvent, event.time);\n\t\t}\n\t\tconst val0 = this._fromType(this.getValueAtTime(event.time));\n\t\tlet val1 = this._fromType(this.getValueAtTime(time));\n\t\t// if it's right on the line, take the previous value\n\t\tconst onTheLineEvent = this._events.get(time);\n\t\tif (onTheLineEvent && onTheLineEvent.time === time && onTheLineEvent.type === \"setValueAtTime\") {\n\t\t\tval1 = this._fromType(this.getValueAtTime(time - this.sampleTime));\n\t\t}\n\t\treturn 0.5 * (time - event.time) * (val0 + val1) + event.ticks;\n\t}\n\n\t/**\n\t * Returns the tick value at the time. Takes into account\n\t * any automation curves scheduled on the signal.\n\t * @param  time The time to get the tick count at\n\t * @return The number of ticks which have elapsed at the time given any automations.\n\t */\n\tgetTicksAtTime(time: Time): Ticks {\n\t\tconst computedTime = this.toSeconds(time);\n\t\tconst event = this._events.get(computedTime);\n\t\treturn Math.max(this._getTicksUntilEvent(event, computedTime), 0);\n\t}\n\n\t/**\n\t * Return the elapsed time of the number of ticks from the given time\n\t * @param ticks The number of ticks to calculate\n\t * @param  time The time to get the next tick from\n\t * @return The duration of the number of ticks from the given time in seconds\n\t */\n\tgetDurationOfTicks(ticks: Ticks, time: Time): Seconds {\n\t\tconst computedTime = this.toSeconds(time);\n\t\tconst currentTick = this.getTicksAtTime(time);\n\t\treturn this.getTimeOfTick(currentTick + ticks) - computedTime;\n\t}\n\n\t/**\n\t * Given a tick, returns the time that tick occurs at.\n\t * @return The time that the tick occurs.\n\t */\n\tgetTimeOfTick(tick: Ticks): Seconds {\n\t\tconst before = this._events.get(tick, \"ticks\");\n\t\tconst after = this._events.getAfter(tick, \"ticks\");\n\t\tif (before && before.ticks === tick) {\n\t\t\treturn before.time;\n\t\t} else if (before && after &&\n\t\t\tafter.type === \"linearRampToValueAtTime\" &&\n\t\t\tbefore.value !== after.value) {\n\t\t\tconst val0 = this._fromType(this.getValueAtTime(before.time));\n\t\t\tconst val1 = this._fromType(this.getValueAtTime(after.time));\n\t\t\tconst delta = (val1 - val0) / (after.time - before.time);\n\t\t\tconst k = Math.sqrt(Math.pow(val0, 2) - 2 * delta * (before.ticks - tick));\n\t\t\tconst sol1 = (-val0 + k) / delta;\n\t\t\tconst sol2 = (-val0 - k) / delta;\n\t\t\treturn (sol1 > 0 ? sol1 : sol2) + before.time;\n\t\t} else if (before) {\n\t\t\tif (before.value === 0) {\n\t\t\t\treturn Infinity;\n\t\t\t} else {\n\t\t\t\treturn before.time + (tick - before.ticks) / before.value;\n\t\t\t}\n\t\t} else {\n\t\t\treturn tick / this._initialValue;\n\t\t}\n\t}\n\n\t/**\n\t * Convert some number of ticks their the duration in seconds accounting\n\t * for any automation curves starting at the given time.\n\t * @param  ticks The number of ticks to convert to seconds.\n\t * @param  when  When along the automation timeline to convert the ticks.\n\t * @return The duration in seconds of the ticks.\n\t */\n\tticksToTime(ticks: Ticks, when: Time): Seconds {\n\t\treturn this.getDurationOfTicks(ticks, when);\n\t}\n\n\t/**\n\t * The inverse of [[ticksToTime]]. Convert a duration in\n\t * seconds to the corresponding number of ticks accounting for any\n\t * automation curves starting at the given time.\n\t * @param  duration The time interval to convert to ticks.\n\t * @param  when When along the automation timeline to convert the ticks.\n\t * @return The duration in ticks.\n\t */\n\ttimeToTicks(duration: Time, when: Time): Ticks {\n\t\tconst computedTime = this.toSeconds(when);\n\t\tconst computedDuration = this.toSeconds(duration);\n\t\tconst startTicks = this.getTicksAtTime(computedTime);\n\t\tconst endTicks = this.getTicksAtTime(computedTime + computedDuration);\n\t\treturn endTicks - startTicks;\n\t}\n\n\t/**\n\t * Convert from the type when the unit value is BPM\n\t */\n\tprotected _fromType(val: UnitMap[TypeName]): number {\n\t\tif (this.units === \"bpm\" && this.multiplier) {\n\t\t\treturn 1 / (60 / val / this.multiplier);\n\t\t} else {\n\t\t\treturn super._fromType(val);\n\t\t}\n\t}\n\n\t/**\n\t * Special case of type conversion where the units === \"bpm\"\n\t */\n\tprotected _toType(val: number): UnitMap[TypeName] {\n\t\tif (this.units === \"bpm\" && this.multiplier) {\n\t\t\treturn (val / this.multiplier) * 60 as UnitMap[TypeName];\n\t\t} else {\n\t\t\treturn super._toType(val);\n\t\t}\n\t}\n\t/**\n\t * A multiplier on the bpm value. Useful for setting a PPQ relative to the base frequency value.\n\t */\n\tget multiplier(): number {\n\t\treturn this._multiplier;\n\t}\n\tset multiplier(m: number) {\n\t\t// get and reset the current value with the new multiplier\n\t\t// might be necessary to clear all the previous values\n\t\tconst currentVal = this.value;\n\t\tthis._multiplier = m;\n\t\tthis.cancelScheduledValues(0);\n\t\tthis.setValueAtTime(currentVal, 0);\n\t}\n}\n","import { Signal, SignalOptions } from \"../../signal/Signal\";\nimport { InputNode } from \"../context/ToneAudioNode\";\nimport { Seconds, Ticks, Time, UnitMap, UnitName } from \"../type/Units\";\nimport { optionsFromArguments } from \"../util/Defaults\";\nimport { TickParam } from \"./TickParam\";\n\ninterface TickSignalOptions<TypeName extends UnitName> extends SignalOptions<TypeName> {\n\tvalue: UnitMap[TypeName];\n\tmultiplier: number;\n}\n\n/**\n * TickSignal extends Tone.Signal, but adds the capability\n * to calculate the number of elapsed ticks. exponential and target curves\n * are approximated with multiple linear ramps.\n *\n * Thank you Bruno Dias, H. Sofia Pinto, and David M. Matos,\n * for your [WAC paper](https://smartech.gatech.edu/bitstream/handle/1853/54588/WAC2016-49.pdf)\n * describing integrating timing functions for tempo calculations.\n */\nexport class TickSignal<TypeName extends \"hertz\" | \"bpm\"> extends Signal<TypeName> {\n\n\treadonly name: string = \"TickSignal\";\n\n\t/**\n\t * The param which controls the output signal value\n\t */\n\tprotected _param: TickParam<TypeName>;\n\treadonly input: InputNode;\n\n\t/**\n\t * @param value The initial value of the signal\n\t */\n\tconstructor(value?: UnitMap[TypeName]);\n\tconstructor(options: Partial<TickSignalOptions<TypeName>>);\n\tconstructor() {\n\n\t\tsuper(optionsFromArguments(TickSignal.getDefaults(), arguments, [\"value\"]));\n\t\tconst options = optionsFromArguments(TickSignal.getDefaults(), arguments, [\"value\"]);\n\n\t\tthis.input = this._param = new TickParam({\n\t\t\tcontext: this.context,\n\t\t\tconvert: options.convert,\n\t\t\tmultiplier: options.multiplier,\n\t\t\tparam: this._constantSource.offset,\n\t\t\tunits: options.units,\n\t\t\tvalue: options.value,\n\t\t});\n\t}\n\n\tstatic getDefaults(): TickSignalOptions<any> {\n\t\treturn Object.assign(Signal.getDefaults(), {\n\t\t\tmultiplier: 1,\n\t\t\tunits: \"hertz\",\n\t\t\tvalue: 1,\n\t\t});\n\t}\n\n\tticksToTime(ticks: Ticks, when: Time): Seconds {\n\t\treturn this._param.ticksToTime(ticks, when);\n\t}\n\n\ttimeToTicks(duration: Time, when: Time): Ticks {\n\t\treturn this._param.timeToTicks(duration, when);\n\t}\n\n\tgetTimeOfTick(tick: Ticks): Seconds {\n\t\treturn this._param.getTimeOfTick(tick);\n\t}\n\n\tgetDurationOfTicks(ticks: Ticks, time: Time): Seconds {\n\t\treturn this._param.getDurationOfTicks(ticks, time);\n\t}\n\n\tgetTicksAtTime(time: Time): Ticks {\n\t\treturn this._param.getTicksAtTime(time);\n\t}\n\n\t/**\n\t * A multiplier on the bpm value. Useful for setting a PPQ relative to the base frequency value.\n\t */\n\tget multiplier(): number {\n\t\treturn this._param.multiplier;\n\t}\n\tset multiplier(m: number) {\n\t\tthis._param.multiplier = m;\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._param.dispose();\n\t\treturn this;\n\t}\n}\n","import { ToneWithContext, ToneWithContextOptions } from \"../context/ToneWithContext\";\nimport { Seconds, Ticks, Time } from \"../type/Units\";\nimport { optionsFromArguments } from \"../util/Defaults\";\nimport { readOnly } from \"../util/Interface\";\nimport { PlaybackState, StateTimeline, StateTimelineEvent } from \"../util/StateTimeline\";\nimport { Timeline } from \"../util/Timeline\";\nimport { isDefined } from \"../util/TypeCheck\";\nimport { TickSignal } from \"./TickSignal\";\nimport { EQ } from \"../util/Math\";\n\ninterface TickSourceOptions extends ToneWithContextOptions {\n\tfrequency: number;\n\tunits: \"bpm\" | \"hertz\";\n}\n\ninterface TickSourceOffsetEvent {\n\tticks: number;\n\ttime: number;\n\tseconds: number;\n}\n\n/**\n * Uses [TickSignal](TickSignal) to track elapsed ticks with complex automation curves.\n */\nexport class TickSource<TypeName extends \"bpm\" | \"hertz\"> extends ToneWithContext<TickSourceOptions> {\n\n\treadonly name: string = \"TickSource\";\n\n\t/**\n\t * The frequency the callback function should be invoked.\n\t */\n\treadonly frequency: TickSignal<TypeName>;\n\n\t/**\n\t * The state timeline\n\t */\n\tprivate _state: StateTimeline = new StateTimeline();\n\n\t/**\n\t * The offset values of the ticks\n\t */\n\tprivate _tickOffset: Timeline<TickSourceOffsetEvent> = new Timeline();\n\n\t/**\n\t * @param frequency The initial frequency that the signal ticks at\n\t */\n\tconstructor(frequency?: number);\n\tconstructor(options?: Partial<TickSourceOptions>);\n\tconstructor() {\n\t\tsuper(optionsFromArguments(TickSource.getDefaults(), arguments, [\"frequency\"]));\n\t\tconst options = optionsFromArguments(TickSource.getDefaults(), arguments, [\"frequency\"]);\n\n\t\tthis.frequency = new TickSignal({\n\t\t\tcontext: this.context,\n\t\t\tunits: options.units as TypeName,\n\t\t\tvalue: options.frequency,\n\t\t});\n\t\treadOnly(this, \"frequency\");\n\n\t\t// set the initial state\n\t\tthis._state.setStateAtTime(\"stopped\", 0);\n\t\t// add the first event\n\t\tthis.setTicksAtTime(0, 0);\n\t}\n\n\tstatic getDefaults(): TickSourceOptions {\n\t\treturn Object.assign({\n\t\t\tfrequency: 1,\n\t\t\tunits: \"hertz\" as \"hertz\",\n\t\t}, ToneWithContext.getDefaults());\n\t}\n\n\t/**\n\t * Returns the playback state of the source, either \"started\", \"stopped\" or \"paused\".\n\t */\n\tget state(): PlaybackState {\n\t\treturn this.getStateAtTime(this.now());\n\t}\n\n\t/**\n\t * Start the clock at the given time. Optionally pass in an offset\n\t * of where to start the tick counter from.\n\t * @param  time    The time the clock should start\n\t * @param offset The number of ticks to start the source at\n\t */\n\tstart(time: Time, offset?: Ticks): this {\n\t\tconst computedTime = this.toSeconds(time);\n\t\tif (this._state.getValueAtTime(computedTime) !== \"started\") {\n\t\t\tthis._state.setStateAtTime(\"started\", computedTime);\n\t\t\tif (isDefined(offset)) {\n\t\t\t\tthis.setTicksAtTime(offset, computedTime);\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Stop the clock. Stopping the clock resets the tick counter to 0.\n\t * @param time The time when the clock should stop.\n\t */\n\tstop(time: Time): this {\n\t\tconst computedTime = this.toSeconds(time);\n\t\t// cancel the previous stop\n\t\tif (this._state.getValueAtTime(computedTime) === \"stopped\") {\n\t\t\tconst event = this._state.get(computedTime);\n\t\t\tif (event && event.time > 0) {\n\t\t\t\tthis._tickOffset.cancel(event.time);\n\t\t\t\tthis._state.cancel(event.time);\n\t\t\t}\n\t\t}\n\t\tthis._state.cancel(computedTime);\n\t\tthis._state.setStateAtTime(\"stopped\", computedTime);\n\t\tthis.setTicksAtTime(0, computedTime);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Pause the clock. Pausing does not reset the tick counter.\n\t * @param time The time when the clock should stop.\n\t */\n\tpause(time: Time): this {\n\t\tconst computedTime = this.toSeconds(time);\n\t\tif (this._state.getValueAtTime(computedTime) === \"started\") {\n\t\t\tthis._state.setStateAtTime(\"paused\", computedTime);\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Cancel start/stop/pause and setTickAtTime events scheduled after the given time.\n\t * @param time When to clear the events after\n\t */\n\tcancel(time: Time): this {\n\t\ttime = this.toSeconds(time);\n\t\tthis._state.cancel(time);\n\t\tthis._tickOffset.cancel(time);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Get the elapsed ticks at the given time\n\t * @param  time  When to get the tick value\n\t * @return The number of ticks\n\t */\n\tgetTicksAtTime(time?: Time): Ticks {\n\t\tconst computedTime = this.toSeconds(time);\n\t\tconst stopEvent = this._state.getLastState(\"stopped\", computedTime) as StateTimelineEvent;\n\t\t// this event allows forEachBetween to iterate until the current time\n\t\tconst tmpEvent: StateTimelineEvent = { state: \"paused\", time: computedTime };\n\t\tthis._state.add(tmpEvent);\n\n\t\t// keep track of the previous offset event\n\t\tlet lastState = stopEvent;\n\t\tlet elapsedTicks = 0;\n\n\t\t// iterate through all the events since the last stop\n\t\tthis._state.forEachBetween(stopEvent.time, computedTime + this.sampleTime, e => {\n\t\t\tlet periodStartTime = lastState.time;\n\t\t\t// if there is an offset event in this period use that\n\t\t\tconst offsetEvent = this._tickOffset.get(e.time);\n\t\t\tif (offsetEvent && offsetEvent.time >= lastState.time) {\n\t\t\t\telapsedTicks = offsetEvent.ticks;\n\t\t\t\tperiodStartTime = offsetEvent.time;\n\t\t\t}\n\t\t\tif (lastState.state === \"started\" && e.state !== \"started\") {\n\t\t\t\telapsedTicks += this.frequency.getTicksAtTime(e.time) - this.frequency.getTicksAtTime(periodStartTime);\n\t\t\t}\n\t\t\tlastState = e;\n\t\t});\n\n\t\t// remove the temporary event\n\t\tthis._state.remove(tmpEvent);\n\n\t\t// return the ticks\n\t\treturn elapsedTicks;\n\t}\n\n\t/**\n\t * The number of times the callback was invoked. Starts counting at 0\n\t * and increments after the callback was invoked. Returns -1 when stopped.\n\t */\n\tget ticks(): Ticks {\n\t\treturn this.getTicksAtTime(this.now());\n\t}\n\tset ticks(t: Ticks) {\n\t\tthis.setTicksAtTime(t, this.now());\n\t}\n\n\t/**\n\t * The time since ticks=0 that the TickSource has been running. Accounts\n\t * for tempo curves\n\t */\n\tget seconds(): Seconds {\n\t\treturn this.getSecondsAtTime(this.now());\n\t}\n\tset seconds(s: Seconds) {\n\t\tconst now = this.now();\n\t\tconst ticks = this.frequency.timeToTicks(s, now);\n\t\tthis.setTicksAtTime(ticks, now);\n\t}\n\n\t/**\n\t * Return the elapsed seconds at the given time.\n\t * @param  time  When to get the elapsed seconds\n\t * @return  The number of elapsed seconds\n\t */\n\tgetSecondsAtTime(time: Time): Seconds {\n\t\ttime = this.toSeconds(time);\n\t\tconst stopEvent = this._state.getLastState(\"stopped\", time) as StateTimelineEvent;\n\t\t// this event allows forEachBetween to iterate until the current time\n\t\tconst tmpEvent: StateTimelineEvent = { state: \"paused\", time };\n\t\tthis._state.add(tmpEvent);\n\n\t\t// keep track of the previous offset event\n\t\tlet lastState = stopEvent;\n\t\tlet elapsedSeconds = 0;\n\n\t\t// iterate through all the events since the last stop\n\t\tthis._state.forEachBetween(stopEvent.time, time + this.sampleTime, e => {\n\t\t\tlet periodStartTime = lastState.time;\n\t\t\t// if there is an offset event in this period use that\n\t\t\tconst offsetEvent = this._tickOffset.get(e.time);\n\t\t\tif (offsetEvent && offsetEvent.time >= lastState.time) {\n\t\t\t\telapsedSeconds = offsetEvent.seconds;\n\t\t\t\tperiodStartTime = offsetEvent.time;\n\t\t\t}\n\t\t\tif (lastState.state === \"started\" && e.state !== \"started\") {\n\t\t\t\telapsedSeconds += e.time - periodStartTime;\n\t\t\t}\n\t\t\tlastState = e;\n\t\t});\n\n\t\t// remove the temporary event\n\t\tthis._state.remove(tmpEvent);\n\n\t\t// return the ticks\n\t\treturn elapsedSeconds;\n\t}\n\n\t/**\n\t * Set the clock's ticks at the given time.\n\t * @param  ticks The tick value to set\n\t * @param  time  When to set the tick value\n\t */\n\tsetTicksAtTime(ticks: Ticks, time: Time): this {\n\t\ttime = this.toSeconds(time);\n\t\tthis._tickOffset.cancel(time);\n\t\tthis._tickOffset.add({\n\t\t\tseconds: this.frequency.getDurationOfTicks(ticks, time),\n\t\t\tticks,\n\t\t\ttime,\n\t\t});\n\t\treturn this;\n\t}\n\n\t/**\n\t * Returns the scheduled state at the given time.\n\t * @param  time  The time to query.\n\t */\n\tgetStateAtTime(time: Time): PlaybackState {\n\t\ttime = this.toSeconds(time);\n\t\treturn this._state.getValueAtTime(time);\n\t}\n\n\t/**\n\t * Get the time of the given tick. The second argument\n\t * is when to test before. Since ticks can be set (with setTicksAtTime)\n\t * there may be multiple times for a given tick value.\n\t * @param  tick The tick number.\n\t * @param  before When to measure the tick value from.\n\t * @return The time of the tick\n\t */\n\tgetTimeOfTick(tick: Ticks, before = this.now()): Seconds {\n\t\tconst offset = this._tickOffset.get(before) as TickSourceOffsetEvent;\n\t\tconst event = this._state.get(before) as StateTimelineEvent;\n\t\tconst startTime = Math.max(offset.time, event.time);\n\t\tconst absoluteTicks = this.frequency.getTicksAtTime(startTime) + tick - offset.ticks;\n\t\treturn this.frequency.getTimeOfTick(absoluteTicks);\n\t}\n\n\t/**\n\t * Invoke the callback event at all scheduled ticks between the\n\t * start time and the end time\n\t * @param  startTime  The beginning of the search range\n\t * @param  endTime    The end of the search range\n\t * @param  callback   The callback to invoke with each tick\n\t */\n\tforEachTickBetween(startTime: number, endTime: number, callback: (when: Seconds, ticks: Ticks) => void): this {\n\t\t// only iterate through the sections where it is \"started\"\n\t\tlet lastStateEvent = this._state.get(startTime);\n\t\tthis._state.forEachBetween(startTime, endTime, event => {\n\t\t\tif (lastStateEvent && lastStateEvent.state === \"started\" && event.state !== \"started\") {\n\t\t\t\tthis.forEachTickBetween(Math.max(lastStateEvent.time, startTime), event.time - this.sampleTime, callback);\n\t\t\t}\n\t\t\tlastStateEvent = event;\n\t\t});\n\n\t\tlet error: Error | null = null;\n\n\t\tif (lastStateEvent && lastStateEvent.state === \"started\") {\n\t\t\tconst maxStartTime = Math.max(lastStateEvent.time, startTime);\n\t\t\t// figure out the difference between the frequency ticks and the\n\t\t\tconst startTicks = this.frequency.getTicksAtTime(maxStartTime);\n\t\t\tconst ticksAtStart = this.frequency.getTicksAtTime(lastStateEvent.time);\n\t\t\tconst diff = startTicks - ticksAtStart;\n\t\t\tlet offset = Math.ceil(diff) - diff;\n\t\t\t// guard against floating point issues\n\t\t\toffset = EQ(offset, 1) ? 0 : offset;\n\t\t\tlet nextTickTime = this.frequency.getTimeOfTick(startTicks + offset);\n\t\t\twhile (nextTickTime < endTime) {\n\t\t\t\ttry {\n\t\t\t\t\tcallback(nextTickTime, Math.round(this.getTicksAtTime(nextTickTime)));\n\t\t\t\t} catch (e) {\n\t\t\t\t\terror = e;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tnextTickTime += this.frequency.getDurationOfTicks(1, nextTickTime);\n\t\t\t}\n\t\t}\n\n\t\tif (error) {\n\t\t\tthrow error;\n\t\t}\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Clean up\n\t */\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._state.dispose();\n\t\tthis._tickOffset.dispose();\n\t\tthis.frequency.dispose();\n\t\treturn this;\n\t}\n}\n","import { ToneWithContext, ToneWithContextOptions } from \"../context/ToneWithContext\";\nimport { Frequency, Hertz, Seconds, Ticks, Time } from \"../type/Units\";\nimport { optionsFromArguments } from \"../util/Defaults\";\nimport { Emitter } from \"../util/Emitter\";\nimport { noOp, readOnly } from \"../util/Interface\";\nimport { PlaybackState, StateTimeline } from \"../util/StateTimeline\";\nimport { TickSignal } from \"./TickSignal\";\nimport { TickSource } from \"./TickSource\";\nimport { assertContextRunning } from \"../util/Debug\";\n\ntype ClockCallback = (time: Seconds, ticks?: Ticks) => void;\n\ninterface ClockOptions extends ToneWithContextOptions {\n\tfrequency: Hertz;\n\tcallback: ClockCallback;\n\tunits: \"hertz\" | \"bpm\";\n}\n\ntype ClockEvent = \"start\" | \"stop\" | \"pause\";\n\n/**\n * A sample accurate clock which provides a callback at the given rate.\n * While the callback is not sample-accurate (it is still susceptible to\n * loose JS timing), the time passed in as the argument to the callback\n * is precise. For most applications, it is better to use Tone.Transport\n * instead of the Clock by itself since you can synchronize multiple callbacks.\n * @example\n * // the callback will be invoked approximately once a second\n * // and will print the time exactly once a second apart.\n * const clock = new Tone.Clock(time => {\n * \tconsole.log(time);\n * }, 1);\n * clock.start();\n * @category Core\n */\nexport class Clock<TypeName extends \"bpm\" | \"hertz\" = \"hertz\">\n\textends ToneWithContext<ClockOptions> implements Emitter<ClockEvent> {\n\n\treadonly name: string = \"Clock\";\n\n\t/**\n\t * The callback function to invoke at the scheduled tick.\n\t */\n\tcallback: ClockCallback = noOp;\n\n\t/**\n\t * The tick counter\n\t */\n\tprivate _tickSource: TickSource<TypeName>;\n\n\t/**\n\t * The last time the loop callback was invoked\n\t */\n\tprivate _lastUpdate = 0;\n\n\t/**\n\t * Keep track of the playback state\n\t */\n\tprivate _state: StateTimeline = new StateTimeline(\"stopped\");\n\n\t/**\n\t * Context bound reference to the _loop method\n\t * This is necessary to remove the event in the end.\n\t */\n\tprivate _boundLoop: () => void = this._loop.bind(this);\n\n\t/**\n\t * The rate the callback function should be invoked.\n\t */\n\tfrequency: TickSignal<TypeName>;\n\n\t/**\n\t * @param callback The callback to be invoked with the time of the audio event\n\t * @param frequency The rate of the callback\n\t */\n\tconstructor(callback?: ClockCallback, frequency?: Frequency);\n\tconstructor(options: Partial<ClockOptions>);\n\tconstructor() {\n\n\t\tsuper(optionsFromArguments(Clock.getDefaults(), arguments, [\"callback\", \"frequency\"]));\n\t\tconst options = optionsFromArguments(Clock.getDefaults(), arguments, [\"callback\", \"frequency\"]);\n\n\t\tthis.callback = options.callback;\n\t\tthis._tickSource = new TickSource({\n\t\t\tcontext: this.context,\n\t\t\tfrequency: options.frequency,\n\t\t\tunits: options.units,\n\t\t});\n\t\tthis._lastUpdate = 0;\n\t\tthis.frequency = this._tickSource.frequency;\n\t\treadOnly(this, \"frequency\");\n\n\t\t// add an initial state\n\t\tthis._state.setStateAtTime(\"stopped\", 0);\n\n\t\t// bind a callback to the worker thread\n\t\tthis.context.on(\"tick\", this._boundLoop);\n\t}\n\n\tstatic getDefaults(): ClockOptions {\n\t\treturn Object.assign(ToneWithContext.getDefaults(), {\n\t\t\tcallback: noOp as ClockCallback,\n\t\t\tfrequency: 1,\n\t\t\tunits: \"hertz\",\n\t\t}) as ClockOptions;\n\t}\n\n\t/**\n\t * Returns the playback state of the source, either \"started\", \"stopped\" or \"paused\".\n\t */\n\tget state(): PlaybackState {\n\t\treturn this._state.getValueAtTime(this.now());\n\t}\n\n\t/**\n\t * Start the clock at the given time. Optionally pass in an offset\n\t * of where to start the tick counter from.\n\t * @param  time    The time the clock should start\n\t * @param offset  Where the tick counter starts counting from.\n\t */\n\tstart(time?: Time, offset?: Ticks): this {\n\t\t// make sure the context is running\n\t\tassertContextRunning(this.context);\n\t\t// start the loop\n\t\tconst computedTime = this.toSeconds(time);\n\t\tthis.log(\"start\", computedTime);\n\t\tif (this._state.getValueAtTime(computedTime) !== \"started\") {\n\t\t\tthis._state.setStateAtTime(\"started\", computedTime);\n\t\t\tthis._tickSource.start(computedTime, offset);\n\t\t\tif (computedTime < this._lastUpdate) {\n\t\t\t\tthis.emit(\"start\", computedTime, offset);\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Stop the clock. Stopping the clock resets the tick counter to 0.\n\t * @param time The time when the clock should stop.\n\t * @example\n\t * const clock = new Tone.Clock(time => {\n\t * \tconsole.log(time);\n\t * }, 1);\n\t * clock.start();\n\t * // stop the clock after 10 seconds\n\t * clock.stop(\"+10\");\n\t */\n\tstop(time?: Time): this {\n\t\tconst computedTime = this.toSeconds(time);\n\t\tthis.log(\"stop\", computedTime);\n\t\tthis._state.cancel(computedTime);\n\t\tthis._state.setStateAtTime(\"stopped\", computedTime);\n\t\tthis._tickSource.stop(computedTime);\n\t\tif (computedTime < this._lastUpdate) {\n\t\t\tthis.emit(\"stop\", computedTime);\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Pause the clock. Pausing does not reset the tick counter.\n\t * @param time The time when the clock should stop.\n\t */\n\tpause(time?: Time): this {\n\t\tconst computedTime = this.toSeconds(time);\n\t\tif (this._state.getValueAtTime(computedTime) === \"started\") {\n\t\t\tthis._state.setStateAtTime(\"paused\", computedTime);\n\t\t\tthis._tickSource.pause(computedTime);\n\t\t\tif (computedTime < this._lastUpdate) {\n\t\t\t\tthis.emit(\"pause\", computedTime);\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * The number of times the callback was invoked. Starts counting at 0\n\t * and increments after the callback was invoked.\n\t */\n\tget ticks(): Ticks {\n\t\treturn Math.ceil(this.getTicksAtTime(this.now()));\n\t}\n\tset ticks(t: Ticks) {\n\t\tthis._tickSource.ticks = t;\n\t}\n\n\t/**\n\t * The time since ticks=0 that the Clock has been running. Accounts for tempo curves\n\t */\n\tget seconds(): Seconds {\n\t\treturn this._tickSource.seconds;\n\t}\n\tset seconds(s: Seconds) {\n\t\tthis._tickSource.seconds = s;\n\t}\n\n\t/**\n\t * Return the elapsed seconds at the given time.\n\t * @param  time  When to get the elapsed seconds\n\t * @return  The number of elapsed seconds\n\t */\n\tgetSecondsAtTime(time: Time): Seconds {\n\t\treturn this._tickSource.getSecondsAtTime(time);\n\t}\n\n\t/**\n\t * Set the clock's ticks at the given time.\n\t * @param  ticks The tick value to set\n\t * @param  time  When to set the tick value\n\t */\n\tsetTicksAtTime(ticks: Ticks, time: Time): this {\n\t\tthis._tickSource.setTicksAtTime(ticks, time);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Get the time of the given tick. The second argument\n\t * is when to test before. Since ticks can be set (with setTicksAtTime)\n\t * there may be multiple times for a given tick value.\n\t * @param  tick The tick number.\n\t * @param  before When to measure the tick value from.\n\t * @return The time of the tick\n\t */\n\tgetTimeOfTick(tick: Ticks, before = this.now()): Seconds {\n\t\treturn this._tickSource.getTimeOfTick(tick, before);\n\t}\n\n\t/**\n\t * Get the clock's ticks at the given time.\n\t * @param  time  When to get the tick value\n\t * @return The tick value at the given time.\n\t */\n\tgetTicksAtTime(time?: Time): Ticks {\n\t\treturn this._tickSource.getTicksAtTime(time);\n\t}\n\n\t/**\n\t * Get the time of the next tick\n\t * @param  offset The tick number.\n\t */\n\tnextTickTime(offset: Ticks, when: Time): Seconds {\n\t\tconst computedTime = this.toSeconds(when);\n\t\tconst currentTick = this.getTicksAtTime(computedTime);\n\t\treturn this._tickSource.getTimeOfTick(currentTick + offset, computedTime);\n\t}\n\n\t/**\n\t * The scheduling loop.\n\t */\n\tprivate _loop(): void {\n\n\t\tconst startTime = this._lastUpdate;\n\t\tconst endTime = this.now();\n\t\tthis._lastUpdate = endTime;\n\t\tthis.log(\"loop\", startTime, endTime);\n\n\t\tif (startTime !== endTime) {\n\t\t\t// the state change events\n\t\t\tthis._state.forEachBetween(startTime, endTime, e => {\n\t\t\t\tswitch (e.state) {\n\t\t\t\t\tcase \"started\":\n\t\t\t\t\t\tconst offset = this._tickSource.getTicksAtTime(e.time);\n\t\t\t\t\t\tthis.emit(\"start\", e.time, offset);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"stopped\":\n\t\t\t\t\t\tif (e.time !== 0) {\n\t\t\t\t\t\t\tthis.emit(\"stop\", e.time);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"paused\":\n\t\t\t\t\t\tthis.emit(\"pause\", e.time);\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t});\n\t\t\t// the tick callbacks\n\t\t\tthis._tickSource.forEachTickBetween(startTime, endTime, (time, ticks) => {\n\t\t\t\tthis.callback(time, ticks);\n\t\t\t});\n\t\t}\n\t}\n\n\t/**\n\t * Returns the scheduled state at the given time.\n\t * @param  time  The time to query.\n\t * @return  The name of the state input in setStateAtTime.\n\t * @example\n\t * const clock = new Tone.Clock();\n\t * clock.start(\"+0.1\");\n\t * clock.getStateAtTime(\"+0.1\"); // returns \"started\"\n\t */\n\tgetStateAtTime(time: Time): PlaybackState {\n\t\tconst computedTime = this.toSeconds(time);\n\t\treturn this._state.getValueAtTime(computedTime);\n\t}\n\n\t/**\n\t * Clean up\n\t */\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis.context.off(\"tick\", this._boundLoop);\n\t\tthis._tickSource.dispose();\n\t\tthis._state.dispose();\n\t\treturn this;\n\t}\n\n\t//-------------------------------------\n\t// EMITTER MIXIN TO SATISFY COMPILER\n\t//-------------------------------------\n\n\ton!: (event: ClockEvent, callback: (...args: any[]) => void) => this;\n\tonce!: (event: ClockEvent, callback: (...args: any[]) => void) => this;\n\toff!: (event: ClockEvent, callback?: ((...args: any[]) => void) | undefined) => this;\n\temit!: (event: any, ...args: any[]) => this;\n}\n\nEmitter.mixin(Clock);\n","import { Param } from \"../context/Param\";\nimport { Seconds, Time } from \"../type/Units\";\nimport { optionsFromArguments } from \"../util/Defaults\";\nimport { readOnly } from \"../util/Interface\";\nimport { ToneAudioNode, ToneAudioNodeOptions } from \"./ToneAudioNode\";\n\nexport interface DelayOptions extends ToneAudioNodeOptions {\n\tdelayTime: Time;\n\tmaxDelay: Time;\n}\n\n/**\n * Wrapper around Web Audio's native [DelayNode](http://webaudio.github.io/web-audio-api/#the-delaynode-interface).\n * @category Core\n * @example\n * return Tone.Offline(() => {\n * \tconst delay = new Tone.Delay(0.1).toDestination();\n * \t// connect the signal to both the delay and the destination\n * \tconst pulse = new Tone.PulseOscillator().connect(delay).toDestination();\n * \t// start and stop the pulse\n * \tpulse.start(0).stop(0.01);\n * }, 0.5, 1);\n */\nexport class Delay extends ToneAudioNode<DelayOptions> {\n\n\treadonly name: string = \"Delay\";\n\n\t/**\n\t * Private holder of the max delay time\n\t */\n\tprivate _maxDelay: Seconds;\n\n\t/**\n\t * The amount of time the incoming signal is delayed.\n\t * @example\n\t * const delay = new Tone.Delay().toDestination();\n\t * // modulate the delayTime between 0.1 and 1 seconds\n\t * const delayLFO = new Tone.LFO(0.5, 0.1, 1).start().connect(delay.delayTime);\n\t * const pulse = new Tone.PulseOscillator().connect(delay).start();\n\t * // the change in delayTime causes the pitch to go up and down\n\t */\n\treadonly delayTime: Param<\"time\">;\n\n\t/**\n\t * Private reference to the internal DelayNode\n\t */\n\tprivate _delayNode: DelayNode;\n\treadonly input: DelayNode;\n\treadonly output: DelayNode;\n\n\t/**\n\t * @param delayTime The delay applied to the incoming signal.\n\t * @param maxDelay The maximum delay time.\n\t */\n\tconstructor(delayTime?: Time, maxDelay?: Time);\n\tconstructor(options?: Partial<DelayOptions>);\n\tconstructor() {\n\t\tsuper(optionsFromArguments(Delay.getDefaults(), arguments, [\"delayTime\", \"maxDelay\"]));\n\n\t\tconst options = optionsFromArguments(Delay.getDefaults(), arguments, [\"delayTime\", \"maxDelay\"]);\n\n\t\tconst maxDelayInSeconds = this.toSeconds(options.maxDelay);\n\t\tthis._maxDelay = Math.max(maxDelayInSeconds, this.toSeconds(options.delayTime));\n\n\t\tthis._delayNode = this.input = this.output = this.context.createDelay(maxDelayInSeconds);\n\n\t\tthis.delayTime = new Param({\n\t\t\tcontext: this.context,\n\t\t\tparam: this._delayNode.delayTime,\n\t\t\tunits: \"time\",\n\t\t\tvalue: options.delayTime,\n\t\t\tminValue: 0,\n\t\t\tmaxValue: this.maxDelay,\n\t\t});\n\n\t\treadOnly(this, \"delayTime\");\n\t}\n\n\tstatic getDefaults(): DelayOptions {\n\t\treturn Object.assign(ToneAudioNode.getDefaults(), {\n\t\t\tdelayTime: 0,\n\t\t\tmaxDelay: 1,\n\t\t});\n\t}\n\n\t/**\n\t * The maximum delay time. This cannot be changed after\n\t * the value is passed into the constructor.\n\t */\n\tget maxDelay(): Seconds {\n\t\treturn this._maxDelay;\n\t}\n\n\t/**\n\t * Clean up.\n\t */\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._delayNode.disconnect();\n\t\tthis.delayTime.dispose();\n\t\treturn this;\n\t}\n}\n","import { getContext, setContext } from \"../Global\";\nimport { Seconds } from \"../type/Units\";\nimport { OfflineContext } from \"./OfflineContext\";\nimport { ToneAudioBuffer } from \"./ToneAudioBuffer\";\n\n/**\n * Generate a buffer by rendering all of the Tone.js code within the callback using the OfflineAudioContext.\n * The OfflineAudioContext is capable of rendering much faster than real time in many cases.\n * The callback function also passes in an offline instance of [[Context]] which can be used\n * to schedule events along the Transport. \n * @param  callback  All Tone.js nodes which are created and scheduled within this callback are recorded into the output Buffer.\n * @param  duration     the amount of time to record for.\n * @return  The promise which is invoked with the ToneAudioBuffer of the recorded output.\n * @example\n * // render 2 seconds of the oscillator\n * Tone.Offline(() => {\n * \t// only nodes created in this callback will be recorded\n * \tconst oscillator = new Tone.Oscillator().toDestination().start(0);\n * }, 2).then((buffer) => {\n * \t// do something with the output buffer\n * \tconsole.log(buffer);\n * });\n * @example\n * // can also schedule events along the Transport\n * // using the passed in Offline Transport\n * Tone.Offline(({ transport }) => {\n * \tconst osc = new Tone.Oscillator().toDestination();\n * \ttransport.schedule(time => {\n * \t\tosc.start(time).stop(time + 0.1);\n * \t}, 1);\n * \t// make sure to start the transport\n * \ttransport.start(0.2);\n * }, 4).then((buffer) => {\n * \t// do something with the output buffer\n * \tconsole.log(buffer);\n * });\n * @category Core\n */\nexport async function Offline(\n\tcallback: (context: OfflineContext) => Promise<void> | void,\n\tduration: Seconds,\n\tchannels = 2,\n\tsampleRate: number = getContext().sampleRate,\n): Promise<ToneAudioBuffer> {\n\t// set the OfflineAudioContext based on the current context\n\tconst originalContext = getContext();\n\n\tconst context = new OfflineContext(channels, duration, sampleRate);\n\tsetContext(context);\n\n\t// invoke the callback/scheduling\n\tawait callback(context);\n\n\t// then render the audio\n\tconst bufferPromise = context.render();\n\n\t// return the original AudioContext\n\tsetContext(originalContext);\n\n\t// await the rendering\n\tconst buffer = await bufferPromise;\n\n\t// return the audio\n\treturn new ToneAudioBuffer(buffer);\n}\n","import { Tone } from \"../Tone\";\nimport { optionsFromArguments } from \"../util/Defaults\";\nimport { noOp } from \"../util/Interface\";\nimport { isString } from \"../util/TypeCheck\";\nimport { ToneAudioBuffer } from \"./ToneAudioBuffer\";\nimport { assert } from \"../util/Debug\";\n\nexport interface ToneAudioBuffersUrlMap {\n\t[name: string]: string | AudioBuffer | ToneAudioBuffer;\n\t[name: number]: string | AudioBuffer | ToneAudioBuffer;\n}\n\ninterface ToneAudioBuffersOptions {\n\turls: ToneAudioBuffersUrlMap;\n\tonload: () => void;\n\tonerror?: (error: Error) => void;\n\tbaseUrl: string;\n}\n\n/**\n * A data structure for holding multiple buffers in a Map-like datastructure.\n *\n * @example\n * const pianoSamples = new Tone.ToneAudioBuffers({\n * \tA1: \"https://tonejs.github.io/audio/casio/A1.mp3\",\n * \tA2: \"https://tonejs.github.io/audio/casio/A2.mp3\",\n * }, () => {\n * \tconst player = new Tone.Player().toDestination();\n * \t// play one of the samples when they all load\n * \tplayer.buffer = pianoSamples.get(\"A2\");\n * \tplayer.start();\n * });\n * @example\n * // To pass in additional parameters in the second parameter\n * const buffers = new Tone.ToneAudioBuffers({\n * \t urls: {\n * \t\t A1: \"A1.mp3\",\n * \t\t A2: \"A2.mp3\",\n * \t },\n * \t onload: () => console.log(\"loaded\"),\n * \t baseUrl: \"https://tonejs.github.io/audio/casio/\"\n * });\n * @category Core\n */\nexport class ToneAudioBuffers extends Tone {\n\n\treadonly name: string = \"ToneAudioBuffers\";\n\n\t/**\n\t * All of the buffers\n\t */\n\tprivate _buffers: Map<string, ToneAudioBuffer> = new Map();\n\n\t/**\n\t * A path which is prefixed before every url.\n\t */\n\tbaseUrl: string;\n\n\t/**\n\t * Keep track of the number of loaded buffers\n\t */\n\tprivate _loadingCount = 0;\n\n\t/**\n\t * @param  urls  An object literal or array of urls to load.\n\t * @param onload  The callback to invoke when the buffers are loaded.\n\t * @param baseUrl A prefix url to add before all the urls\n\t */\n\tconstructor(\n\t\turls?: ToneAudioBuffersUrlMap,\n\t\tonload?: () => void,\n\t\tbaseUrl?: string,\n\t);\n\tconstructor(options?: Partial<ToneAudioBuffersOptions>);\n\tconstructor() {\n\n\t\tsuper();\n\t\tconst options = optionsFromArguments(\n\t\t\tToneAudioBuffers.getDefaults(), arguments, [\"urls\", \"onload\", \"baseUrl\"], \"urls\",\n\t\t);\n\n\t\tthis.baseUrl = options.baseUrl;\n\t\t// add each one\n\t\tObject.keys(options.urls).forEach(name => {\n\t\t\tthis._loadingCount++;\n\t\t\tconst url = options.urls[name];\n\t\t\tthis.add(name, url, this._bufferLoaded.bind(this, options.onload), options.onerror);\n\t\t});\n\n\t}\n\n\tstatic getDefaults(): ToneAudioBuffersOptions {\n\t\treturn {\n\t\t\tbaseUrl: \"\",\n\t\t\tonerror: noOp,\n\t\t\tonload: noOp,\n\t\t\turls: {},\n\t\t};\n\t}\n\n\t/**\n\t * True if the buffers object has a buffer by that name.\n\t * @param  name  The key or index of the buffer.\n\t */\n\thas(name: string | number): boolean {\n\t\treturn this._buffers.has(name.toString());\n\t}\n\n\t/**\n\t * Get a buffer by name. If an array was loaded,\n\t * then use the array index.\n\t * @param  name  The key or index of the buffer.\n\t */\n\tget(name: string | number): ToneAudioBuffer {\n\t\tassert(this.has(name), `ToneAudioBuffers has no buffer named: ${name}`);\n\t\treturn this._buffers.get(name.toString()) as ToneAudioBuffer;\n\t}\n\n\t/**\n\t * A buffer was loaded. decrement the counter.\n\t */\n\tprivate _bufferLoaded(callback: () => void): void {\n\t\tthis._loadingCount--;\n\t\tif (this._loadingCount === 0 && callback) {\n\t\t\tcallback();\n\t\t}\n\t}\n\n\t/**\n\t * If the buffers are loaded or not\n\t */\n\tget loaded(): boolean {\n\t\treturn Array.from(this._buffers).every(([_, buffer]) => buffer.loaded);\n\t}\n\n\t/**\n\t * Add a buffer by name and url to the Buffers\n\t * @param  name      A unique name to give the buffer\n\t * @param  url  Either the url of the bufer, or a buffer which will be added with the given name.\n\t * @param  callback  The callback to invoke when the url is loaded.\n\t * @param  onerror  Invoked if the buffer can't be loaded\n\t */\n\tadd(\n\t\tname: string | number,\n\t\turl: string | AudioBuffer | ToneAudioBuffer,\n\t\tcallback: () => void = noOp,\n\t\tonerror: (e: Error) => void = noOp,\n\t): this {\n\t\tif (isString(url)) {\n\t\t\tthis._buffers.set(name.toString(), new ToneAudioBuffer(this.baseUrl + url, callback, onerror));\n\t\t} else {\n\t\t\tthis._buffers.set(name.toString(), new ToneAudioBuffer(url, callback, onerror));\n\t\t}\n\t\treturn this;\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._buffers.forEach(buffer => buffer.dispose());\n\t\tthis._buffers.clear();\n\t\treturn this;\n\t}\n}\n","import { getContext } from \"../Global\";\nimport { ftom, mtof } from \"./Conversions\";\nimport { FrequencyClass, FrequencyUnit } from \"./Frequency\";\nimport { TimeValue } from \"./TimeBase\";\nimport { Hertz, Interval, MidiNote, Seconds, Ticks } from \"./Units\";\n\n/**\n * Midi is a primitive type for encoding Time values.\n * Midi can be constructed with or without the `new` keyword. Midi can be passed\n * into the parameter of any method which takes time as an argument.\n * @category Unit\n */\nexport class MidiClass extends FrequencyClass<MidiNote> {\n\n\treadonly name: string = \"MidiClass\";\n\n\treadonly defaultUnits = \"midi\";\n\n\t/**\n\t * Returns the value of a frequency in the current units\n\t */\n\tprotected _frequencyToUnits(freq: Hertz): MidiNote {\n\t\treturn ftom(super._frequencyToUnits(freq));\n\t}\n\n\t/**\n\t * Returns the value of a tick in the current time units\n\t */\n\tprotected _ticksToUnits(ticks: Ticks): MidiNote {\n\t\treturn ftom(super._ticksToUnits(ticks));\n\t}\n\n\t/**\n\t * Return the value of the beats in the current units\n\t */\n\tprotected _beatsToUnits(beats: number): MidiNote {\n\t\treturn ftom(super._beatsToUnits(beats));\n\t}\n\n\t/**\n\t * Returns the value of a second in the current units\n\t */\n\tprotected _secondsToUnits(seconds: Seconds): MidiNote {\n\t\treturn ftom(super._secondsToUnits(seconds));\n\t}\n\n\t/**\n\t * Return the value of the frequency as a MIDI note\n\t * @example\n\t * Tone.Midi(60).toMidi(); // 60\n\t */\n\ttoMidi(): MidiNote {\n\t\treturn this.valueOf();\n\t}\n\n\t/**\n\t * Return the value of the frequency as a MIDI note\n\t * @example\n\t * Tone.Midi(60).toFrequency(); // 261.6255653005986\n\t */\n\ttoFrequency(): Hertz {\n\t\treturn mtof(this.toMidi());\n\t}\n\n\t/**\n\t * Transposes the frequency by the given number of semitones.\n\t * @return A new transposed MidiClass\n\t * @example\n\t * Tone.Midi(\"A4\").transpose(3); // \"C5\"\n\t */\n\ttranspose(interval: Interval): MidiClass {\n\t\treturn new MidiClass(this.context, this.toMidi() + interval);\n\t}\n}\n\n/**\n * Convert a value into a FrequencyClass object.\n * @category Unit\n */\nexport function Midi(value?: TimeValue, units?: FrequencyUnit): MidiClass {\n\treturn new MidiClass(getContext(), value, units);\n}\n","import { getContext } from \"../Global\";\nimport { TimeBaseUnit, TimeValue } from \"./TimeBase\";\nimport { TransportTimeClass } from \"./TransportTime\";\nimport { Seconds, Ticks } from \"./Units\";\n\n/**\n * Ticks is a primitive type for encoding Time values.\n * Ticks can be constructed with or without the `new` keyword. Ticks can be passed\n * into the parameter of any method which takes time as an argument.\n * @example\n * const t = Tone.Ticks(\"4n\"); // a quarter note as ticks\n * @category Unit\n */\nexport class TicksClass extends TransportTimeClass<Ticks> {\n\n\treadonly name: string = \"Ticks\";\n\n\treadonly defaultUnits: TimeBaseUnit = \"i\";\n\n\t/**\n\t * Get the current time in the given units\n\t */\n\tprotected _now(): Ticks {\n\t\treturn this.context.transport.ticks;\n\t}\n\n\t/**\n\t * Return the value of the beats in the current units\n\t */\n\tprotected _beatsToUnits(beats: number): Ticks {\n\t\treturn this._getPPQ() * beats;\n\t}\n\n\t/**\n\t * Returns the value of a second in the current units\n\t */\n\tprotected _secondsToUnits(seconds: Seconds): Ticks {\n\t\treturn Math.floor(seconds / (60 / this._getBpm()) * this._getPPQ());\n\t}\n\n\t/**\n\t * Returns the value of a tick in the current time units\n\t */\n\tprotected _ticksToUnits(ticks: Ticks): Ticks {\n\t\treturn ticks;\n\t}\n\n\t/**\n\t * Return the time in ticks\n\t */\n\ttoTicks(): Ticks {\n\t\treturn this.valueOf() as Ticks;\n\t}\n\n\t/**\n\t * Return the time in seconds\n\t */\n\ttoSeconds(): Seconds {\n\t\treturn (this.valueOf() / this._getPPQ()) * (60 / this._getBpm());\n\t}\n}\n\n/**\n * Convert a time representation to ticks\n * @category Unit\n */\nexport function Ticks(value?: TimeValue, units?: TimeBaseUnit): TicksClass {\n\treturn new TicksClass(getContext(), value, units);\n}\n","import { ToneWithContext, ToneWithContextOptions } from \"../context/ToneWithContext\";\nimport { Seconds, Time } from \"../type/Units\";\nimport { Timeline, TimelineEvent } from \"./Timeline\";\nimport { onContextClose, onContextInit } from \"../context/ContextInitialization\";\n\ninterface DrawEvent extends TimelineEvent {\n\tcallback: () => void;\n}\n\n/**\n * Draw is useful for synchronizing visuals and audio events.\n * Callbacks from Tone.Transport or any of the Tone.Event classes\n * always happen _before_ the scheduled time and are not synchronized\n * to the animation frame so they are not good for triggering tightly\n * synchronized visuals and sound. Draw makes it easy to schedule\n * callbacks using the AudioContext time and uses requestAnimationFrame.\n * @example\n * Tone.Transport.schedule((time) => {\n * \t// use the time argument to schedule a callback with Draw\n * \tTone.Draw.schedule(() => {\n * \t\t// do drawing or DOM manipulation here\n * \t\tconsole.log(time);\n * \t}, time);\n * }, \"+0.5\");\n * Tone.Transport.start();\n * @category Core\n */\nexport class Draw extends ToneWithContext<ToneWithContextOptions> {\n\n\treadonly name: string = \"Draw\";\n\n\t/**\n\t * The duration after which events are not invoked.\n\t */\n\texpiration: Seconds = 0.25;\n\n\t/**\n\t * The amount of time before the scheduled time\n\t * that the callback can be invoked. Default is\n\t * half the time of an animation frame (0.008 seconds).\n\t */\n\tanticipation: Seconds = 0.008;\n\n\t/**\n\t * All of the events.\n\t */\n\tprivate _events: Timeline<DrawEvent> = new Timeline();\n\n\t/**\n\t * The draw loop\n\t */\n\tprivate _boundDrawLoop = this._drawLoop.bind(this);\n\n\t/**\n\t * The animation frame id\n\t */\n\tprivate _animationFrame = -1;\n\n\t/**\n\t * Schedule a function at the given time to be invoked\n\t * on the nearest animation frame.\n\t * @param  callback  Callback is invoked at the given time.\n\t * @param  time      The time relative to the AudioContext time to invoke the callback.\n\t * @example\n\t * Tone.Transport.scheduleRepeat(time => {\n\t * \tTone.Draw.schedule(() => console.log(time), time);\n\t * }, 1);\n\t * Tone.Transport.start();\n\t */\n\tschedule(callback: () => void, time: Time): this {\n\t\tthis._events.add({\n\t\t\tcallback,\n\t\t\ttime: this.toSeconds(time),\n\t\t});\n\t\t// start the draw loop on the first event\n\t\tif (this._events.length === 1) {\n\t\t\tthis._animationFrame = requestAnimationFrame(this._boundDrawLoop);\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Cancel events scheduled after the given time\n\t * @param  after  Time after which scheduled events will be removed from the scheduling timeline.\n\t */\n\tcancel(after?: Time): this {\n\t\tthis._events.cancel(this.toSeconds(after));\n\t\treturn this;\n\t}\n\n\t/**\n\t * The draw loop\n\t */\n\tprivate _drawLoop(): void {\n\t\tconst now = this.context.currentTime;\n\t\twhile (this._events.length && (this._events.peek() as DrawEvent).time - this.anticipation <= now) {\n\t\t\tconst event = this._events.shift();\n\t\t\tif (event && now - event.time <= this.expiration) {\n\t\t\t\tevent.callback();\n\t\t\t}\n\t\t}\n\t\tif (this._events.length > 0) {\n\t\t\tthis._animationFrame = requestAnimationFrame(this._boundDrawLoop);\n\t\t}\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._events.dispose();\n\t\tcancelAnimationFrame(this._animationFrame);\n\t\treturn this;\n\t}\n}\n\n//-------------------------------------\n// \tINITIALIZATION\n//-------------------------------------\n\nonContextInit(context => {\n\tcontext.draw = new Draw({ context });\n});\n\nonContextClose(context => {\n\tcontext.draw.dispose();\n});\n","import { Tone } from \"../Tone\";\nimport { isDefined } from \"./TypeCheck\";\nimport { assert } from \"./Debug\";\n\n/**\n * An IntervalTimeline event must have a time and duration\n */\nexport interface IntervalTimelineEvent {\n\ttime: number;\n\tduration: number;\n\t[propName: string]: any;\n}\n\ntype IteratorCallback = (event: IntervalTimelineEvent) => void;\n\n/**\n * Similar to Tone.Timeline, but all events represent\n * intervals with both \"time\" and \"duration\" times. The\n * events are placed in a tree structure optimized\n * for querying an intersection point with the timeline\n * events. Internally uses an [Interval Tree](https://en.wikipedia.org/wiki/Interval_tree)\n * to represent the data.\n */\nexport class IntervalTimeline extends Tone {\n\n\treadonly name: string = \"IntervalTimeline\";\n\n\t/**\n\t * The root node of the inteval tree\n\t */\n\tprivate _root: IntervalNode | null = null;\n\n\t/**\n\t * Keep track of the length of the timeline.\n\t */\n\tprivate _length = 0;\n\n\t/**\n\t * The event to add to the timeline. All events must\n\t * have a time and duration value\n\t * @param  event  The event to add to the timeline\n\t */\n\tadd(event: IntervalTimelineEvent): this {\n\t\tassert(isDefined(event.time), \"Events must have a time property\");\n\t\tassert(isDefined(event.duration), \"Events must have a duration parameter\");\n\n\t\tevent.time = event.time.valueOf();\n\t\tlet node: IntervalNode | null = new IntervalNode(event.time, event.time + event.duration, event);\n\t\tif (this._root === null) {\n\t\t\tthis._root = node;\n\t\t} else {\n\t\t\tthis._root.insert(node);\n\t\t}\n\t\tthis._length++;\n\t\t// Restructure tree to be balanced\n\t\twhile (node !== null) {\n\t\t\tnode.updateHeight();\n\t\t\tnode.updateMax();\n\t\t\tthis._rebalance(node);\n\t\t\tnode = node.parent;\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Remove an event from the timeline.\n\t * @param  event  The event to remove from the timeline\n\t */\n\tremove(event: IntervalTimelineEvent): this {\n\t\tif (this._root !== null) {\n\t\t\tconst results: IntervalNode[] = [];\n\t\t\tthis._root.search(event.time, results);\n\t\t\tfor (const node of results) {\n\t\t\t\tif (node.event === event) {\n\t\t\t\t\tthis._removeNode(node);\n\t\t\t\t\tthis._length--;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * The number of items in the timeline.\n\t * @readOnly\n\t */\n\tget length(): number {\n\t\treturn this._length;\n\t}\n\n\t/**\n\t * Remove events whose time time is after the given time\n\t * @param  after  The time to query.\n\t */\n\tcancel(after: number): this {\n\t\tthis.forEachFrom(after, event => this.remove(event));\n\t\treturn this;\n\t}\n\n\t/**\n\t * Set the root node as the given node\n\t */\n\tprivate _setRoot(node: IntervalNode | null): void {\n\t\tthis._root = node;\n\t\tif (this._root !== null) {\n\t\t\tthis._root.parent = null;\n\t\t}\n\t}\n\n\t/**\n\t * Replace the references to the node in the node's parent\n\t * with the replacement node.\n\t */\n\tprivate _replaceNodeInParent(node: IntervalNode, replacement: IntervalNode | null): void {\n\t\tif (node.parent !== null) {\n\t\t\tif (node.isLeftChild()) {\n\t\t\t\tnode.parent.left = replacement;\n\t\t\t} else {\n\t\t\t\tnode.parent.right = replacement;\n\t\t\t}\n\t\t\tthis._rebalance(node.parent);\n\t\t} else {\n\t\t\tthis._setRoot(replacement);\n\t\t}\n\t}\n\n\t/**\n\t * Remove the node from the tree and replace it with\n\t * a successor which follows the schema.\n\t */\n\tprivate _removeNode(node: IntervalNode): void {\n\t\tif (node.left === null && node.right === null) {\n\t\t\tthis._replaceNodeInParent(node, null);\n\t\t} else if (node.right === null) {\n\t\t\tthis._replaceNodeInParent(node, node.left);\n\t\t} else if (node.left === null) {\n\t\t\tthis._replaceNodeInParent(node, node.right);\n\t\t} else {\n\t\t\tconst balance = node.getBalance();\n\t\t\tlet replacement: IntervalNode;\n\t\t\tlet temp: IntervalNode | null = null;\n\t\t\tif (balance > 0) {\n\t\t\t\tif (node.left.right === null) {\n\t\t\t\t\treplacement = node.left;\n\t\t\t\t\treplacement.right = node.right;\n\t\t\t\t\ttemp = replacement;\n\t\t\t\t} else {\n\t\t\t\t\treplacement = node.left.right;\n\t\t\t\t\twhile (replacement.right !== null) {\n\t\t\t\t\t\treplacement = replacement.right;\n\t\t\t\t\t}\n\t\t\t\t\tif (replacement.parent) {\n\t\t\t\t\t\treplacement.parent.right = replacement.left;\n\t\t\t\t\t\ttemp = replacement.parent;\n\t\t\t\t\t\treplacement.left = node.left;\n\t\t\t\t\t\treplacement.right = node.right;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (node.right.left === null) {\n\t\t\t\treplacement = node.right;\n\t\t\t\treplacement.left = node.left;\n\t\t\t\ttemp = replacement;\n\t\t\t} else {\n\t\t\t\treplacement = node.right.left;\n\t\t\t\twhile (replacement.left !== null) {\n\t\t\t\t\treplacement = replacement.left;\n\t\t\t\t}\n\t\t\t\tif (replacement.parent) {\n\t\t\t\t\treplacement.parent.left = replacement.right;\n\t\t\t\t\ttemp = replacement.parent;\n\t\t\t\t\treplacement.left = node.left;\n\t\t\t\t\treplacement.right = node.right;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (node.parent !== null) {\n\t\t\t\tif (node.isLeftChild()) {\n\t\t\t\t\tnode.parent.left = replacement;\n\t\t\t\t} else {\n\t\t\t\t\tnode.parent.right = replacement;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis._setRoot(replacement);\n\t\t\t}\n\t\t\tif (temp) {\n\t\t\t\tthis._rebalance(temp);\n\t\t\t}\n\t\t}\n\t\tnode.dispose();\n\t}\n\n\t/**\n\t * Rotate the tree to the left\n\t */\n\tprivate _rotateLeft(node: IntervalNode): void {\n\t\tconst parent = node.parent;\n\t\tconst isLeftChild = node.isLeftChild();\n\n\t\t// Make node.right the new root of this sub tree (instead of node)\n\t\tconst pivotNode = node.right;\n\t\tif (pivotNode) {\n\t\t\tnode.right = pivotNode.left;\n\t\t\tpivotNode.left = node;\n\t\t}\n\n\t\tif (parent !== null) {\n\t\t\tif (isLeftChild) {\n\t\t\t\tparent.left = pivotNode;\n\t\t\t} else {\n\t\t\t\tparent.right = pivotNode;\n\t\t\t}\n\t\t} else {\n\t\t\tthis._setRoot(pivotNode);\n\t\t}\n\t}\n\n\t/**\n\t * Rotate the tree to the right\n\t */\n\tprivate _rotateRight(node: IntervalNode): void {\n\t\tconst parent = node.parent;\n\t\tconst isLeftChild = node.isLeftChild();\n\n\t\t// Make node.left the new root of this sub tree (instead of node)\n\t\tconst pivotNode = node.left;\n\t\tif (pivotNode) {\n\t\t\tnode.left = pivotNode.right;\n\t\t\tpivotNode.right = node;\n\t\t}\n\n\t\tif (parent !== null) {\n\t\t\tif (isLeftChild) {\n\t\t\t\tparent.left = pivotNode;\n\t\t\t} else {\n\t\t\t\tparent.right = pivotNode;\n\t\t\t}\n\t\t} else {\n\t\t\tthis._setRoot(pivotNode);\n\t\t}\n\t}\n\n\t/**\n\t * Balance the BST\n\t */\n\tprivate _rebalance(node: IntervalNode): void {\n\t\tconst balance = node.getBalance();\n\t\tif (balance > 1 && node.left) {\n\t\t\tif (node.left.getBalance() < 0) {\n\t\t\t\tthis._rotateLeft(node.left);\n\t\t\t} else {\n\t\t\t\tthis._rotateRight(node);\n\t\t\t}\n\t\t} else if (balance < -1 && node.right) {\n\t\t\tif (node.right.getBalance() > 0) {\n\t\t\t\tthis._rotateRight(node.right);\n\t\t\t} else {\n\t\t\t\tthis._rotateLeft(node);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Get an event whose time and duration span the give time. Will\n\t * return the match whose \"time\" value is closest to the given time.\n\t * @return  The event which spans the desired time\n\t */\n\tget(time: number): IntervalTimelineEvent | null {\n\t\tif (this._root !== null) {\n\t\t\tconst results: IntervalNode[] = [];\n\t\t\tthis._root.search(time, results);\n\t\t\tif (results.length > 0) {\n\t\t\t\tlet max = results[0];\n\t\t\t\tfor (let i = 1; i < results.length; i++) {\n\t\t\t\t\tif (results[i].low > max.low) {\n\t\t\t\t\t\tmax = results[i];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn max.event;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\t/**\n\t * Iterate over everything in the timeline.\n\t * @param  callback The callback to invoke with every item\n\t */\n\tforEach(callback: IteratorCallback): this {\n\t\tif (this._root !== null) {\n\t\t\tconst allNodes: IntervalNode[] = [];\n\t\t\tthis._root.traverse(node => allNodes.push(node));\n\t\t\tallNodes.forEach(node => {\n\t\t\t\tif (node.event) {\n\t\t\t\t\tcallback(node.event);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Iterate over everything in the array in which the given time\n\t * overlaps with the time and duration time of the event.\n\t * @param  time The time to check if items are overlapping\n\t * @param  callback The callback to invoke with every item\n\t */\n\tforEachAtTime(time: number, callback: IteratorCallback): this {\n\t\tif (this._root !== null) {\n\t\t\tconst results: IntervalNode[] = [];\n\t\t\tthis._root.search(time, results);\n\t\t\tresults.forEach(node => {\n\t\t\t\tif (node.event) {\n\t\t\t\t\tcallback(node.event);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Iterate over everything in the array in which the time is greater\n\t * than or equal to the given time.\n\t * @param  time The time to check if items are before\n\t * @param  callback The callback to invoke with every item\n\t */\n\tforEachFrom(time: number, callback: IteratorCallback): this {\n\t\tif (this._root !== null) {\n\t\t\tconst results: IntervalNode[] = [];\n\t\t\tthis._root.searchAfter(time, results);\n\t\t\tresults.forEach(node => {\n\t\t\t\tif (node.event) {\n\t\t\t\t\tcallback(node.event);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Clean up\n\t */\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tif (this._root !== null) {\n\t\t\tthis._root.traverse(node => node.dispose());\n\t\t}\n\t\tthis._root = null;\n\t\treturn this;\n\t}\n}\n\n//-------------------------------------\n// \tINTERVAL NODE HELPER\n//-------------------------------------\n\n/**\n * Represents a node in the binary search tree, with the addition\n * of a \"high\" value which keeps track of the highest value of\n * its children.\n * References:\n * https://brooknovak.wordpress.com/2013/12/07/augmented-interval-tree-in-c/\n * http://www.mif.vu.lt/~valdas/ALGORITMAI/LITERATURA/Cormen/Cormen.pdf\n * @param low\n * @param high\n */\nclass IntervalNode {\n\n\t// the event container\n\tevent: IntervalTimelineEvent | null;\n\t// the low value\n\tlow: number;\n\t// the high value\n\thigh: number;\n\t// the high value for this and all child nodes\n\tmax: number;\n\t// the nodes to the left\n\tprivate _left: IntervalNode | null = null;\n\t// the nodes to the right\n\tprivate _right: IntervalNode | null = null;\n\t// the parent node\n\tparent: IntervalNode | null = null;\n\t// the number of child nodes\n\theight = 0;\n\n\tconstructor(low: number, high: number, event: IntervalTimelineEvent) {\n\t\tthis.event = event;\n\t\t// the low value\n\t\tthis.low = low;\n\t\t// the high value\n\t\tthis.high = high;\n\t\t// the high value for this and all child nodes\n\t\tthis.max = this.high;\n\t}\n\n\t/**\n\t * Insert a node into the correct spot in the tree\n\t */\n\tinsert(node: IntervalNode): void {\n\t\tif (node.low <= this.low) {\n\t\t\tif (this.left === null) {\n\t\t\t\tthis.left = node;\n\t\t\t} else {\n\t\t\t\tthis.left.insert(node);\n\t\t\t}\n\t\t} else if (this.right === null) {\n\t\t\tthis.right = node;\n\t\t} else {\n\t\t\tthis.right.insert(node);\n\t\t}\n\t}\n\n\t/**\n\t * Search the tree for nodes which overlap\n\t * with the given point\n\t * @param  point  The point to query\n\t * @param  results  The array to put the results\n\t */\n\tsearch(point: number, results: IntervalNode[]): void {\n\t\t// If p is to the right of the rightmost point of any interval\n\t\t// in this node and all children, there won't be any matches.\n\t\tif (point > this.max) {\n\t\t\treturn;\n\t\t}\n\t\t// Search left children\n\t\tif (this.left !== null) {\n\t\t\tthis.left.search(point, results);\n\t\t}\n\t\t// Check this node\n\t\tif (this.low <= point && this.high > point) {\n\t\t\tresults.push(this);\n\t\t}\n\t\t// If p is to the left of the time of this interval,\n\t\t// then it can't be in any child to the right.\n\t\tif (this.low > point) {\n\t\t\treturn;\n\t\t}\n\t\t// Search right children\n\t\tif (this.right !== null) {\n\t\t\tthis.right.search(point, results);\n\t\t}\n\t}\n\n\t/**\n\t * Search the tree for nodes which are less\n\t * than the given point\n\t * @param  point  The point to query\n\t * @param  results  The array to put the results\n\t */\n\tsearchAfter(point: number, results: IntervalNode[]): void {\n\t\t// Check this node\n\t\tif (this.low >= point) {\n\t\t\tresults.push(this);\n\t\t\tif (this.left !== null) {\n\t\t\t\tthis.left.searchAfter(point, results);\n\t\t\t}\n\t\t}\n\t\t// search the right side\n\t\tif (this.right !== null) {\n\t\t\tthis.right.searchAfter(point, results);\n\t\t}\n\t}\n\n\t/**\n\t * Invoke the callback on this element and both it's branches\n\t * @param  {Function}  callback\n\t */\n\ttraverse(callback: (self: IntervalNode) => void): void {\n\t\tcallback(this);\n\t\tif (this.left !== null) {\n\t\t\tthis.left.traverse(callback);\n\t\t}\n\t\tif (this.right !== null) {\n\t\t\tthis.right.traverse(callback);\n\t\t}\n\t}\n\n\t/**\n\t * Update the height of the node\n\t */\n\tupdateHeight(): void {\n\t\tif (this.left !== null && this.right !== null) {\n\t\t\tthis.height = Math.max(this.left.height, this.right.height) + 1;\n\t\t} else if (this.right !== null) {\n\t\t\tthis.height = this.right.height + 1;\n\t\t} else if (this.left !== null) {\n\t\t\tthis.height = this.left.height + 1;\n\t\t} else {\n\t\t\tthis.height = 0;\n\t\t}\n\t}\n\n\t/**\n\t * Update the height of the node\n\t */\n\tupdateMax(): void {\n\t\tthis.max = this.high;\n\t\tif (this.left !== null) {\n\t\t\tthis.max = Math.max(this.max, this.left.max);\n\t\t}\n\t\tif (this.right !== null) {\n\t\t\tthis.max = Math.max(this.max, this.right.max);\n\t\t}\n\t}\n\n\t/**\n\t * The balance is how the leafs are distributed on the node\n\t * @return  Negative numbers are balanced to the right\n\t */\n\tgetBalance(): number {\n\t\tlet balance = 0;\n\t\tif (this.left !== null && this.right !== null) {\n\t\t\tbalance = this.left.height - this.right.height;\n\t\t} else if (this.left !== null) {\n\t\t\tbalance = this.left.height + 1;\n\t\t} else if (this.right !== null) {\n\t\t\tbalance = -(this.right.height + 1);\n\t\t}\n\t\treturn balance;\n\t}\n\n\t/**\n\t * @returns true if this node is the left child of its parent\n\t */\n\tisLeftChild(): boolean {\n\t\treturn this.parent !== null && this.parent.left === this;\n\t}\n\n\t/**\n\t * get/set the left node\n\t */\n\tget left(): IntervalNode | null {\n\t\treturn this._left;\n\t}\n\n\tset left(node: IntervalNode | null) {\n\t\tthis._left = node;\n\t\tif (node !== null) {\n\t\t\tnode.parent = this;\n\t\t}\n\t\tthis.updateHeight();\n\t\tthis.updateMax();\n\t}\n\n\t/**\n\t * get/set the right node\n\t */\n\tget right(): IntervalNode | null {\n\t\treturn this._right;\n\t}\n\n\tset right(node: IntervalNode | null) {\n\t\tthis._right = node;\n\t\tif (node !== null) {\n\t\t\tnode.parent = this;\n\t\t}\n\t\tthis.updateHeight();\n\t\tthis.updateMax();\n\t}\n\n\t/**\n\t * null out references.\n\t */\n\tdispose(): void {\n\t\tthis.parent = null;\n\t\tthis._left = null;\n\t\tthis._right = null;\n\t\tthis.event = null;\n\t}\n}\n","export * from \"./NoteUnits\";\n\nimport { Note } from \"./NoteUnits\";\n\n/**\n * A number representing a time in seconds\n * @category Unit\n */\nexport type Seconds = number;\n\n/**\n * A number used to measure the intensity of a sound on a logarithmic scale.\n * @category Unit\n */\nexport type Decibels = number;\n\n/**\n * A number that is between [0, 1]\n * @category Unit\n */\nexport type NormalRange = number;\n\n/**\n * A number that is between [-1, 1]\n * @category Unit\n */\nexport type AudioRange = number;\n\n/**\n * Half-step note increments, i.e. 12 is an octave above the root. and 1 is a half-step up.\n * @category Unit\n */\nexport type Interval = number;\n\n/**\n * A number representing the multiplication factor applied to a signal\n * @category Unit\n */\nexport type GainFactor = number;\n\n/**\n * A number greater than or equal to 0.\n * @category Unit\n */\nexport type Positive = number;\n\n/**\n * Represents a subdivision of a measure.\n * The number represents the subdivision. \"t\" represents a triplet. A \".\" add a half.\n * e.g. \"4n\" is a quarter note, \"4t\" is a quarter note triplet, and \"4n.\" is a dotted quarter note.\n * @category Unit\n */\nexport type Subdivision = \"1m\" | \"1n\" | \"1n.\" | \"2n\" | \"2n.\" | \"2t\" | \"4n\" | \"4n.\" | \"4t\" | \"8n\" | \"8n.\" | \"8t\" |\n\"16n\" | \"16n.\" | \"16t\" | \"32n\" | \"32n.\" | \"32t\" | \"64n\" | \"64n.\" | \"64t\" | \"128n\" | \"128n.\" | \"128t\" |\n\"256n\" | \"256n.\" | \"256t\" | \"0\";\n\n/**\n * A time object has a subdivision as the keys and a number as the values.\n * @example\n * Tone.Time({\n * \t\"2n\": 1,\n * \t\"8n\": 3\n * }).valueOf(); // 2n + 8n * 3\n * @category Unit\n */\nexport type TimeObject = {\n\t[sub in Subdivision]?: number;\n};\n\n/**\n * Time can be described in a number of ways. Read more [Time](https://github.com/Tonejs/Tone.js/wiki/Time).\n * * Numbers, which will be taken literally as the time (in seconds).\n * * Notation, (\"4n\", \"8t\") describes time in BPM and time signature relative values.\n * * TransportTime, (\"4:3:2\") will also provide tempo and time signature relative times in the form BARS:QUARTERS:SIXTEENTHS.\n * * Frequency, (\"8hz\") is converted to the length of the cycle in seconds.\n * * Now-Relative, (\"+1\") prefix any of the above with \"+\" and it will be interpreted as \"the current time plus whatever expression follows\".\n * * Object, ({\"4n\" : 3, \"8t\" : -1}). The resulting time is equal to the sum of all of the keys multiplied by the values in the object.\n * * No Argument, for methods which accept time, no argument will be interpreted as \"now\" (i.e. the currentTime).\n * @category Unit\n */\nexport type Time = string | Seconds | TimeObject | Subdivision;\n\n/**\n * Frequency can be described similar to time, except ultimately the\n * values are converted to frequency instead of seconds. A number\n * is taken literally as the value in hertz. Additionally any of the\n * Time encodings can be used. Note names in the form\n * of NOTE OCTAVE (i.e. C4) are also accepted and converted to their\n * frequency value.\n * @category Unit\n */\nexport type Frequency = Subdivision | Note | string | Hertz;\n\n/**\n *\n * @category Unit\n */\nexport type TimeSignature = number | number[];\n\n/**\n * TransportTime describes a position along the Transport's timeline. It is\n * similar to Time in that it uses all the same encodings, but TransportTime specifically\n * pertains to the Transport's timeline, which is startable, stoppable, loopable, and seekable.\n * [Read more](https://github.com/Tonejs/Tone.js/wiki/TransportTime)\n * @category Unit\n */\nexport type TransportTime = Time;\n\n/**\n * Ticks are the basic subunit of the Transport. They are\n * the smallest unit of time that the Transport supports.\n * @category Unit\n */\nexport type Ticks = number;\n\n/**\n * Beats per minute\n * @category Unit\n */\nexport type BPM = number;\n\n/**\n * Angle between 0 and 360.\n * @category Unit\n */\nexport type Degrees = number;\n\n/**\n * Angle between 0 and 2 * PI.\n * @category Unit\n */\nexport type Radians = number;\n\n/**\n * A colon-separated representation of time in the form of\n * Bars:Beats:Sixteenths.\n * @category Unit\n */\nexport type BarsBeatsSixteenths = string;\n/**\n * Sampling is the reduction of a continuous signal to a discrete signal.\n * Audio is typically sampled 44100 times per second.\n * @category Unit\n */\nexport type Samples = number;\n\n/**\n * Hertz are a frequency representation defined as one cycle per second.\n * @category Unit\n */\nexport type Hertz = number;\n\n/**\n * A Cent is 1/100th of a semitone.\n * e.g. a value of 50 cents would be halfway between two intervals.\n * @category Unit\n */\nexport type Cents = number;\n\n/**\n * One millisecond is a thousandth of a second.\n * @category Unit\n */\nexport type Milliseconds = number;\n\n/**\n * A value which is a power of 2\n * @category Unit\n */\nexport type PowerOfTwo = number;\n\n/**\n * Map the unit name to a unit value\n */\nexport interface UnitMap {\n\tnumber: number;\n\tdecibels: Decibels;\n\tnormalRange: NormalRange;\n\taudioRange: AudioRange;\n\tgain: GainFactor;\n\tpositive: Positive;\n\ttime: Time;\n\tfrequency: Frequency;\n\ttransportTime: TransportTime;\n\tticks: Ticks;\n\tbpm: BPM;\n\tdegrees: Degrees;\n\tradians: Radians;\n\tsamples: Samples;\n\thertz: Hertz;\n\tcents: Cents;\n}\n\n/**\n * All of the unit types\n * @category Unit\n */\nexport type Unit = UnitMap[keyof UnitMap];\n\n/**\n * All of the unit names\n * @category Unit\n */\nexport type UnitName = keyof UnitMap;\n","export * from \"./clock/Clock\";\n// export * from \"./clock/Transport\";\n\nexport * from \"./context/Context\";\nexport * from \"./context/BaseContext\";\nexport * from \"./context/Delay\";\n// export * from \"./context/Destination\";\nexport * from \"./context/Gain\";\nexport * from \"./context/Offline\";\nexport * from \"./context/OfflineContext\";\nexport * from \"./context/Param\";\nexport * from \"./context/ToneAudioBuffer\";\nexport * from \"./context/ToneAudioBuffers\";\nexport * from \"./context/ToneAudioNode\";\n\nexport * from \"./type/Frequency\";\nexport * from \"./type/Midi\";\nexport * from \"./type/Time\";\nexport * from \"./type/Ticks\";\nexport * from \"./type/TransportTime\";\n\nimport \"./util/Draw\";\nexport * from \"./util/Emitter\";\nexport * from \"./util/IntervalTimeline\";\nexport * from \"./util/StateTimeline\";\nexport * from \"./util/Timeline\";\nexport * from \"./util/TypeCheck\";\n\nexport { dbToGain, gainToDb, intervalToFrequencyRatio, ftom, mtof } from \"./type/Conversions\";\nexport { optionsFromArguments, defaultArg } from \"./util/Defaults\";\n\n// get the units and export them under the \"Unit\" namespace\nimport * as Unit from \"./type/Units\";\nexport { Unit };\n\n// export the debug stuff as Debug\nimport * as debug from \"./util/Debug\";\nexport { debug };\n","import { Gain } from \"../../core/context/Gain\";\nimport { Param } from \"../../core/context/Param\";\nimport { ToneAudioNode, ToneAudioNodeOptions } from \"../../core/context/ToneAudioNode\";\nimport { Decibels } from \"../../core/type/Units\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { readOnly } from \"../../core/util/Interface\";\n\ninterface VolumeOptions extends ToneAudioNodeOptions {\n\tvolume: Decibels;\n\tmute: boolean;\n}\n\n/**\n * Volume is a simple volume node, useful for creating a volume fader.\n *\n * @example\n * const vol = new Tone.Volume(-12).toDestination();\n * const osc = new Tone.Oscillator().connect(vol).start();\n * @category Component\n */\nexport class Volume extends ToneAudioNode<VolumeOptions> {\n\n\treadonly name: string = \"Volume\";\n\n\t/**\n\t * the output node\n\t */\n\toutput: Gain<\"decibels\">;\n\n\t/**\n\t * Input and output are the same\n\t */\n\tinput: Gain<\"decibels\">;\n\n\t/**\n\t * The unmuted volume\n\t */\n\tprivate _unmutedVolume: Decibels;\n\n\t/**\n\t * The volume control in decibels.\n\t * @example\n\t * const vol = new Tone.Volume().toDestination();\n\t * const osc = new Tone.Oscillator().connect(vol).start();\n\t * vol.volume.value = -20;\n\t */\n\tvolume: Param<\"decibels\">;\n\n\t/**\n\t * @param volume the initial volume in decibels\n\t */\n\tconstructor(volume?: Decibels);\n\tconstructor(options?: Partial<VolumeOptions>);\n\tconstructor() {\n\n\t\tsuper(optionsFromArguments(Volume.getDefaults(), arguments, [\"volume\"]));\n\t\tconst options = optionsFromArguments(Volume.getDefaults(), arguments, [\"volume\"]);\n\n\t\tthis.input = this.output = new Gain({\n\t\t\tcontext: this.context,\n\t\t\tgain: options.volume,\n\t\t\tunits: \"decibels\",\n\t\t});\n\t\tthis.volume = this.output.gain;\n\t\treadOnly(this, \"volume\");\n\t\tthis._unmutedVolume = options.volume;\n\n\t\t// set the mute initially\n\t\tthis.mute = options.mute;\n\t}\n\n\tstatic getDefaults(): VolumeOptions {\n\t\treturn Object.assign(ToneAudioNode.getDefaults(), {\n\t\t\tmute: false,\n\t\t\tvolume: 0,\n\t\t});\n\t}\n\n\t/**\n\t * Mute the output.\n\t * @example\n\t * const vol = new Tone.Volume(-12).toDestination();\n\t * const osc = new Tone.Oscillator().connect(vol).start();\n\t * // mute the output\n\t * vol.mute = true;\n\t */\n\tget mute(): boolean {\n\t\treturn this.volume.value === -Infinity;\n\t}\n\tset mute(mute: boolean) {\n\t\tif (!this.mute && mute) {\n\t\t\tthis._unmutedVolume = this.volume.value;\n\t\t\t// maybe it should ramp here?\n\t\t\tthis.volume.value = -Infinity;\n\t\t} else if (this.mute && !mute) {\n\t\t\tthis.volume.value = this._unmutedVolume;\n\t\t}\n\t}\n\n\t/**\n\t * clean up\n\t */\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis.input.dispose();\n\t\tthis.volume.dispose();\n\t\treturn this;\n\t}\n}\n","import { Volume } from \"../../component/channel/Volume\";\nimport { Decibels } from \"../type/Units\";\nimport { optionsFromArguments } from \"../util/Defaults\";\nimport { onContextClose, onContextInit } from \"./ContextInitialization\";\nimport { Gain } from \"./Gain\";\nimport { Param } from \"./Param\";\nimport { connectSeries, ToneAudioNode, ToneAudioNodeOptions } from \"./ToneAudioNode\";\n\ninterface DestinationOptions extends ToneAudioNodeOptions {\n\tvolume: Decibels;\n\tmute: boolean;\n}\n\n/**\n * A single master output which is connected to the\n * AudioDestinationNode (aka your speakers).\n * It provides useful conveniences such as the ability\n * to set the volume and mute the entire application.\n * It also gives you the ability to apply master effects to your application.\n *\n * @example\n * const oscillator = new Tone.Oscillator().start();\n * // the audio will go from the oscillator to the speakers\n * oscillator.connect(Tone.getDestination());\n * // a convenience for connecting to the master output is also provided:\n * oscillator.toDestination();\n * @category Core\n */\nexport class Destination extends ToneAudioNode<DestinationOptions> {\n\n\treadonly name: string = \"Destination\";\n\n\tinput: Volume = new Volume({ context: this.context });\n\toutput: Gain = new Gain({ context: this.context });\n\n\t/**\n\t * The volume of the master output in decibels. -Infinity is silent, and 0 is no change. \n\t * @example\n\t * const osc = new Tone.Oscillator().toDestination();\n\t * osc.start();\n\t * // ramp the volume down to silent over 10 seconds\n\t * Tone.getDestination().volume.rampTo(-Infinity, 10);\n\t */\n\tvolume: Param<\"decibels\"> = this.input.volume;\n\n\tconstructor(options: Partial<DestinationOptions>);\n\tconstructor() {\n\n\t\tsuper(optionsFromArguments(Destination.getDefaults(), arguments));\n\t\tconst options = optionsFromArguments(Destination.getDefaults(), arguments);\n\n\t\tconnectSeries(this.input, this.output, this.context.rawContext.destination);\n\n\t\tthis.mute = options.mute;\n\t\tthis._internalChannels = [this.input, this.context.rawContext.destination, this.output];\n\t}\n\n\tstatic getDefaults(): DestinationOptions {\n\t\treturn Object.assign(ToneAudioNode.getDefaults(), {\n\t\t\tmute: false,\n\t\t\tvolume: 0,\n\t\t});\n\t}\n\n\t/**\n\t * Mute the output.\n\t * @example\n\t * const oscillator = new Tone.Oscillator().start().toDestination();\n\t * setTimeout(() => {\n\t * \t// mute the output\n\t * \tTone.Destination.mute = true;\n\t * }, 1000);\n\t */\n\tget mute(): boolean {\n\t\treturn this.input.mute;\n\t}\n\tset mute(mute: boolean) {\n\t\tthis.input.mute = mute;\n\t}\n\n\t/**\n\t * Add a master effects chain. NOTE: this will disconnect any nodes which were previously\n\t * chained in the master effects chain.\n\t * @param args All arguments will be connected in a row and the Master will be routed through it.\n\t * @example\n\t * // route all audio through a filter and compressor\n\t * const lowpass = new Tone.Filter(800, \"lowpass\");\n\t * const compressor = new Tone.Compressor(-18);\n\t * Tone.Destination.chain(lowpass, compressor);\n\t */\n\tchain(...args: Array<AudioNode | ToneAudioNode>): this {\n\t\tthis.input.disconnect();\n\t\targs.unshift(this.input);\n\t\targs.push(this.output);\n\t\tconnectSeries(...args);\n\t\treturn this;\n\t}\n\n\t/**\n\t * The maximum number of channels the system can output\n\t * @example\n\t * console.log(Tone.Destination.maxChannelCount);\n\t */\n\tget maxChannelCount(): number {\n\t\treturn this.context.rawContext.destination.maxChannelCount;\n\t}\n\n\t/**\n\t * Clean up\n\t */\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis.volume.dispose();\n\t\treturn this;\n\t}\n}\n\n//-------------------------------------\n// \tINITIALIZATION\n//-------------------------------------\n\nonContextInit(context => {\n\tcontext.destination = new Destination({ context });\n});\n\nonContextClose(context => {\n\tcontext.destination.dispose();\n});\n","import { Timeline, TimelineEvent } from \"./Timeline\";\nimport { Tone } from \"../Tone\";\nimport { Seconds } from \"../type/Units\";\n\ninterface TimelineValueEvent<T> extends TimelineEvent {\n\tvalue: T;\n}\n\n/**\n * Represents a single value which is gettable and settable in a timed way\n */\nexport class TimelineValue<Type> extends Tone {\n\n\treadonly name: string = \"TimelineValue\";\n\n\t/**\n\t * The timeline which stores the values\n\t */\n\tprivate _timeline: Timeline<TimelineValueEvent<Type>> = new Timeline({ memory: 10 })\n\n\t/**\n\t * Hold the value to return if there is no scheduled values\n\t */\n\tprivate _initialValue: Type;\n\n\t/**\n\t * @param initialValue The value to return if there is no scheduled values\n\t */\n\tconstructor(initialValue: Type) {\n\n\t\tsuper();\n\t\tthis._initialValue = initialValue;\n\t}\n\n\t/**\n\t * Set the value at the given time\n\t */\n\tset(value: Type, time: Seconds): this {\n\t\tthis._timeline.add({\n\t\t\tvalue, time\n\t\t});\n\t\treturn this;\n\t}\n\t\n\t/**\n\t * Get the value at the given time\n\t */\n\tget(time: Seconds): Type {\n\t\tconst event = this._timeline.get(time);\n\t\tif (event) {\n\t\t\treturn event.value;\n\t\t} else {\n\t\t\treturn this._initialValue;\n\t\t}\n\t}\n}\n","import { Seconds, Ticks } from \"../type/Units\";\nimport { noOp } from \"../util/Interface\";\n\ntype Transport = import(\"../clock/Transport\").Transport;\n\nexport interface TransportEventOptions {\n\tcallback: (time: number) => void;\n\tonce: boolean;\n\ttime: Ticks;\n}\n\n/**\n * TransportEvent is an internal class used by [[Transport]]\n * to schedule events. Do no invoke this class directly, it is\n * handled from within Tone.Transport.\n */\nexport class TransportEvent {\n\n\t/**\n\t * Reference to the Transport that created it\n\t */\n\tprotected transport: Transport;\n\n\t/**\n\t * The unique id of the event\n\t */\n\tid: number = TransportEvent._eventId++;\n\n\t/**\n\t * The time the event starts\n\t */\n\ttime: Ticks;\n\n\t/**\n\t * The callback to invoke\n\t */\n\tprivate callback?: (time: Seconds) => void;\n\n\t/**\n\t * If the event should be removed after being invoked.\n\t */\n\tprivate _once: boolean;\n\n\t/**\n\t * The remaining value between the passed in time, and Math.floor(time).\n\t * This value is later added back when scheduling to get sub-tick precision. \n\t */\n\tprotected _remainderTime = 0;\n\n\t/**\n\t * @param transport The transport object which the event belongs to\n\t */\n\tconstructor(transport: Transport, opts: Partial<TransportEventOptions>) {\n\n\t\tconst options: TransportEventOptions = Object.assign(TransportEvent.getDefaults(), opts);\n\n\t\tthis.transport = transport;\n\t\tthis.callback = options.callback;\n\t\tthis._once = options.once;\n\t\tthis.time = Math.floor(options.time);\n\t\tthis._remainderTime = options.time - this.time;\n\t}\n\n\tstatic getDefaults(): TransportEventOptions {\n\t\treturn {\n\t\t\tcallback: noOp,\n\t\t\tonce: false,\n\t\t\ttime: 0,\n\t\t};\n\t}\n\n\t/**\n\t * Current ID counter\n\t */\n\tprivate static _eventId = 0;\n\n\t/**\n\t * Get the time and remainder time.\n\t */\n\tprotected get floatTime(): number {\n\t\treturn this.time + this._remainderTime;\n\t}\n\n\t/**\n\t * Invoke the event callback.\n\t * @param  time  The AudioContext time in seconds of the event\n\t */\n\tinvoke(time: Seconds): void {\n\t\tif (this.callback) {\n\t\t\tconst tickDuration = this.transport.bpm.getDurationOfTicks(1, time);\n\t\t\tthis.callback(time + this._remainderTime * tickDuration);\n\t\t\tif (this._once) {\n\t\t\t\tthis.transport.clear(this.id);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Clean up\n\t */\n\tdispose(): this {\n\t\tthis.callback = undefined;\n\t\treturn this;\n\t}\n}\n","import { BaseContext } from \"../context/BaseContext\";\nimport { TicksClass } from \"../type/Ticks\";\nimport { Seconds, Ticks, Time } from \"../type/Units\";\nimport { TransportEvent, TransportEventOptions } from \"./TransportEvent\";\nimport { GT, LT } from \"../util/Math\";\n\ntype Transport = import(\"../clock/Transport\").Transport;\n\ninterface TransportRepeatEventOptions extends TransportEventOptions {\n\tinterval: Ticks;\n\tduration: Ticks;\n}\n\n/**\n * TransportRepeatEvent is an internal class used by Tone.Transport\n * to schedule repeat events. This class should not be instantiated directly.\n */\nexport class TransportRepeatEvent extends TransportEvent {\n\n\t/**\n\t * When the event should stop repeating\n\t */\n\tprivate duration: Ticks;\n\n\t/**\n\t * The interval of the repeated event\n\t */\n\tprivate _interval: Ticks;\n\n\t/**\n\t * The ID of the current timeline event\n\t */\n\tprivate _currentId = -1;\n\n\t/**\n\t * The ID of the next timeline event\n\t */\n\tprivate _nextId = -1;\n\n\t/**\n\t * The time of the next event\n\t */\n\tprivate _nextTick = this.time;\n\n\t/**\n\t * a reference to the bound start method\n\t */\n\tprivate _boundRestart = this._restart.bind(this);\n\n\t/**\n\t * The audio context belonging to this event\n\t */\n\tprotected context: BaseContext;\n\n\t/**\n\t * @param transport The transport object which the event belongs to\n\t */\n\tconstructor(transport: Transport, opts: Partial<TransportRepeatEventOptions>) {\n\n\t\tsuper(transport, opts);\n\n\t\tconst options = Object.assign(TransportRepeatEvent.getDefaults(), opts);\n\n\t\tthis.duration = options.duration;\n\t\tthis._interval = options.interval;\n\t\tthis._nextTick = options.time;\n\t\tthis.transport.on(\"start\", this._boundRestart);\n\t\tthis.transport.on(\"loopStart\", this._boundRestart);\n\t\tthis.transport.on(\"ticks\", this._boundRestart);\n\t\tthis.context = this.transport.context;\n\t\tthis._restart();\n\t}\n\n\tstatic getDefaults(): TransportRepeatEventOptions {\n\t\treturn Object.assign({}, TransportEvent.getDefaults(), {\n\t\t\tduration: Infinity,\n\t\t\tinterval: 1,\n\t\t\tonce: false,\n\t\t});\n\t}\n\n\t/**\n\t * Invoke the callback. Returns the tick time which\n\t * the next event should be scheduled at.\n\t * @param  time  The AudioContext time in seconds of the event\n\t */\n\tinvoke(time: Seconds): void {\n\t\t// create more events if necessary\n\t\tthis._createEvents(time);\n\t\t// call the super class\n\t\tsuper.invoke(time);\n\t}\n\n\t/**\n\t * Create an event on the transport on the nextTick\n\t */\n\tprivate _createEvent(): number {\n\t\tif (LT(this._nextTick, this.floatTime + this.duration)) {\n\t\t\treturn this.transport.scheduleOnce(this.invoke.bind(this),\n\t\t\t\tnew TicksClass(this.context, this._nextTick).toSeconds());\n\t\t}\n\t\treturn -1;\n\t}\n\n\t/**\n\t * Push more events onto the timeline to keep up with the position of the timeline\n\t */\n\tprivate _createEvents(time: Seconds): void {\n\t\t// schedule the next event\n\t\t// const ticks = this.transport.getTicksAtTime(time);\n\t\t// if the next tick is within the bounds set by \"duration\"\n\t\tif (LT(this._nextTick + this._interval, this.floatTime + this.duration)) {\n\t\t\tthis._nextTick += this._interval;\n\t\t\tthis._currentId = this._nextId;\n\t\t\tthis._nextId = this.transport.scheduleOnce(this.invoke.bind(this),\n\t\t\t\tnew TicksClass(this.context, this._nextTick).toSeconds());\n\t\t}\n\t}\n\n\t/**\n\t * Re-compute the events when the transport time has changed from a start/ticks/loopStart event\n\t */\n\tprivate _restart(time?: Time): void {\n\t\tthis.transport.clear(this._currentId);\n\t\tthis.transport.clear(this._nextId);\n\t\t// start at the first event\n\t\tthis._nextTick = this.floatTime;\n\t\tconst ticks = this.transport.getTicksAtTime(time);\n\t\tif (GT(ticks, this.time)) {\n\t\t\t// the event is not being scheduled from the beginning and should be offset\n\t\t\tthis._nextTick = this.floatTime + Math.ceil((ticks - this.floatTime) / this._interval) * this._interval;\n\t\t}\n\t\tthis._currentId = this._createEvent();\n\t\tthis._nextTick += this._interval;\n\t\tthis._nextId = this._createEvent();\n\t}\n\n\t/**\n\t * Clean up\n\t */\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis.transport.clear(this._currentId);\n\t\tthis.transport.clear(this._nextId);\n\t\tthis.transport.off(\"start\", this._boundRestart);\n\t\tthis.transport.off(\"loopStart\", this._boundRestart);\n\t\tthis.transport.off(\"ticks\", this._boundRestart);\n\t\treturn this;\n\t}\n}\n","import { TimeClass } from \"../../core/type/Time\";\nimport { PlaybackState } from \"../../core/util/StateTimeline\";\nimport { TimelineValue } from \"../../core/util/TimelineValue\";\nimport { Signal } from \"../../signal/Signal\";\nimport { onContextClose, onContextInit } from \"../context/ContextInitialization\";\nimport { Gain } from \"../context/Gain\";\nimport { ToneWithContext, ToneWithContextOptions } from \"../context/ToneWithContext\";\nimport { TicksClass } from \"../type/Ticks\";\nimport { TransportTimeClass } from \"../type/TransportTime\";\nimport {\n\tBarsBeatsSixteenths, BPM, NormalRange, Seconds,\n\tSubdivision, Ticks, Time, TimeSignature, TransportTime\n} from \"../type/Units\";\nimport { optionsFromArguments } from \"../util/Defaults\";\nimport { Emitter } from \"../util/Emitter\";\nimport { readOnly, writable } from \"../util/Interface\";\nimport { IntervalTimeline } from \"../util/IntervalTimeline\";\nimport { Timeline } from \"../util/Timeline\";\nimport { isArray, isDefined } from \"../util/TypeCheck\";\nimport { Clock } from \"./Clock\";\nimport { TickParam } from \"./TickParam\";\nimport { TransportEvent } from \"./TransportEvent\";\nimport { TransportRepeatEvent } from \"./TransportRepeatEvent\";\n\ninterface TransportOptions extends ToneWithContextOptions {\n\tbpm: BPM;\n\tswing: NormalRange;\n\tswingSubdivision: Subdivision;\n\ttimeSignature: number;\n\tloopStart: Time;\n\tloopEnd: Time;\n\tppq: number;\n}\n\ntype TransportEventNames = \"start\" | \"stop\" | \"pause\" | \"loop\" | \"loopEnd\" | \"loopStart\" | \"ticks\";\n\ninterface SyncedSignalEvent {\n\tsignal: Signal;\n\tinitial: number;\n\tratio: Gain;\n}\n\ntype TransportCallback = (time: Seconds) => void;\n\n/**\n * Transport for timing musical events.\n * Supports tempo curves and time changes. Unlike browser-based timing (setInterval, requestAnimationFrame)\n * Transport timing events pass in the exact time of the scheduled event\n * in the argument of the callback function. Pass that time value to the object\n * you're scheduling. <br><br>\n * A single transport is created for you when the library is initialized.\n * <br><br>\n * The transport emits the events: \"start\", \"stop\", \"pause\", and \"loop\" which are\n * called with the time of that event as the argument.\n *\n * @example\n * const osc = new Tone.Oscillator().toDestination();\n * // repeated event every 8th note\n * Tone.Transport.scheduleRepeat((time) => {\n * \t// use the callback time to schedule events\n * \tosc.start(time).stop(time + 0.1);\n * }, \"8n\");\n * // transport must be started before it starts invoking events\n * Tone.Transport.start();\n * @category Core\n */\nexport class Transport extends ToneWithContext<TransportOptions> implements Emitter<TransportEventNames> {\n\n\treadonly name: string = \"Transport\";\n\n\t//-------------------------------------\n\t// \tLOOPING\n\t//-------------------------------------\n\n\t/**\n\t * If the transport loops or not.\n\t */\n\tprivate _loop: TimelineValue<boolean> = new TimelineValue(false);\n\n\t/**\n\t * The loop start position in ticks\n\t */\n\tprivate _loopStart: Ticks = 0;\n\n\t/**\n\t * The loop end position in ticks\n\t */\n\tprivate _loopEnd: Ticks = 0;\n\n\t//-------------------------------------\n\t// \tCLOCK/TEMPO\n\t//-------------------------------------\n\n\t/**\n\t * Pulses per quarter is the number of ticks per quarter note.\n\t */\n\tprivate _ppq: number;\n\n\t/**\n\t * watches the main oscillator for timing ticks\n\t * initially starts at 120bpm\n\t */\n\tprivate _clock: Clock<\"bpm\">;\n\n\t/**\n\t * The Beats Per Minute of the Transport.\n\t * @example\n\t * const osc = new Tone.Oscillator().toDestination();\n\t * Tone.Transport.bpm.value = 80;\n\t * // start/stop the oscillator every quarter note\n\t * Tone.Transport.scheduleRepeat(time => {\n\t * \tosc.start(time).stop(time + 0.1);\n\t * }, \"4n\");\n\t * Tone.Transport.start();\n\t * // ramp the bpm to 120 over 10 seconds\n\t * Tone.Transport.bpm.rampTo(120, 10);\n\t */\n\tbpm: TickParam<\"bpm\">;\n\n\t/**\n\t * The time signature, or more accurately the numerator\n\t * of the time signature over a denominator of 4.\n\t */\n\tprivate _timeSignature: number;\n\n\t//-------------------------------------\n\t// \tTIMELINE EVENTS\n\t//-------------------------------------\n\n\t/**\n\t * All the events in an object to keep track by ID\n\t */\n\tprivate _scheduledEvents = {};\n\n\t/**\n\t * The scheduled events.\n\t */\n\tprivate _timeline: Timeline<TransportEvent> = new Timeline();\n\n\t/**\n\t * Repeated events\n\t */\n\tprivate _repeatedEvents: IntervalTimeline = new IntervalTimeline();\n\n\t/**\n\t * All of the synced Signals\n\t */\n\tprivate _syncedSignals: SyncedSignalEvent[] = [];\n\n\t//-------------------------------------\n\t// \tSWING\n\t//-------------------------------------\n\n\t/**\n\t * The subdivision of the swing\n\t */\n\tprivate _swingTicks: Ticks;\n\n\t/**\n\t * The swing amount\n\t */\n\tprivate _swingAmount: NormalRange = 0;\n\n\tconstructor(options?: Partial<TransportOptions>);\n\tconstructor() {\n\n\t\tsuper(optionsFromArguments(Transport.getDefaults(), arguments));\n\t\tconst options = optionsFromArguments(Transport.getDefaults(), arguments);\n\n\t\t// CLOCK/TEMPO\n\t\tthis._ppq = options.ppq;\n\t\tthis._clock = new Clock({\n\t\t\tcallback: this._processTick.bind(this),\n\t\t\tcontext: this.context,\n\t\t\tfrequency: 0,\n\t\t\tunits: \"bpm\",\n\t\t});\n\t\tthis._bindClockEvents();\n\t\tthis.bpm = this._clock.frequency as unknown as TickParam<\"bpm\">;\n\t\tthis._clock.frequency.multiplier = options.ppq;\n\t\tthis.bpm.setValueAtTime(options.bpm, 0);\n\t\treadOnly(this, \"bpm\");\n\t\tthis._timeSignature = options.timeSignature;\n\n\t\t// SWING\n\t\tthis._swingTicks = options.ppq / 2; // 8n\n\t}\n\n\tstatic getDefaults(): TransportOptions {\n\t\treturn Object.assign(ToneWithContext.getDefaults(), {\n\t\t\tbpm: 120,\n\t\t\tloopEnd: \"4m\" as Subdivision,\n\t\t\tloopStart: 0,\n\t\t\tppq: 192,\n\t\t\tswing: 0,\n\t\t\tswingSubdivision: \"8n\" as Subdivision,\n\t\t\ttimeSignature: 4,\n\t\t});\n\t}\n\n\t//-------------------------------------\n\t// \tTICKS\n\t//-------------------------------------\n\n\t/**\n\t * called on every tick\n\t * @param  tickTime clock relative tick time\n\t */\n\tprivate _processTick(tickTime: Seconds, ticks: Ticks): void {\n\t\t// do the loop test\n\t\tif (this._loop.get(tickTime)) {\n\t\t\tif (ticks >= this._loopEnd) {\n\t\t\t\tthis.emit(\"loopEnd\", tickTime);\n\t\t\t\tthis._clock.setTicksAtTime(this._loopStart, tickTime);\n\t\t\t\tticks = this._loopStart;\n\t\t\t\tthis.emit(\"loopStart\", tickTime, this._clock.getSecondsAtTime(tickTime));\n\t\t\t\tthis.emit(\"loop\", tickTime);\n\t\t\t}\n\t\t}\n\t\t// handle swing\n\t\tif (this._swingAmount > 0 &&\n\t\t\tticks % this._ppq !== 0 && // not on a downbeat\n\t\t\tticks % (this._swingTicks * 2) !== 0) {\n\t\t\t// add some swing\n\t\t\tconst progress = (ticks % (this._swingTicks * 2)) / (this._swingTicks * 2);\n\t\t\tconst amount = Math.sin((progress) * Math.PI) * this._swingAmount;\n\t\t\ttickTime += new TicksClass(this.context, this._swingTicks * 2 / 3).toSeconds() * amount;\n\t\t}\n\t\t// invoke the timeline events scheduled on this tick\n\t\tthis._timeline.forEachAtTime(ticks, event => event.invoke(tickTime));\n\t}\n\n\t//-------------------------------------\n\t// \tSCHEDULABLE EVENTS\n\t//-------------------------------------\n\n\t/**\n\t * Schedule an event along the timeline.\n\t * @param callback The callback to be invoked at the time.\n\t * @param time The time to invoke the callback at.\n\t * @return The id of the event which can be used for canceling the event.\n\t * @example\n\t * // schedule an event on the 16th measure\n\t * Tone.Transport.schedule((time) => {\n\t * \t// invoked on measure 16\n\t * \tconsole.log(\"measure 16!\");\n\t * }, \"16:0:0\");\n\t */\n\tschedule(callback: TransportCallback, time: TransportTime | TransportTimeClass): number {\n\t\tconst event = new TransportEvent(this, {\n\t\t\tcallback,\n\t\t\ttime: new TransportTimeClass(this.context, time).toTicks(),\n\t\t});\n\t\treturn this._addEvent(event, this._timeline);\n\t}\n\n\t/**\n\t * Schedule a repeated event along the timeline. The event will fire\n\t * at the `interval` starting at the `startTime` and for the specified\n\t * `duration`.\n\t * @param  callback   The callback to invoke.\n\t * @param  interval   The duration between successive callbacks. Must be a positive number.\n\t * @param  startTime  When along the timeline the events should start being invoked.\n\t * @param  duration How long the event should repeat.\n\t * @return  The ID of the scheduled event. Use this to cancel the event.\n\t * @example\n\t * const osc = new Tone.Oscillator().toDestination().start();\n\t * // a callback invoked every eighth note after the first measure\n\t * Tone.Transport.scheduleRepeat((time) => {\n\t * \tosc.start(time).stop(time + 0.1);\n\t * }, \"8n\", \"1m\");\n\t */\n\tscheduleRepeat(\n\t\tcallback: TransportCallback,\n\t\tinterval: Time | TimeClass,\n\t\tstartTime?: TransportTime | TransportTimeClass,\n\t\tduration: Time = Infinity,\n\t): number {\n\t\tconst event = new TransportRepeatEvent(this, {\n\t\t\tcallback,\n\t\t\tduration: new TimeClass(this.context, duration).toTicks(),\n\t\t\tinterval: new TimeClass(this.context, interval).toTicks(),\n\t\t\ttime: new TransportTimeClass(this.context, startTime).toTicks(),\n\t\t});\n\t\t// kick it off if the Transport is started\n\t\t// @ts-ignore\n\t\treturn this._addEvent(event, this._repeatedEvents);\n\t}\n\n\t/**\n\t * Schedule an event that will be removed after it is invoked.\n\t * @param callback The callback to invoke once.\n\t * @param time The time the callback should be invoked.\n\t * @returns The ID of the scheduled event.\n\t */\n\tscheduleOnce(callback: TransportCallback, time: TransportTime | TransportTimeClass): number {\n\t\tconst event = new TransportEvent(this, {\n\t\t\tcallback,\n\t\t\tonce: true,\n\t\t\ttime: new TransportTimeClass(this.context, time).toTicks(),\n\t\t});\n\t\treturn this._addEvent(event, this._timeline);\n\t}\n\n\t/**\n\t * Clear the passed in event id from the timeline\n\t * @param eventId The id of the event.\n\t */\n\tclear(eventId: number): this {\n\t\tif (this._scheduledEvents.hasOwnProperty(eventId)) {\n\t\t\tconst item = this._scheduledEvents[eventId.toString()];\n\t\t\titem.timeline.remove(item.event);\n\t\t\titem.event.dispose();\n\t\t\tdelete this._scheduledEvents[eventId.toString()];\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Add an event to the correct timeline. Keep track of the\n\t * timeline it was added to.\n\t * @returns the event id which was just added\n\t */\n\tprivate _addEvent(event: TransportEvent, timeline: Timeline<TransportEvent>): number {\n\t\tthis._scheduledEvents[event.id.toString()] = {\n\t\t\tevent,\n\t\t\ttimeline,\n\t\t};\n\t\ttimeline.add(event);\n\t\treturn event.id;\n\t}\n\n\t/**\n\t * Remove scheduled events from the timeline after\n\t * the given time. Repeated events will be removed\n\t * if their startTime is after the given time\n\t * @param after Clear all events after this time.\n\t */\n\tcancel(after: TransportTime = 0): this {\n\t\tconst computedAfter = this.toTicks(after);\n\t\tthis._timeline.forEachFrom(computedAfter, event => this.clear(event.id));\n\t\tthis._repeatedEvents.forEachFrom(computedAfter, event => this.clear(event.id));\n\t\treturn this;\n\t}\n\n\t//-------------------------------------\n\t// \tSTART/STOP/PAUSE\n\t//-------------------------------------\n\n\t/**\n\t * Bind start/stop/pause events from the clock and emit them.\n\t */\n\tprivate _bindClockEvents(): void {\n\t\tthis._clock.on(\"start\", (time, offset) => {\n\t\t\toffset = new TicksClass(this.context, offset).toSeconds();\n\t\t\tthis.emit(\"start\", time, offset);\n\t\t});\n\n\t\tthis._clock.on(\"stop\", (time) => {\n\t\t\tthis.emit(\"stop\", time);\n\t\t});\n\n\t\tthis._clock.on(\"pause\", (time) => {\n\t\t\tthis.emit(\"pause\", time);\n\t\t});\n\t}\n\n\t/**\n\t * Returns the playback state of the source, either \"started\", \"stopped\", or \"paused\"\n\t */\n\tget state(): PlaybackState {\n\t\treturn this._clock.getStateAtTime(this.now());\n\t}\n\n\t/**\n\t * Start the transport and all sources synced to the transport.\n\t * @param  time The time when the transport should start.\n\t * @param  offset The timeline offset to start the transport.\n\t * @example\n\t * // start the transport in one second starting at beginning of the 5th measure.\n\t * Tone.Transport.start(\"+1\", \"4:0:0\");\n\t */\n\tstart(time?: Time, offset?: TransportTime): this {\n\t\tlet offsetTicks;\n\t\tif (isDefined(offset)) {\n\t\t\toffsetTicks = this.toTicks(offset);\n\t\t}\n\t\t// start the clock\n\t\tthis._clock.start(time, offsetTicks);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Stop the transport and all sources synced to the transport.\n\t * @param time The time when the transport should stop.\n\t * @example\n\t * Tone.Transport.stop();\n\t */\n\tstop(time?: Time): this {\n\t\tthis._clock.stop(time);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Pause the transport and all sources synced to the transport.\n\t */\n\tpause(time?: Time): this {\n\t\tthis._clock.pause(time);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Toggle the current state of the transport. If it is\n\t * started, it will stop it, otherwise it will start the Transport.\n\t * @param  time The time of the event\n\t */\n\ttoggle(time?: Time): this {\n\t\ttime = this.toSeconds(time);\n\t\tif (this._clock.getStateAtTime(time) !== \"started\") {\n\t\t\tthis.start(time);\n\t\t} else {\n\t\t\tthis.stop(time);\n\t\t}\n\t\treturn this;\n\t}\n\n\t//-------------------------------------\n\t// \tSETTERS/GETTERS\n\t//-------------------------------------\n\n\t/**\n\t * The time signature as just the numerator over 4.\n\t * For example 4/4 would be just 4 and 6/8 would be 3.\n\t * @example\n\t * // common time\n\t * Tone.Transport.timeSignature = 4;\n\t * // 7/8\n\t * Tone.Transport.timeSignature = [7, 8];\n\t * // this will be reduced to a single number\n\t * Tone.Transport.timeSignature; // returns 3.5\n\t */\n\tget timeSignature(): TimeSignature {\n\t\treturn this._timeSignature;\n\t}\n\tset timeSignature(timeSig: TimeSignature) {\n\t\tif (isArray(timeSig)) {\n\t\t\ttimeSig = (timeSig[0] / timeSig[1]) * 4;\n\t\t}\n\t\tthis._timeSignature = timeSig;\n\t}\n\n\t/**\n\t * When the Transport.loop = true, this is the starting position of the loop.\n\t */\n\tget loopStart(): Time {\n\t\treturn new TimeClass(this.context, this._loopStart, \"i\").toSeconds();\n\t}\n\tset loopStart(startPosition: Time) {\n\t\tthis._loopStart = this.toTicks(startPosition);\n\t}\n\n\t/**\n\t * When the Transport.loop = true, this is the ending position of the loop.\n\t */\n\tget loopEnd(): Time {\n\t\treturn new TimeClass(this.context, this._loopEnd, \"i\").toSeconds();\n\t}\n\tset loopEnd(endPosition: Time) {\n\t\tthis._loopEnd = this.toTicks(endPosition);\n\t}\n\n\t/**\n\t * If the transport loops or not.\n\t */\n\tget loop(): boolean {\n\t\treturn this._loop.get(this.now());\n\t}\n\tset loop(loop) {\n\t\tthis._loop.set(loop, this.now());\n\t}\n\n\t/**\n\t * Set the loop start and stop at the same time.\n\t * @example\n\t * // loop over the first measure\n\t * Tone.Transport.setLoopPoints(0, \"1m\");\n\t * Tone.Transport.loop = true;\n\t */\n\tsetLoopPoints(startPosition: TransportTime, endPosition: TransportTime): this {\n\t\tthis.loopStart = startPosition;\n\t\tthis.loopEnd = endPosition;\n\t\treturn this;\n\t}\n\n\t/**\n\t * The swing value. Between 0-1 where 1 equal to the note + half the subdivision.\n\t */\n\tget swing(): NormalRange {\n\t\treturn this._swingAmount;\n\t}\n\tset swing(amount: NormalRange) {\n\t\t// scale the values to a normal range\n\t\tthis._swingAmount = amount;\n\t}\n\n\t/**\n\t * Set the subdivision which the swing will be applied to.\n\t * The default value is an 8th note. Value must be less\n\t * than a quarter note.\n\t */\n\tget swingSubdivision(): Subdivision {\n\t\treturn new TicksClass(this.context, this._swingTicks).toNotation();\n\t}\n\tset swingSubdivision(subdivision: Subdivision) {\n\t\tthis._swingTicks = this.toTicks(subdivision);\n\t}\n\n\t/**\n\t * The Transport's position in Bars:Beats:Sixteenths.\n\t * Setting the value will jump to that position right away.\n\t */\n\tget position(): BarsBeatsSixteenths | Time {\n\t\tconst now = this.now();\n\t\tconst ticks = this._clock.getTicksAtTime(now);\n\t\treturn new TicksClass(this.context, ticks).toBarsBeatsSixteenths();\n\t}\n\tset position(progress: Time) {\n\t\tconst ticks = this.toTicks(progress);\n\t\tthis.ticks = ticks;\n\t}\n\n\t/**\n\t * The Transport's position in seconds\n\t * Setting the value will jump to that position right away.\n\t */\n\tget seconds(): Seconds {\n\t\treturn this._clock.seconds;\n\t}\n\tset seconds(s: Seconds) {\n\t\tconst now = this.now();\n\t\tconst ticks = this._clock.frequency.timeToTicks(s, now);\n\t\tthis.ticks = ticks;\n\t}\n\n\t/**\n\t * The Transport's loop position as a normalized value. Always\n\t * returns 0 if the transport if loop is not true.\n\t */\n\tget progress(): NormalRange {\n\t\tif (this.loop) {\n\t\t\tconst now = this.now();\n\t\t\tconst ticks = this._clock.getTicksAtTime(now);\n\t\t\treturn (ticks - this._loopStart) / (this._loopEnd - this._loopStart);\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\t}\n\n\t/**\n\t * The transports current tick position.\n\t */\n\tget ticks(): Ticks {\n\t\treturn this._clock.ticks;\n\t}\n\tset ticks(t: Ticks) {\n\t\tif (this._clock.ticks !== t) {\n\t\t\tconst now = this.now();\n\t\t\t// stop everything synced to the transport\n\t\t\tif (this.state === \"started\") {\n\t\t\t\tconst ticks = this._clock.getTicksAtTime(now);\n\t\t\t\t// schedule to start on the next tick, #573\n\t\t\t\tconst remainingTick = this._clock.frequency.getDurationOfTicks(Math.ceil(ticks) - ticks, now);\n\t\t\t\tconst time = now + remainingTick;\n\t\t\t\tthis.emit(\"stop\", time);\n\t\t\t\tthis._clock.setTicksAtTime(t, time);\n\t\t\t\t// restart it with the new time\n\t\t\t\tthis.emit(\"start\", time, this._clock.getSecondsAtTime(time));\n\t\t\t} else {\n\t\t\t\tthis.emit(\"ticks\", now);\n\t\t\t\tthis._clock.setTicksAtTime(t, now);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Get the clock's ticks at the given time.\n\t * @param  time  When to get the tick value\n\t * @return The tick value at the given time.\n\t */\n\tgetTicksAtTime(time?: Time): Ticks {\n\t\treturn this._clock.getTicksAtTime(time);\n\t}\n\n\t/**\n\t * Return the elapsed seconds at the given time.\n\t * @param  time  When to get the elapsed seconds\n\t * @return  The number of elapsed seconds\n\t */\n\tgetSecondsAtTime(time: Time): Seconds {\n\t\treturn this._clock.getSecondsAtTime(time);\n\t}\n\n\t/**\n\t * Pulses Per Quarter note. This is the smallest resolution\n\t * the Transport timing supports. This should be set once\n\t * on initialization and not set again. Changing this value\n\t * after other objects have been created can cause problems.\n\t */\n\tget PPQ(): number {\n\t\treturn this._clock.frequency.multiplier;\n\t}\n\tset PPQ(ppq: number) {\n\t\tthis._clock.frequency.multiplier = ppq;\n\t}\n\n\t//-------------------------------------\n\t// \tSYNCING\n\t//-------------------------------------\n\n\t/**\n\t * Returns the time aligned to the next subdivision\n\t * of the Transport. If the Transport is not started,\n\t * it will return 0.\n\t * Note: this will not work precisely during tempo ramps.\n\t * @param  subdivision  The subdivision to quantize to\n\t * @return  The context time of the next subdivision.\n\t * @example\n\t * // the transport must be started, otherwise returns 0\n\t * Tone.Transport.start(); \n\t * Tone.Transport.nextSubdivision(\"4n\");\n\t */\n\tnextSubdivision(subdivision?: Time): Seconds {\n\t\tsubdivision = this.toTicks(subdivision);\n\t\tif (this.state !== \"started\") {\n\t\t\t// if the transport's not started, return 0\n\t\t\treturn 0;\n\t\t} else {\n\t\t\tconst now = this.now();\n\t\t\t// the remainder of the current ticks and the subdivision\n\t\t\tconst transportPos = this.getTicksAtTime(now);\n\t\t\tconst remainingTicks = subdivision - transportPos % subdivision;\n\t\t\treturn this._clock.nextTickTime(remainingTicks, now);\n\t\t}\n\t}\n\n\t/**\n\t * Attaches the signal to the tempo control signal so that\n\t * any changes in the tempo will change the signal in the same\n\t * ratio.\n\t *\n\t * @param signal\n\t * @param ratio Optionally pass in the ratio between the two signals.\n\t * \t\t\tOtherwise it will be computed based on their current values.\n\t */\n\tsyncSignal(signal: Signal<any>, ratio?: number): this {\n\t\tif (!ratio) {\n\t\t\t// get the sync ratio\n\t\t\tconst now = this.now();\n\t\t\tif (signal.getValueAtTime(now) !== 0) {\n\t\t\t\tconst bpm = this.bpm.getValueAtTime(now);\n\t\t\t\tconst computedFreq = 1 / (60 / bpm / this.PPQ);\n\t\t\t\tratio = signal.getValueAtTime(now) / computedFreq;\n\t\t\t} else {\n\t\t\t\tratio = 0;\n\t\t\t}\n\t\t}\n\t\tconst ratioSignal = new Gain(ratio);\n\t\t// @ts-ignore\n\t\tthis.bpm.connect(ratioSignal);\n\t\t// @ts-ignore\n\t\tratioSignal.connect(signal._param);\n\t\tthis._syncedSignals.push({\n\t\t\tinitial: signal.value,\n\t\t\tratio: ratioSignal,\n\t\t\tsignal,\n\t\t});\n\t\tsignal.value = 0;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Unsyncs a previously synced signal from the transport's control.\n\t * See Transport.syncSignal.\n\t */\n\tunsyncSignal(signal: Signal<any>): this {\n\t\tfor (let i = this._syncedSignals.length - 1; i >= 0; i--) {\n\t\t\tconst syncedSignal = this._syncedSignals[i];\n\t\t\tif (syncedSignal.signal === signal) {\n\t\t\t\tsyncedSignal.ratio.dispose();\n\t\t\t\tsyncedSignal.signal.value = syncedSignal.initial;\n\t\t\t\tthis._syncedSignals.splice(i, 1);\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Clean up.\n\t */\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._clock.dispose();\n\t\twritable(this, \"bpm\");\n\t\tthis._timeline.dispose();\n\t\tthis._repeatedEvents.dispose();\n\t\treturn this;\n\t}\n\n\t//-------------------------------------\n\t// EMITTER MIXIN TO SATISFY COMPILER\n\t//-------------------------------------\n\n\ton!: (event: TransportEventNames, callback: (...args: any[]) => void) => this;\n\tonce!: (event: TransportEventNames, callback: (...args: any[]) => void) => this;\n\toff!: (event: TransportEventNames, callback?: ((...args: any[]) => void) | undefined) => this;\n\temit!: (event: any, ...args: any[]) => this;\n}\n\nEmitter.mixin(Transport);\n\n//-------------------------------------\n// \tINITIALIZATION\n//-------------------------------------\n\nonContextInit(context => {\n\tcontext.transport = new Transport({ context });\n});\n\nonContextClose(context => {\n\tcontext.transport.dispose();\n});\n","import { Volume } from \"../component/channel/Volume\";\nimport \"../core/context/Destination\";\nimport \"../core/clock/Transport\";\nimport { Param } from \"../core/context/Param\";\nimport { OutputNode, ToneAudioNode, ToneAudioNodeOptions } from \"../core/context/ToneAudioNode\";\nimport { Decibels, Seconds, Time } from \"../core/type/Units\";\nimport { defaultArg } from \"../core/util/Defaults\";\nimport { noOp, readOnly } from \"../core/util/Interface\";\nimport { BasicPlaybackState, StateTimeline, StateTimelineEvent } from \"../core/util/StateTimeline\";\nimport { isDefined, isUndef } from \"../core/util/TypeCheck\";\nimport { assert, assertContextRunning } from \"../core/util/Debug\";\nimport { GT } from \"../core/util/Math\";\n\ntype onStopCallback = (source: Source<any>) => void;\n\nexport interface SourceOptions extends ToneAudioNodeOptions {\n\tvolume: Decibels;\n\tmute: boolean;\n\tonstop: onStopCallback;\n}\n\n/**\n * Base class for sources. \n * start/stop of this.context.transport.\n * \n * ```\n * // Multiple state change events can be chained together,\n * // but must be set in the correct order and with ascending times\n * // OK\n * state.start().stop(\"+0.2\");\n * // OK\n * state.start().stop(\"+0.2\").start(\"+0.4\").stop(\"+0.7\")\n * // BAD\n * state.stop(\"+0.2\").start();\n * // BAD\n * state.start(\"+0.3\").stop(\"+0.2\");\n * ```\n */\nexport abstract class Source<Options extends SourceOptions> extends ToneAudioNode<Options> {\n\n\t/**\n\t * The output volume node\n\t */\n\tprivate _volume: Volume;\n\n\t/**\n\t * The output note\n\t */\n\toutput: OutputNode;\n\n\t/**\n\t * Sources have no inputs\n\t */\n\tinput = undefined;\n\n\t/**\n\t * The volume of the output in decibels.\n\t * @example\n\t * const source = new Tone.PWMOscillator().toDestination();\n\t * source.volume.value = -6;\n\t */\n\tvolume: Param<\"decibels\">;\n\n\t/**\n\t * The callback to invoke when the source is stopped.\n\t */\n\tonstop: onStopCallback;\n\n\t/**\n\t * Keep track of the scheduled state.\n\t */\n\tprotected _state: StateTimeline<{\n\t\tduration?: Seconds;\n\t\toffset?: Seconds;\n\t\t/**\n\t\t * Either the buffer is explicitly scheduled to end using the stop method,\n\t\t * or it's implicitly ended when the buffer is over.\n\t\t */\n\t\timplicitEnd?: boolean;\n\t}> = new StateTimeline(\"stopped\");\n\n\t/**\n\t * The synced `start` callback function from the transport\n\t */\n\tprotected _synced = false;\n\n\t/**\n\t * Keep track of all of the scheduled event ids\n\t */\n\tprivate _scheduled: number[] = [];\n\n\t/**\n\t * Placeholder functions for syncing/unsyncing to transport\n\t */\n\tprivate _syncedStart: (time: Seconds, offset: Seconds) => void = noOp;\n\tprivate _syncedStop: (time: Seconds) => void = noOp;\n\n\tconstructor(options: SourceOptions) {\n\t\tsuper(options);\n\t\tthis._state.memory = 100;\n\t\tthis._state.increasing = true;\n\n\t\tthis._volume = this.output = new Volume({\n\t\t\tcontext: this.context,\n\t\t\tmute: options.mute,\n\t\t\tvolume: options.volume,\n\t\t});\n\t\tthis.volume = this._volume.volume;\n\t\treadOnly(this, \"volume\");\n\t\tthis.onstop = options.onstop;\n\t}\n\n\tstatic getDefaults(): SourceOptions {\n\t\treturn Object.assign(ToneAudioNode.getDefaults(), {\n\t\t\tmute: false,\n\t\t\tonstop: noOp,\n\t\t\tvolume: 0,\n\t\t});\n\t}\n\n\t/**\n\t * Returns the playback state of the source, either \"started\" or \"stopped\".\n\t * @example\n\t * const player = new Tone.Player(\"https://tonejs.github.io/audio/berklee/ahntone_c3.mp3\", () => {\n\t * \tplayer.start();\n\t * \tconsole.log(player.state);\n\t * }).toDestination();\n\t */\n\tget state(): BasicPlaybackState {\n\t\tif (this._synced) {\n\t\t\tif (this.context.transport.state === \"started\") {\n\t\t\t\treturn this._state.getValueAtTime(this.context.transport.seconds) as BasicPlaybackState;\n\t\t\t} else {\n\t\t\t\treturn \"stopped\";\n\t\t\t}\n\t\t} else {\n\t\t\treturn this._state.getValueAtTime(this.now()) as BasicPlaybackState;\n\t\t}\n\t}\n\n\t/**\n\t * Mute the output.\n\t * @example\n\t * const osc = new Tone.Oscillator().toDestination().start();\n\t * // mute the output\n\t * osc.mute = true;\n\t */\n\tget mute(): boolean {\n\t\treturn this._volume.mute;\n\t}\n\tset mute(mute: boolean) {\n\t\tthis._volume.mute = mute;\n\t}\n\n\t// overwrite these functions\n\tprotected abstract _start(time: Time, offset?: Time, duration?: Time): void;\n\tprotected abstract _stop(time: Time): void;\n\tprotected abstract _restart(time: Seconds, offset?: Time, duration?: Time): void;\n\n\t/**\n\t * Ensure that the scheduled time is not before the current time.\n\t * Should only be used when scheduled unsynced.\n\t */\n\tprivate _clampToCurrentTime(time: Seconds): Seconds {\n\t\tif (this._synced) {\n\t\t\treturn time;\n\t\t} else {\n\t\t\treturn Math.max(time, this.context.currentTime);\n\t\t}\n\t}\n\n\t/**\n\t * Start the source at the specified time. If no time is given,\n\t * start the source now.\n\t * @param  time When the source should be started.\n\t * @example\n\t * const source = new Tone.Oscillator().toDestination();\n\t * source.start(\"+0.5\"); // starts the source 0.5 seconds from now\n\t */\n\tstart(time?: Time, offset?: Time, duration?: Time): this {\n\t\tlet computedTime = isUndef(time) && this._synced ? this.context.transport.seconds : this.toSeconds(time);\n\t\tcomputedTime = this._clampToCurrentTime(computedTime);\n\t\t// if it's started, stop it and restart it\n\t\tif (!this._synced && this._state.getValueAtTime(computedTime) === \"started\") {\n\t\t\t// time should be strictly greater than the previous start time\n\t\t\tassert(GT(computedTime, (this._state.get(computedTime) as StateTimelineEvent).time), \"Start time must be strictly greater than previous start time\");\n\t\t\tthis._state.cancel(computedTime);\n\t\t\tthis._state.setStateAtTime(\"started\", computedTime);\n\t\t\tthis.log(\"restart\", computedTime);\n\t\t\tthis.restart(computedTime, offset, duration);\n\t\t} else {\n\t\t\tthis.log(\"start\", computedTime);\n\t\t\tthis._state.setStateAtTime(\"started\", computedTime);\n\t\t\tif (this._synced) {\n\t\t\t\t// add the offset time to the event\n\t\t\t\tconst event = this._state.get(computedTime);\n\t\t\t\tif (event) {\n\t\t\t\t\tevent.offset = this.toSeconds(defaultArg(offset, 0));\n\t\t\t\t\tevent.duration = duration ? this.toSeconds(duration) : undefined;\n\t\t\t\t}\n\t\t\t\tconst sched = this.context.transport.schedule(t => {\n\t\t\t\t\tthis._start(t, offset, duration);\n\t\t\t\t}, computedTime);\n\t\t\t\tthis._scheduled.push(sched);\n\n\t\t\t\t// if the transport is already started\n\t\t\t\t// and the time is greater than where the transport is\n\t\t\t\tif (this.context.transport.state === \"started\" && \n\t\t\t\t\tthis.context.transport.getSecondsAtTime(this.immediate()) > computedTime) {\n\t\t\t\t\tthis._syncedStart(this.now(), this.context.transport.seconds);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tassertContextRunning(this.context);\n\t\t\t\tthis._start(computedTime, offset, duration);\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Stop the source at the specified time. If no time is given,\n\t * stop the source now.\n\t * @param  time When the source should be stopped.\n\t * @example\n\t * const source = new Tone.Oscillator().toDestination();\n\t * source.start();\n\t * source.stop(\"+0.5\"); // stops the source 0.5 seconds from now\n\t */\n\tstop(time?: Time): this {\n\t\tlet computedTime = isUndef(time) && this._synced ? this.context.transport.seconds : this.toSeconds(time);\n\t\tcomputedTime = this._clampToCurrentTime(computedTime);\n\t\tif (this._state.getValueAtTime(computedTime) === \"started\" || isDefined(this._state.getNextState(\"started\", computedTime))) {\n\t\t\tthis.log(\"stop\", computedTime);\n\t\t\tif (!this._synced) {\n\t\t\t\tthis._stop(computedTime);\n\t\t\t} else {\n\t\t\t\tconst sched = this.context.transport.schedule(this._stop.bind(this), computedTime);\n\t\t\t\tthis._scheduled.push(sched);\n\t\t\t}\n\t\t\tthis._state.cancel(computedTime);\n\t\t\tthis._state.setStateAtTime(\"stopped\", computedTime);\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Restart the source.\n\t */\n\trestart(time?: Time, offset?: Time, duration?: Time): this {\n\t\ttime = this.toSeconds(time);\n\t\tif (this._state.getValueAtTime(time) === \"started\") {\n\t\t\tthis._state.cancel(time);\n\t\t\tthis._restart(time, offset, duration);\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sync the source to the Transport so that all subsequent\n\t * calls to `start` and `stop` are synced to the TransportTime\n\t * instead of the AudioContext time.\n\t *\n\t * @example\n\t * const osc = new Tone.Oscillator().toDestination();\n\t * // sync the source so that it plays between 0 and 0.3 on the Transport's timeline\n\t * osc.sync().start(0).stop(0.3);\n\t * // start the transport.\n\t * Tone.Transport.start();\n\t * // set it to loop once a second\n\t * Tone.Transport.loop = true;\n\t * Tone.Transport.loopEnd = 1;\n\t */\n\tsync(): this {\n\t\tif (!this._synced) {\n\t\t\tthis._synced = true;\n\t\t\tthis._syncedStart = (time, offset) => {\n\t\t\t\tif (offset > 0) {\n\t\t\t\t\t// get the playback state at that time\n\t\t\t\t\tconst stateEvent = this._state.get(offset);\n\t\t\t\t\t// listen for start events which may occur in the middle of the sync'ed time\n\t\t\t\t\tif (stateEvent && stateEvent.state === \"started\" && stateEvent.time !== offset) {\n\t\t\t\t\t\t// get the offset\n\t\t\t\t\t\tconst startOffset = offset - this.toSeconds(stateEvent.time);\n\t\t\t\t\t\tlet duration: number | undefined;\n\t\t\t\t\t\tif (stateEvent.duration) {\n\t\t\t\t\t\t\tduration = this.toSeconds(stateEvent.duration) - startOffset;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis._start(time, this.toSeconds(stateEvent.offset) + startOffset, duration);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t\tthis._syncedStop = time => {\n\t\t\t\tconst seconds = this.context.transport.getSecondsAtTime(Math.max(time - this.sampleTime, 0));\n\t\t\t\tif (this._state.getValueAtTime(seconds) === \"started\") {\n\t\t\t\t\tthis._stop(time);\n\t\t\t\t}\n\t\t\t};\n\t\t\tthis.context.transport.on(\"start\", this._syncedStart);\n\t\t\tthis.context.transport.on(\"loopStart\", this._syncedStart);\n\t\t\tthis.context.transport.on(\"stop\", this._syncedStop);\n\t\t\tthis.context.transport.on(\"pause\", this._syncedStop);\n\t\t\tthis.context.transport.on(\"loopEnd\", this._syncedStop);\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Unsync the source to the Transport. See Source.sync\n\t */\n\tunsync(): this {\n\t\tif (this._synced) {\n\t\t\tthis.context.transport.off(\"stop\", this._syncedStop);\n\t\t\tthis.context.transport.off(\"pause\", this._syncedStop);\n\t\t\tthis.context.transport.off(\"loopEnd\", this._syncedStop);\n\t\t\tthis.context.transport.off(\"start\", this._syncedStart);\n\t\t\tthis.context.transport.off(\"loopStart\", this._syncedStart);\n\t\t}\n\t\tthis._synced = false;\n\t\t// clear all of the scheduled ids\n\t\tthis._scheduled.forEach(id => this.context.transport.clear(id));\n\t\tthis._scheduled = [];\n\t\tthis._state.cancel(0);\n\t\t// stop it also\n\t\tthis._stop(0);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Clean up.\n\t */\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis.onstop = noOp;\n\t\tthis.unsync();\n\t\tthis._volume.dispose();\n\t\tthis._state.dispose();\n\t\treturn this;\n\t}\n}\n","import { connect } from \"../../core/context/ToneAudioNode\";\nimport { Param } from \"../../core/context/Param\";\nimport { ToneAudioBuffer } from \"../../core/context/ToneAudioBuffer\";\nimport { GainFactor, Positive, Seconds, Time } from \"../../core/type/Units\";\nimport { defaultArg, optionsFromArguments } from \"../../core/util/Defaults\";\nimport { noOp } from \"../../core/util/Interface\";\nimport { isDefined } from \"../../core/util/TypeCheck\";\nimport { assert } from \"../../core/util/Debug\";\nimport { OneShotSource, OneShotSourceCurve, OneShotSourceOptions } from \"../OneShotSource\";\nimport { EQ, GTE, LT } from \"../../core/util/Math\";\n\nexport type ToneBufferSourceCurve = OneShotSourceCurve;\n\nexport interface ToneBufferSourceOptions extends OneShotSourceOptions {\n\turl: string | AudioBuffer | ToneAudioBuffer;\n\tcurve: ToneBufferSourceCurve;\n\tplaybackRate: Positive;\n\tfadeIn: Time;\n\tfadeOut: Time;\n\tloopStart: Time;\n\tloopEnd: Time;\n\tloop: boolean;\n\tonload: () => void;\n\tonerror: (error: Error) => void;\n}\n\n/**\n * Wrapper around the native BufferSourceNode.\n * @category Source\n */\nexport class ToneBufferSource extends OneShotSource<ToneBufferSourceOptions> {\n\n\treadonly name: string = \"ToneBufferSource\";\n\n\t/**\n\t * The oscillator\n\t */\n\tprivate _source = this.context.createBufferSource();\n\tprotected _internalChannels = [this._source];\n\n\t/**\n\t * The frequency of the oscillator\n\t */\n\treadonly playbackRate: Param<\"positive\">;\n\n\t/**\n\t * The private instance of the buffer object\n\t */\n\tprivate _buffer: ToneAudioBuffer;\n\n\t/**\n\t * indicators if the source has started/stopped\n\t */\n\tprivate _sourceStarted = false;\n\tprivate _sourceStopped = false;\n\n\t/**\n\t * @param url The buffer to play or url to load\n\t * @param onload The callback to invoke when the buffer is done playing.\n\t */\n\tconstructor(url?: ToneAudioBuffer | AudioBuffer | string, onload?: () => void);\n\tconstructor(options?: Partial<ToneBufferSourceOptions>);\n\tconstructor() {\n\n\t\tsuper(optionsFromArguments(ToneBufferSource.getDefaults(), arguments, [\"url\", \"onload\"]));\n\t\tconst options = optionsFromArguments(ToneBufferSource.getDefaults(), arguments, [\"url\", \"onload\"]);\n\n\t\tconnect(this._source, this._gainNode);\n\t\tthis._source.onended = () => this._stopSource();\n\n\t\t/**\n\t\t * The playbackRate of the buffer\n\t\t */\n\t\tthis.playbackRate = new Param({\n\t\t\tcontext: this.context,\n\t\t\tparam: this._source.playbackRate,\n\t\t\tunits: \"positive\",\n\t\t\tvalue: options.playbackRate,\n\t\t});\n\n\t\t// set some values initially\n\t\tthis.loop = options.loop;\n\t\tthis.loopStart = options.loopStart;\n\t\tthis.loopEnd = options.loopEnd;\n\t\tthis._buffer = new ToneAudioBuffer(options.url, options.onload, options.onerror);\n\n\t\tthis._internalChannels.push(this._source);\n\t}\n\n\tstatic getDefaults(): ToneBufferSourceOptions {\n\t\treturn Object.assign(OneShotSource.getDefaults(), {\n\t\t\turl: new ToneAudioBuffer(),\n\t\t\tloop: false,\n\t\t\tloopEnd: 0,\n\t\t\tloopStart: 0,\n\t\t\tonload: noOp,\n\t\t\tonerror: noOp,\n\t\t\tplaybackRate: 1,\n\t\t});\n\t}\n\n\t/**\n\t * The fadeIn time of the amplitude envelope.\n\t */\n\tget fadeIn(): Time {\n\t\treturn this._fadeIn;\n\t}\n\tset fadeIn(t: Time) {\n\t\tthis._fadeIn = t;\n\t}\n\n\t/**\n\t * The fadeOut time of the amplitude envelope.\n\t */\n\tget fadeOut(): Time {\n\t\treturn this._fadeOut;\n\t}\n\tset fadeOut(t: Time) {\n\t\tthis._fadeOut = t;\n\t}\n\n\t/**\n\t * The curve applied to the fades, either \"linear\" or \"exponential\"\n\t */\n\tget curve(): ToneBufferSourceCurve {\n\t\treturn this._curve;\n\t}\n\tset curve(t) {\n\t\tthis._curve = t;\n\t}\n\n\t/**\n\t * Start the buffer\n\t * @param  time When the player should start.\n\t * @param  offset The offset from the beginning of the sample to start at.\n\t * @param  duration How long the sample should play. If no duration is given, it will default to the full length of the sample (minus any offset)\n\t * @param  gain  The gain to play the buffer back at.\n\t */\n\tstart(time?: Time, offset?: Time, duration?: Time, gain: GainFactor = 1): this {\n\t\tassert(this.buffer.loaded, \"buffer is either not set or not loaded\");\n\t\tconst computedTime = this.toSeconds(time);\n\n\t\t// apply the gain envelope\n\t\tthis._startGain(computedTime, gain);\n\n\t\t// if it's a loop the default offset is the loopstart point\n\t\tif (this.loop) {\n\t\t\toffset = defaultArg(offset, this.loopStart);\n\t\t} else {\n\t\t\t// otherwise the default offset is 0\n\t\t\toffset = defaultArg(offset, 0);\n\t\t}\n\t\t// make sure the offset is not less than 0\n\t\tlet computedOffset = Math.max(this.toSeconds(offset), 0);\n\n\t\t// start the buffer source\n\t\tif (this.loop) {\n\t\t\t// modify the offset if it's greater than the loop time\n\t\t\tconst loopEnd = this.toSeconds(this.loopEnd) || this.buffer.duration;\n\t\t\tconst loopStart = this.toSeconds(this.loopStart);\n\t\t\tconst loopDuration = loopEnd - loopStart;\n\t\t\t// move the offset back\n\t\t\tif (GTE(computedOffset, loopEnd)) {\n\t\t\t\tcomputedOffset = ((computedOffset - loopStart) % loopDuration) + loopStart;\n\t\t\t}\n\t\t\t// when the offset is very close to the duration, set it to 0\n\t\t\tif (EQ(computedOffset, this.buffer.duration)) {\n\t\t\t\tcomputedOffset = 0;\n\t\t\t}\n\t\t}\n\t\t\n\t\t// this.buffer.loaded would have return false if the AudioBuffer was undefined\n\t\tthis._source.buffer = this.buffer.get() as AudioBuffer;\n\t\tthis._source.loopEnd = this.toSeconds(this.loopEnd) || this.buffer.duration;\n\t\tif (LT(computedOffset, this.buffer.duration)) {\n\t\t\tthis._sourceStarted = true;\n\t\t\tthis._source.start(computedTime, computedOffset);\n\t\t}\n\n\t\t// if a duration is given, schedule a stop\n\t\tif (isDefined(duration)) {\n\t\t\tlet computedDur = this.toSeconds(duration);\n\t\t\t// make sure it's never negative\n\t\t\tcomputedDur = Math.max(computedDur, 0);\n\t\t\tthis.stop(computedTime + computedDur);\n\t\t}\n\n\t\treturn this;\n\t}\n\n\tprotected _stopSource(time?: Seconds): void {\n\t\tif (!this._sourceStopped && this._sourceStarted) {\n\t\t\tthis._sourceStopped = true;\n\t\t\tthis._source.stop(this.toSeconds(time));\n\t\t\tthis._onended();\n\t\t}\n\t}\n\n\t/**\n\t * If loop is true, the loop will start at this position.\n\t */\n\tget loopStart(): Time {\n\t\treturn this._source.loopStart;\n\t}\n\tset loopStart(loopStart: Time) {\n\t\tthis._source.loopStart = this.toSeconds(loopStart);\n\t}\n\n\t/**\n\t * If loop is true, the loop will end at this position.\n\t */\n\tget loopEnd(): Time {\n\t\treturn this._source.loopEnd;\n\t}\n\tset loopEnd(loopEnd: Time) {\n\t\tthis._source.loopEnd = this.toSeconds(loopEnd);\n\t}\n\n\t/**\n\t * The audio buffer belonging to the player.\n\t */\n\tget buffer(): ToneAudioBuffer {\n\t\treturn this._buffer;\n\t}\n\tset buffer(buffer: ToneAudioBuffer) {\n\t\tthis._buffer.set(buffer);\n\t}\n\n\t/**\n\t * If the buffer should loop once it's over.\n\t */\n\tget loop(): boolean {\n\t\treturn this._source.loop;\n\t}\n\tset loop(loop: boolean) {\n\t\tthis._source.loop = loop;\n\t\tif (this._sourceStarted) {\n\t\t\tthis.cancelStop();\n\t\t}\n\t}\n\n\t/**\n\t * Clean up.\n\t */\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._source.onended = null;\n\t\tthis._source.disconnect();\n\t\tthis._buffer.dispose();\n\t\tthis.playbackRate.dispose();\n\t\treturn this;\n\t}\n}\n","import { ToneAudioBuffer } from \"../core/context/ToneAudioBuffer\";\nimport { Positive, Time } from \"../core/type/Units\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { assert } from \"../core/util/Debug\";\nimport { Source, SourceOptions } from \"../source/Source\";\nimport { ToneBufferSource } from \"./buffer/ToneBufferSource\";\n\nexport type NoiseType = \"white\" | \"brown\" | \"pink\";\n\nexport interface NoiseOptions extends SourceOptions {\n\ttype: NoiseType;\n\tplaybackRate: Positive;\n\tfadeIn: Time;\n\tfadeOut: Time;\n}\n\n/**\n * Noise is a noise generator. It uses looped noise buffers to save on performance.\n * Noise supports the noise types: \"pink\", \"white\", and \"brown\". Read more about\n * colors of noise on [Wikipedia](https://en.wikipedia.org/wiki/Colors_of_noise).\n *\n * @example\n * // initialize the noise and start\n * const noise = new Tone.Noise(\"pink\").start();\n * // make an autofilter to shape the noise\n * const autoFilter = new Tone.AutoFilter({\n * \tfrequency: \"8n\",\n * \tbaseFrequency: 200,\n * \toctaves: 8\n * }).toDestination().start();\n * // connect the noise\n * noise.connect(autoFilter);\n * // start the autofilter LFO\n * autoFilter.start();\n * @category Source\n */\nexport class Noise extends Source<NoiseOptions> {\n\n\treadonly name: string = \"Noise\";\n\n\t/**\n\t * Private reference to the source\n\t */\n\tprivate _source: ToneBufferSource | null = null;\n\n\t/**\n\t * private reference to the type\n\t */\n\tprivate _type!: NoiseType;\n\n\t/**\n\t * The playback rate of the noise. Affects\n\t * the \"frequency\" of the noise.\n\t */\n\tprivate _playbackRate: Positive;\n\n\t/**\n\t * The fadeIn time of the amplitude envelope.\n\t */\n\tprotected _fadeIn: Time;\n\n\t/**\n\t * The fadeOut time of the amplitude envelope.\n\t */\n\tprotected _fadeOut: Time;\n\n\t/**\n\t * @param type the noise type (white|pink|brown)\n\t */\n\tconstructor(type?: NoiseType);\n\tconstructor(options?: Partial<NoiseOptions>);\n\tconstructor() {\n\t\tsuper(optionsFromArguments(Noise.getDefaults(), arguments, [\"type\"]));\n\t\tconst options = optionsFromArguments(Noise.getDefaults(), arguments, [\"type\"]);\n\n\t\tthis._playbackRate = options.playbackRate;\n\t\tthis.type = options.type;\n\t\tthis._fadeIn = options.fadeIn;\n\t\tthis._fadeOut = options.fadeOut;\n\t}\n\n\tstatic getDefaults(): NoiseOptions {\n\t\treturn Object.assign(Source.getDefaults(), {\n\t\t\tfadeIn: 0,\n\t\t\tfadeOut: 0,\n\t\t\tplaybackRate: 1,\n\t\t\ttype: \"white\" as NoiseType,\n\t\t});\n\t}\n\n\t/**\n\t * The type of the noise. Can be \"white\", \"brown\", or \"pink\".\n\t * @example\n\t * const noise = new Tone.Noise().toDestination().start();\n\t * noise.type = \"brown\";\n\t */\n\tget type(): NoiseType {\n\t\treturn this._type;\n\t}\n\tset type(type: NoiseType) {\n\t\tassert(type in _noiseBuffers, \"Noise: invalid type: \" + type);\n\t\tif (this._type !== type) {\n\t\t\tthis._type = type;\n\t\t\t// if it's playing, stop and restart it\n\t\t\tif (this.state === \"started\") {\n\t\t\t\tconst now = this.now();\n\t\t\t\tthis._stop(now);\n\t\t\t\tthis._start(now);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * The playback rate of the noise. Affects\n\t * the \"frequency\" of the noise.\n\t */\n\tget playbackRate(): Positive {\n\t\treturn this._playbackRate;\n\t}\n\tset playbackRate(rate: Positive) {\n\t\tthis._playbackRate = rate;\n\t\tif (this._source) {\n\t\t\tthis._source.playbackRate.value = rate;\n\t\t}\n\t}\n\n\t/**\n\t * internal start method\n\t */\n\tprotected _start(time?: Time): void {\n\t\tconst buffer = _noiseBuffers[this._type];\n\t\tthis._source = new ToneBufferSource({\n\t\t\turl: buffer,\n\t\t\tcontext: this.context,\n\t\t\tfadeIn: this._fadeIn,\n\t\t\tfadeOut: this._fadeOut,\n\t\t\tloop: true,\n\t\t\tonended: () => this.onstop(this),\n\t\t\tplaybackRate: this._playbackRate,\n\t\t}).connect(this.output);\n\t\tthis._source.start(this.toSeconds(time), Math.random() * (buffer.duration - 0.001));\n\t}\n\n\t/**\n\t * internal stop method\n\t */\n\tprotected _stop(time?: Time): void {\n\t\tif (this._source) {\n\t\t\tthis._source.stop(this.toSeconds(time));\n\t\t\tthis._source = null;\n\t\t}\n\t}\n\n\t/**\n\t * The fadeIn time of the amplitude envelope.\n\t */\n\tget fadeIn(): Time {\n\t\treturn this._fadeIn;\n\t}\n\tset fadeIn(time) {\n\t\tthis._fadeIn = time;\n\t\tif (this._source) {\n\t\t\tthis._source.fadeIn = this._fadeIn;\n\t\t}\n\t}\n\n\t/**\n\t * The fadeOut time of the amplitude envelope.\n\t */\n\tget fadeOut(): Time {\n\t\treturn this._fadeOut;\n\t}\n\tset fadeOut(time) {\n\t\tthis._fadeOut = time;\n\t\tif (this._source) {\n\t\t\tthis._source.fadeOut = this._fadeOut;\n\t\t}\n\t}\n\n\tprotected _restart(time?: Time): void {\n\t\t// TODO could be optimized by cancelling the buffer source 'stop'\n\t\tthis._stop(time);\n\t\tthis._start(time);\n\t}\n\n\t/**\n\t * Clean up.\n\t */\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tif (this._source) {\n\t\t\tthis._source.disconnect();\n\t\t}\n\t\treturn this;\n\t}\n}\n\n//--------------------\n// THE NOISE BUFFERS\n//--------------------\n\n// Noise buffer stats\nconst BUFFER_LENGTH = 44100 * 5;\nconst NUM_CHANNELS = 2;\n\n/**\n * The cached noise buffers\n */\ninterface NoiseCache {\n\t[key: string]: ToneAudioBuffer | null;\n}\n\n/**\n * Cache the noise buffers\n */\nconst _noiseCache: NoiseCache = {\n\tbrown: null,\n\tpink: null,\n\twhite: null,\n};\n\n/**\n * The noise arrays. Generated on initialization.\n * borrowed heavily from https://github.com/zacharydenton/noise.js\n * (c) 2013 Zach Denton (MIT)\n */\nconst _noiseBuffers = {\n\tget brown(): ToneAudioBuffer {\n\t\tif (!_noiseCache.brown) {\n\t\t\tconst buffer: Float32Array[] = [];\n\t\t\tfor (let channelNum = 0; channelNum < NUM_CHANNELS; channelNum++) {\n\t\t\t\tconst channel = new Float32Array(BUFFER_LENGTH);\n\t\t\t\tbuffer[channelNum] = channel;\n\t\t\t\tlet lastOut = 0.0;\n\t\t\t\tfor (let i = 0; i < BUFFER_LENGTH; i++) {\n\t\t\t\t\tconst white = Math.random() * 2 - 1;\n\t\t\t\t\tchannel[i] = (lastOut + (0.02 * white)) / 1.02;\n\t\t\t\t\tlastOut = channel[i];\n\t\t\t\t\tchannel[i] *= 3.5; // (roughly) compensate for gain\n\t\t\t\t}\n\t\t\t}\n\t\t\t_noiseCache.brown = new ToneAudioBuffer().fromArray(buffer);\n\t\t}\n\t\treturn _noiseCache.brown;\n\t},\n\n\tget pink(): ToneAudioBuffer {\n\t\tif (!_noiseCache.pink) {\n\t\t\tconst buffer: Float32Array[] = [];\n\t\t\tfor (let channelNum = 0; channelNum < NUM_CHANNELS; channelNum++) {\n\t\t\t\tconst channel = new Float32Array(BUFFER_LENGTH);\n\t\t\t\tbuffer[channelNum] = channel;\n\t\t\t\tlet b0, b1, b2, b3, b4, b5, b6;\n\t\t\t\tb0 = b1 = b2 = b3 = b4 = b5 = b6 = 0.0;\n\t\t\t\tfor (let i = 0; i < BUFFER_LENGTH; i++) {\n\t\t\t\t\tconst white = Math.random() * 2 - 1;\n\t\t\t\t\tb0 = 0.99886 * b0 + white * 0.0555179;\n\t\t\t\t\tb1 = 0.99332 * b1 + white * 0.0750759;\n\t\t\t\t\tb2 = 0.96900 * b2 + white * 0.1538520;\n\t\t\t\t\tb3 = 0.86650 * b3 + white * 0.3104856;\n\t\t\t\t\tb4 = 0.55000 * b4 + white * 0.5329522;\n\t\t\t\t\tb5 = -0.7616 * b5 - white * 0.0168980;\n\t\t\t\t\tchannel[i] = b0 + b1 + b2 + b3 + b4 + b5 + b6 + white * 0.5362;\n\t\t\t\t\tchannel[i] *= 0.11; // (roughly) compensate for gain\n\t\t\t\t\tb6 = white * 0.115926;\n\t\t\t\t}\n\t\t\t}\n\t\t\t_noiseCache.pink = new ToneAudioBuffer().fromArray(buffer);\n\t\t}\n\t\treturn _noiseCache.pink;\n\t},\n\n\tget white(): ToneAudioBuffer {\n\t\tif (!_noiseCache.white) {\n\t\t\tconst buffer: Float32Array[] = [];\n\t\t\tfor (let channelNum = 0; channelNum < NUM_CHANNELS; channelNum++) {\n\t\t\t\tconst channel = new Float32Array(BUFFER_LENGTH);\n\t\t\t\tbuffer[channelNum] = channel;\n\t\t\t\tfor (let i = 0; i < BUFFER_LENGTH; i++) {\n\t\t\t\t\tchannel[i] = Math.random() * 2 - 1;\n\t\t\t\t}\n\t\t\t}\n\t\t\t_noiseCache.white = new ToneAudioBuffer().fromArray(buffer);\n\t\t}\n\t\treturn _noiseCache.white;\n\t},\n};\n","import { connect, OutputNode, ToneAudioNode, ToneAudioNodeOptions } from \"../core/context/ToneAudioNode\";\nimport { Decibels } from \"../core/type/Units\";\nimport { Volume } from \"../component/channel/Volume\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { assert } from \"../core/util/Debug\";\nimport { Param } from \"../core/context/Param\";\nimport { readOnly } from \"../core/util/Interface\";\nimport { isDefined, isNumber } from \"../core/util/TypeCheck\";\n\nexport interface UserMediaOptions extends ToneAudioNodeOptions {\n\tvolume: Decibels;\n\tmute: boolean;\n}\n/**\n * UserMedia uses MediaDevices.getUserMedia to open up and external microphone or audio input. \n * Check [MediaDevices API Support](https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/getUserMedia)\n * to see which browsers are supported. Access to an external input\n * is limited to secure (HTTPS) connections.\n * @example\n * const meter = new Tone.Meter();\n * const mic = new Tone.UserMedia().connect(meter);\n * mic.open().then(() => {\n * \t// promise resolves when input is available\n * \tconsole.log(\"mic open\");\n * \t// print the incoming mic levels in decibels\n * \tsetInterval(() => console.log(meter.getValue()), 100);\n * }).catch(e => {\n * \t// promise is rejected when the user doesn't have or allow mic access\n * \tconsole.log(\"mic not open\");\n * });\n * @category Source\n */\n\nexport class UserMedia extends ToneAudioNode<UserMediaOptions> {\n\n\treadonly name: string = \"UserMedia\";\n\n\treadonly input: undefined;\n\treadonly output: OutputNode;\n\n\t/**\n\t * The MediaStreamNode\n\t */\n\tprivate _mediaStream?: MediaStreamAudioSourceNode;\n\n\t/**\n\t * The media stream created by getUserMedia.\n\t */\n\tprivate _stream?: MediaStream;\n\n\t/**\n\t * The open device\n\t */\n\tprivate _device?: MediaDeviceInfo;\n\n\t/**\n\t * The output volume node\n\t */\n\tprivate _volume: Volume;\n\n\t/**\n\t * The volume of the output in decibels.\n\t */\n\treadonly volume: Param<\"decibels\">;\n\n\t/**\n\t * @param volume The level of the input in decibels\n\t */\n\tconstructor(volume?: Decibels);\n\tconstructor(options?: Partial<UserMediaOptions>);\n\tconstructor() {\n\n\t\tsuper(optionsFromArguments(UserMedia.getDefaults(), arguments, [\"volume\"]));\n\t\tconst options = optionsFromArguments(UserMedia.getDefaults(), arguments, [\"volume\"]);\n\n\t\tthis._volume = this.output = new Volume({\n\t\t\tcontext: this.context,\n\t\t\tvolume: options.volume,\n\t\t});\n\t\tthis.volume = this._volume.volume;\n\t\treadOnly(this, \"volume\");\n\t\tthis.mute = options.mute;\n\t}\n\n\tstatic getDefaults(): UserMediaOptions {\n\t\treturn Object.assign(ToneAudioNode.getDefaults(), {\n\t\t\tmute: false,\n\t\t\tvolume: 0\n\t\t});\n\t}\n\n\t/**\n\t * Open the media stream. If a string is passed in, it is assumed\n\t * to be the label or id of the stream, if a number is passed in,\n\t * it is the input number of the stream.\n\t * @param  labelOrId The label or id of the audio input media device.\n\t *                   With no argument, the default stream is opened.\n\t * @return The promise is resolved when the stream is open.\n\t */\n\tasync open(labelOrId?: string | number): Promise<this> {\n\t\tassert(UserMedia.supported, \"UserMedia is not supported\");\n\t\t// close the previous stream\n\t\tif (this.state === \"started\") {\n\t\t\tthis.close();\n\t\t}\n\t\tconst devices = await UserMedia.enumerateDevices();\n\t\tif (isNumber(labelOrId)) {\n\t\t\tthis._device = devices[labelOrId];\n\t\t} else {\n\t\t\tthis._device = devices.find((device) => {\n\t\t\t\treturn device.label === labelOrId || device.deviceId === labelOrId;\n\t\t\t});\n\t\t\t// didn't find a matching device\n\t\t\tif (!this._device && devices.length > 0) {\n\t\t\t\tthis._device = devices[0];\n\t\t\t}\n\t\t\tassert(isDefined(this._device), `No matching device ${labelOrId}`);\n\t\t}\n\t\t// do getUserMedia\n\t\tconst constraints = {\n\t\t\taudio: {\n\t\t\t\techoCancellation: false,\n\t\t\t\tsampleRate: this.context.sampleRate,\n\t\t\t\tnoiseSuppression: false,\n\t\t\t\tmozNoiseSuppression: false,\n\t\t\t}\n\t\t};\n\t\tif (this._device) {\n\t\t\t// @ts-ignore\n\t\t\tconstraints.audio.deviceId = this._device.deviceId;\n\t\t}\n\t\tconst stream = await navigator.mediaDevices.getUserMedia(constraints);\n\t\t// start a new source only if the previous one is closed\n\t\tif (!this._stream) {\n\t\t\tthis._stream = stream;\n\t\t\t// Wrap a MediaStreamSourceNode around the live input stream.\n\t\t\tconst mediaStreamNode = this.context.createMediaStreamSource(stream);\n\t\t\t// Connect the MediaStreamSourceNode to a gate gain node\n\t\t\tconnect(mediaStreamNode, this.output);\n\t\t\tthis._mediaStream = mediaStreamNode;\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Close the media stream\n\t */\n\tclose(): this {\n\t\tif (this._stream && this._mediaStream) {\n\t\t\tthis._stream.getAudioTracks().forEach((track) => {\n\t\t\t\ttrack.stop();\n\t\t\t});\n\t\t\tthis._stream = undefined;\n\t\t\t// remove the old media stream\n\t\t\tthis._mediaStream.disconnect();\n\t\t\tthis._mediaStream = undefined;\n\t\t}\n\t\tthis._device = undefined;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Returns a promise which resolves with the list of audio input devices available.\n\t * @return The promise that is resolved with the devices\n\t * @example\n\t * Tone.UserMedia.enumerateDevices().then((devices) => {\n\t * \t// print the device labels\n\t * \tconsole.log(devices.map(device => device.label));\n\t * });\n\t */\n\tstatic async enumerateDevices(): Promise<MediaDeviceInfo[]> {\n\t\tconst allDevices = await navigator.mediaDevices.enumerateDevices();\n\t\treturn allDevices.filter(device => {\n\t\t\treturn device.kind === \"audioinput\";\n\t\t});\n\t}\n\n\t/**\n\t * Returns the playback state of the source, \"started\" when the microphone is open\n\t * and \"stopped\" when the mic is closed.\n\t */\n\tget state() {\n\t\treturn this._stream && this._stream.active ? \"started\" : \"stopped\";\n\t}\n\n\t/**\n\t * Returns an identifier for the represented device that is\n\t * persisted across sessions. It is un-guessable by other applications and\n\t * unique to the origin of the calling application. It is reset when the\n\t * user clears cookies (for Private Browsing, a different identifier is\n\t * used that is not persisted across sessions). Returns undefined when the\n\t * device is not open.\n\t */\n\tget deviceId(): string | undefined {\n\t\tif (this._device) {\n\t\t\treturn this._device.deviceId;\n\t\t} else {\n\t\t\treturn undefined;\n\t\t}\n\t}\n\n\t/**\n\t * Returns a group identifier. Two devices have the\n\t * same group identifier if they belong to the same physical device.\n\t * Returns null  when the device is not open.\n\t */\n\tget groupId(): string | undefined {\n\t\tif (this._device) {\n\t\t\treturn this._device.groupId;\n\t\t} else {\n\t\t\treturn undefined;\n\t\t}\n\t}\n\n\t/**\n\t * Returns a label describing this device (for example \"Built-in Microphone\").\n\t * Returns undefined when the device is not open or label is not available\n\t * because of permissions.\n\t */\n\tget label(): string | undefined {\n\t\tif (this._device) {\n\t\t\treturn this._device.label;\n\t\t} else {\n\t\t\treturn undefined;\n\t\t}\n\t}\n\n\t/**\n\t * Mute the output.\n\t * @example\n\t * const mic = new Tone.UserMedia();\n\t * mic.open().then(() => {\n\t * \t// promise resolves when input is available\n\t * });\n\t * // mute the output\n\t * mic.mute = true;\n\t */\n\tget mute(): boolean {\n\t\treturn this._volume.mute;\n\t}\n\tset mute(mute) {\n\t\tthis._volume.mute = mute;\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis.close();\n\t\tthis._volume.dispose();\n\t\tthis.volume.dispose();\n\t\treturn this;\n\t}\n\n\t/**\n\t * If getUserMedia is supported by the browser.\n\t */\n\tstatic get supported(): boolean {\n\t\treturn isDefined(navigator.mediaDevices) &&\n\t\t\tisDefined(navigator.mediaDevices.getUserMedia);\n\t}\n}\n","import { AudioRange, Cents, Degrees, Frequency, Positive } from \"../../core/type/Units\";\nimport { Omit } from \"../../core/util/Interface\";\nimport { Signal } from \"../../signal/Signal\";\nimport { SourceOptions } from \"../Source\";\nimport { OfflineContext } from \"../../core/context/OfflineContext\";\n\n/**\n * The common interface of all Oscillators\n */\nexport interface ToneOscillatorInterface {\n\n\t/**\n\t * The oscillator type without the partialsCount appended to the end\n\t * @example\n\t * const osc = new Tone.Oscillator();\n\t * osc.type = \"sine2\";\n\t * console.log(osc.baseType); // \"sine\"\n\t */\n\tbaseType: OscillatorType | \"pulse\" | \"pwm\";\n\n\t/**\n\t * The oscillator's type. Also capable of setting the first x number of partials of the oscillator. \n\t * For example: \"sine4\" would set be the first 4 partials of the sine wave and \"triangle8\" would \n\t * set the first 8 partials of the triangle wave.\n\t * @example\n\t * return Tone.Offline(() => {\n\t * \tconst osc = new Tone.Oscillator().toDestination().start();\n\t * \tosc.type = \"sine2\";\n\t * }, 0.1, 1);\n\t */\n\ttype: ExtendedToneOscillatorType;\n\n\t/**\n\t * The frequency value of the oscillator\n\t * @example\n\t * const osc = new Tone.FMOscillator(\"Bb4\").toDestination().start();\n\t * osc.frequency.rampTo(\"D2\", 3);\n\t */\n\treadonly frequency: Signal<\"frequency\">;\n\n\t/**\n\t * The detune value in cents (100th of a semitone).\n\t * @example\n\t * const osc = new Tone.PulseOscillator(\"F3\").toDestination().start();\n\t * // pitch it 1 octave = 12 semitones = 1200 cents\n\t * osc.detune.setValueAtTime(-1200, Tone.now());\n\t * osc.detune.setValueAtTime(1200, Tone.now() + 0.5);\n\t * osc.detune.linearRampToValueAtTime(0, Tone.now() + 1);\n\t * osc.stop(Tone.now() + 1.5);\n\t */\n\treadonly detune: Signal<\"cents\">;\n\n\t/**\n\t * The phase is the starting position within the oscillator's cycle. For example\n\t * a phase of 180 would start halfway through the oscillator's cycle. \n\t * @example\n\t * return Tone.Offline(() => {\n\t * \tconst osc = new Tone.Oscillator({\n\t * \t\tfrequency: 20,\n\t * \t\tphase: 90\n\t * \t}).toDestination().start();\n\t * }, 0.1, 1);\n\t */\n\tphase: Degrees;\n\n\t/**\n\t * The partials describes the relative amplitude of each of the harmonics of the oscillator. \n\t * The first value in the array is the first harmonic (i.e. the fundamental frequency), the \n\t * second harmonic is an octave up, the third harmonic is an octave and a fifth, etc. The resulting\n\t * oscillator output is composed of a sine tone at the relative amplitude at each of the harmonic intervals. \n\t * \n\t * Setting this value will automatically set the type to \"custom\".\n\t * The value is an empty array when the type is not \"custom\".\n\t * @example\n\t * const osc = new Tone.Oscillator(\"F3\").toDestination().start();\n\t * setInterval(() => {\n\t * \t// generate 8 random partials\n\t * \tosc.partials = new Array(8).fill(0).map(() => Math.random());\n\t * }, 1000);\n\t */\n\tpartials: number[];\n\n\t/**\n\t * 'partialCount' offers an alternative way to set the number of used partials.\n\t * When partialCount is 0, the maximum number of partials are used when representing\n\t * the waveform using the periodicWave. When 'partials' is set, this value is\n\t * not settable, but equals the length of the partials array. A square wave wave\n\t * is composed of only odd harmonics up through the harmonic series. Partial count\n\t * can limit the number of harmonics which are used to generate the waveform.\n\t * @example\n\t * const osc = new Tone.Oscillator(\"C3\", \"square\").toDestination().start();\n\t * osc.partialCount = 1;\n\t * setInterval(() => {\n\t * \tosc.partialCount++;\n\t * \tconsole.log(osc.partialCount);\n\t * }, 500);\n\t */\n\tpartialCount?: number;\n\n\t/**\n\t * Returns an array of values which represents the waveform.\n\t * @param length The length of the waveform to return\n\t */\n\tasArray(length: number): Promise<Float32Array>;\n}\n\n/**\n * Render a segment of the oscillator to an offline context and return the results as an array\n */\nexport async function generateWaveform(instance: any, length: number): Promise<Float32Array> {\n\tconst duration = length / instance.context.sampleRate;\n\tconst context = new OfflineContext(1, duration, instance.context.sampleRate);\n\tconst clone = new instance.constructor(Object.assign(instance.get(), {\n\t\t// should do 2 iterations\n\t\tfrequency: 2 / duration,\n\t\t// zero out the detune\n\t\tdetune: 0,\n\t\tcontext\n\t})).toDestination();\n\tclone.start(0);\n\tconst buffer = await context.render();\n\treturn buffer.getChannelData(0);\n}\n\n/**\n * Oscillators with partials\n */\ntype SineWithPartials =\n\t\"sine1\" | \"sine2\" | \"sine3\" | \"sine4\" | \"sine5\" | \"sine6\" | \"sine7\" | \"sine8\" | \"sine9\" |\n\t\"sine10\" | \"sine11\" | \"sine12\" | \"sine13\" | \"sine14\" | \"sine15\" | \"sine16\" | \"sine17\" | \"sine18\" | \"sine19\" |\n\t\"sine20\" | \"sine21\" | \"sine22\" | \"sine23\" | \"sine24\" | \"sine25\" | \"sine26\" | \"sine27\" | \"sine28\" | \"sine29\" |\n\t\"sine30\" | \"sine31\" | \"sine32\";\n\ntype SquareWithPartials =\n\t\"square1\" | \"square2\" | \"square3\" | \"square4\" | \"square5\" | \"square6\" | \"square7\" | \"square8\" | \"square9\" |\n\t\"square10\" | \"square11\" | \"square12\" | \"square13\" | \"square14\" | \"square15\" | \"square16\" | \"square17\" | \"square18\" | \"square19\" |\n\t\"square20\" | \"square21\" | \"square22\" | \"square23\" | \"square24\" | \"square25\" | \"square26\" | \"square27\" | \"square28\" | \"square29\" |\n\t\"square30\" | \"square31\" | \"square32\";\n\ntype SawtoothWithPartials =\n\t\"sawtooth1\" | \"sawtooth2\" | \"sawtooth3\" | \"sawtooth4\" | \"sawtooth5\" | \"sawtooth6\" | \"sawtooth7\" | \"sawtooth8\" | \"sawtooth9\" |\n\t\"sawtooth10\" | \"sawtooth11\" | \"sawtooth12\" | \"sawtooth13\" | \"sawtooth14\" | \"sawtooth15\" | \"sawtooth16\" | \"sawtooth17\" | \"sawtooth18\" | \"sawtooth19\" |\n\t\"sawtooth20\" | \"sawtooth21\" | \"sawtooth22\" | \"sawtooth23\" | \"sawtooth24\" | \"sawtooth25\" | \"sawtooth26\" | \"sawtooth27\" | \"sawtooth28\" | \"sawtooth29\" |\n\t\"sawtooth30\" | \"sawtooth31\" | \"sawtooth32\";\n\ntype TriangleWithPartials =\n\t\"triangle1\" | \"triangle2\" | \"triangle3\" | \"triangle4\" | \"triangle5\" | \"triangle6\" | \"triangle7\" | \"triangle8\" | \"triangle9\" |\n\t\"triangle10\" | \"triangle11\" | \"triangle12\" | \"triangle13\" | \"triangle14\" | \"triangle15\" | \"triangle16\" | \"triangle17\" | \"triangle18\" | \"triangle19\" |\n\t\"triangle20\" | \"triangle21\" | \"triangle22\" | \"triangle23\" | \"triangle24\" | \"triangle25\" | \"triangle26\" | \"triangle27\" | \"triangle28\" | \"triangle29\" |\n\t\"triangle30\" | \"triangle31\" | \"triangle32\";\n\ntype TypeWithPartials = SineWithPartials | SquareWithPartials | TriangleWithPartials | SawtoothWithPartials;\n\ninterface BaseOscillatorOptions extends SourceOptions {\n\tfrequency: Frequency;\n\tdetune: Cents;\n\tphase: Degrees;\n}\n\nexport type NonCustomOscillatorType = Exclude<OscillatorType, \"custom\">;\n\ntype AllNonCustomOscillatorType = NonCustomOscillatorType | TypeWithPartials;\n\nexport type ToneOscillatorType = AllNonCustomOscillatorType | \"custom\";\n\nexport type ExtendedToneOscillatorType = ToneOscillatorType | \"pwm\" | \"pulse\";\n\n/**\n * Oscillator Interfaces\n */\ninterface ToneCustomOscillatorOptions extends BaseOscillatorOptions {\n\ttype: \"custom\";\n\tpartials: number[];\n}\n\ninterface ToneTypeOscillatorOptions extends BaseOscillatorOptions {\n\ttype: NonCustomOscillatorType;\n\tpartialCount?: number;\n}\n\ninterface TonePartialOscillatorOptions extends BaseOscillatorOptions {\n\ttype: TypeWithPartials;\n}\n\nexport type ToneOscillatorConstructorOptions = ToneCustomOscillatorOptions | ToneTypeOscillatorOptions | TonePartialOscillatorOptions;\n\nexport interface ToneOscillatorOptions extends BaseOscillatorOptions {\n\ttype: ToneOscillatorType;\n\tpartialCount: number;\n\tpartials: number[];\n}\n\n/**\n * FMOscillator Interface\n */\ninterface FMBaseOscillatorOptions extends BaseOscillatorOptions {\n\tharmonicity: Positive;\n\tmodulationIndex: Positive;\n\tmodulationType: AllNonCustomOscillatorType;\n}\n\ninterface FMCustomOscillatorOptions extends FMBaseOscillatorOptions {\n\ttype: \"custom\";\n\tpartials: number[];\n}\n\ninterface FMTypeOscillatorOptions extends FMBaseOscillatorOptions {\n\ttype: NonCustomOscillatorType;\n\tpartialsCount?: number;\n}\n\ninterface FMPartialsOscillatorOptions extends FMBaseOscillatorOptions {\n\ttype: TypeWithPartials;\n}\n\nexport type FMConstructorOptions = FMTypeOscillatorOptions | FMCustomOscillatorOptions | FMPartialsOscillatorOptions;\n\nexport interface FMOscillatorOptions extends ToneOscillatorOptions {\n\tharmonicity: Positive;\n\tmodulationIndex: Positive;\n\tmodulationType: AllNonCustomOscillatorType;\n}\n\n/**\n * AMOscillator Interface\n */\ninterface AMBaseOscillatorOptions extends BaseOscillatorOptions {\n\tharmonicity: Positive;\n\tmodulationType: AllNonCustomOscillatorType;\n}\n\ninterface AMCustomOscillatorOptions extends AMBaseOscillatorOptions {\n\ttype: \"custom\";\n\tpartials: number[];\n}\n\ninterface AMTypeOscillatorOptions extends AMBaseOscillatorOptions {\n\ttype: NonCustomOscillatorType;\n\tpartialsCount?: number;\n}\n\ninterface AMPartialsOscillatorOptions extends AMBaseOscillatorOptions {\n\ttype: TypeWithPartials;\n}\n\nexport type AMConstructorOptions = AMCustomOscillatorOptions | AMTypeOscillatorOptions | AMPartialsOscillatorOptions;\n\nexport interface AMOscillatorOptions extends ToneOscillatorOptions {\n\tharmonicity: Positive;\n\tmodulationType: AllNonCustomOscillatorType;\n}\n/**\n * FatOscillator\n */\ninterface FatBaseOscillatorOptions extends BaseOscillatorOptions {\n\tspread: Cents;\n\tcount: Positive;\n}\n\ninterface FatCustomOscillatorOptions extends FatBaseOscillatorOptions {\n\ttype: \"custom\";\n\tpartials: number[];\n}\n\ninterface FatTypeOscillatorOptions extends FatBaseOscillatorOptions {\n\ttype: NonCustomOscillatorType;\n\tpartialCount?: number;\n}\n\ninterface FatPartialsOscillatorOptions extends FatBaseOscillatorOptions {\n\ttype: TypeWithPartials;\n}\n\nexport type FatConstructorOptions = FatCustomOscillatorOptions | FatTypeOscillatorOptions | FatPartialsOscillatorOptions;\n\nexport interface FatOscillatorOptions extends ToneOscillatorOptions {\n\tspread: Cents;\n\tcount: Positive;\n}\n\n/**\n * Pulse Oscillator\n */\nexport interface PulseOscillatorOptions extends BaseOscillatorOptions {\n\ttype: \"pulse\";\n\twidth: AudioRange;\n}\n\n/**\n * PWM Oscillator\n */\nexport interface PWMOscillatorOptions extends BaseOscillatorOptions {\n\ttype: \"pwm\";\n\tmodulationFrequency: Frequency;\n}\n\n/**\n * OMNI OSCILLATOR\n */\n\n/**\n * FM Oscillators with partials\n */\ntype FMSineWithPartials =\n\t\"fmsine1\" | \"fmsine2\" | \"fmsine3\" | \"fmsine4\" | \"fmsine5\" | \"fmsine6\" | \"fmsine7\" | \"fmsine8\" | \"fmsine9\" |\n\t\"fmsine10\" | \"fmsine11\" | \"fmsine12\" | \"fmsine13\" | \"fmsine14\" | \"fmsine15\" | \"fmsine16\" | \"fmsine17\" | \"fmsine18\" | \"fmsine19\" |\n\t\"fmsine20\" | \"fmsine21\" | \"fmsine22\" | \"fmsine23\" | \"fmsine24\" | \"fmsine25\" | \"fmsine26\" | \"fmsine27\" | \"fmsine28\" | \"fmsine29\" |\n\t\"fmsine30\" | \"fmsine31\" | \"fmsine32\";\n\ntype FMSquareWithPartials =\n\t\"fmsquare1\" | \"fmsquare2\" | \"fmsquare3\" | \"fmsquare4\" | \"fmsquare5\" | \"fmsquare6\" | \"fmsquare7\" | \"fmsquare8\" | \"fmsquare9\" |\n\t\"fmsquare10\" | \"fmsquare11\" | \"fmsquare12\" | \"fmsquare13\" | \"fmsquare14\" | \"fmsquare15\" | \"fmsquare16\" | \"fmsquare17\" | \"fmsquare18\" | \"fmsquare19\" |\n\t\"fmsquare20\" | \"fmsquare21\" | \"fmsquare22\" | \"fmsquare23\" | \"fmsquare24\" | \"fmsquare25\" | \"fmsquare26\" | \"fmsquare27\" | \"fmsquare28\" | \"fmsquare29\" |\n\t\"fmsquare30\" | \"fmsquare31\" | \"fmsquare32\";\n\ntype FMSawtoothWithPartials =\n\t\"fmsawtooth1\" | \"fmsawtooth2\" | \"fmsawtooth3\" | \"fmsawtooth4\" | \"fmsawtooth5\" | \"fmsawtooth6\" | \"fmsawtooth7\" | \"fmsawtooth8\" | \"fmsawtooth9\" |\n\t\"fmsawtooth10\" | \"fmsawtooth11\" | \"fmsawtooth12\" | \"fmsawtooth13\" | \"fmsawtooth14\" | \"fmsawtooth15\" | \"fmsawtooth16\" | \"fmsawtooth17\" | \"fmsawtooth18\" | \"fmsawtooth19\" |\n\t\"fmsawtooth20\" | \"fmsawtooth21\" | \"fmsawtooth22\" | \"fmsawtooth23\" | \"fmsawtooth24\" | \"fmsawtooth25\" | \"fmsawtooth26\" | \"fmsawtooth27\" | \"fmsawtooth28\" | \"fmsawtooth29\" |\n\t\"fmsawtooth30\" | \"fmsawtooth31\" | \"fmsawtooth32\";\n\ntype FMTriangleWithPartials =\n\t\"fmtriangle1\" | \"fmtriangle2\" | \"fmtriangle3\" | \"fmtriangle4\" | \"fmtriangle5\" | \"fmtriangle6\" | \"fmtriangle7\" | \"fmtriangle8\" | \"fmtriangle9\" |\n\t\"fmtriangle10\" | \"fmtriangle11\" | \"fmtriangle12\" | \"fmtriangle13\" | \"fmtriangle14\" | \"fmtriangle15\" | \"fmtriangle16\" | \"fmtriangle17\" | \"fmtriangle18\" | \"fmtriangle19\" |\n\t\"fmtriangle20\" | \"fmtriangle21\" | \"fmtriangle22\" | \"fmtriangle23\" | \"fmtriangle24\" | \"fmtriangle25\" | \"fmtriangle26\" | \"fmtriangle27\" | \"fmtriangle28\" | \"fmtriangle29\" |\n\t\"fmtriangle30\" | \"fmtriangle31\" | \"fmtriangle32\";\n\ntype FMTypeWithPartials = FMSineWithPartials | FMSquareWithPartials | FMSawtoothWithPartials | FMTriangleWithPartials;\n\n/**\n * AM Oscillators with partials\n */\ntype AMSineWithPartials =\n\t\"amsine1\" | \"amsine2\" | \"amsine3\" | \"amsine4\" | \"amsine5\" | \"amsine6\" | \"amsine7\" | \"amsine8\" | \"amsine9\" |\n\t\"amsine10\" | \"amsine11\" | \"amsine12\" | \"amsine13\" | \"amsine14\" | \"amsine15\" | \"amsine16\" | \"amsine17\" | \"amsine18\" | \"amsine19\" |\n\t\"amsine20\" | \"amsine21\" | \"amsine22\" | \"amsine23\" | \"amsine24\" | \"amsine25\" | \"amsine26\" | \"amsine27\" | \"amsine28\" | \"amsine29\" |\n\t\"amsine30\" | \"amsine31\" | \"amsine32\";\n\ntype AMSquareWithPartials =\n\t\"amsquare1\" | \"amsquare2\" | \"amsquare3\" | \"amsquare4\" | \"amsquare5\" | \"amsquare6\" | \"amsquare7\" | \"amsquare8\" | \"amsquare9\" |\n\t\"amsquare10\" | \"amsquare11\" | \"amsquare12\" | \"amsquare13\" | \"amsquare14\" | \"amsquare15\" | \"amsquare16\" | \"amsquare17\" | \"amsquare18\" | \"amsquare19\" |\n\t\"amsquare20\" | \"amsquare21\" | \"amsquare22\" | \"amsquare23\" | \"amsquare24\" | \"amsquare25\" | \"amsquare26\" | \"amsquare27\" | \"amsquare28\" | \"amsquare29\" |\n\t\"amsquare30\" | \"amsquare31\" | \"amsquare32\";\n\ntype AMSawtoothWithPartials =\n\t\"amsawtooth1\" | \"amsawtooth2\" | \"amsawtooth3\" | \"amsawtooth4\" | \"amsawtooth5\" | \"amsawtooth6\" | \"amsawtooth7\" | \"amsawtooth8\" | \"amsawtooth9\" |\n\t\"amsawtooth10\" | \"amsawtooth11\" | \"amsawtooth12\" | \"amsawtooth13\" | \"amsawtooth14\" | \"amsawtooth15\" | \"amsawtooth16\" | \"amsawtooth17\" | \"amsawtooth18\" | \"amsawtooth19\" |\n\t\"amsawtooth20\" | \"amsawtooth21\" | \"amsawtooth22\" | \"amsawtooth23\" | \"amsawtooth24\" | \"amsawtooth25\" | \"amsawtooth26\" | \"amsawtooth27\" | \"amsawtooth28\" | \"amsawtooth29\" |\n\t\"amsawtooth30\" | \"amsawtooth31\" | \"amsawtooth32\";\n\ntype AMTriangleWithPartials =\n\t\"amtriangle1\" | \"amtriangle2\" | \"amtriangle3\" | \"amtriangle4\" | \"amtriangle5\" | \"amtriangle6\" | \"amtriangle7\" | \"amtriangle8\" | \"amtriangle9\" |\n\t\"amtriangle10\" | \"amtriangle11\" | \"amtriangle12\" | \"amtriangle13\" | \"amtriangle14\" | \"amtriangle15\" | \"amtriangle16\" | \"amtriangle17\" | \"amtriangle18\" | \"amtriangle19\" |\n\t\"amtriangle20\" | \"amtriangle21\" | \"amtriangle22\" | \"amtriangle23\" | \"amtriangle24\" | \"amtriangle25\" | \"amtriangle26\" | \"amtriangle27\" | \"amtriangle28\" | \"amtriangle29\" |\n\t\"amtriangle30\" | \"amtriangle31\" | \"amtriangle32\";\n\ntype AMTypeWithPartials = AMSineWithPartials | AMSquareWithPartials | AMSawtoothWithPartials | AMTriangleWithPartials;\n\n/**\n * Fat Oscillators with partials\n */\ntype FatSineWithPartials =\n\t\"fatsine1\" | \"fatsine2\" | \"fatsine3\" | \"fatsine4\" | \"fatsine5\" | \"fatsine6\" | \"fatsine7\" | \"fatsine8\" | \"fatsine9\" |\n\t\"fatsine10\" | \"fatsine11\" | \"fatsine12\" | \"fatsine13\" | \"fatsine14\" | \"fatsine15\" | \"fatsine16\" | \"fatsine17\" | \"fatsine18\" | \"fatsine19\" |\n\t\"fatsine20\" | \"fatsine21\" | \"fatsine22\" | \"fatsine23\" | \"fatsine24\" | \"fatsine25\" | \"fatsine26\" | \"fatsine27\" | \"fatsine28\" | \"fatsine29\" |\n\t\"fatsine30\" | \"fatsine31\" | \"fatsine32\";\n\ntype FatSquareWithPartials =\n\t\"fatsquare1\" | \"fatsquare2\" | \"fatsquare3\" | \"fatsquare4\" | \"fatsquare5\" | \"fatsquare6\" | \"fatsquare7\" | \"fatsquare8\" | \"fatsquare9\" |\n\t\"fatsquare10\" | \"fatsquare11\" | \"fatsquare12\" | \"fatsquare13\" | \"fatsquare14\" | \"fatsquare15\" | \"fatsquare16\" | \"fatsquare17\" | \"fatsquare18\" | \"fatsquare19\" |\n\t\"fatsquare20\" | \"fatsquare21\" | \"fatsquare22\" | \"fatsquare23\" | \"fatsquare24\" | \"fatsquare25\" | \"fatsquare26\" | \"fatsquare27\" | \"fatsquare28\" | \"fatsquare29\" |\n\t\"fatsquare30\" | \"fatsquare31\" | \"fatsquare32\";\n\ntype FatSawtoothWithPartials =\n\t\"fatsawtooth1\" | \"fatsawtooth2\" | \"fatsawtooth3\" | \"fatsawtooth4\" | \"fatsawtooth5\" | \"fatsawtooth6\" | \"fatsawtooth7\" | \"fatsawtooth8\" | \"fatsawtooth9\" |\n\t\"fatsawtooth10\" | \"fatsawtooth11\" | \"fatsawtooth12\" | \"fatsawtooth13\" | \"fatsawtooth14\" | \"fatsawtooth15\" | \"fatsawtooth16\" | \"fatsawtooth17\" | \"fatsawtooth18\" | \"fatsawtooth19\" |\n\t\"fatsawtooth20\" | \"fatsawtooth21\" | \"fatsawtooth22\" | \"fatsawtooth23\" | \"fatsawtooth24\" | \"fatsawtooth25\" | \"fatsawtooth26\" | \"fatsawtooth27\" | \"fatsawtooth28\" | \"fatsawtooth29\" |\n\t\"fatsawtooth30\" | \"fatsawtooth31\" | \"fatsawtooth32\";\n\ntype FatTriangleWithPartials =\n\t\"fattriangle1\" | \"fattriangle2\" | \"fattriangle3\" | \"fattriangle4\" | \"fattriangle5\" | \"fattriangle6\" | \"fattriangle7\" | \"fattriangle8\" | \"fattriangle9\" |\n\t\"fattriangle10\" | \"fattriangle11\" | \"fattriangle12\" | \"fattriangle13\" | \"fattriangle14\" | \"fattriangle15\" | \"fattriangle16\" | \"fattriangle17\" | \"fattriangle18\" | \"fattriangle19\" |\n\t\"fattriangle20\" | \"fattriangle21\" | \"fattriangle22\" | \"fattriangle23\" | \"fattriangle24\" | \"fattriangle25\" | \"fattriangle26\" | \"fattriangle27\" | \"fattriangle28\" | \"fattriangle29\" |\n\t\"fattriangle30\" | \"fattriangle31\" | \"fattriangle32\";\n\ntype FatTypeWithPartials = FatSineWithPartials | FatSquareWithPartials | FatSawtoothWithPartials | FatTriangleWithPartials;\n\n/**\n * Omni FM\n */\ninterface OmniFMCustomOscillatorOptions extends FMBaseOscillatorOptions {\n\ttype: \"fmcustom\";\n\tpartials: number[];\n}\n\ninterface OmniFMTypeOscillatorOptions extends FMBaseOscillatorOptions {\n\ttype: \"fmsine\" | \"fmsquare\" | \"fmsawtooth\" | \"fmtriangle\";\n\tpartialsCount?: number;\n}\n\ninterface OmniFMPartialsOscillatorOptions extends FMBaseOscillatorOptions {\n\ttype: FMTypeWithPartials;\n}\n\n/**\n * Omni AM\n */\ninterface OmniAMCustomOscillatorOptions extends AMBaseOscillatorOptions {\n\ttype: \"amcustom\";\n\tpartials: number[];\n}\n\ninterface OmniAMTypeOscillatorOptions extends AMBaseOscillatorOptions {\n\ttype: \"amsine\" | \"amsquare\" | \"amsawtooth\" | \"amtriangle\";\n\tpartialsCount?: number;\n}\n\ninterface OmniAMPartialsOscillatorOptions extends AMBaseOscillatorOptions {\n\ttype: AMTypeWithPartials;\n}\n\n/**\n * Omni Fat\n */\ninterface OmniFatCustomOscillatorOptions extends FatBaseOscillatorOptions {\n\ttype: \"fatcustom\";\n\tpartials: number[];\n}\n\ninterface OmniFatTypeOscillatorOptions extends FatBaseOscillatorOptions {\n\ttype: \"fatsine\" | \"fatsquare\" | \"fatsawtooth\" | \"fattriangle\";\n\tpartialsCount?: number;\n}\n\ninterface OmniFatPartialsOscillatorOptions extends FatBaseOscillatorOptions {\n\ttype: FatTypeWithPartials;\n}\n\nexport type OmniOscillatorType =\n\t\"fatsine\" | \"fatsquare\" | \"fatsawtooth\" | \"fattriangle\" | \"fatcustom\" | FatTypeWithPartials |\n\t\"fmsine\" | \"fmsquare\" | \"fmsawtooth\" | \"fmtriangle\" | \"fmcustom\" | FMTypeWithPartials |\n\t\"amsine\" | \"amsquare\" | \"amsawtooth\" | \"amtriangle\" | \"amcustom\" | AMTypeWithPartials |\n\tTypeWithPartials | OscillatorType | \"pulse\" | \"pwm\";\n\nexport type OmniOscillatorOptions =\n\tPulseOscillatorOptions | PWMOscillatorOptions |\n\tOmniFatCustomOscillatorOptions | OmniFatTypeOscillatorOptions | OmniFatPartialsOscillatorOptions |\n\tOmniFMCustomOscillatorOptions | OmniFMTypeOscillatorOptions | OmniFMPartialsOscillatorOptions |\n\tOmniAMCustomOscillatorOptions | OmniAMTypeOscillatorOptions | OmniAMPartialsOscillatorOptions |\n\tToneOscillatorConstructorOptions;\n\ntype OmitSourceOptions<T extends BaseOscillatorOptions> = Omit<T, \"frequency\" | \"detune\" | \"context\">;\n\n/**\n * The settable options for the omni oscillator inside of the source which excludes certain attributes that are defined by the parent class\n */\nexport type OmniOscillatorSynthOptions =\n\tOmitSourceOptions<PulseOscillatorOptions> | OmitSourceOptions<PWMOscillatorOptions> |\n\tOmitSourceOptions<OmniFatCustomOscillatorOptions> | OmitSourceOptions<OmniFatTypeOscillatorOptions> | OmitSourceOptions<OmniFatPartialsOscillatorOptions> |\n\tOmitSourceOptions<OmniFMCustomOscillatorOptions> | OmitSourceOptions<OmniFMTypeOscillatorOptions> | OmitSourceOptions<OmniFMPartialsOscillatorOptions> |\n\tOmitSourceOptions<OmniAMCustomOscillatorOptions> | OmitSourceOptions<OmniAMTypeOscillatorOptions> | OmitSourceOptions<OmniAMPartialsOscillatorOptions> |\n\tOmitSourceOptions<ToneCustomOscillatorOptions> | OmitSourceOptions<ToneTypeOscillatorOptions> | OmitSourceOptions<TonePartialOscillatorOptions>\n","import { connect } from \"../../core/context/ToneAudioNode\";\nimport { Param } from \"../../core/context/Param\";\nimport { Cents, Frequency, Seconds, Time } from \"../../core/type/Units\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { OneShotSource, OneShotSourceOptions } from \"../OneShotSource\";\nimport { readOnly } from \"../../core/util/Interface\";\n\nexport interface ToneOscillatorNodeOptions extends OneShotSourceOptions {\n\tfrequency: Frequency;\n\tdetune: Cents;\n\ttype: OscillatorType;\n}\n\n/**\n * Wrapper around the native fire-and-forget OscillatorNode.\n * Adds the ability to reschedule the stop method.\n * ***[[Oscillator]] is better for most use-cases***\n * @category Source\n */\nexport class ToneOscillatorNode extends OneShotSource<ToneOscillatorNodeOptions> {\n\n\treadonly name: string = \"ToneOscillatorNode\";\n\n\t/**\n\t * The oscillator\n\t */\n\tprivate _oscillator = this.context.createOscillator();\n\tprotected _internalChannels = [this._oscillator];\n\n\t/**\n\t * The frequency of the oscillator\n\t */\n\treadonly frequency: Param<\"frequency\">;\n\n\t/**\n\t * The detune of the oscillator\n\t */\n\treadonly detune: Param<\"cents\">;\n\n\t/**\n\t * @param  frequency   The frequency value\n\t * @param  type  The basic oscillator type\n\t */\n\tconstructor(\n\t\tfrequency: Frequency,\n\t\ttype: OscillatorType,\n\t);\n\tconstructor(options?: Partial<ToneOscillatorNodeOptions>);\n\tconstructor() {\n\n\t\tsuper(optionsFromArguments(ToneOscillatorNode.getDefaults(), arguments, [\"frequency\", \"type\"]));\n\t\tconst options = optionsFromArguments(ToneOscillatorNode.getDefaults(), arguments, [\"frequency\", \"type\"]);\n\n\t\tconnect(this._oscillator, this._gainNode);\n\n\t\tthis.type = options.type;\n\n\t\tthis.frequency = new Param({\n\t\t\tcontext: this.context,\n\t\t\tparam: this._oscillator.frequency,\n\t\t\tunits: \"frequency\",\n\t\t\tvalue: options.frequency,\n\t\t});\n\n\t\tthis.detune = new Param({\n\t\t\tcontext: this.context,\n\t\t\tparam: this._oscillator.detune,\n\t\t\tunits: \"cents\",\n\t\t\tvalue: options.detune,\n\t\t});\n\n\t\treadOnly(this, [\"frequency\", \"detune\"]);\n\t}\n\n\tstatic getDefaults(): ToneOscillatorNodeOptions {\n\t\treturn Object.assign(OneShotSource.getDefaults(), {\n\t\t\tdetune: 0,\n\t\t\tfrequency: 440,\n\t\t\ttype: \"sine\" as OscillatorType,\n\t\t});\n\t}\n\n\t/**\n\t * Start the oscillator node at the given time\n\t * @param  time When to start the oscillator\n\t */\n\tstart(time?: Time): this {\n\t\tconst computedTime = this.toSeconds(time);\n\t\tthis.log(\"start\", computedTime);\n\t\tthis._startGain(computedTime);\n\t\tthis._oscillator.start(computedTime);\n\t\treturn this;\n\t}\n\n\tprotected _stopSource(time?: Seconds): void {\n\t\tthis._oscillator.stop(time);\n\t}\n\n\t/**\n\t * Sets an arbitrary custom periodic waveform given a PeriodicWave.\n\t * @param  periodicWave PeriodicWave should be created with context.createPeriodicWave\n\t */\n\tsetPeriodicWave(periodicWave: PeriodicWave): this {\n\t\tthis._oscillator.setPeriodicWave(periodicWave);\n\t\treturn this;\n\t}\n\n\t/**\n\t * The oscillator type. Either 'sine', 'sawtooth', 'square', or 'triangle'\n\t */\n\tget type(): OscillatorType {\n\t\treturn this._oscillator.type;\n\t}\n\tset type(type: OscillatorType) {\n\t\tthis._oscillator.type = type;\n\t}\n\n\t/**\n\t * Clean up.\n\t */\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tif (this.state === \"started\") {\n\t\t\tthis.stop();\n\t\t}\n\t\tthis._oscillator.disconnect();\n\t\tthis.frequency.dispose();\n\t\tthis.detune.dispose();\n\t\treturn this;\n\t}\n}\n","import { AudioRange, Degrees, Frequency, Radians, Time } from \"../../core/type/Units\";\nimport { deepEquals, optionsFromArguments } from \"../../core/util/Defaults\";\nimport { readOnly } from \"../../core/util/Interface\";\nimport { isDefined } from \"../../core/util/TypeCheck\";\nimport { Signal } from \"../../signal/Signal\";\nimport { Source } from \"../Source\";\nimport {\n\tgenerateWaveform, ToneOscillatorConstructorOptions, ToneOscillatorInterface,\n\tToneOscillatorOptions, ToneOscillatorType\n} from \"./OscillatorInterface\";\nimport { ToneOscillatorNode } from \"./ToneOscillatorNode\";\nimport { assertRange } from \"../../core/util/Debug\";\nimport { clamp } from \"../../core/util/Math\";\nexport { ToneOscillatorOptions, ToneOscillatorType } from \"./OscillatorInterface\";\n/**\n * Oscillator supports a number of features including\n * phase rotation, multiple oscillator types (see Oscillator.type),\n * and Transport syncing (see Oscillator.syncFrequency).\n *\n * @example\n * // make and start a 440hz sine tone\n * const osc = new Tone.Oscillator(440, \"sine\").toDestination().start();\n * @category Source\n */\nexport class Oscillator extends Source<ToneOscillatorOptions> implements ToneOscillatorInterface {\n\n\treadonly name: string = \"Oscillator\";\n\n\t/**\n\t * the main oscillator\n\t */\n\tprivate _oscillator: ToneOscillatorNode | null = null;\n\n\t/**\n\t * The frequency control.\n\t */\n\tfrequency: Signal<\"frequency\">;\n\n\t/**\n\t * The detune control signal.\n\t */\n\tdetune: Signal<\"cents\">;\n\n\t/**\n\t * the periodic wave\n\t */\n\tprivate _wave?: PeriodicWave;\n\n\t/**\n\t * The partials of the oscillator\n\t */\n\tprivate _partials: number[];\n\n\t/**\n\t * The number of partials to limit or extend the periodic wave by\n\t */\n\tprivate _partialCount: number;\n\n\t/**\n\t * the phase of the oscillator between 0 - 360\n\t */\n\tprivate _phase!: Radians;\n\n\t/**\n\t * the type of the oscillator\n\t */\n\tprivate _type: ToneOscillatorType;\n\n\t/**\n\t * @param frequency Starting frequency\n\t * @param type The oscillator type. Read more about type below.\n\t */\n\tconstructor(frequency?: Frequency, type?: ToneOscillatorType);\n\tconstructor(options?: Partial<ToneOscillatorConstructorOptions>)\n\tconstructor() {\n\n\t\tsuper(optionsFromArguments(Oscillator.getDefaults(), arguments, [\"frequency\", \"type\"]));\n\t\tconst options = optionsFromArguments(Oscillator.getDefaults(), arguments, [\"frequency\", \"type\"]);\n\n\t\tthis.frequency = new Signal<\"frequency\">({\n\t\t\tcontext: this.context,\n\t\t\tunits: \"frequency\",\n\t\t\tvalue: options.frequency,\n\t\t});\n\t\treadOnly(this, \"frequency\");\n\n\t\tthis.detune = new Signal<\"cents\">({\n\t\t\tcontext: this.context,\n\t\t\tunits: \"cents\",\n\t\t\tvalue: options.detune,\n\t\t});\n\t\treadOnly(this, \"detune\");\n\n\t\tthis._partials = options.partials;\n\t\tthis._partialCount = options.partialCount;\n\t\tthis._type = options.type;\n\n\t\tif (options.partialCount && options.type !== \"custom\") {\n\t\t\tthis._type = this.baseType + options.partialCount.toString() as ToneOscillatorType;\n\t\t}\n\t\tthis.phase = options.phase;\n\t}\n\n\tstatic getDefaults(): ToneOscillatorOptions {\n\t\treturn Object.assign(Source.getDefaults(), {\n\t\t\tdetune: 0,\n\t\t\tfrequency: 440,\n\t\t\tpartialCount: 0,\n\t\t\tpartials: [],\n\t\t\tphase: 0,\n\t\t\ttype: \"sine\" as const,\n\t\t});\n\t}\n\n\t/**\n\t * start the oscillator\n\t */\n\tprotected _start(time?: Time): void {\n\t\tconst computedTime = this.toSeconds(time);\n\t\t// new oscillator with previous values\n\t\tconst oscillator = new ToneOscillatorNode({\n\t\t\tcontext: this.context,\n\t\t\tonended: () => this.onstop(this),\n\t\t});\n\t\tthis._oscillator = oscillator;\n\t\tif (this._wave) {\n\t\t\tthis._oscillator.setPeriodicWave(this._wave);\n\t\t} else {\n\t\t\tthis._oscillator.type = this._type as OscillatorType;\n\t\t}\n\t\t// connect the control signal to the oscillator frequency & detune\n\t\tthis._oscillator.connect(this.output);\n\t\tthis.frequency.connect(this._oscillator.frequency);\n\t\tthis.detune.connect(this._oscillator.detune);\n\n\t\t// start the oscillator\n\t\tthis._oscillator.start(computedTime);\n\t}\n\n\t/**\n\t * stop the oscillator\n\t */\n\tprotected _stop(time?: Time): void {\n\t\tconst computedTime = this.toSeconds(time);\n\t\tif (this._oscillator) {\n\t\t\tthis._oscillator.stop(computedTime);\n\t\t}\n\t}\n\n\t/**\n\t * Restart the oscillator. Does not stop the oscillator, but instead\n\t * just cancels any scheduled 'stop' from being invoked.\n\t */\n\tprotected _restart(time?: Time): this {\n\t\tconst computedTime = this.toSeconds(time);\n\t\tthis.log(\"restart\", computedTime);\n\t\tif (this._oscillator) {\n\t\t\tthis._oscillator.cancelStop();\n\t\t}\n\t\tthis._state.cancel(computedTime);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sync the signal to the Transport's bpm. Any changes to the transports bpm,\n\t * will also affect the oscillators frequency.\n\t * @example\n\t * const osc = new Tone.Oscillator().toDestination().start();\n\t * osc.frequency.value = 440;\n\t * // the ratio between the bpm and the frequency will be maintained\n\t * osc.syncFrequency();\n\t * // double the tempo\n\t * Tone.Transport.bpm.value *= 2;\n\t * // the frequency of the oscillator is doubled to 880\n\t */\n\tsyncFrequency(): this {\n\t\tthis.context.transport.syncSignal(this.frequency);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Unsync the oscillator's frequency from the Transport.\n\t * See Oscillator.syncFrequency\n\t */\n\tunsyncFrequency(): this {\n\t\tthis.context.transport.unsyncSignal(this.frequency);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Cache the periodic waves to avoid having to redo computations\n\t */\n\tprivate static _periodicWaveCache: Array<{\n\t\tpartials: number[];\n\t\tphase: number;\n\t\ttype: string;\n\t\tpartialCount: number;\n\t\treal: Float32Array;\n\t\timag: Float32Array;\n\t\twave: PeriodicWave;\n\t}> = [];\n\n\t/**\n\t * Get a cached periodic wave. Avoids having to recompute\n\t * the oscillator values when they have already been computed\n\t * with the same values.\n\t */\n\tprivate _getCachedPeriodicWave(): { real: Float32Array; imag: Float32Array; partials: number[]; wave: PeriodicWave } | undefined {\n\t\tif (this._type === \"custom\") {\n\t\t\tconst oscProps = Oscillator._periodicWaveCache.find(description => {\n\t\t\t\treturn description.phase === this._phase &&\n\t\t\t\t\tdeepEquals(description.partials, this._partials);\n\t\t\t});\n\t\t\treturn oscProps;\n\t\t} else {\n\t\t\tconst oscProps = Oscillator._periodicWaveCache.find(description => {\n\t\t\t\treturn description.type === this._type &&\n\t\t\t\t\tdescription.phase === this._phase;\n\t\t\t});\n\t\t\tthis._partialCount = oscProps ? oscProps.partialCount : this._partialCount;\n\t\t\treturn oscProps;\n\t\t}\n\t}\n\n\tget type(): ToneOscillatorType {\n\t\treturn this._type;\n\t}\n\tset type(type) {\n\t\tthis._type = type;\n\t\tconst isBasicType = [\"sine\", \"square\", \"sawtooth\", \"triangle\"].indexOf(type) !== -1;\n\t\tif (this._phase === 0 && isBasicType) {\n\t\t\tthis._wave = undefined;\n\t\t\tthis._partialCount = 0;\n\t\t\t// just go with the basic approach\n\t\t\tif (this._oscillator !== null) {\n\t\t\t\t// already tested that it's a basic type\n\t\t\t\tthis._oscillator.type = type as OscillatorType;\n\t\t\t}\n\t\t} else {\n\t\t\t// first check if the value is cached\n\t\t\tconst cache = this._getCachedPeriodicWave();\n\t\t\tif (isDefined(cache)) {\n\t\t\t\tconst { partials, wave } = cache;\n\t\t\t\tthis._wave = wave;\n\t\t\t\tthis._partials = partials;\n\t\t\t\tif (this._oscillator !== null) {\n\t\t\t\t\tthis._oscillator.setPeriodicWave(this._wave);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconst [real, imag] = this._getRealImaginary(type, this._phase);\n\t\t\t\tconst periodicWave = this.context.createPeriodicWave(real, imag);\n\t\t\t\tthis._wave = periodicWave;\n\t\t\t\tif (this._oscillator !== null) {\n\t\t\t\t\tthis._oscillator.setPeriodicWave(this._wave);\n\t\t\t\t}\n\t\t\t\t// set the cache\n\t\t\t\tOscillator._periodicWaveCache.push({\n\t\t\t\t\timag,\n\t\t\t\t\tpartialCount: this._partialCount,\n\t\t\t\t\tpartials: this._partials,\n\t\t\t\t\tphase: this._phase,\n\t\t\t\t\treal,\n\t\t\t\t\ttype: this._type,\n\t\t\t\t\twave: this._wave,\n\t\t\t\t});\n\t\t\t\tif (Oscillator._periodicWaveCache.length > 100) {\n\t\t\t\t\tOscillator._periodicWaveCache.shift();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tget baseType(): OscillatorType {\n\t\treturn (this._type as string).replace(this.partialCount.toString(), \"\") as OscillatorType;\n\t}\n\tset baseType(baseType) {\n\t\tif (this.partialCount && this._type !== \"custom\" && baseType !== \"custom\") {\n\t\t\tthis.type = baseType + this.partialCount as ToneOscillatorType;\n\t\t} else {\n\t\t\tthis.type = baseType;\n\t\t}\n\t}\n\n\tget partialCount(): number {\n\t\treturn this._partialCount;\n\t}\n\tset partialCount(p) {\n\t\tassertRange(p, 0);\n\t\tlet type = this._type;\n\t\tconst partial = /^(sine|triangle|square|sawtooth)(\\d+)$/.exec(this._type);\n\t\tif (partial) {\n\t\t\ttype = partial[1] as OscillatorType;\n\t\t}\n\t\tif (this._type !== \"custom\") {\n\t\t\tif (p === 0) {\n\t\t\t\tthis.type = type;\n\t\t\t} else {\n\t\t\t\tthis.type = type + p.toString() as ToneOscillatorType;\n\t\t\t}\n\t\t} else {\n\t\t\t// extend or shorten the partials array\n\t\t\tconst fullPartials = new Float32Array(p);\n\t\t\t// copy over the partials array\n\t\t\tthis._partials.forEach((v, i) => fullPartials[i] = v);\n\t\t\tthis._partials = Array.from(fullPartials);\n\t\t\tthis.type = this._type;\n\t\t}\n\t}\n\n\t/**\n\t * Returns the real and imaginary components based\n\t * on the oscillator type.\n\t * @returns [real: Float32Array, imaginary: Float32Array]\n\t */\n\tprivate _getRealImaginary(type: ToneOscillatorType, phase: Radians): Float32Array[] {\n\t\tconst fftSize = 4096;\n\t\tlet periodicWaveSize = fftSize / 2;\n\n\t\tconst real = new Float32Array(periodicWaveSize);\n\t\tconst imag = new Float32Array(periodicWaveSize);\n\n\t\tlet partialCount = 1;\n\t\tif (type === \"custom\") {\n\t\t\tpartialCount = this._partials.length + 1;\n\t\t\tthis._partialCount = this._partials.length;\n\t\t\tperiodicWaveSize = partialCount;\n\t\t\t// if the partial count is 0, don't bother doing any computation\n\t\t\tif (this._partials.length === 0) {\n\t\t\t\treturn [real, imag];\n\t\t\t}\n\t\t} else {\n\t\t\tconst partial = /^(sine|triangle|square|sawtooth)(\\d+)$/.exec(type);\n\t\t\tif (partial) {\n\t\t\t\tpartialCount = parseInt(partial[2], 10) + 1;\n\t\t\t\tthis._partialCount = parseInt(partial[2], 10);\n\t\t\t\ttype = partial[1] as ToneOscillatorType;\n\t\t\t\tpartialCount = Math.max(partialCount, 2);\n\t\t\t\tperiodicWaveSize = partialCount;\n\t\t\t} else {\n\t\t\t\tthis._partialCount = 0;\n\t\t\t}\n\t\t\tthis._partials = [];\n\t\t}\n\n\t\tfor (let n = 1; n < periodicWaveSize; ++n) {\n\t\t\tconst piFactor = 2 / (n * Math.PI);\n\t\t\tlet b;\n\t\t\tswitch (type) {\n\t\t\t\tcase \"sine\":\n\t\t\t\t\tb = (n <= partialCount) ? 1 : 0;\n\t\t\t\t\tthis._partials[n - 1] = b;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"square\":\n\t\t\t\t\tb = (n & 1) ? 2 * piFactor : 0;\n\t\t\t\t\tthis._partials[n - 1] = b;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"sawtooth\":\n\t\t\t\t\tb = piFactor * ((n & 1) ? 1 : -1);\n\t\t\t\t\tthis._partials[n - 1] = b;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"triangle\":\n\t\t\t\t\tif (n & 1) {\n\t\t\t\t\t\tb = 2 * (piFactor * piFactor) * ((((n - 1) >> 1) & 1) ? -1 : 1);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tb = 0;\n\t\t\t\t\t}\n\t\t\t\t\tthis._partials[n - 1] = b;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"custom\":\n\t\t\t\t\tb = this._partials[n - 1];\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new TypeError(\"Oscillator: invalid type: \" + type);\n\t\t\t}\n\t\t\tif (b !== 0) {\n\t\t\t\treal[n] = -b * Math.sin(phase * n);\n\t\t\t\timag[n] = b * Math.cos(phase * n);\n\t\t\t} else {\n\t\t\t\treal[n] = 0;\n\t\t\t\timag[n] = 0;\n\t\t\t}\n\t\t}\n\t\treturn [real, imag];\n\t}\n\n\t/**\n\t * Compute the inverse FFT for a given phase.\n\t */\n\tprivate _inverseFFT(real: Float32Array, imag: Float32Array, phase: Radians): number {\n\t\tlet sum = 0;\n\t\tconst len = real.length;\n\t\tfor (let i = 0; i < len; i++) {\n\t\t\tsum += real[i] * Math.cos(i * phase) + imag[i] * Math.sin(i * phase);\n\t\t}\n\t\treturn sum;\n\t}\n\n\t/**\n\t * Returns the initial value of the oscillator when stopped.\n\t * E.g. a \"sine\" oscillator with phase = 90 would return an initial value of -1.\n\t */\n\tgetInitialValue(): AudioRange {\n\t\tconst [real, imag] = this._getRealImaginary(this._type, 0);\n\t\tlet maxValue = 0;\n\t\tconst twoPi = Math.PI * 2;\n\t\tconst testPositions = 32;\n\t\t// check for peaks in 16 places\n\t\tfor (let i = 0; i < testPositions; i++) {\n\t\t\tmaxValue = Math.max(this._inverseFFT(real, imag, (i / testPositions) * twoPi), maxValue);\n\t\t}\n\t\treturn clamp(-this._inverseFFT(real, imag, this._phase) / maxValue, -1, 1);\n\t}\n\n\tget partials(): number[] {\n\t\treturn this._partials.slice(0, this.partialCount);\n\t}\n\tset partials(partials) {\n\t\tthis._partials = partials;\n\t\tthis._partialCount = this._partials.length;\n\t\tif (partials.length) {\n\t\t\tthis.type = \"custom\";\n\t\t}\n\t}\n\n\tget phase(): Degrees {\n\t\treturn this._phase * (180 / Math.PI);\n\t}\n\tset phase(phase) {\n\t\tthis._phase = phase * Math.PI / 180;\n\t\t// reset the type\n\t\tthis.type = this._type;\n\t}\n\n\tasync asArray(length = 1024): Promise<Float32Array> {\n\t\treturn generateWaveform(this, length);\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tif (this._oscillator !== null) {\n\t\t\tthis._oscillator.dispose();\n\t\t}\n\t\tthis._wave = undefined;\n\t\tthis.frequency.dispose();\n\t\tthis.detune.dispose();\n\t\treturn this;\n\t}\n}\n","import { optionsFromArguments } from \"../core/util/Defaults\";\nimport { InputNode, ToneAudioNode, ToneAudioNodeOptions } from \"../core/context/ToneAudioNode\";\nimport { connectSignal } from \"./Signal\";\n\nexport type SignalOperatorOptions = ToneAudioNodeOptions;\n\n/**\n * A signal operator has an input and output and modifies the signal.\n */\nexport abstract class SignalOperator<Options extends SignalOperatorOptions> extends ToneAudioNode<Options> {\n\n\tconstructor(options?: Partial<Options>);\n\tconstructor() {\n\t\tsuper(Object.assign(optionsFromArguments(SignalOperator.getDefaults(), arguments, [\"context\"])));\n\t}\n\n\tconnect(destination: InputNode, outputNum = 0, inputNum = 0): this {\n\t\tconnectSignal(this, destination, outputNum, inputNum);\n\t\treturn this;\n\t}\n}\n","import { ToneAudioNodeOptions } from \"../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { isArray, isFunction } from \"../core/util/TypeCheck\";\nimport { assert } from \"../core/util/Debug\";\nimport { Signal } from \"./Signal\";\nimport { SignalOperator } from \"./SignalOperator\";\n\nexport type WaveShaperMappingFn = (value: number, index?: number) => number;\n\ntype WaveShaperMapping = WaveShaperMappingFn | number[] | Float32Array;\n\ninterface WaveShaperOptions extends ToneAudioNodeOptions {\n\tmapping?: WaveShaperMapping;\n\tlength: number;\n\tcurve?: number[] | Float32Array;\n}\n\n/**\n * Wraps the native Web Audio API\n * [WaveShaperNode](http://webaudio.github.io/web-audio-api/#the-waveshapernode-interface).\n *\n * @example\n * const osc = new Tone.Oscillator().toDestination().start();\n * // multiply the output of the signal by 2 using the waveshaper's function\n * const timesTwo = new Tone.WaveShaper((val) => val * 2, 2048).connect(osc.frequency);\n * const signal = new Tone.Signal(440).connect(timesTwo);\n * @category Signal\n */\nexport class WaveShaper extends SignalOperator<WaveShaperOptions> {\n\n\treadonly name: string = \"WaveShaper\";\n\n\t/**\n\t * the waveshaper node\n\t */\n\tprivate _shaper: WaveShaperNode = this.context.createWaveShaper();\n\n\t/**\n\t * The input to the waveshaper node.\n\t */\n\tinput = this._shaper;\n\n\t/**\n\t * The output from the waveshaper node\n\t */\n\toutput = this._shaper;\n\n\t/**\n\t * @param mapping The function used to define the values.\n\t *                The mapping function should take two arguments:\n\t *                the first is the value at the current position\n\t *                and the second is the array position.\n\t *                If the argument is an array, that array will be\n\t *                set as the wave shaping function. The input\n\t *                signal is an AudioRange [-1, 1] value and the output\n\t *                signal can take on any numerical values.\n\t *\n\t * @param bufferLen The length of the WaveShaperNode buffer.\n\t */\n\tconstructor(mapping?: WaveShaperMapping, length?: number);\n\tconstructor(options?: Partial<WaveShaperOptions>);\n\tconstructor() {\n\t\tsuper(Object.assign(optionsFromArguments(WaveShaper.getDefaults(), arguments, [\"mapping\", \"length\"])));\n\t\tconst options = optionsFromArguments(WaveShaper.getDefaults(), arguments, [\"mapping\", \"length\"]);\n\n\t\tif (isArray(options.mapping) || options.mapping instanceof Float32Array) {\n\t\t\tthis.curve = Float32Array.from(options.mapping);\n\t\t} else if (isFunction(options.mapping)) {\n\t\t\tthis.setMap(options.mapping, options.length);\n\t\t}\n\t}\n\n\tstatic getDefaults(): WaveShaperOptions {\n\t\treturn Object.assign(Signal.getDefaults(), {\n\t\t\tlength: 1024,\n\t\t});\n\t}\n\n\t/**\n\t * Uses a mapping function to set the value of the curve.\n\t * @param mapping The function used to define the values.\n\t *                The mapping function take two arguments:\n\t *                the first is the value at the current position\n\t *                which goes from -1 to 1 over the number of elements\n\t *                in the curve array. The second argument is the array position.\n\t * @example\n\t * const shaper = new Tone.WaveShaper();\n\t * // map the input signal from [-1, 1] to [0, 10]\n\t * shaper.setMap((val, index) => (val + 1) * 5);\n\t */\n\tsetMap(mapping: WaveShaperMappingFn, length = 1024): this {\n\t\tconst array = new Float32Array(length);\n\t\tfor (let i = 0, len = length; i < len; i++) {\n\t\t\tconst normalized = (i / (len - 1)) * 2 - 1;\n\t\t\tarray[i] = mapping(normalized, i);\n\t\t}\n\t\tthis.curve = array;\n\t\treturn this;\n\t}\n\n\t/**\n\t * The array to set as the waveshaper curve. For linear curves\n\t * array length does not make much difference, but for complex curves\n\t * longer arrays will provide smoother interpolation.\n\t */\n\tget curve(): Float32Array | null {\n\t\treturn this._shaper.curve;\n\t}\n\n\tset curve(mapping: Float32Array | null) {\n\t\tthis._shaper.curve = mapping;\n\t}\n\n\t/**\n\t * Specifies what type of oversampling (if any) should be used when\n\t * applying the shaping curve. Can either be \"none\", \"2x\" or \"4x\".\n\t */\n\tget oversample(): OverSampleType {\n\t\treturn this._shaper.oversample;\n\t}\n\n\tset oversample(oversampling: OverSampleType) {\n\t\tconst isOverSampleType = [\"none\", \"2x\", \"4x\"].some(str => str.includes(oversampling));\n\t\tassert(isOverSampleType, \"oversampling must be either 'none', '2x', or '4x'\");\n\t\tthis._shaper.oversample = oversampling;\n\t}\n\n\t/**\n\t * Clean up.\n\t */\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._shaper.disconnect();\n\t\treturn this;\n\t}\n}\n","import { ToneAudioNodeOptions } from \"../core/context/ToneAudioNode\";\nimport { SignalOperator } from \"./SignalOperator\";\nimport { WaveShaper } from \"./WaveShaper\";\n\n/**\n * AudioToGain converts an input in AudioRange [-1,1] to NormalRange [0,1].\n * See [[GainToAudio]].\n * @category Signal\n */\nexport class AudioToGain extends SignalOperator<ToneAudioNodeOptions> {\n\n\treadonly name: string = \"AudioToGain\";\n\n\t/**\n\t * The node which converts the audio ranges\n\t */\n\tprivate _norm = new WaveShaper({\n\t\tcontext: this.context,\n\t\tmapping: x => (x + 1) / 2,\n\t});\n\n\t/**\n\t * The AudioRange input [-1, 1]\n\t */\n\tinput = this._norm;\n\n\t/**\n\t * The GainRange output [0, 1]\n\t */\n\toutput = this._norm;\n\n\t/**\n\t * clean up\n\t */\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._norm.dispose();\n\t\treturn this;\n\t}\n}\n","import { Gain } from \"../core/context/Gain\";\nimport { Param } from \"../core/context/Param\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { Signal, SignalOptions } from \"./Signal\";\nimport { InputNode, OutputNode } from \"../core/context/ToneAudioNode\";\n\n/**\n * Multiply two incoming signals. Or, if a number is given in the constructor,\n * multiplies the incoming signal by that value.\n *\n * @example\n * // multiply two signals\n * const mult = new Tone.Multiply();\n * const sigA = new Tone.Signal(3);\n * const sigB = new Tone.Signal(4);\n * sigA.connect(mult);\n * sigB.connect(mult.factor);\n * // output of mult is 12.\n * @example\n * // multiply a signal and a number\n * const mult = new Tone.Multiply(10);\n * const sig = new Tone.Signal(2).connect(mult);\n * // the output of mult is 20.\n * @category Signal\n */\nexport class Multiply<TypeName extends \"number\" | \"positive\" = \"number\"> extends Signal<TypeName> {\n\n\treadonly name: string = \"Multiply\";\n\n\t/**\n\t * Indicates if the value should be overridden on connection\n\t */\n\treadonly override = false;\n\n\t/**\n\t * the input gain node\n\t */\n\tprivate _mult: Gain;\n\n\t/**\n\t * The multiplicand input.\n\t */\n\tinput: InputNode;\n\n\t/**\n\t * The product of the input and [[factor]]\n\t */\n\toutput: OutputNode;\n\n\t/**\n\t * The multiplication factor. Can be set directly or a signal can be connected to it.\n\t */\n\tfactor: Param<TypeName>;\n\n\t/**\n\t * @param value Constant value to multiple\n\t */\n\tconstructor(value?: number);\n\tconstructor(options?: Partial<SignalOptions<TypeName>>);\n\tconstructor() {\n\t\tsuper(Object.assign(optionsFromArguments(Multiply.getDefaults(), arguments, [\"value\"])));\n\t\tconst options = optionsFromArguments(Multiply.getDefaults(), arguments, [\"value\"]);\n\n\t\tthis._mult = this.input = this.output = new Gain({\n\t\t\tcontext: this.context,\n\t\t\tminValue: options.minValue,\n\t\t\tmaxValue: options.maxValue,\n\t\t});\n\n\t\tthis.factor = this._param = this._mult.gain as unknown as Param<TypeName>;\n\t\tthis.factor.setValueAtTime(options.value, 0);\n\t}\n\n\tstatic getDefaults(): SignalOptions<any> {\n\t\treturn Object.assign(Signal.getDefaults(), {\n\t\t\tvalue: 0,\n\t\t});\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._mult.dispose();\n\t\treturn this;\n\t}\n}\n","import { Gain } from \"../../core/context/Gain\";\nimport { Degrees, Frequency, Seconds } from \"../../core/type/Units\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { readOnly } from \"../../core/util/Interface\";\nimport { AudioToGain } from \"../../signal/AudioToGain\";\nimport { Multiply } from \"../../signal/Multiply\";\nimport { Signal } from \"../../signal/Signal\";\nimport { Source } from \"../Source\";\nimport { Oscillator } from \"./Oscillator\";\nimport {\n\tAMConstructorOptions, AMOscillatorOptions,\n\tgenerateWaveform, NonCustomOscillatorType,\n\tToneOscillatorInterface,\n\tToneOscillatorType\n} from \"./OscillatorInterface\";\n\nexport { AMOscillatorOptions } from \"./OscillatorInterface\";\n\n/**\n * An amplitude modulated oscillator node. It is implemented with\n * two oscillators, one which modulators the other's amplitude\n * through a gain node.\n * ```\n *    +-------------+       +----------+\n *    | Carrier Osc +>------> GainNode |\n *    +-------------+       |          +--->Output\n *                      +---> gain     |\n * +---------------+    |   +----------+\n * | Modulator Osc +>---+\n * +---------------+\n * ```\n * @example\n * return Tone.Offline(() => {\n * \tconst amOsc = new Tone.AMOscillator(30, \"sine\", \"square\").toDestination().start();\n * }, 0.2, 1);\n * @category Source\n */\nexport class AMOscillator extends Source<AMOscillatorOptions> implements ToneOscillatorInterface {\n\n\treadonly name: string = \"AMOscillator\";\n\n\t/**\n\t * The carrier oscillator\n\t */\n\tprivate _carrier: Oscillator;\n\n\treadonly frequency: Signal<\"frequency\">;\n\treadonly detune: Signal<\"cents\">;\n\n\t/**\n\t * The modulating oscillator\n\t */\n\tprivate _modulator: Oscillator;\n\n\t/**\n\t * convert the -1,1 output to 0,1\n\t */\n\tprivate _modulationScale = new AudioToGain({ context: this.context });\n\n\t/**\n\t * Harmonicity is the frequency ratio between the carrier and the modulator oscillators.\n\t * A harmonicity of 1 gives both oscillators the same frequency.\n\t * Harmonicity = 2 means a change of an octave.\n\t * @example\n\t * const amOsc = new Tone.AMOscillator(\"D2\").toDestination().start();\n\t * Tone.Transport.scheduleRepeat(time => {\n\t * \tamOsc.harmonicity.setValueAtTime(1, time);\n\t * \tamOsc.harmonicity.setValueAtTime(0.5, time + 0.5);\n\t * \tamOsc.harmonicity.setValueAtTime(1.5, time + 1);\n\t * \tamOsc.harmonicity.setValueAtTime(1, time + 2);\n\t * \tamOsc.harmonicity.linearRampToValueAtTime(2, time + 4);\n\t * }, 4);\n\t * Tone.Transport.start();\n\t */\n\treadonly harmonicity: Signal<\"positive\">;\n\n\t/**\n\t * the node where the modulation happens\n\t */\n\tprivate _modulationNode = new Gain({\n\t\tcontext: this.context,\n\t});\n\n\t/**\n\t * @param frequency The starting frequency of the oscillator.\n\t * @param type The type of the carrier oscillator.\n\t * @param modulationType The type of the modulator oscillator.\n\t */\n\tconstructor(frequency?: Frequency, type?: ToneOscillatorType, modulationType?: ToneOscillatorType);\n\tconstructor(options?: Partial<AMConstructorOptions>);\n\tconstructor() {\n\n\t\tsuper(optionsFromArguments(AMOscillator.getDefaults(), arguments, [\"frequency\", \"type\", \"modulationType\"]));\n\t\tconst options = optionsFromArguments(AMOscillator.getDefaults(), arguments, [\"frequency\", \"type\", \"modulationType\"]);\n\n\t\tthis._carrier = new Oscillator({\n\t\t\tcontext: this.context,\n\t\t\tdetune: options.detune,\n\t\t\tfrequency: options.frequency,\n\t\t\tonstop: () => this.onstop(this),\n\t\t\tphase: options.phase,\n\t\t\ttype: options.type,\n\t\t} as OscillatorOptions);\n\t\tthis.frequency = this._carrier.frequency,\n\t\tthis.detune = this._carrier.detune;\n\n\t\tthis._modulator = new Oscillator({\n\t\t\tcontext: this.context,\n\t\t\tphase: options.phase,\n\t\t\ttype: options.modulationType,\n\t\t} as OscillatorOptions);\n\n\t\tthis.harmonicity = new Multiply({\n\t\t\tcontext: this.context,\n\t\t\tunits: \"positive\",\n\t\t\tvalue: options.harmonicity,\n\t\t});\n\n\t\t// connections\n\t\tthis.frequency.chain(this.harmonicity, this._modulator.frequency);\n\t\tthis._modulator.chain(this._modulationScale, this._modulationNode.gain);\n\t\tthis._carrier.chain(this._modulationNode, this.output);\n\n\t\treadOnly(this, [\"frequency\", \"detune\", \"harmonicity\"]);\n\t}\n\n\tstatic getDefaults(): AMOscillatorOptions {\n\t\treturn Object.assign(Oscillator.getDefaults(), {\n\t\t\tharmonicity: 1,\n\t\t\tmodulationType: \"square\" as NonCustomOscillatorType,\n\t\t});\n\t}\n\n\t/**\n\t * start the oscillator\n\t */\n\tprotected _start(time: Seconds): void {\n\t\tthis._modulator.start(time);\n\t\tthis._carrier.start(time);\n\t}\n\n\t/**\n\t * stop the oscillator\n\t */\n\tprotected _stop(time: Seconds): void {\n\t\tthis._modulator.stop(time);\n\t\tthis._carrier.stop(time);\n\t}\n\n\tprotected _restart(time: Seconds): void {\n\t\tthis._modulator.restart(time);\n\t\tthis._carrier.restart(time);\n\t}\n\n\t/**\n\t * The type of the carrier oscillator\n\t */\n\tget type(): ToneOscillatorType {\n\t\treturn this._carrier.type;\n\t}\n\tset type(type: ToneOscillatorType) {\n\t\tthis._carrier.type = type;\n\t}\n\n\tget baseType(): OscillatorType {\n\t\treturn this._carrier.baseType;\n\t}\n\tset baseType(baseType: OscillatorType) {\n\t\tthis._carrier.baseType = baseType;\n\t}\n\n\tget partialCount(): number {\n\t\treturn this._carrier.partialCount;\n\t}\n\tset partialCount(partialCount: number) {\n\t\tthis._carrier.partialCount = partialCount;\n\t}\n\n\t/**\n\t * The type of the modulator oscillator\n\t */\n\tget modulationType(): ToneOscillatorType {\n\t\treturn this._modulator.type;\n\t}\n\tset modulationType(type: ToneOscillatorType) {\n\t\tthis._modulator.type = type;\n\t}\n\n\tget phase(): Degrees {\n\t\treturn this._carrier.phase;\n\t}\n\tset phase(phase: Degrees) {\n\t\tthis._carrier.phase = phase;\n\t\tthis._modulator.phase = phase;\n\t}\n\n\tget partials(): number[] {\n\t\treturn this._carrier.partials;\n\t}\n\tset partials(partials: number[]) {\n\t\tthis._carrier.partials = partials;\n\t}\n\n\tasync asArray(length = 1024): Promise<Float32Array> {\n\t\treturn generateWaveform(this, length);\n\t}\n\n\t/**\n\t * Clean up.\n\t */\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis.frequency.dispose();\n\t\tthis.detune.dispose();\n\t\tthis.harmonicity.dispose();\n\t\tthis._carrier.dispose();\n\t\tthis._modulator.dispose();\n\t\tthis._modulationNode.dispose();\n\t\tthis._modulationScale.dispose();\n\t\treturn this;\n\t}\n}\n","import { Gain } from \"../../core/context/Gain\";\nimport { Degrees, Frequency, Seconds, Time } from \"../../core/type/Units\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { readOnly } from \"../../core/util/Interface\";\nimport { Multiply } from \"../../signal/Multiply\";\nimport { Signal } from \"../../signal/Signal\";\nimport { Source } from \"../Source\";\nimport { Oscillator } from \"./Oscillator\";\nimport {\n\tFMConstructorOptions, FMOscillatorOptions,\n\tgenerateWaveform, NonCustomOscillatorType, ToneOscillatorInterface, ToneOscillatorType\n} from \"./OscillatorInterface\";\n\nexport { FMOscillatorOptions } from \"./OscillatorInterface\";\n/**\n * FMOscillator implements a frequency modulation synthesis\n * ```\n *                                              +-------------+\n * +---------------+        +-------------+     | Carrier Osc |\n * | Modulator Osc +>-------> GainNode    |     |             +--->Output\n * +---------------+        |             +>----> frequency   |\n *                       +--> gain        |     +-------------+\n *                       |  +-------------+\n * +-----------------+   |\n * | modulationIndex +>--+\n * +-----------------+\n * ```\n *\n * @example\n * return Tone.Offline(() => {\n * \tconst fmOsc = new Tone.FMOscillator({\n * \t\tfrequency: 200,\n * \t\ttype: \"square\",\n * \t\tmodulationType: \"triangle\",\n * \t\tharmonicity: 0.2,\n * \t\tmodulationIndex: 3\n * \t}).toDestination().start();\n * }, 0.1, 1);\n * @category Source\n */\nexport class FMOscillator extends Source<FMOscillatorOptions> implements ToneOscillatorInterface {\n\n\treadonly name: string = \"FMOscillator\";\n\n\t/**\n\t * The carrier oscillator\n\t */\n\tprivate _carrier: Oscillator;\n\n\treadonly frequency: Signal<\"frequency\">;\n\treadonly detune: Signal<\"cents\">;\n\n\t/**\n\t * The modulating oscillator\n\t */\n\tprivate _modulator: Oscillator;\n\n\t/**\n\t * Harmonicity is the frequency ratio between the carrier and the modulator oscillators.\n\t * A harmonicity of 1 gives both oscillators the same frequency.\n\t * Harmonicity = 2 means a change of an octave.\n\t * @example\n\t * const fmOsc = new Tone.FMOscillator(\"D2\").toDestination().start();\n\t * // pitch the modulator an octave below carrier\n\t * fmOsc.harmonicity.value = 0.5;\n\t */\n\treadonly harmonicity: Signal<\"positive\">;\n\n\t/**\n\t * The modulation index which is in essence the depth or amount of the modulation. In other terms it is the\n\t * ratio of the frequency of the modulating signal (mf) to the amplitude of the\n\t * modulating signal (ma) -- as in ma/mf.\n\t */\n\treadonly modulationIndex: Signal<\"positive\">;\n\n\t/**\n\t * the node where the modulation happens\n\t */\n\tprivate _modulationNode: Gain = new Gain({\n\t\tcontext: this.context,\n\t\tgain: 0,\n\t});\n\n\t/**\n\t * @param frequency The starting frequency of the oscillator.\n\t * @param type The type of the carrier oscillator.\n\t * @param modulationType The type of the modulator oscillator.\n\t */\n\tconstructor(frequency?: Frequency, type?: ToneOscillatorType, modulationType?: ToneOscillatorType);\n\tconstructor(options?: Partial<FMConstructorOptions>);\n\tconstructor() {\n\n\t\tsuper(optionsFromArguments(FMOscillator.getDefaults(), arguments, [\"frequency\", \"type\", \"modulationType\"]));\n\t\tconst options = optionsFromArguments(FMOscillator.getDefaults(), arguments, [\"frequency\", \"type\", \"modulationType\"]);\n\n\t\tthis._carrier = new Oscillator({\n\t\t\tcontext: this.context,\n\t\t\tdetune: options.detune,\n\t\t\tfrequency: 0,\n\t\t\tonstop: () => this.onstop(this),\n\t\t\tphase: options.phase,\n\t\t\ttype: options.type,\n\t\t} as OscillatorOptions);\n\n\t\tthis.detune = this._carrier.detune;\n\n\t\tthis.frequency = new Signal({\n\t\t\tcontext: this.context,\n\t\t\tunits: \"frequency\",\n\t\t\tvalue: options.frequency,\n\t\t});\n\n\t\tthis._modulator = new Oscillator({\n\t\t\tcontext: this.context,\n\t\t\tphase: options.phase,\n\t\t\ttype: options.modulationType,\n\t\t} as OscillatorOptions);\n\n\t\tthis.harmonicity = new Multiply({\n\t\t\tcontext: this.context,\n\t\t\tunits: \"positive\",\n\t\t\tvalue: options.harmonicity,\n\t\t});\n\n\t\tthis.modulationIndex = new Multiply({\n\t\t\tcontext: this.context,\n\t\t\tunits: \"positive\",\n\t\t\tvalue: options.modulationIndex,\n\t\t});\n\n\t\t// connections\n\t\tthis.frequency.connect(this._carrier.frequency);\n\t\tthis.frequency.chain(this.harmonicity, this._modulator.frequency);\n\t\tthis.frequency.chain(this.modulationIndex, this._modulationNode);\n\t\tthis._modulator.connect(this._modulationNode.gain);\n\t\tthis._modulationNode.connect(this._carrier.frequency);\n\t\tthis._carrier.connect(this.output);\n\t\tthis.detune.connect(this._modulator.detune);\n\n\t\treadOnly(this, [\"modulationIndex\", \"frequency\", \"detune\", \"harmonicity\"]);\n\t}\n\n\tstatic getDefaults(): FMOscillatorOptions {\n\t\treturn Object.assign(Oscillator.getDefaults(), {\n\t\t\tharmonicity: 1,\n\t\t\tmodulationIndex: 2,\n\t\t\tmodulationType: \"square\" as NonCustomOscillatorType,\n\t\t});\n\t}\n\n\t/**\n\t * start the oscillator\n\t */\n\tprotected _start(time: Time): void {\n\t\tthis._modulator.start(time);\n\t\tthis._carrier.start(time);\n\t}\n\n\t/**\n\t * stop the oscillator\n\t */\n\tprotected _stop(time: Time): void {\n\t\tthis._modulator.stop(time);\n\t\tthis._carrier.stop(time);\n\t}\n\n\tprotected _restart(time: Seconds): this {\n\t\tthis._modulator.restart(time);\n\t\tthis._carrier.restart(time);\n\t\treturn this;\n\t}\n\n\tget type(): ToneOscillatorType {\n\t\treturn this._carrier.type;\n\t}\n\tset type(type: ToneOscillatorType) {\n\t\tthis._carrier.type = type;\n\t}\n\n\tget baseType(): OscillatorType {\n\t\treturn this._carrier.baseType;\n\t}\n\tset baseType(baseType: OscillatorType) {\n\t\tthis._carrier.baseType = baseType;\n\t}\n\n\tget partialCount(): number {\n\t\treturn this._carrier.partialCount;\n\t}\n\tset partialCount(partialCount: number) {\n\t\tthis._carrier.partialCount = partialCount;\n\t}\n\n\t/**\n\t * The type of the modulator oscillator\n\t */\n\tget modulationType(): ToneOscillatorType {\n\t\treturn this._modulator.type;\n\t}\n\tset modulationType(type: ToneOscillatorType) {\n\t\tthis._modulator.type = type;\n\t}\n\n\tget phase(): Degrees {\n\t\treturn this._carrier.phase;\n\t}\n\tset phase(phase: Degrees) {\n\t\tthis._carrier.phase = phase;\n\t\tthis._modulator.phase = phase;\n\t}\n\n\tget partials(): number[] {\n\t\treturn this._carrier.partials;\n\t}\n\tset partials(partials: number[]) {\n\t\tthis._carrier.partials = partials;\n\t}\n\n\tasync asArray(length = 1024): Promise<Float32Array> {\n\t\treturn generateWaveform(this, length);\n\t}\n\n\t/**\n\t * Clean up.\n\t */\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis.frequency.dispose();\n\t\tthis.harmonicity.dispose();\n\t\tthis._carrier.dispose();\n\t\tthis._modulator.dispose();\n\t\tthis._modulationNode.dispose();\n\t\tthis.modulationIndex.dispose();\n\t\treturn this;\n\t}\n}\n","import { Gain } from \"../../core/context/Gain\";\nimport { AudioRange, Degrees, Frequency, Seconds, Time } from \"../../core/type/Units\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { readOnly } from \"../../core/util/Interface\";\nimport { Signal } from \"../../signal/Signal\";\nimport { WaveShaper } from \"../../signal/WaveShaper\";\nimport { Source } from \"../Source\";\nimport { Oscillator } from \"./Oscillator\";\nimport { generateWaveform, PulseOscillatorOptions, ToneOscillatorInterface } from \"./OscillatorInterface\";\n\nexport { PulseOscillatorOptions } from \"./OscillatorInterface\";\n\n/**\n * PulseOscillator is an oscillator with control over pulse width,\n * also known as the duty cycle. At 50% duty cycle (width = 0) the wave is\n * a square wave.\n * [Read more](https://wigglewave.wordpress.com/2014/08/16/pulse-waveforms-and-harmonics/).\n * ```\n *    width = -0.25        width = 0.0          width = 0.25\n *\n *   +-----+            +-------+       +    +-------+     +-+\n *   |     |            |       |       |            |     |\n *   |     |            |       |       |            |     |\n * +-+     +-------+    +       +-------+            +-----+\n *\n *\n *    width = -0.5                              width = 0.5\n *\n *     +---+                                 +-------+   +---+\n *     |   |                                         |   |\n *     |   |                                         |   |\n * +---+   +-------+                                 +---+\n *\n *\n *    width = -0.75                             width = 0.75\n *\n *       +-+                                 +-------+ +-----+\n *       | |                                         | |\n *       | |                                         | |\n * +-----+ +-------+                                 +-+\n * ```\n * @example\n * return Tone.Offline(() => {\n * \tconst pulse = new Tone.PulseOscillator(50, 0.4).toDestination().start();\n * }, 0.1, 1);\n * @category Source\n */\nexport class PulseOscillator extends Source<PulseOscillatorOptions> implements ToneOscillatorInterface {\n\n\treadonly name: string = \"PulseOscillator\";\n\n\t/**\n\t * The width of the pulse.\n\t * @example\n\t * return Tone.Offline(() => {\n\t * \tconst pulse = new Tone.PulseOscillator(20, 0.8).toDestination().start();\n\t * }, 0.1, 1);\n\t */\n\treadonly width: Signal<\"audioRange\">;\n\n\t/**\n\t * gate the width amount\n\t */\n\tprivate _widthGate: Gain = new Gain({\n\t\tcontext: this.context,\n\t\tgain: 0,\n\t});\n\n\t/**\n\t * the sawtooth oscillator\n\t */\n\tprivate _triangle: Oscillator;\n\n\t/**\n\t * The frequency control.\n\t */\n\treadonly frequency: Signal<\"frequency\">;\n\n\t/**\n\t * The detune in cents.\n\t */\n\treadonly detune: Signal<\"cents\">;\n\n\t/**\n\t * Threshold the signal to turn it into a square\n\t */\n\tprivate _thresh = new WaveShaper({\n\t\tcontext: this.context,\n\t\tmapping: val => val <= 0 ? -1 : 1,\n\t});\n\n\t/**\n\t * @param frequency The frequency of the oscillator\n\t * @param width The width of the pulse\n\t */\n\tconstructor(frequency?: Frequency, width?: AudioRange);\n\tconstructor(options?: Partial<PulseOscillatorOptions>);\n\tconstructor() {\n\n\t\tsuper(optionsFromArguments(PulseOscillator.getDefaults(), arguments, [\"frequency\", \"width\"]));\n\t\tconst options = optionsFromArguments(PulseOscillator.getDefaults(), arguments, [\"frequency\", \"width\"]);\n\n\t\tthis.width = new Signal({\n\t\t\tcontext: this.context,\n\t\t\tunits: \"audioRange\",\n\t\t\tvalue: options.width,\n\t\t});\n\n\t\tthis._triangle = new Oscillator({\n\t\t\tcontext: this.context,\n\t\t\tdetune: options.detune,\n\t\t\tfrequency: options.frequency,\n\t\t\tonstop: () => this.onstop(this),\n\t\t\tphase: options.phase,\n\t\t\ttype: \"triangle\",\n\t\t});\n\t\tthis.frequency = this._triangle.frequency;\n\t\tthis.detune = this._triangle.detune;\n\n\t\t// connections\n\t\tthis._triangle.chain(this._thresh, this.output);\n\t\tthis.width.chain(this._widthGate, this._thresh);\n\t\treadOnly(this, [\"width\", \"frequency\", \"detune\"]);\n\t}\n\n\tstatic getDefaults(): PulseOscillatorOptions {\n\t\treturn Object.assign(Source.getDefaults(), {\n\t\t\tdetune: 0,\n\t\t\tfrequency: 440,\n\t\t\tphase: 0,\n\t\t\ttype: \"pulse\" as \"pulse\",\n\t\t\twidth: 0.2,\n\t\t});\n\t}\n\n\t/**\n\t * start the oscillator\n\t */\n\tprotected _start(time: Time): void {\n\t\ttime = this.toSeconds(time);\n\t\tthis._triangle.start(time);\n\t\tthis._widthGate.gain.setValueAtTime(1, time);\n\t}\n\n\t/**\n\t * stop the oscillator\n\t */\n\tprotected _stop(time: Time): void {\n\t\ttime = this.toSeconds(time);\n\t\tthis._triangle.stop(time);\n\t\t// the width is still connected to the output.\n\t\t// that needs to be stopped also\n\t\tthis._widthGate.gain.cancelScheduledValues(time);\n\t\tthis._widthGate.gain.setValueAtTime(0, time);\n\t}\n\n\tprotected _restart(time: Seconds): void {\n\t\tthis._triangle.restart(time);\n\t\tthis._widthGate.gain.cancelScheduledValues(time);\n\t\tthis._widthGate.gain.setValueAtTime(1, time);\n\t}\n\n\t/**\n\t * The phase of the oscillator in degrees.\n\t */\n\tget phase(): Degrees {\n\t\treturn this._triangle.phase;\n\t}\n\tset phase(phase: Degrees) {\n\t\tthis._triangle.phase = phase;\n\t}\n\n\t/**\n\t * The type of the oscillator. Always returns \"pulse\".\n\t */\n\tget type(): \"pulse\" {\n\t\treturn \"pulse\";\n\t}\n\n\t/**\n\t * The baseType of the oscillator. Always returns \"pulse\".\n\t */\n\tget baseType(): \"pulse\" {\n\t\treturn \"pulse\";\n\t}\n\n\t/**\n\t * The partials of the waveform. Cannot set partials for this waveform type\n\t */\n\tget partials(): number[] {\n\t\treturn [];\n\t}\n\n\t/**\n\t * No partials for this waveform type.\n\t */\n\tget partialCount(): number {\n\t\treturn 0;\n\t}\n\n\t/**\n\t * *Internal use* The carrier oscillator type is fed through the \n\t * waveshaper node to create the pulse. Using different carrier oscillators\n\t * changes oscillator's behavior. \n\t */\n\tset carrierType(type: \"triangle\" | \"sine\") {\n\t\tthis._triangle.type = type;\n\t}\n\n\tasync asArray(length = 1024): Promise<Float32Array> {\n\t\treturn generateWaveform(this, length);\n\t}\n\n\t/**\n\t * Clean up method.\n\t */\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._triangle.dispose();\n\t\tthis.width.dispose();\n\t\tthis._widthGate.dispose();\n\t\tthis._thresh.dispose();\n\t\treturn this;\n\t}\n}\n","import { Cents, Degrees, Frequency, Seconds, Time } from \"../../core/type/Units\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { noOp, readOnly } from \"../../core/util/Interface\";\nimport { Signal } from \"../../signal/Signal\";\nimport { Source } from \"../Source\";\nimport { Oscillator } from \"./Oscillator\";\nimport {\n\tFatConstructorOptions, FatOscillatorOptions,\n\tgenerateWaveform, NonCustomOscillatorType, ToneOscillatorInterface, ToneOscillatorType\n} from \"./OscillatorInterface\";\nimport { assertRange } from \"../../core/util/Debug\";\n\nexport { FatOscillatorOptions } from \"./OscillatorInterface\";\n\n/**\n * FatOscillator is an array of oscillators with detune spread between the oscillators\n * @example\n * const fatOsc = new Tone.FatOscillator(\"Ab3\", \"sawtooth\", 40).toDestination().start();\n * @category Source\n */\nexport class FatOscillator extends Source<FatOscillatorOptions> implements ToneOscillatorInterface {\n\n\treadonly name: string = \"FatOscillator\";\n\n\treadonly frequency: Signal<\"frequency\">;\n\treadonly detune: Signal<\"cents\">;\n\n\t/**\n\t * The array of oscillators\n\t */\n\tprivate _oscillators: Oscillator[] = [];\n\n\t/**\n\t * The total spread of the oscillators\n\t */\n\tprivate _spread: Cents;\n\n\t/**\n\t * The type of the oscillator\n\t */\n\tprivate _type: ToneOscillatorType;\n\n\t/**\n\t * The phase of the oscillators\n\t */\n\tprivate _phase: Degrees;\n\n\t/**\n\t * The partials array\n\t */\n\tprivate _partials: number[];\n\n\t/**\n\t * The number of partials to use\n\t */\n\tprivate _partialCount: number;\n\n\t/**\n\t * @param frequency The oscillator's frequency.\n\t * @param type The type of the oscillator.\n\t * @param spread The detune spread between the oscillators.\n\t */\n\tconstructor(frequency?: Frequency, type?: ToneOscillatorType, spread?: Cents);\n\tconstructor(options?: Partial<FatConstructorOptions>);\n\tconstructor() {\n\n\t\tsuper(optionsFromArguments(FatOscillator.getDefaults(), arguments, [\"frequency\", \"type\", \"spread\"]));\n\t\tconst options = optionsFromArguments(FatOscillator.getDefaults(), arguments, [\"frequency\", \"type\", \"spread\"]);\n\n\t\tthis.frequency = new Signal({\n\t\t\tcontext: this.context,\n\t\t\tunits: \"frequency\",\n\t\t\tvalue: options.frequency,\n\t\t});\n\t\tthis.detune = new Signal({\n\t\t\tcontext: this.context,\n\t\t\tunits: \"cents\",\n\t\t\tvalue: options.detune,\n\t\t});\n\n\t\tthis._spread = options.spread;\n\t\tthis._type = options.type;\n\t\tthis._phase = options.phase;\n\t\tthis._partials = options.partials;\n\t\tthis._partialCount = options.partialCount;\n\n\t\t// set the count initially\n\t\tthis.count = options.count;\n\n\t\treadOnly(this, [\"frequency\", \"detune\"]);\n\t}\n\n\tstatic getDefaults(): FatOscillatorOptions {\n\t\treturn Object.assign(Oscillator.getDefaults(), {\n\t\t\tcount: 3,\n\t\t\tspread: 20,\n\t\t\ttype: \"sawtooth\",\n\t\t});\n\t}\n\n\t/**\n\t * start the oscillator\n\t */\n\tprotected _start(time: Time): void {\n\t\ttime = this.toSeconds(time);\n\t\tthis._forEach(osc => osc.start(time));\n\t}\n\n\t/**\n\t * stop the oscillator\n\t */\n\tprotected _stop(time: Time): void {\n\t\ttime = this.toSeconds(time);\n\t\tthis._forEach(osc => osc.stop(time));\n\t}\n\n\tprotected _restart(time: Seconds): void {\n\t\tthis._forEach(osc => osc.restart(time));\n\t}\n\n\t/**\n\t * Iterate over all of the oscillators\n\t */\n\tprivate _forEach(iterator: (osc: Oscillator, index: number) => void): void {\n\t\tfor (let i = 0; i < this._oscillators.length; i++) {\n\t\t\titerator(this._oscillators[i], i);\n\t\t}\n\t}\n\n\t/**\n\t * The type of the oscillator\n\t */\n\tget type(): ToneOscillatorType {\n\t\treturn this._type;\n\t}\n\tset type(type: ToneOscillatorType) {\n\t\tthis._type = type;\n\t\tthis._forEach(osc => osc.type = type);\n\t}\n\n\t/**\n\t * The detune spread between the oscillators. If \"count\" is\n\t * set to 3 oscillators and the \"spread\" is set to 40,\n\t * the three oscillators would be detuned like this: [-20, 0, 20]\n\t * for a total detune spread of 40 cents.\n\t * @example\n\t * const fatOsc = new Tone.FatOscillator().toDestination().start();\n\t * fatOsc.spread = 70;\n\t */\n\tget spread(): Cents {\n\t\treturn this._spread;\n\t}\n\tset spread(spread: Cents) {\n\t\tthis._spread = spread;\n\t\tif (this._oscillators.length > 1) {\n\t\t\tconst start = -spread / 2;\n\t\t\tconst step = spread / (this._oscillators.length - 1);\n\t\t\tthis._forEach((osc, i) => osc.detune.value = start + step * i);\n\t\t}\n\t}\n\n\t/**\n\t * The number of detuned oscillators. Must be an integer greater than 1.\n\t * @example\n\t * const fatOsc = new Tone.FatOscillator(\"C#3\", \"sawtooth\").toDestination().start();\n\t * // use 4 sawtooth oscillators\n\t * fatOsc.count = 4;\n\t */\n\tget count(): number {\n\t\treturn this._oscillators.length;\n\t}\n\tset count(count: number) {\n\t\tassertRange(count, 1);\n\t\tif (this._oscillators.length !== count) {\n\t\t\t// dispose the previous oscillators\n\t\t\tthis._forEach(osc => osc.dispose());\n\t\t\tthis._oscillators = [];\n\t\t\tfor (let i = 0; i < count; i++) {\n\t\t\t\tconst osc = new Oscillator({\n\t\t\t\t\tcontext: this.context,\n\t\t\t\t\tvolume: -6 - count * 1.1,\n\t\t\t\t\ttype: this._type as NonCustomOscillatorType,\n\t\t\t\t\tphase: this._phase + (i / count) * 360,\n\t\t\t\t\tpartialCount: this._partialCount,\n\t\t\t\t\tonstop: i === 0 ? () => this.onstop(this) : noOp,\n\t\t\t\t});\n\t\t\t\tif (this.type === \"custom\") {\n\t\t\t\t\tosc.partials = this._partials;\n\t\t\t\t}\n\t\t\t\tthis.frequency.connect(osc.frequency);\n\t\t\t\tthis.detune.connect(osc.detune);\n\t\t\t\tosc.detune.overridden = false;\n\t\t\t\tosc.connect(this.output);\n\t\t\t\tthis._oscillators[i] = osc;\n\t\t\t}\n\t\t\t// set the spread\n\t\t\tthis.spread = this._spread;\n\t\t\tif (this.state === \"started\") {\n\t\t\t\tthis._forEach(osc => osc.start());\n\t\t\t}\n\t\t}\n\t}\n\n\tget phase(): Degrees {\n\t\treturn this._phase;\n\t}\n\tset phase(phase: Degrees) {\n\t\tthis._phase = phase;\n\t\tthis._forEach((osc, i) => osc.phase = this._phase + (i / this.count) * 360);\n\t}\n\n\tget baseType(): OscillatorType {\n\t\treturn this._oscillators[0].baseType;\n\t}\n\tset baseType(baseType: OscillatorType) {\n\t\tthis._forEach(osc => osc.baseType = baseType);\n\t\tthis._type = this._oscillators[0].type;\n\t}\n\n\tget partials(): number[] {\n\t\treturn this._oscillators[0].partials;\n\t}\n\tset partials(partials: number[]) {\n\t\tthis._partials = partials;\n\t\tthis._partialCount = this._partials.length;\n\t\tif (partials.length) {\n\t\t\tthis._type = \"custom\";\n\t\t\tthis._forEach(osc => osc.partials = partials);\n\t\t}\n\t}\n\n\tget partialCount(): number {\n\t\treturn this._oscillators[0].partialCount;\n\t}\n\tset partialCount(partialCount: number) {\n\t\tthis._partialCount = partialCount;\n\t\tthis._forEach(osc => osc.partialCount = partialCount);\n\t\tthis._type = this._oscillators[0].type;\n\t}\n\n\tasync asArray(length = 1024): Promise<Float32Array> {\n\t\treturn generateWaveform(this, length);\n\t}\n\n\t/**\n\t * Clean up.\n\t */\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis.frequency.dispose();\n\t\tthis.detune.dispose();\n\t\tthis._forEach(osc => osc.dispose());\n\t\treturn this;\n\t}\n}\n","import { Degrees, Frequency, Seconds, Time } from \"../../core/type/Units\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { readOnly } from \"../../core/util/Interface\";\nimport { Multiply } from \"../../signal/Multiply\";\nimport { Signal } from \"../../signal/Signal\";\nimport { Source } from \"../Source\";\nimport { Oscillator } from \"./Oscillator\";\nimport { generateWaveform, PWMOscillatorOptions, ToneOscillatorInterface } from \"./OscillatorInterface\";\nimport { PulseOscillator } from \"./PulseOscillator\";\n\nexport { PWMOscillatorOptions } from \"./OscillatorInterface\";\n\n/**\n * PWMOscillator modulates the width of a Tone.PulseOscillator\n * at the modulationFrequency. This has the effect of continuously\n * changing the timbre of the oscillator by altering the harmonics\n * generated.\n * @example\n * return Tone.Offline(() => {\n * \tconst pwm = new Tone.PWMOscillator(60, 0.3).toDestination().start();\n * }, 0.1, 1);\n * @category Source\n */\nexport class PWMOscillator extends Source<PWMOscillatorOptions> implements ToneOscillatorInterface {\n\n\treadonly name: string = \"PWMOscillator\";\n\n\treadonly sourceType = \"pwm\";\n\n\t/**\n\t * the pulse oscillator\n\t */\n\tprivate _pulse: PulseOscillator;\n\t/**\n\t * the modulator\n\t */\n\tprivate _modulator: Oscillator;\n\n\t/**\n\t * Scale the oscillator so it doesn't go silent\n\t * at the extreme values.\n\t */\n\tprivate _scale: Multiply = new Multiply({\n\t\tcontext: this.context,\n\t\tvalue: 2,\n\t});\n\n\t/**\n\t * The frequency control.\n\t */\n\treadonly frequency: Signal<\"frequency\">;\n\n\t/**\n\t * The detune of the oscillator.\n\t */\n\treadonly detune: Signal<\"cents\">;\n\n\t/**\n\t * The width modulation rate of the oscillator.\n\t * @example\n\t * return Tone.Offline(() => {\n\t * \tconst osc = new Tone.PWMOscillator(20, 2).toDestination().start();\n\t * }, 0.1, 1);\n\t */\n\treadonly modulationFrequency: Signal<\"frequency\">;\n\n\t/**\n\t * @param {Frequency} frequency The starting frequency of the oscillator.\n\t * @param {Frequency} modulationFrequency The modulation frequency of the width of the pulse.\n\t */\n\tconstructor(frequency?: Frequency, modulationFrequency?: Frequency);\n\tconstructor(options?: Partial<PWMOscillatorOptions>);\n\tconstructor() {\n\t\tsuper(optionsFromArguments(PWMOscillator.getDefaults(), arguments, [\"frequency\", \"modulationFrequency\"]));\n\t\tconst options = optionsFromArguments(PWMOscillator.getDefaults(), arguments, [\"frequency\", \"modulationFrequency\"]);\n\n\t\tthis._pulse = new PulseOscillator({\n\t\t\tcontext: this.context,\n\t\t\tfrequency: options.modulationFrequency,\n\t\t});\n\t\t// change the pulse oscillator type\n\t\tthis._pulse.carrierType = \"sine\";\n\n\t\tthis.modulationFrequency = this._pulse.frequency;\n\n\t\tthis._modulator = new Oscillator({\n\t\t\tcontext: this.context,\n\t\t\tdetune: options.detune,\n\t\t\tfrequency: options.frequency,\n\t\t\tonstop: () => this.onstop(this),\n\t\t\tphase: options.phase,\n\t\t});\n\n\t\tthis.frequency = this._modulator.frequency;\n\t\tthis.detune = this._modulator.detune;\n\n\t\t// connections\n\t\tthis._modulator.chain(this._scale, this._pulse.width);\n\t\tthis._pulse.connect(this.output);\n\t\treadOnly(this, [\"modulationFrequency\", \"frequency\", \"detune\"]);\n\t}\n\n\tstatic getDefaults(): PWMOscillatorOptions {\n\t\treturn Object.assign(Source.getDefaults(), {\n\t\t\tdetune: 0,\n\t\t\tfrequency: 440,\n\t\t\tmodulationFrequency: 0.4,\n\t\t\tphase: 0,\n\t\t\ttype: \"pwm\" as \"pwm\",\n\t\t});\n\t}\n\t/**\n\t * start the oscillator\n\t */\n\tprotected _start(time: Time): void {\n\t\ttime = this.toSeconds(time);\n\t\tthis._modulator.start(time);\n\t\tthis._pulse.start(time);\n\t}\n\n\t/**\n\t * stop the oscillator\n\t */\n\tprotected _stop(time: Time): void {\n\t\ttime = this.toSeconds(time);\n\t\tthis._modulator.stop(time);\n\t\tthis._pulse.stop(time);\n\t}\n\n\t/**\n\t * restart the oscillator\n\t */\n\tprotected _restart(time: Seconds): void {\n\t\tthis._modulator.restart(time);\n\t\tthis._pulse.restart(time);\n\t}\n\n\t/**\n\t * The type of the oscillator. Always returns \"pwm\".\n\t */\n\tget type(): \"pwm\" {\n\t\treturn \"pwm\";\n\t}\n\n\t/**\n\t * The baseType of the oscillator. Always returns \"pwm\".\n\t */\n\tget baseType(): \"pwm\" {\n\t\treturn \"pwm\";\n\t}\n\n\t/**\n\t * The partials of the waveform. Cannot set partials for this waveform type\n\t */\n\tget partials(): number[] {\n\t\treturn [];\n\t}\n\n\t/**\n\t * No partials for this waveform type.\n\t */\n\tget partialCount(): number {\n\t\treturn 0;\n\t}\n\n\t/**\n\t * The phase of the oscillator in degrees.\n\t */\n\tget phase(): Degrees {\n\t\treturn this._modulator.phase;\n\t}\n\tset phase(phase: Degrees) {\n\t\tthis._modulator.phase = phase;\n\t}\n\n\tasync asArray(length = 1024): Promise<Float32Array> {\n\t\treturn generateWaveform(this, length);\n\t}\n\n\t/**\n\t * Clean up.\n\t */\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._pulse.dispose();\n\t\tthis._scale.dispose();\n\t\tthis._modulator.dispose();\n\t\treturn this;\n\t}\n}\n","import { Cents, Degrees, Frequency, Seconds, Time } from \"../../core/type/Units\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { readOnly } from \"../../core/util/Interface\";\nimport { isNumber, isString } from \"../../core/util/TypeCheck\";\nimport { Signal } from \"../../signal/Signal\";\nimport { Source } from \"../Source\";\nimport { AMOscillator } from \"./AMOscillator\";\nimport { FatOscillator } from \"./FatOscillator\";\nimport { FMOscillator } from \"./FMOscillator\";\nimport { Oscillator } from \"./Oscillator\";\nimport {\n\tgenerateWaveform,\n\tOmniOscillatorOptions, \n\tOmniOscillatorType, ToneOscillatorInterface, ToneOscillatorType\n} from \"./OscillatorInterface\";\nimport { PulseOscillator } from \"./PulseOscillator\";\nimport { PWMOscillator } from \"./PWMOscillator\";\n\nexport { OmniOscillatorOptions } from \"./OscillatorInterface\";\n\n/**\n * All of the oscillator types that OmniOscillator can take on\n */\ntype AnyOscillator = Oscillator | PWMOscillator | PulseOscillator | FatOscillator | AMOscillator | FMOscillator;\n\n/**\n * All of the Oscillator constructor types mapped to their name.\n */\ninterface OmniOscillatorSource {\n\t\"fm\": FMOscillator;\n\t\"am\": AMOscillator;\n\t\"pwm\": PWMOscillator;\n\t\"pulse\": PulseOscillator;\n\t\"oscillator\": Oscillator;\n\t\"fat\": FatOscillator;\n}\n\n/**\n * The available oscillator types.\n */\nexport type OmniOscSourceType = keyof OmniOscillatorSource;\n\n// Conditional Types\ntype IsAmOrFmOscillator<Osc, Ret> = Osc extends AMOscillator ? Ret : Osc extends FMOscillator ? Ret : undefined;\ntype IsFatOscillator<Osc, Ret> = Osc extends FatOscillator ? Ret : undefined;\ntype IsPWMOscillator<Osc, Ret> = Osc extends PWMOscillator ? Ret : undefined;\ntype IsPulseOscillator<Osc, Ret> = Osc extends PulseOscillator ? Ret : undefined;\ntype IsFMOscillator<Osc, Ret> = Osc extends FMOscillator ? Ret : undefined;\n\ntype AnyOscillatorConstructor = new (...args: any[]) => AnyOscillator;\n\nconst OmniOscillatorSourceMap: {\n\t[key in OmniOscSourceType]: AnyOscillatorConstructor\n} = {\n\tam: AMOscillator,\n\tfat: FatOscillator,\n\tfm: FMOscillator,\n\toscillator: Oscillator,\n\tpulse: PulseOscillator,\n\tpwm: PWMOscillator,\n};\n\n/**\n * OmniOscillator aggregates all of the oscillator types into one. \n * @example\n * return Tone.Offline(() => {\n * \tconst omniOsc = new Tone.OmniOscillator(\"C#4\", \"pwm\").toDestination().start();\n * }, 0.1, 1);\n * @category Source\n */\nexport class OmniOscillator<OscType extends AnyOscillator>\n\textends Source<OmniOscillatorOptions>\n\timplements Omit<ToneOscillatorInterface, \"type\"> {\n\n\treadonly name: string = \"OmniOscillator\";\n\n\treadonly frequency: Signal<\"frequency\">;\n\treadonly detune: Signal<\"cents\">;\n\n\t/**\n\t * The oscillator that can switch types\n\t */\n\tprivate _oscillator!: AnyOscillator;\n\n\t/**\n\t * the type of the oscillator source\n\t */\n\tprivate _sourceType!: OmniOscSourceType;\n\n\t/**\n\t * @param frequency The initial frequency of the oscillator.\n\t * @param type The type of the oscillator.\n\t */\n\tconstructor(frequency?: Frequency, type?: OmniOscillatorType);\n\tconstructor(options?: Partial<OmniOscillatorOptions>);\n\tconstructor() {\n\n\t\tsuper(optionsFromArguments(OmniOscillator.getDefaults(), arguments, [\"frequency\", \"type\"]));\n\t\tconst options = optionsFromArguments(OmniOscillator.getDefaults(), arguments, [\"frequency\", \"type\"]);\n\n\t\tthis.frequency = new Signal({\n\t\t\tcontext: this.context,\n\t\t\tunits: \"frequency\",\n\t\t\tvalue: options.frequency,\n\t\t});\n\t\tthis.detune = new Signal({\n\t\t\tcontext: this.context,\n\t\t\tunits: \"cents\",\n\t\t\tvalue: options.detune,\n\t\t});\n\t\treadOnly(this, [\"frequency\", \"detune\"]);\n\n\t\t// set the options\n\t\tthis.set(options);\n\t}\n\n\tstatic getDefaults(): OmniOscillatorOptions {\n\t\treturn Object.assign(\n\t\t\tOscillator.getDefaults(),\n\t\t\tFMOscillator.getDefaults(),\n\t\t\tAMOscillator.getDefaults(),\n\t\t\tFatOscillator.getDefaults(),\n\t\t\tPulseOscillator.getDefaults(),\n\t\t\tPWMOscillator.getDefaults(),\n\t\t);\n\t}\n\n\t/**\n\t * start the oscillator\n\t */\n\tprotected _start(time: Time): void {\n\t\tthis._oscillator.start(time);\n\t}\n\n\t/**\n\t * start the oscillator\n\t */\n\tprotected _stop(time: Time): void {\n\t\tthis._oscillator.stop(time);\n\t}\n\n\tprotected _restart(time: Seconds): this {\n\t\tthis._oscillator.restart(time);\n\t\treturn this;\n\t}\n\n\t/**\n\t * The type of the oscillator. Can be any of the basic types: sine, square, triangle, sawtooth. Or\n\t * prefix the basic types with \"fm\", \"am\", or \"fat\" to use the FMOscillator, AMOscillator or FatOscillator\n\t * types. The oscillator could also be set to \"pwm\" or \"pulse\". All of the parameters of the\n\t * oscillator's class are accessible when the oscillator is set to that type, but throws an error\n\t * when it's not. \n\t * @example\n\t * const omniOsc = new Tone.OmniOscillator().toDestination().start();\n\t * omniOsc.type = \"pwm\";\n\t * // modulationFrequency is parameter which is available\n\t * // only when the type is \"pwm\".\n\t * omniOsc.modulationFrequency.value = 0.5;\n\t */\n\tget type(): OmniOscillatorType {\n\t\tlet prefix = \"\";\n\t\tif ([\"am\", \"fm\", \"fat\"].some(p => this._sourceType === p)) {\n\t\t\tprefix = this._sourceType;\n\t\t}\n\t\treturn prefix + this._oscillator.type as OmniOscillatorType;\n\t}\n\tset type(type) {\n\t\tif (type.substr(0, 2) === \"fm\") {\n\t\t\tthis._createNewOscillator(\"fm\");\n\t\t\tthis._oscillator = this._oscillator as FMOscillator;\n\t\t\tthis._oscillator.type = type.substr(2) as ToneOscillatorType;\n\t\t} else if (type.substr(0, 2) === \"am\") {\n\t\t\tthis._createNewOscillator(\"am\");\n\t\t\tthis._oscillator = this._oscillator as AMOscillator;\n\t\t\tthis._oscillator.type = type.substr(2) as ToneOscillatorType;\n\t\t} else if (type.substr(0, 3) === \"fat\") {\n\t\t\tthis._createNewOscillator(\"fat\");\n\t\t\tthis._oscillator = this._oscillator as FatOscillator;\n\t\t\tthis._oscillator.type = type.substr(3) as ToneOscillatorType;\n\t\t} else if (type === \"pwm\") {\n\t\t\tthis._createNewOscillator(\"pwm\");\n\t\t\tthis._oscillator = this._oscillator as PWMOscillator;\n\t\t} else if (type === \"pulse\") {\n\t\t\tthis._createNewOscillator(\"pulse\");\n\t\t} else {\n\t\t\tthis._createNewOscillator(\"oscillator\");\n\t\t\tthis._oscillator = this._oscillator as Oscillator;\n\t\t\tthis._oscillator.type = (type as ToneOscillatorType);\n\t\t}\n\t}\n\n\t/**\n\t * The value is an empty array when the type is not \"custom\".\n\t * This is not available on \"pwm\" and \"pulse\" oscillator types.\n\t * See [[Oscillator.partials]]\n\t */\n\tget partials(): number[] {\n\t\treturn this._oscillator.partials;\n\t}\n\tset partials(partials) {\n\t\tif (!this._getOscType(this._oscillator, \"pulse\") && !this._getOscType(this._oscillator, \"pwm\")) {\n\t\t\tthis._oscillator.partials = partials;\n\t\t}\n\t}\n\n\tget partialCount(): number {\n\t\treturn this._oscillator.partialCount;\n\t}\n\tset partialCount(partialCount) {\n\t\tif (!this._getOscType(this._oscillator, \"pulse\") && !this._getOscType(this._oscillator, \"pwm\")) {\n\t\t\tthis._oscillator.partialCount = partialCount;\n\t\t}\n\t}\n\n\tset(props: Partial<OmniOscillatorOptions>): this {\n\t\t// make sure the type is set first\n\t\tif (Reflect.has(props, \"type\") && props.type) {\n\t\t\tthis.type = props.type;\n\t\t}\n\t\t// then set the rest\n\t\tsuper.set(props);\n\t\treturn this;\n\t}\n\n\t/**\n\t * connect the oscillator to the frequency and detune signals\n\t */\n\tprivate _createNewOscillator(oscType: OmniOscSourceType): void {\n\t\tif (oscType !== this._sourceType) {\n\t\t\tthis._sourceType = oscType;\n\t\t\tconst OscConstructor = OmniOscillatorSourceMap[oscType];\n\t\t\t// short delay to avoid clicks on the change\n\t\t\tconst now = this.now();\n\t\t\tif (this._oscillator) {\n\t\t\t\tconst oldOsc = this._oscillator;\n\t\t\t\toldOsc.stop(now);\n\t\t\t\t// dispose the old one\n\t\t\t\tthis.context.setTimeout(() => oldOsc.dispose(), this.blockTime);\n\t\t\t}\n\t\t\tthis._oscillator = new OscConstructor({\n\t\t\t\tcontext: this.context,\n\t\t\t});\n\t\t\tthis.frequency.connect(this._oscillator.frequency);\n\t\t\tthis.detune.connect(this._oscillator.detune);\n\t\t\tthis._oscillator.connect(this.output);\n\t\t\tthis._oscillator.onstop = () => this.onstop(this);\n\t\t\tif (this.state === \"started\") {\n\t\t\t\tthis._oscillator.start(now);\n\t\t\t}\n\t\t}\n\t}\n\n\tget phase(): Degrees {\n\t\treturn this._oscillator.phase;\n\t}\n\tset phase(phase) {\n\t\tthis._oscillator.phase = phase;\n\t}\n\n\t/**\n\t * The source type of the oscillator.\n\t * @example\n\t * const omniOsc = new Tone.OmniOscillator(440, \"fmsquare\");\n\t * console.log(omniOsc.sourceType); // 'fm'\n\t */\n\tget sourceType(): OmniOscSourceType {\n\t\treturn this._sourceType;\n\t}\n\tset sourceType(sType) {\n\t\t// the basetype defaults to sine\n\t\tlet baseType = \"sine\";\n\t\tif (this._oscillator.type !== \"pwm\" && this._oscillator.type !== \"pulse\") {\n\t\t\tbaseType = this._oscillator.type;\n\t\t}\n\n\t\t// set the type\n\t\tif (sType === \"fm\") {\n\t\t\tthis.type = \"fm\" + baseType as OmniOscillatorType;\n\t\t} else if (sType === \"am\") {\n\t\t\tthis.type = \"am\" + baseType as OmniOscillatorType;\n\t\t} else if (sType === \"fat\") {\n\t\t\tthis.type = \"fat\" + baseType as OmniOscillatorType;\n\t\t} else if (sType === \"oscillator\") {\n\t\t\tthis.type = baseType as OmniOscillatorType;\n\t\t} else if (sType === \"pulse\") {\n\t\t\tthis.type = \"pulse\";\n\t\t} else if (sType === \"pwm\") {\n\t\t\tthis.type = \"pwm\";\n\t\t}\n\t}\n\n\tprivate _getOscType<SourceType extends OmniOscSourceType>(\n\t\tosc: AnyOscillator,\n\t\tsourceType: SourceType,\n\t): osc is OmniOscillatorSource[SourceType] {\n\t\treturn osc instanceof OmniOscillatorSourceMap[sourceType];\n\t}\n\n\t/**\n\t * The base type of the oscillator. See [[Oscillator.baseType]]\n\t * @example\n\t * const omniOsc = new Tone.OmniOscillator(440, \"fmsquare4\");\n\t * console.log(omniOsc.sourceType, omniOsc.baseType, omniOsc.partialCount);\n\t */\n\tget baseType(): OscillatorType | \"pwm\" | \"pulse\" {\n\t\treturn this._oscillator.baseType;\n\t}\n\tset baseType(baseType) {\n\t\tif (!this._getOscType(this._oscillator, \"pulse\") &&\n\t\t\t!this._getOscType(this._oscillator, \"pwm\") &&\n\t\t\tbaseType !== \"pulse\" && baseType !== \"pwm\") {\n\t\t\tthis._oscillator.baseType = baseType;\n\t\t}\n\t}\n\n\t/**\n\t * The width of the oscillator when sourceType === \"pulse\".\n\t * See [[PWMOscillator.width]]\n\t */\n\tget width(): IsPulseOscillator<OscType, Signal<\"audioRange\">> {\n\t\tif (this._getOscType(this._oscillator, \"pulse\")) {\n\t\t\treturn this._oscillator.width as IsPulseOscillator<OscType, Signal<\"audioRange\">>;\n\t\t} else {\n\t\t\treturn undefined as IsPulseOscillator<OscType, Signal<\"audioRange\">>;\n\t\t}\n\t}\n\n\t/**\n\t * The number of detuned oscillators when sourceType === \"fat\".\n\t * See [[FatOscillator.count]]\n\t */\n\tget count(): IsFatOscillator<OscType, number> {\n\t\tif (this._getOscType(this._oscillator, \"fat\")) {\n\t\t\treturn this._oscillator.count as IsFatOscillator<OscType, number>;\n\t\t} else {\n\t\t\treturn undefined as IsFatOscillator<OscType, number>;\n\t\t}\n\t}\n\tset count(count) {\n\t\tif (this._getOscType(this._oscillator, \"fat\") && isNumber(count)) {\n\t\t\tthis._oscillator.count = count;\n\t\t}\n\t}\n\n\t/**\n\t * The detune spread between the oscillators when sourceType === \"fat\".\n\t * See [[FatOscillator.count]]\n\t */\n\tget spread(): IsFatOscillator<OscType, Cents> {\n\t\tif (this._getOscType(this._oscillator, \"fat\")) {\n\t\t\treturn this._oscillator.spread as IsFatOscillator<OscType, Cents>;\n\t\t} else {\n\t\t\treturn undefined as IsFatOscillator<OscType, Cents>;\n\t\t}\n\t}\n\tset spread(spread) {\n\t\tif (this._getOscType(this._oscillator, \"fat\") && isNumber(spread)) {\n\t\t\tthis._oscillator.spread = spread;\n\t\t}\n\t}\n\n\t/**\n\t * The type of the modulator oscillator. Only if the oscillator is set to \"am\" or \"fm\" types. \n\t * See [[AMOscillator]] or [[FMOscillator]]\n\t */\n\tget modulationType(): IsAmOrFmOscillator<OscType, ToneOscillatorType> {\n\t\tif (this._getOscType(this._oscillator, \"fm\") || this._getOscType(this._oscillator, \"am\")) {\n\t\t\treturn this._oscillator.modulationType as IsAmOrFmOscillator<OscType, ToneOscillatorType>;\n\t\t} else {\n\t\t\treturn undefined as IsAmOrFmOscillator<OscType, ToneOscillatorType>;\n\t\t}\n\t}\n\tset modulationType(mType) {\n\t\tif ((this._getOscType(this._oscillator, \"fm\") || this._getOscType(this._oscillator, \"am\")) && isString(mType)) {\n\t\t\tthis._oscillator.modulationType = mType;\n\t\t}\n\t}\n\n\t/**\n\t * The modulation index when the sourceType === \"fm\"\n\t * See [[FMOscillator]].\n\t */\n\tget modulationIndex(): IsFMOscillator<OscType, Signal<\"positive\">> {\n\t\tif (this._getOscType(this._oscillator, \"fm\")) {\n\t\t\treturn this._oscillator.modulationIndex as IsFMOscillator<OscType, Signal<\"positive\">>;\n\t\t} else {\n\t\t\treturn undefined as IsFMOscillator<OscType, Signal<\"positive\">>;\n\t\t}\n\t}\n\n\t/**\n\t * Harmonicity is the frequency ratio between the carrier and the modulator oscillators.\n\t * See [[AMOscillator]] or [[FMOscillator]]\n\t */\n\tget harmonicity(): IsAmOrFmOscillator<OscType, Signal<\"positive\">> {\n\t\tif (this._getOscType(this._oscillator, \"fm\") || this._getOscType(this._oscillator, \"am\")) {\n\t\t\treturn this._oscillator.harmonicity as IsAmOrFmOscillator<OscType, Signal<\"positive\">>;\n\t\t} else {\n\t\t\treturn undefined as IsAmOrFmOscillator<OscType, Signal<\"positive\">>;\n\t\t}\n\t}\n\n\t/**\n\t * The modulationFrequency Signal of the oscillator when sourceType === \"pwm\"\n\t * see [[PWMOscillator]]\n\t * @min 0.1\n\t * @max 5\n\t */\n\tget modulationFrequency(): IsPWMOscillator<OscType, Signal<\"frequency\">> {\n\t\tif (this._getOscType(this._oscillator, \"pwm\")) {\n\t\t\treturn this._oscillator.modulationFrequency as IsPWMOscillator<OscType, Signal<\"frequency\">>;\n\t\t} else {\n\t\t\treturn undefined as IsPWMOscillator<OscType, Signal<\"frequency\">>;\n\t\t}\n\t}\n\n\tasync asArray(length = 1024): Promise<Float32Array> {\n\t\treturn generateWaveform(this, length);\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis.detune.dispose();\n\t\tthis.frequency.dispose();\n\t\tthis._oscillator.dispose();\n\t\treturn this;\n\t}\n}\n","import { connectSeries } from \"../core/context/ToneAudioNode\";\nimport { Gain } from \"../core/context/Gain\";\nimport { Param } from \"../core/context/Param\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { Signal, SignalOptions } from \"./Signal\";\n\n/**\n * Add a signal and a number or two signals. When no value is\n * passed into the constructor, Tone.Add will sum input and `addend`\n * If a value is passed into the constructor, the it will be added to the input.\n *\n * @example\n * return Tone.Offline(() => {\n * \tconst add = new Tone.Add(2).toDestination();\n * \tadd.addend.setValueAtTime(1, 0.2);\n * \tconst signal = new Tone.Signal(2);\n * \t// add a signal and a scalar\n * \tsignal.connect(add);\n * \tsignal.setValueAtTime(1, 0.1);\n * }, 0.5, 1);\n * @category Signal\n */\nexport class Add extends Signal {\n\n\toverride = false;\n\n\treadonly name: string = \"Add\";\n\n\t/**\n\t * the summing node\n\t */\n\tprivate _sum: Gain = new Gain({ context: this.context });\n\treadonly input = this._sum;\n\treadonly output = this._sum;\n\n\t/**\n\t * The value which is added to the input signal\n\t */\n\treadonly addend: Param<\"number\"> = this._param;\n\n\t/**\n\t * @param value If no value is provided, will sum the input and [[addend]].\n\t */\n\tconstructor(value?: number);\n\tconstructor(options?: Partial<SignalOptions<\"number\">>);\n\tconstructor() {\n\t\tsuper(Object.assign(optionsFromArguments(Add.getDefaults(), arguments, [\"value\"])));\n\n\t\tconnectSeries(this._constantSource, this._sum);\n\t}\n\n\tstatic getDefaults(): SignalOptions<\"number\"> {\n\t\treturn Object.assign(Signal.getDefaults(), {\n\t\t\tvalue: 0,\n\t\t});\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._sum.dispose();\n\t\treturn this;\n\t}\n}\n","import { InputNode, OutputNode, ToneAudioNodeOptions } from \"../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { Add } from \"./Add\";\nimport { Multiply } from \"./Multiply\";\nimport { SignalOperator } from \"./SignalOperator\";\n\nexport interface ScaleOptions extends ToneAudioNodeOptions {\n\tmin: number;\n\tmax: number;\n}\n\n/**\n * Performs a linear scaling on an input signal.\n * Scales a NormalRange input to between\n * outputMin and outputMax.\n *\n * @example\n * const scale = new Tone.Scale(50, 100);\n * const signal = new Tone.Signal(0.5).connect(scale);\n * // the output of scale equals 75\n * @category Signal\n */\nexport class Scale<Options extends ScaleOptions = ScaleOptions> extends SignalOperator<Options> {\n\n\treadonly name: string = \"Scale\";\n\n\tinput: InputNode;\n\toutput: OutputNode;\n\n\t/**\n\t * Hold the multiple\n\t */\n\tprotected _mult: Multiply;\n\n\t/**\n\t * Hold the adder\n\t */\n\tprotected _add: Add;\n\n\t/**\n\t * Private reference to the min value\n\t */\n\tprivate _min: number;\n\n\t/**\n\t * Private reference to the max value\n\t */\n\tprivate _max: number;\n\n\t/**\n\t * @param min The output value when the input is 0.\n\t * @param max The output value when the input is 1.\n\t */\n\tconstructor(min?: number, max?: number);\n\tconstructor(options?: Partial<ScaleOptions>);\n\tconstructor() {\n\t\tsuper(Object.assign(optionsFromArguments(Scale.getDefaults(), arguments, [\"min\", \"max\"])));\n\t\tconst options = optionsFromArguments(Scale.getDefaults(), arguments, [\"min\", \"max\"]);\n\n\t\tthis._mult = this.input = new Multiply({\n\t\t\tcontext: this.context,\n\t\t\tvalue: options.max - options.min,\n\t\t});\n\n\t\tthis._add = this.output = new Add({\n\t\t\tcontext: this.context,\n\t\t\tvalue: options.min,\n\t\t});\n\n\t\tthis._min = options.min;\n\t\tthis._max = options.max;\n\n\t\tthis.input.connect(this.output);\n\t}\n\n\tstatic getDefaults(): ScaleOptions {\n\t\treturn Object.assign(SignalOperator.getDefaults(), {\n\t\t\tmax: 1,\n\t\t\tmin: 0,\n\t\t});\n\t}\n\n\t/**\n\t * The minimum output value. This number is output when the value input value is 0.\n\t */\n\tget min(): number {\n\t\treturn this._min;\n\t}\n\tset min(min) {\n\t\tthis._min = min;\n\t\tthis._setRange();\n\t}\n\n\t/**\n\t * The maximum output value. This number is output when the value input value is 1.\n\t */\n\tget max(): number {\n\t\treturn this._max;\n\t}\n\tset max(max) {\n\t\tthis._max = max;\n\t\tthis._setRange();\n\t}\n\n\t/**\n\t * set the values\n\t */\n\tprivate _setRange(): void {\n\t\tthis._add.value = this._min;\n\t\tthis._mult.value = this._max - this._min;\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._add.dispose();\n\t\tthis._mult.dispose();\n\t\treturn this;\n\t}\n}\n","import { Gain } from \"../core/context/Gain\";\nimport { connect, disconnect, ToneAudioNodeOptions } from \"../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { SignalOperator } from \"./SignalOperator\";\n\n/**\n * Tone.Zero outputs 0's at audio-rate. The reason this has to be\n * it's own class is that many browsers optimize out Tone.Signal\n * with a value of 0 and will not process nodes further down the graph.\n * @category Signal\n */\nexport class Zero extends SignalOperator<ToneAudioNodeOptions> {\n\n\treadonly name: string = \"Zero\";\n\n\t/**\n\t * The gain node which connects the constant source to the output\n\t */\n\tprivate _gain = new Gain({ context: this.context });\n\n\t/**\n\t * Only outputs 0\n\t */\n\toutput = this._gain;\n\n\t/**\n\t * no input node\n\t */\n\tinput = undefined;\n\n\tconstructor(options?: Partial<ToneAudioNodeOptions>);\n\tconstructor() {\n\t\tsuper(Object.assign(optionsFromArguments(Zero.getDefaults(), arguments)));\n\t\tconnect(this.context.getConstant(0), this._gain);\n\t}\n\n\t/**\n\t * clean up\n\t */\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tdisconnect(this.context.getConstant(0), this._gain);\n\t\treturn this;\n\t}\n}\n","import { Gain } from \"../../core/context/Gain\";\nimport { Param } from \"../../core/context/Param\";\nimport { InputNode, OutputNode, ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { Degrees, Frequency, NormalRange, Time, UnitName } from \"../../core/type/Units\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { readOnly } from \"../../core/util/Interface\";\nimport { BasicPlaybackState } from \"../../core/util/StateTimeline\";\nimport { AudioToGain } from \"../../signal/AudioToGain\";\nimport { Scale } from \"../../signal/Scale\";\nimport { connectSignal, Signal } from \"../../signal/Signal\";\nimport { Zero } from \"../../signal/Zero\";\nimport { Oscillator, ToneOscillatorType } from \"./Oscillator\";\nimport { ToneOscillatorConstructorOptions, ToneOscillatorOptions } from \"./OscillatorInterface\";\n\nexport type LFOOptions = {\n\tmin: number;\n\tmax: number;\n\tamplitude: NormalRange;\n\tunits: UnitName;\n} & ToneOscillatorOptions;\n\n/**\n * LFO stands for low frequency oscillator. LFO produces an output signal\n * which can be attached to an AudioParam or Tone.Signal\n * in order to modulate that parameter with an oscillator. The LFO can\n * also be synced to the transport to start/stop and change when the tempo changes.\n * @example\n * return Tone.Offline(() => {\n * \tconst lfo = new Tone.LFO(\"4n\", 400, 4000).start().toDestination();\n * }, 0.5, 1);\n * @category Source\n */\nexport class LFO extends ToneAudioNode<LFOOptions> {\n\n\treadonly name: string = \"LFO\";\n\n\t/**\n\t * The oscillator.\n\t */\n\tprivate _oscillator: Oscillator;\n\n\t/**\n\t * The gain of the output\n\t */\n\tprivate _amplitudeGain: Gain<\"normalRange\">;\n\n\t/**\n\t * The amplitude of the LFO, which controls the output range between\n\t * the min and max output. For example if the min is -10 and the max\n\t * is 10, setting the amplitude to 0.5 would make the LFO modulate\n\t * between -5 and 5.\n\t */\n\treadonly amplitude: Param<\"normalRange\">;\n\n\t/**\n\t * The signal which is output when the LFO is stopped\n\t */\n\tprivate _stoppedSignal: Signal<\"audioRange\">;\n\n\t/**\n\t * Just outputs zeros. This is used so that scaled signal is not\n\t * optimized to silence.\n\t */\n\tprivate _zeros: Zero;\n\n\t/**\n\t * The value that the LFO outputs when it's stopped\n\t */\n\tprivate _stoppedValue = 0;\n\n\t/**\n\t * Convert the oscillators audio range to an output between 0-1 so it can be scaled\n\t */\n\tprivate _a2g: AudioToGain;\n\n\t/**\n\t * Scales the final output to the min and max value\n\t */\n\tprivate _scaler: Scale;\n\n\t/**\n\t * The output of the LFO\n\t */\n\treadonly output: OutputNode;\n\n\t/**\n\t * There is no input node\n\t */\n\treadonly input: undefined;\n\n\t/**\n\t * A private placeholder for the units\n\t */\n\tprivate _units: UnitName = \"number\";\n\n\t/**\n\t * If the input value is converted using the [[units]]\n\t */\n\tconvert = true;\n\n\t/**\n\t * The frequency value of the LFO\n\t */\n\treadonly frequency: Signal<\"frequency\">;\n\n\t/**\n\t * @param frequency The frequency of the oscillation.\n\t * Typically, LFOs will be in the frequency range of 0.1 to 10 hertz.\n\t * @param min The minimum output value of the LFO.\n\t * @param max The maximum value of the LFO.\n\t */\n\tconstructor(frequency?: Frequency, min?: number, max?: number);\n\tconstructor(options?: Partial<LFOOptions>);\n\tconstructor() {\n\n\t\tsuper(optionsFromArguments(LFO.getDefaults(), arguments, [\"frequency\", \"min\", \"max\"]));\n\t\tconst options = optionsFromArguments(LFO.getDefaults(), arguments, [\"frequency\", \"min\", \"max\"]);\n\n\t\tthis._oscillator = new Oscillator(options as ToneOscillatorConstructorOptions);\n\n\t\tthis.frequency = this._oscillator.frequency;\n\n\t\tthis._amplitudeGain = new Gain({\n\t\t\tcontext: this.context,\n\t\t\tgain: options.amplitude,\n\t\t\tunits: \"normalRange\",\n\t\t});\n\t\tthis.amplitude = this._amplitudeGain.gain;\n\t\tthis._stoppedSignal = new Signal({\n\t\t\tcontext: this.context,\n\t\t\tunits: \"audioRange\",\n\t\t\tvalue: 0,\n\t\t});\n\t\tthis._zeros = new Zero({ context: this.context });\n\t\tthis._a2g = new AudioToGain({ context: this.context });\n\t\tthis._scaler = this.output = new Scale({\n\t\t\tcontext: this.context,\n\t\t\tmax: options.max,\n\t\t\tmin: options.min,\n\t\t});\n\n\t\tthis.units = options.units;\n\t\tthis.min = options.min;\n\t\tthis.max = options.max;\n\n\t\t// connect it up\n\t\tthis._oscillator.chain(this._amplitudeGain, this._a2g, this._scaler);\n\t\tthis._zeros.connect(this._a2g);\n\t\tthis._stoppedSignal.connect(this._a2g);\n\t\treadOnly(this, [\"amplitude\", \"frequency\"]);\n\t\tthis.phase = options.phase;\n\t}\n\n\tstatic getDefaults(): LFOOptions {\n\t\treturn Object.assign(Oscillator.getDefaults(), {\n\t\t\tamplitude: 1,\n\t\t\tfrequency: \"4n\",\n\t\t\tmax: 1,\n\t\t\tmin: 0,\n\t\t\ttype: \"sine\",\n\t\t\tunits: \"number\" as UnitName,\n\t\t});\n\t}\n\n\t/**\n\t * Start the LFO.\n\t * @param time The time the LFO will start\n\t */\n\tstart(time?: Time): this {\n\t\ttime = this.toSeconds(time);\n\t\tthis._stoppedSignal.setValueAtTime(0, time);\n\t\tthis._oscillator.start(time);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Stop the LFO.\n\t * @param  time The time the LFO will stop\n\t */\n\tstop(time?: Time): this {\n\t\ttime = this.toSeconds(time);\n\t\tthis._stoppedSignal.setValueAtTime(this._stoppedValue, time);\n\t\tthis._oscillator.stop(time);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sync the start/stop/pause to the transport\n\t * and the frequency to the bpm of the transport\n\t * @example\n\t * const lfo = new Tone.LFO(\"8n\");\n\t * lfo.sync().start(0);\n\t * // the rate of the LFO will always be an eighth note, even as the tempo changes\n\t */\n\tsync(): this {\n\t\tthis._oscillator.sync();\n\t\tthis._oscillator.syncFrequency();\n\t\treturn this;\n\t}\n\n\t/**\n\t * unsync the LFO from transport control\n\t */\n\tunsync(): this {\n\t\tthis._oscillator.unsync();\n\t\tthis._oscillator.unsyncFrequency();\n\t\treturn this;\n\t}\n\n\t/**\n\t * After the oscillator waveform is updated, reset the `_stoppedSignal` value to match the updated waveform\n\t */\n\tprivate _setStoppedValue() {\n\t\tthis._stoppedValue = this._oscillator.getInitialValue();\n\t\tthis._stoppedSignal.value = this._stoppedValue;\n\t}\n\n\t/**\n\t * The minimum output of the LFO.\n\t */\n\tget min(): number {\n\t\treturn this._toType(this._scaler.min);\n\t}\n\tset min(min) {\n\t\tmin = this._fromType(min);\n\t\tthis._scaler.min = min;\n\t}\n\n\t/**\n\t * The maximum output of the LFO.\n\t */\n\tget max(): number {\n\t\treturn this._toType(this._scaler.max);\n\t}\n\tset max(max) {\n\t\tmax = this._fromType(max);\n\t\tthis._scaler.max = max;\n\t}\n\n\t/**\n\t * The type of the oscillator: See [[Oscillator.type]]\n\t */\n\tget type(): ToneOscillatorType {\n\t\treturn this._oscillator.type;\n\t}\n\tset type(type) {\n\t\tthis._oscillator.type = type;\n\t\tthis._setStoppedValue();\n\t}\n\n\t/**\n\t * The oscillator's partials array: See [[Oscillator.partials]]\n\t */\n\tget partials(): number[] {\n\t\treturn this._oscillator.partials;\n\t}\n\tset partials(partials) {\n\t\tthis._oscillator.partials = partials;\n\t\tthis._setStoppedValue();\n\t}\n\n\t/**\n\t * The phase of the LFO.\n\t */\n\tget phase(): Degrees {\n\t\treturn this._oscillator.phase;\n\t}\n\tset phase(phase) {\n\t\tthis._oscillator.phase = phase;\n\t\tthis._setStoppedValue();\n\t}\n\n\t/**\n\t * The output units of the LFO.\n\t */\n\tget units(): UnitName {\n\t\treturn this._units;\n\t}\n\tset units(val) {\n\t\tconst currentMin = this.min;\n\t\tconst currentMax = this.max;\n\t\t// convert the min and the max\n\t\tthis._units = val;\n\t\tthis.min = currentMin;\n\t\tthis.max = currentMax;\n\t}\n\n\t/**\n\t * Returns the playback state of the source, either \"started\" or \"stopped\".\n\t */\n\tget state(): BasicPlaybackState {\n\t\treturn this._oscillator.state;\n\t}\n\n\t/**\n\t * @param node the destination to connect to\n\t * @param outputNum the optional output number\n\t * @param inputNum the input number\n\t */\n\tconnect(node: InputNode, outputNum?: number, inputNum?: number): this {\n\t\tif (node instanceof Param || node instanceof Signal) {\n\t\t\tthis.convert = node.convert;\n\t\t\tthis.units = node.units;\n\t\t}\n\t\tconnectSignal(this, node, outputNum, inputNum);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Private methods borrowed from Param\n\t */\n\t// @ts-ignore\n\tprivate _fromType = Param.prototype._fromType;\n\t// @ts-ignore\n\tprivate _toType = Param.prototype._toType;\n\t// @ts-ignore\n\tprivate _is = Param.prototype._is;\n\t// @ts-ignore\n\tprivate _clampValue = Param.prototype._clampValue;\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._oscillator.dispose();\n\t\tthis._stoppedSignal.dispose();\n\t\tthis._zeros.dispose();\n\t\tthis._scaler.dispose();\n\t\tthis._a2g.dispose();\n\t\tthis._amplitudeGain.dispose();\n\t\tthis.amplitude.dispose();\n\t\treturn this;\n\t}\n}\n","import { assertRange } from \"./Debug\";\nimport { Time } from \"../type/Units\";\n\n/**\n * Assert that the number is in the given range.\n */\nexport function range(min: number, max = Infinity) {\n\tconst valueMap: WeakMap<any, number> = new WeakMap();\n\treturn function(target: any, propertyKey: string | symbol) {\n\t\tReflect.defineProperty(\n\t\t\ttarget,\n\t\t\tpropertyKey,\n\t\t\t{\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tget: function() {\n\t\t\t\t\treturn valueMap.get(this);\n\t\t\t\t},\n\t\t\t\tset: function(newValue: number) {\n\t\t\t\t\tassertRange(newValue, min, max);\n\t\t\t\t\tvalueMap.set(this, newValue);\n\t\t\t\t}\n\t\t\t},\n\t\t);\n\t};\n}\n\n/**\n * Convert the time to seconds and assert that the time is in between the two\n * values when being set.\n */\nexport function timeRange(min: number, max = Infinity) {\n\tconst valueMap: WeakMap<any, Time> = new WeakMap();\n\treturn function(target: any, propertyKey: string) {\n\t\tReflect.defineProperty(\n\t\t\ttarget,\n\t\t\tpropertyKey,\n\t\t\t{\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tget: function() {\n\t\t\t\t\treturn valueMap.get(this);\n\t\t\t\t},\n\t\t\t\tset: function(newValue: Time) {\n\t\t\t\t\tassertRange(this.toSeconds(newValue), min, max);\n\t\t\t\t\tvalueMap.set(this, newValue);\n\t\t\t\t}\n\t\t\t},\n\t\t);\n\t};\n}\n","import { ToneAudioBuffer } from \"../../core/context/ToneAudioBuffer\";\nimport { Positive, Seconds, Time } from \"../../core/type/Units\";\nimport { defaultArg, optionsFromArguments } from \"../../core/util/Defaults\";\nimport { noOp } from \"../../core/util/Interface\";\nimport { isUndef } from \"../../core/util/TypeCheck\";\nimport { Source, SourceOptions } from \"../Source\";\nimport { ToneBufferSource } from \"./ToneBufferSource\";\nimport { assertRange } from \"../../core/util/Debug\";\nimport { timeRange } from \"../../core/util/Decorator\";\n\nexport interface PlayerOptions extends SourceOptions {\n\tonload: () => void;\n\tonerror: (error: Error) => void;\n\tplaybackRate: Positive;\n\tloop: boolean;\n\tautostart: boolean;\n\tloopStart: Time;\n\tloopEnd: Time;\n\treverse: boolean;\n\tfadeIn: Time;\n\tfadeOut: Time;\n\turl?: ToneAudioBuffer | string | AudioBuffer;\n}\n\n/**\n * Player is an audio file player with start, loop, and stop functions.\n * @example\n * const player = new Tone.Player(\"https://tonejs.github.io/audio/berklee/gong_1.mp3\").toDestination();\n * // play as soon as the buffer is loaded\n * player.autostart = true;\n * @category Source\n */\nexport class Player extends Source<PlayerOptions> {\n\n\treadonly name: string = \"Player\";\n\n\t/**\n\t * If the file should play as soon\n\t * as the buffer is loaded.\n\t */\n\tautostart: boolean;\n\n\t/**\n\t * The buffer\n\t */\n\tprivate _buffer: ToneAudioBuffer;\n\n\t/**\n\t * if the buffer should loop once it's over\n\t */\n\tprivate _loop: boolean;\n\n\t/**\n\t * if 'loop' is true, the loop will start at this position\n\t */\n\tprivate _loopStart: Time;\n\n\t/**\n\t * if 'loop' is true, the loop will end at this position\n\t */\n\tprivate _loopEnd: Time;\n\n\t/**\n\t * the playback rate\n\t */\n\tprivate _playbackRate: Positive;\n\n\t/**\n\t * All of the active buffer source nodes\n\t */\n\tprivate _activeSources: Set<ToneBufferSource> = new Set();\n\n\t/**\n\t * The fadeIn time of the amplitude envelope.\n\t */\n\t@timeRange(0)\n\tfadeIn: Time;\n\n\t/**\n\t * The fadeOut time of the amplitude envelope.\n\t */\n\t@timeRange(0)\n\tfadeOut: Time;\n\n\t/**\n\t * @param url Either the AudioBuffer or the url from which to load the AudioBuffer\n\t * @param onload The function to invoke when the buffer is loaded.\n\t */\n\tconstructor(url?: string | AudioBuffer | ToneAudioBuffer, onload?: () => void);\n\tconstructor(options?: Partial<PlayerOptions>);\n\tconstructor() {\n\n\t\tsuper(optionsFromArguments(Player.getDefaults(), arguments, [\"url\", \"onload\"]));\n\t\tconst options = optionsFromArguments(Player.getDefaults(), arguments, [\"url\", \"onload\"]);\n\n\t\tthis._buffer = new ToneAudioBuffer({\n\t\t\tonload: this._onload.bind(this, options.onload),\n\t\t\tonerror: options.onerror,\n\t\t\treverse: options.reverse,\n\t\t\turl: options.url,\n\t\t});\n\t\tthis.autostart = options.autostart;\n\t\tthis._loop = options.loop;\n\t\tthis._loopStart = options.loopStart;\n\t\tthis._loopEnd = options.loopEnd;\n\t\tthis._playbackRate = options.playbackRate;\n\t\tthis.fadeIn = options.fadeIn;\n\t\tthis.fadeOut = options.fadeOut;\n\t}\n\n\tstatic getDefaults(): PlayerOptions {\n\t\treturn Object.assign(Source.getDefaults(), {\n\t\t\tautostart: false,\n\t\t\tfadeIn: 0,\n\t\t\tfadeOut: 0,\n\t\t\tloop: false,\n\t\t\tloopEnd: 0,\n\t\t\tloopStart: 0,\n\t\t\tonload: noOp,\n\t\t\tonerror: noOp,\n\t\t\tplaybackRate: 1,\n\t\t\treverse: false,\n\t\t});\n\t}\n\n\t/**\n\t * Load the audio file as an audio buffer.\n\t * Decodes the audio asynchronously and invokes\n\t * the callback once the audio buffer loads.\n\t * Note: this does not need to be called if a url\n\t * was passed in to the constructor. Only use this\n\t * if you want to manually load a new url.\n\t * @param url The url of the buffer to load. Filetype support depends on the browser.\n\t */\n\tasync load(url: string): Promise<this> {\n\t\tawait this._buffer.load(url);\n\t\tthis._onload();\n\t\treturn this;\n\t}\n\n\t/**\n\t * Internal callback when the buffer is loaded.\n\t */\n\tprivate _onload(callback: () => void = noOp): void {\n\t\tcallback();\n\t\tif (this.autostart) {\n\t\t\tthis.start();\n\t\t}\n\t}\n\n\t/**\n\t * Internal callback when the buffer is done playing.\n\t */\n\tprivate _onSourceEnd(source: ToneBufferSource): void {\n\t\t// invoke the onstop function\n\t\tthis.onstop(this);\n\n\t\t// delete the source from the active sources\n\t\tthis._activeSources.delete(source);\n\t\tif (this._activeSources.size === 0 && !this._synced &&\n\t\t\tthis._state.getValueAtTime(this.now()) === \"started\") {\n\t\t\t// remove the 'implicitEnd' event and replace with an explicit end\n\t\t\tthis._state.cancel(this.now());\n\t\t\tthis._state.setStateAtTime(\"stopped\", this.now());\n\t\t}\n\t}\n\n\t/**\n\t * Play the buffer at the given startTime. Optionally add an offset\n\t * and/or duration which will play the buffer from a position\n\t * within the buffer for the given duration.\n\t *\n\t * @param  time When the player should start.\n\t * @param  offset The offset from the beginning of the sample to start at.\n\t * @param  duration How long the sample should play. If no duration is given, it will default to the full length of the sample (minus any offset)\n\t */\n\tstart(time?: Time, offset?: Time, duration?: Time): this {\n\t\tsuper.start(time, offset, duration);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Internal start method\n\t */\n\tprotected _start(startTime?: Time, offset?: Time, duration?: Time): void {\n\t\t// if it's a loop the default offset is the loopStart point\n\t\tif (this._loop) {\n\t\t\toffset = defaultArg(offset, this._loopStart);\n\t\t} else {\n\t\t\t// otherwise the default offset is 0\n\t\t\toffset = defaultArg(offset, 0);\n\t\t}\n\n\t\t// compute the values in seconds\n\t\tconst computedOffset = this.toSeconds(offset);\n\n\t\t// compute the duration which is either the passed in duration of the buffer.duration - offset\n\t\tconst origDuration = duration;\n\t\tduration = defaultArg(duration, Math.max(this._buffer.duration - computedOffset, 0));\n\t\tlet computedDuration = this.toSeconds(duration);\n\n\t\t// scale it by the playback rate\n\t\tcomputedDuration = computedDuration / this._playbackRate;\n\n\t\t// get the start time\n\t\tstartTime = this.toSeconds(startTime);\n\n\t\t// make the source\n\t\tconst source = new ToneBufferSource({\n\t\t\turl: this._buffer,\n\t\t\tcontext: this.context,\n\t\t\tfadeIn: this.fadeIn,\n\t\t\tfadeOut: this.fadeOut,\n\t\t\tloop: this._loop,\n\t\t\tloopEnd: this._loopEnd,\n\t\t\tloopStart: this._loopStart,\n\t\t\tonended: this._onSourceEnd.bind(this),\n\t\t\tplaybackRate: this._playbackRate,\n\t\t}).connect(this.output);\n\n\t\t// set the looping properties\n\t\tif (!this._loop && !this._synced) {\n\t\t\t// cancel the previous stop\n\t\t\tthis._state.cancel(startTime + computedDuration);\n\t\t\t// if it's not looping, set the state change at the end of the sample\n\t\t\tthis._state.setStateAtTime(\"stopped\", startTime + computedDuration, {\n\t\t\t\timplicitEnd: true,\n\t\t\t});\n\t\t}\n\n\t\t// add it to the array of active sources\n\t\tthis._activeSources.add(source);\n\n\t\t// start it\n\t\tif (this._loop && isUndef(origDuration)) {\n\t\t\tsource.start(startTime, computedOffset);\n\t\t} else {\n\t\t\t// subtract the fade out time\n\t\t\tsource.start(startTime, computedOffset, computedDuration - this.toSeconds(this.fadeOut));\n\t\t}\n\t}\n\n\t/**\n\t * Stop playback.\n\t */\n\tprotected _stop(time?: Time): void {\n\t\tconst computedTime = this.toSeconds(time);\n\t\tthis._activeSources.forEach(source => source.stop(computedTime));\n\t}\n\n\t/**\n\t * Stop and then restart the player from the beginning (or offset)\n\t * @param  time When the player should start.\n\t * @param  offset The offset from the beginning of the sample to start at.\n\t * @param  duration How long the sample should play. If no duration is given, \n\t * \t\t\t\t\tit will default to the full length of the sample (minus any offset)\n\t */\n\trestart(time?: Seconds, offset?: Time, duration?: Time): this {\n\t\tsuper.restart(time, offset, duration);\n\t\treturn this;\n\t}\n\n\tprotected _restart(time?: Seconds, offset?: Time, duration?: Time): void {\n\t\tthis._stop(time);\n\t\tthis._start(time, offset, duration);\n\t}\n\n\t/**\n\t * Seek to a specific time in the player's buffer. If the\n\t * source is no longer playing at that time, it will stop.\n\t * @param offset The time to seek to.\n\t * @param when The time for the seek event to occur.\n\t * @example\n\t * const player = new Tone.Player(\"https://tonejs.github.io/audio/berklee/gurgling_theremin_1.mp3\", () => {\n\t * \tplayer.start();\n\t * \t// seek to the offset in 1 second from now\n\t * \tplayer.seek(0.4, \"+1\");\n\t * }).toDestination();\n\t */\n\tseek(offset: Time, when?: Time): this {\n\t\tconst computedTime = this.toSeconds(when);\n\t\tif (this._state.getValueAtTime(computedTime) === \"started\") {\n\t\t\tconst computedOffset = this.toSeconds(offset);\n\t\t\t// if it's currently playing, stop it\n\t\t\tthis._stop(computedTime);\n\t\t\t// restart it at the given time\n\t\t\tthis._start(computedTime, computedOffset);\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Set the loop start and end. Will only loop if loop is set to true.\n\t * @param loopStart The loop start time\n\t * @param loopEnd The loop end time\n\t * @example\n\t * const player = new Tone.Player(\"https://tonejs.github.io/audio/berklee/malevoices_aa2_F3.mp3\").toDestination();\n\t * // loop between the given points\n\t * player.setLoopPoints(0.2, 0.3);\n\t * player.loop = true;\n\t * player.autostart = true;\n\t */\n\tsetLoopPoints(loopStart: Time, loopEnd: Time): this {\n\t\tthis.loopStart = loopStart;\n\t\tthis.loopEnd = loopEnd;\n\t\treturn this;\n\t}\n\n\t/**\n\t * If loop is true, the loop will start at this position.\n\t */\n\tget loopStart(): Time {\n\t\treturn this._loopStart;\n\t}\n\tset loopStart(loopStart) {\n\t\tthis._loopStart = loopStart;\n\t\tif (this.buffer.loaded) {\n\t\t\tassertRange(this.toSeconds(loopStart), 0, this.buffer.duration);\n\t\t}\n\t\t// get the current source\n\t\tthis._activeSources.forEach(source => {\n\t\t\tsource.loopStart = loopStart;\n\t\t});\n\t}\n\n\t/**\n\t * If loop is true, the loop will end at this position.\n\t */\n\tget loopEnd(): Time {\n\t\treturn this._loopEnd;\n\t}\n\tset loopEnd(loopEnd) {\n\t\tthis._loopEnd = loopEnd;\n\t\tif (this.buffer.loaded) {\n\t\t\tassertRange(this.toSeconds(loopEnd), 0, this.buffer.duration);\n\t\t}\n\t\t// get the current source\n\t\tthis._activeSources.forEach(source => {\n\t\t\tsource.loopEnd = loopEnd;\n\t\t});\n\t}\n\n\t/**\n\t * The audio buffer belonging to the player.\n\t */\n\tget buffer(): ToneAudioBuffer {\n\t\treturn this._buffer;\n\t}\n\tset buffer(buffer) {\n\t\tthis._buffer.set(buffer);\n\t}\n\n\t/**\n\t * If the buffer should loop once it's over.\n\t * @example\n\t * const player = new Tone.Player(\"https://tonejs.github.io/audio/drum-samples/breakbeat.mp3\").toDestination();\n\t * player.loop = true;\n\t * player.autostart = true;\n\t */\n\tget loop(): boolean {\n\t\treturn this._loop;\n\t}\n\tset loop(loop) {\n\t\t// if no change, do nothing\n\t\tif (this._loop === loop) {\n\t\t\treturn;\n\t\t}\n\t\tthis._loop = loop;\n\t\t// set the loop of all of the sources\n\t\tthis._activeSources.forEach(source => {\n\t\t\tsource.loop = loop;\n\t\t});\n\t\tif (loop) {\n\t\t\t// remove the next stopEvent\n\t\t\tconst stopEvent = this._state.getNextState(\"stopped\", this.now());\n\t\t\tif (stopEvent) {\n\t\t\t\tthis._state.cancel(stopEvent.time);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Normal speed is 1. The pitch will change with the playback rate.\n\t * @example\n\t * const player = new Tone.Player(\"https://tonejs.github.io/audio/berklee/femalevoices_aa2_A5.mp3\").toDestination();\n\t * // play at 1/4 speed\n\t * player.playbackRate = 0.25;\n\t * // play as soon as the buffer is loaded\n\t * player.autostart = true;\n\t */\n\tget playbackRate(): Positive {\n\t\treturn this._playbackRate;\n\t}\n\tset playbackRate(rate) {\n\t\tthis._playbackRate = rate;\n\t\tconst now = this.now();\n\n\t\t// cancel the stop event since it's at a different time now\n\t\tconst stopEvent = this._state.getNextState(\"stopped\", now);\n\t\tif (stopEvent && stopEvent.implicitEnd) {\n\t\t\tthis._state.cancel(stopEvent.time);\n\t\t\tthis._activeSources.forEach(source => source.cancelStop());\n\t\t}\n\n\t\t// set all the sources\n\t\tthis._activeSources.forEach(source => {\n\t\t\tsource.playbackRate.setValueAtTime(rate, now);\n\t\t});\n\t}\n\n\t/**\n\t * If the buffer should be reversed\n\t * @example\n\t * const player = new Tone.Player(\"https://tonejs.github.io/audio/berklee/chime_1.mp3\").toDestination();\n\t * player.autostart = true;\n\t * player.reverse = true;\n\t */\n\tget reverse(): boolean {\n\t\treturn this._buffer.reverse;\n\t}\n\tset reverse(rev) {\n\t\tthis._buffer.reverse = rev;\n\t}\n\n\t/**\n\t * If the buffer is loaded\n\t */\n\tget loaded(): boolean {\n\t\treturn this._buffer.loaded;\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\t// disconnect all of the players\n\t\tthis._activeSources.forEach(source => source.dispose());\n\t\tthis._activeSources.clear();\n\t\tthis._buffer.dispose();\n\t\treturn this;\n\t}\n}\n","import { Volume } from \"../../component/channel/Volume\";\nimport { Param } from \"../../core/context/Param\";\nimport { ToneAudioBuffer } from \"../../core/context/ToneAudioBuffer\";\nimport { ToneAudioBuffers, ToneAudioBuffersUrlMap } from \"../../core/context/ToneAudioBuffers\";\nimport { OutputNode, ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { Decibels, Time } from \"../../core/type/Units\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { assert } from \"../../core/util/Debug\";\nimport { noOp, readOnly } from \"../../core/util/Interface\";\nimport { BasicPlaybackState } from \"../../core/util/StateTimeline\";\nimport { Source, SourceOptions } from \"../Source\";\nimport { Player } from \"./Player\";\n\nexport interface PlayersOptions extends SourceOptions {\n\turls: ToneAudioBuffersUrlMap;\n\tvolume: Decibels;\n\tmute: boolean;\n\tonload: () => void;\n\tonerror: (error: Error) => void;\n\tbaseUrl: string;\n\tfadeIn: Time;\n\tfadeOut: Time;\n}\n\n/**\n * Players combines multiple [[Player]] objects.\n * @category Source\n */\nexport class Players extends ToneAudioNode<PlayersOptions> {\n\n\treadonly name: string = \"Players\";\n\n\t/**\n\t * The output volume node\n\t */\n\tprivate _volume: Volume;\n\n\t/**\n\t * The volume of the output in decibels.\n\t */\n\treadonly volume: Param<\"decibels\">;\n\n\t/**\n\t * The combined output of all of the players\n\t */\n\treadonly output: OutputNode;\n\n\t/**\n\t * Players has no input.\n\t */\n\treadonly input = undefined;\n\n\t/**\n\t * The container of all of the players\n\t */\n\tprivate _players: Map<string, Player> = new Map();\n\n\t/**\n\t * The container of all the buffers\n\t */\n\tprivate _buffers: ToneAudioBuffers;\n\n\t/**\n\t * private holder of the fadeIn time\n\t */\n\tprivate _fadeIn: Time;\n\n\t/**\n\t * private holder of the fadeOut time\n\t */\n\tprivate _fadeOut: Time;\n\n\t/**\n\t * @param urls An object mapping a name to a url.\n\t * @param onload The function to invoke when all buffers are loaded.\n\t */\n\tconstructor(urls?: ToneAudioBuffersUrlMap, onload?: () => void);\n\t/**\n\t * @param urls An object mapping a name to a url.\n\t * @param options The remaining options associated with the players\n\t */\n\tconstructor(urls?: ToneAudioBuffersUrlMap, options?: Partial<Omit<PlayersOptions, \"urls\">>);\n\tconstructor(options?: Partial<PlayersOptions>);\n\tconstructor() {\n\t\tsuper(optionsFromArguments(Players.getDefaults(), arguments, [\"urls\", \"onload\"], \"urls\"));\n\t\tconst options = optionsFromArguments(Players.getDefaults(), arguments, [\"urls\", \"onload\"], \"urls\");\n\n\t\t/**\n\t\t * The output volume node\n\t\t */\n\t\tthis._volume = this.output = new Volume({\n\t\t\tcontext: this.context,\n\t\t\tvolume: options.volume,\n\t\t});\n\n\t\tthis.volume = this._volume.volume;\n\t\treadOnly(this, \"volume\");\n\t\tthis._buffers = new ToneAudioBuffers({\n\t\t\turls: options.urls, \n\t\t\tonload: options.onload, \n\t\t\tbaseUrl: options.baseUrl,\n\t\t\tonerror: options.onerror\n\t\t});\n\t\t// mute initially\n\t\tthis.mute = options.mute;\n\t\tthis._fadeIn = options.fadeIn;\n\t\tthis._fadeOut = options.fadeOut;\n\t}\n\n\tstatic getDefaults(): PlayersOptions {\n\t\treturn Object.assign(Source.getDefaults(), {\n\t\t\tbaseUrl: \"\",\n\t\t\tfadeIn: 0,\n\t\t\tfadeOut: 0,\n\t\t\tmute: false,\n\t\t\tonload: noOp,\n\t\t\tonerror: noOp,\n\t\t\turls: {},\n\t\t\tvolume: 0,\n\t\t});\n\t}\n\n\t/**\n\t * Mute the output.\n\t */\n\tget mute(): boolean {\n\t\treturn this._volume.mute;\n\t}\n\tset mute(mute) {\n\t\tthis._volume.mute = mute;\n\t}\n\n\t/**\n\t * The fadeIn time of the envelope applied to the source.\n\t */\n\tget fadeIn(): Time {\n\t\treturn this._fadeIn;\n\t}\n\tset fadeIn(fadeIn) {\n\t\tthis._fadeIn = fadeIn;\n\t\tthis._players.forEach(player => {\n\t\t\tplayer.fadeIn = fadeIn;\n\t\t});\n\t}\n\n\t/**\n\t * The fadeOut time of the each of the sources.\n\t */\n\tget fadeOut(): Time {\n\t\treturn this._fadeOut;\n\t}\n\tset fadeOut(fadeOut) {\n\t\tthis._fadeOut = fadeOut;\n\t\tthis._players.forEach(player => {\n\t\t\tplayer.fadeOut = fadeOut;\n\t\t});\n\t}\n\n\t/**\n\t * The state of the players object. Returns \"started\" if any of the players are playing.\n\t */\n\tget state(): BasicPlaybackState {\n\t\tconst playing = Array.from(this._players).some(([_, player]) => player.state === \"started\");\n\t\treturn playing ? \"started\" : \"stopped\";\n\t}\n\n\t/**\n\t * True if the buffers object has a buffer by that name.\n\t * @param name  The key or index of the buffer.\n\t */\n\thas(name: string): boolean {\n\t\treturn this._buffers.has(name);\n\t}\n\n\t/**\n\t * Get a player by name.\n\t * @param  name  The players name as defined in the constructor object or `add` method.\n\t */\n\tplayer(name: string): Player {\n\t\tassert(this.has(name), `No Player with the name ${name} exists on this object`);\n\t\tif (!this._players.has(name)) {\n\t\t\tconst player = new Player({\n\t\t\t\tcontext: this.context,\n\t\t\t\tfadeIn: this._fadeIn,\n\t\t\t\tfadeOut: this._fadeOut,\n\t\t\t\turl: this._buffers.get(name),\n\t\t\t}).connect(this.output);\n\t\t\tthis._players.set(name, player);\n\t\t}\n\t\treturn this._players.get(name) as Player;\n\t}\n\n\t/**\n\t * If all the buffers are loaded or not\n\t */\n\tget loaded(): boolean {\n\t\treturn this._buffers.loaded;\n\t}\n\n\t/**\n\t * Add a player by name and url to the Players\n\t * @param  name A unique name to give the player\n\t * @param  url  Either the url of the bufer or a buffer which will be added with the given name.\n\t * @param callback  The callback to invoke when the url is loaded.\n\t */\n\tadd(name: string, url: string | ToneAudioBuffer | AudioBuffer, callback?: () => void): this {\n\t\tassert(!this._buffers.has(name), \"A buffer with that name already exists on this object\");\n\t\tthis._buffers.add(name, url, callback);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Stop all of the players at the given time\n\t * @param time The time to stop all of the players.\n\t */\n\tstopAll(time?: Time): this {\n\t\tthis._players.forEach(player => player.stop(time));\n\t\treturn this;\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._volume.dispose();\n\t\tthis.volume.dispose();\n\t\tthis._players.forEach(player => player.dispose());\n\t\tthis._buffers.dispose();\n\t\treturn this;\n\t}\n}\n","import { Source, SourceOptions } from \"../Source\";\nimport { noOp } from \"../../core/util/Interface\";\nimport { ToneAudioBuffer } from \"../../core/context/ToneAudioBuffer\";\nimport { defaultArg, optionsFromArguments } from \"../../core/util/Defaults\";\nimport { Clock } from \"../../core/clock/Clock\";\nimport { Cents, Positive, Seconds, Time } from \"../../core/type/Units\";\nimport { ToneBufferSource } from \"./ToneBufferSource\";\nimport { intervalToFrequencyRatio } from \"../../core/type/Conversions\";\nimport { assertRange } from \"../../core/util/Debug\";\n\ninterface GrainPlayerOptions extends SourceOptions {\n\tonload: () => void;\n\tonerror: (error: Error) => void;\n\treverse: boolean;\n\turl?: ToneAudioBuffer | string | AudioBuffer;\n\toverlap: Seconds;\n\tgrainSize: Seconds;\n\tplaybackRate: Positive;\n\tdetune: Cents;\n\tloop: boolean;\n\tloopStart: Time;\n\tloopEnd: Time;\n}\n\n/**\n * GrainPlayer implements [granular synthesis](https://en.wikipedia.org/wiki/Granular_synthesis).\n * Granular Synthesis enables you to adjust pitch and playback rate independently. The grainSize is the\n * amount of time each small chunk of audio is played for and the overlap is the\n * amount of crossfading transition time between successive grains.\n * @category Source\n */\nexport class GrainPlayer extends Source<GrainPlayerOptions> {\n\n\treadonly name: string = \"GrainPlayer\";\n\n\t/**\n\t * The audio buffer belonging to the player.\n\t */\n\tbuffer: ToneAudioBuffer;\n\n\t/**\n\t * Create a repeating tick to schedule the grains.\n\t */\n\tprivate _clock: Clock;\n\n\t/**\n\t * Internal loopStart value\n\t */\n\tprivate _loopStart = 0;\n\n\t/**\n\t * Internal loopStart value\n\t */\n\tprivate _loopEnd = 0;\n\n\t/**\n\t * All of the currently playing BufferSources\n\t */\n\tprivate _activeSources: ToneBufferSource[] = [];\n\n\t/**\n\t * Internal reference to the playback rate\n\t */\n\tprivate _playbackRate: Positive;\n\n\t/**\n\t * Internal grain size reference;\n\t */\n\tprivate _grainSize: Seconds;\n\n\t/**\n\t * Internal overlap reference;\n\t */\n\tprivate _overlap: Seconds;\n\n\t/**\n\t * Adjust the pitch independently of the playbackRate.\n\t */\n\tdetune: Cents;\n\n\t/**\n\t * If the buffer should loop back to the loopStart when completed\n\t */\n\tloop: boolean;\n\n\t/**\n\t * @param url Either the AudioBuffer or the url from which to load the AudioBuffer\n\t * @param onload The function to invoke when the buffer is loaded.\n\t */\n\tconstructor(url?: string | AudioBuffer | ToneAudioBuffer, onload?: () => void);\n\tconstructor(options?: Partial<GrainPlayerOptions>);\n\tconstructor() {\n\n\t\tsuper(optionsFromArguments(GrainPlayer.getDefaults(), arguments, [\"url\", \"onload\"]));\n\t\tconst options = optionsFromArguments(GrainPlayer.getDefaults(), arguments, [\"url\", \"onload\"]);\n\n\t\tthis.buffer = new ToneAudioBuffer({\n\t\t\tonload: options.onload,\n\t\t\tonerror: options.onerror,\n\t\t\treverse: options.reverse,\n\t\t\turl: options.url,\n\t\t});\n\t\tthis._clock = new Clock({\n\t\t\tcontext: this.context,\n\t\t\tcallback: this._tick.bind(this),\n\t\t\tfrequency: 1 / options.grainSize\n\t\t});\n\t\tthis._playbackRate = options.playbackRate;\n\t\tthis._grainSize = options.grainSize;\n\t\tthis._overlap = options.overlap;\n\t\tthis.detune = options.detune;\n\n\t\t// setup\n\t\tthis.overlap = options.overlap;\n\t\tthis.loop = options.loop;\n\t\tthis.playbackRate = options.playbackRate;\n\t\tthis.grainSize = options.grainSize;\n\t\tthis.loopStart = options.loopStart;\n\t\tthis.loopEnd = options.loopEnd;\n\t\tthis.reverse = options.reverse;\n\t\tthis._clock.on(\"stop\", this._onstop.bind(this));\n\t}\n\n\tstatic getDefaults(): GrainPlayerOptions {\n\t\treturn Object.assign(Source.getDefaults(), {\n\t\t\tonload: noOp,\n\t\t\tonerror: noOp,\n\t\t\toverlap: 0.1,\n\t\t\tgrainSize: 0.2,\n\t\t\tplaybackRate: 1,\n\t\t\tdetune: 0,\n\t\t\tloop: false,\n\t\t\tloopStart: 0,\n\t\t\tloopEnd: 0,\n\t\t\treverse: false\n\t\t});\n\t}\n\n\t/**\n\t * Internal start method\n\t */\n\tprotected _start(time?: Time, offset?: Time, duration?: Time): void {\n\t\toffset = defaultArg(offset, 0);\n\t\toffset = this.toSeconds(offset);\n\t\ttime = this.toSeconds(time);\n\n\t\tconst grainSize = 1 / this._clock.frequency.getValueAtTime(time);\n\t\tthis._clock.start(time, offset / grainSize);\n\n\t\tif (duration) {\n\t\t\tthis.stop(time + this.toSeconds(duration));\n\t\t}\n\t}\n\n\t/**\n\t * Stop and then restart the player from the beginning (or offset)\n\t * @param  time When the player should start.\n\t * @param  offset The offset from the beginning of the sample to start at.\n\t * @param  duration How long the sample should play. If no duration is given, \n\t * \t\t\t\t\tit will default to the full length of the sample (minus any offset)\n\t */\n\trestart(time?: Seconds, offset?: Time, duration?: Time): this {\n\t\tsuper.restart(time, offset, duration);\n\t\treturn this;\n\t}\n\n\tprotected _restart(time?: Seconds, offset?: Time, duration?: Time): void {\n\t\tthis._stop(time);\n\t\tthis._start(time, offset, duration);\n\t}\n\n\t/**\n\t * Internal stop method\n\t */\n\tprotected _stop(time?: Time): void {\n\t\tthis._clock.stop(time);\n\t}\n\n\t/**\n\t * Invoked when the clock is stopped\n\t */\n\tprivate _onstop(time: Seconds): void {\n\t\t// stop the players\n\t\tthis._activeSources.forEach((source) => {\n\t\t\tsource.fadeOut = 0;\n\t\t\tsource.stop(time);\n\t\t});\n\t\tthis.onstop(this);\n\t}\n\n\t/**\n\t * Invoked on each clock tick. scheduled a new grain at this time.\n\t */\n\tprivate _tick(time: Seconds): void {\n\t\t// check if it should stop looping\n\t\tconst ticks = this._clock.getTicksAtTime(time);\n\t\tconst offset = ticks * this._grainSize;\n\t\tthis.log(\"offset\", offset);\n\n\t\tif (!this.loop && offset > this.buffer.duration) {\n\t\t\tthis.stop(time);\n\t\t\treturn;\n\t\t}\n\n\t\t// at the beginning of the file, the fade in should be 0\n\t\tconst fadeIn = offset < this._overlap ? 0 : this._overlap;\n\n\t\t// create a buffer source\n\t\tconst source = new ToneBufferSource({\n\t\t\tcontext: this.context,\n\t\t\turl: this.buffer,\n\t\t\tfadeIn: fadeIn,\n\t\t\tfadeOut: this._overlap,\n\t\t\tloop: this.loop,\n\t\t\tloopStart: this._loopStart,\n\t\t\tloopEnd: this._loopEnd,\n\t\t\t// compute the playbackRate based on the detune\n\t\t\tplaybackRate: intervalToFrequencyRatio(this.detune / 100)\n\t\t}).connect(this.output);\n\n\t\tsource.start(time, this._grainSize * ticks);\n\t\tsource.stop(time + this._grainSize / this.playbackRate);\n\n\t\t// add it to the active sources\n\t\tthis._activeSources.push(source);\n\t\t// remove it when it's done\n\t\tsource.onended = () => {\n\t\t\tconst index = this._activeSources.indexOf(source);\n\t\t\tif (index !== -1) {\n\t\t\t\tthis._activeSources.splice(index, 1);\n\t\t\t}\n\t\t};\n\t}\n\n\t/**\n\t * The playback rate of the sample\n\t */\n\tget playbackRate(): Positive {\n\t\treturn this._playbackRate;\n\t}\n\tset playbackRate(rate) {\n\t\tassertRange(rate, 0.001);\n\t\tthis._playbackRate = rate;\n\t\tthis.grainSize = this._grainSize;\n\t}\n\n\t/**\n\t * The loop start time.\n\t */\n\tget loopStart(): Time {\n\t\treturn this._loopStart;\n\t}\n\tset loopStart(time) {\n\t\tif (this.buffer.loaded) {\n\t\t\tassertRange(this.toSeconds(time), 0, this.buffer.duration);\n\t\t}\n\t\tthis._loopStart = this.toSeconds(time);\n\t}\n\n\t/**\n\t * The loop end time.\n\t */\n\tget loopEnd(): Time {\n\t\treturn this._loopEnd;\n\t}\n\tset loopEnd(time) {\n\t\tif (this.buffer.loaded) {\n\t\t\tassertRange(this.toSeconds(time), 0, this.buffer.duration);\n\t\t}\n\t\tthis._loopEnd = this.toSeconds(time);\n\t}\n\n\t/**\n\t * The direction the buffer should play in\n\t */\n\tget reverse() {\n\t\treturn this.buffer.reverse;\n\t}\n\n\tset reverse(rev) {\n\t\tthis.buffer.reverse = rev;\n\t}\n\n\t/**\n\t * The size of each chunk of audio that the\n\t * buffer is chopped into and played back at.\n\t */\n\tget grainSize(): Time {\n\t\treturn this._grainSize;\n\t}\n\tset grainSize(size) {\n\t\tthis._grainSize = this.toSeconds(size);\n\t\tthis._clock.frequency.setValueAtTime(this._playbackRate / this._grainSize, this.now());\n\t}\n\n\t/**\n\t * The duration of the cross-fade between successive grains.\n\t */\n\tget overlap(): Time {\n\t\treturn this._overlap;\n\t}\n\tset overlap(time) {\n\t\tconst computedTime = this.toSeconds(time);\n\t\tassertRange(computedTime, 0);\n\t\tthis._overlap = computedTime;\n\t}\n\n\t/**\n\t * If all the buffer is loaded\n\t */\n\tget loaded(): boolean {\n\t\treturn this.buffer.loaded;\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis.buffer.dispose();\n\t\tthis._clock.dispose();\n\t\tthis._activeSources.forEach((source) => source.dispose());\n\t\treturn this;\n\t}\n}\n","export * from \"./Noise\";\nexport * from \"./UserMedia\";\nexport * from \"./oscillator/Oscillator\";\nexport * from \"./oscillator/AMOscillator\";\nexport * from \"./oscillator/FMOscillator\";\nexport * from \"./oscillator/PulseOscillator\";\nexport * from \"./oscillator/FatOscillator\";\nexport * from \"./oscillator/PWMOscillator\";\nexport * from \"./oscillator/OmniOscillator\";\nexport * from \"./oscillator/ToneOscillatorNode\";\nexport * from \"./oscillator/LFO\";\nexport * from \"./buffer/ToneBufferSource\";\nexport * from \"./buffer/Player\";\nexport * from \"./buffer/Players\";\nexport * from \"./buffer/GrainPlayer\";\n","import { ToneAudioNodeOptions } from \"../core/context/ToneAudioNode\";\nimport { SignalOperator } from \"./SignalOperator\";\nimport { WaveShaper } from \"./WaveShaper\";\n\n/**\n * Return the absolute value of an incoming signal.\n *\n * @example\n * return Tone.Offline(() => {\n * \tconst abs = new Tone.Abs().toDestination();\n * \tconst signal = new Tone.Signal(1);\n * \tsignal.rampTo(-1, 0.5);\n * \tsignal.connect(abs);\n * }, 0.5, 1);\n * @category Signal\n */\nexport class Abs extends SignalOperator<ToneAudioNodeOptions> {\n\n\treadonly name: string = \"Abs\";\n\n\t/**\n\t * The node which converts the audio ranges\n\t */\n\tprivate _abs = new WaveShaper({\n\t\tcontext: this.context,\n\t\tmapping: val => {\n\t\t\tif (Math.abs(val) < 0.001) {\n\t\t\t\treturn 0;\n\t\t\t} else {\n\t\t\t\treturn Math.abs(val);\n\t\t\t}\n\t\t},\n\t});\n\n\t/**\n\t * The AudioRange input [-1, 1]\n\t */\n\tinput = this._abs;\n\n\t/**\n\t * The output range [0, 1]\n\t */\n\toutput = this._abs;\n\n\t/**\n\t * clean up\n\t */\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._abs.dispose();\n\t\treturn this;\n\t}\n}\n","import { ToneAudioNodeOptions } from \"../core/context/ToneAudioNode\";\nimport { SignalOperator } from \"./SignalOperator\";\nimport { WaveShaper } from \"./WaveShaper\";\n\n/**\n * GainToAudio converts an input in NormalRange [0,1] to AudioRange [-1,1].\n * See [[AudioToGain]].\n * @category Signal\n */\nexport class GainToAudio extends SignalOperator<ToneAudioNodeOptions> {\n\n\treadonly name: string = \"GainToAudio\";\n\n\t/**\n\t * The node which converts the audio ranges\n\t */\n\tprivate _norm = new WaveShaper({\n\t\tcontext: this.context,\n\t\tmapping: x => Math.abs(x) * 2 - 1,\n\t});\n\n\t/**\n\t * The NormalRange input [0, 1]\n\t */\n\tinput = this._norm;\n\n\t/**\n\t * The AudioRange output [-1, 1]\n\t */\n\toutput = this._norm;\n\n\t/**\n\t * clean up\n\t */\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._norm.dispose();\n\t\treturn this;\n\t}\n}\n","import { ToneAudioNodeOptions } from \"../core/context/ToneAudioNode\";\nimport { Multiply } from \"./Multiply\";\nimport { SignalOperator } from \"./SignalOperator\";\n\n/**\n * Negate the incoming signal. i.e. an input signal of 10 will output -10\n *\n * @example\n * const neg = new Tone.Negate();\n * const sig = new Tone.Signal(-2).connect(neg);\n * // output of neg is positive 2.\n * @category Signal\n */\nexport class Negate extends SignalOperator<ToneAudioNodeOptions> {\n\n\treadonly name: string = \"Negate\";\n\n\t/**\n\t * negation is done by multiplying by -1\n\t */\n\tprivate _multiply: Multiply = new Multiply({\n\t\tcontext: this.context,\n\t\tvalue: -1,\n\t});\n\n\t/**\n\t * The input and output are equal to the multiply node\n\t */\n\tinput = this._multiply;\n\toutput = this._multiply;\n\n\t/**\n\t * clean up\n\t * @returns {Negate} this\n\t */\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._multiply.dispose();\n\t\treturn this;\n\t}\n}\n","import { connectSeries } from \"../core/context/ToneAudioNode\";\nimport { Gain } from \"../core/context/Gain\";\nimport { Param } from \"../core/context/Param\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { Negate } from \"../signal/Negate\";\nimport { Signal, SignalOptions } from \"../signal/Signal\";\n\n/**\n * Subtract the signal connected to the input is subtracted from the signal connected\n * The subtrahend.\n *\n * @example\n * // subtract a scalar from a signal\n * const sub = new Tone.Subtract(1);\n * const sig = new Tone.Signal(4).connect(sub);\n * // the output of sub is 3.\n * @example\n * // subtract two signals\n * const sub = new Tone.Subtract();\n * const sigA = new Tone.Signal(10);\n * const sigB = new Tone.Signal(2.5);\n * sigA.connect(sub);\n * sigB.connect(sub.subtrahend);\n * // output of sub is 7.5\n * @category Signal\n */\nexport class Subtract extends Signal {\n\n\toverride = false;\n\n\treadonly name: string = \"Subtract\";\n\n\t/**\n\t * the summing node\n\t */\n\tprivate _sum: Gain = new Gain({ context: this.context });\n\treadonly input: Gain = this._sum;\n\treadonly output: Gain = this._sum;\n\n\t/**\n\t * Negate the input of the second input before connecting it to the summing node.\n\t */\n\tprivate _neg: Negate = new Negate({ context: this.context });\n\n\t/**\n\t * The value which is subtracted from the main signal\n\t */\n\tsubtrahend: Param<\"number\"> = this._param;\n\n\t/**\n\t * @param value The value to subtract from the incoming signal. If the value\n\t *             is omitted, it will subtract the second signal from the first.\n\t */\n\tconstructor(value?: number);\n\tconstructor(options?: Partial<SignalOptions<\"number\">>);\n\tconstructor() {\n\t\tsuper(Object.assign(optionsFromArguments(Subtract.getDefaults(), arguments, [\"value\"])));\n\n\t\tconnectSeries(this._constantSource, this._neg, this._sum);\n\t}\n\n\tstatic getDefaults(): SignalOptions<\"number\"> {\n\t\treturn Object.assign(Signal.getDefaults(), {\n\t\t\tvalue: 0,\n\t\t});\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._neg.dispose();\n\t\tthis._sum.dispose();\n\t\treturn this;\n\t}\n}\n","import { SignalOperator, SignalOperatorOptions } from \"./SignalOperator\";\nimport { Multiply } from \"./Multiply\";\nimport { ToneAudioNode } from \"../core/context/ToneAudioNode\";\nimport { WaveShaper } from \"./WaveShaper\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\n\nexport type GreaterThanZeroOptions = SignalOperatorOptions\n\n/**\n * GreaterThanZero outputs 1 when the input is strictly greater than zero\n * @example\n * return Tone.Offline(() => {\n * \tconst gt0 = new Tone.GreaterThanZero().toDestination();\n * \tconst sig = new Tone.Signal(0.5).connect(gt0);\n * \tsig.setValueAtTime(-1, 0.05);\n * }, 0.1, 1);\n * @category Signal\n */\nexport class GreaterThanZero extends SignalOperator<GreaterThanZeroOptions> {\n\n\treadonly name: string = \"GreaterThanZero\";\n\n\t/**\n\t * The waveshaper\n\t */\n\tprivate _thresh: WaveShaper;\n\n\t/**\n\t * Scale the first thresholded signal by a large value.\n\t * this will help with values which are very close to 0\n\t */\n\tprivate _scale: Multiply;\n\n\treadonly output: ToneAudioNode;\n\treadonly input: ToneAudioNode;\n\n\tconstructor(options?: Partial<GreaterThanZeroOptions>);\n\tconstructor() {\n\t\tsuper(Object.assign(optionsFromArguments(GreaterThanZero.getDefaults(), arguments)));\n\n\t\tthis._thresh = this.output = new WaveShaper({\n\t\t\tcontext: this.context,\n\t\t\tlength: 127,\n\t\t\tmapping: (val) => {\n\t\t\t\tif (val <= 0) {\n\t\t\t\t\treturn 0;\n\t\t\t\t} else {\n\t\t\t\t\treturn 1;\n\t\t\t\t}\n\t\t\t},\n\t\t});\n\t\tthis._scale = this.input = new Multiply({\n\t\t\tcontext: this.context,\n\t\t\tvalue: 10000\n\t\t});\n\n\t\t// connections\n\t\tthis._scale.connect(this._thresh);\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._scale.dispose();\n\t\tthis._thresh.dispose();\n\t\treturn this;\n\t}\n}\n","import { ToneAudioNode } from \"../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { Subtract } from \"./Subtract\";\nimport { Signal, SignalOptions } from \"./Signal\";\nimport { GreaterThanZero } from \"./GreaterThanZero\";\nimport { readOnly } from \"../core/util/Interface\";\nimport { Param } from \"../core/context/Param\";\n\nexport type GreaterThanOptions = SignalOptions<\"number\">;\n\n/**\n * Output 1 if the signal is greater than the value, otherwise outputs 0.\n * can compare two signals or a signal and a number.\n * \n * @example\n * return Tone.Offline(() => {\n * \tconst gt = new Tone.GreaterThan(2).toDestination();\n * \tconst sig = new Tone.Signal(4).connect(gt);\n * }, 0.1, 1);\n * @category Signal\n */\nexport class GreaterThan extends Signal<\"number\"> {\n\n\treadonly name: string = \"GreaterThan\"\n\n\treadonly override: boolean = false;\n\n\treadonly input: ToneAudioNode;\n\treadonly output: ToneAudioNode;\n\n\t/**\n\t * compare that amount to zero after subtracting\n\t */\n\tprivate _gtz: GreaterThanZero;\n\n\t/**\n\t * Subtract the value from the input node\n\t */\n\tprivate _subtract: Subtract;\n\n\t/**\n\t * The signal to compare to the incoming signal against.\n\t * @example\n\t * return Tone.Offline(() => {\n\t * \t// change the comparison value\n\t * \tconst gt = new Tone.GreaterThan(1.5).toDestination();\n\t * \tconst signal = new Tone.Signal(1).connect(gt);\n\t * \tgt.comparator.setValueAtTime(0.5, 0.1);\n\t * }, 0.5, 1);\n\t */\n\treadonly comparator: Param<\"number\">\n\n\t/**\n\t * @param value The value to compare to\n\t */\n\tconstructor(value?: number);\n\tconstructor(options?: Partial<GreaterThanOptions>);\n\tconstructor() {\n\t\tsuper(Object.assign(optionsFromArguments(GreaterThan.getDefaults(), arguments, [\"value\"])));\n\t\tconst options = optionsFromArguments(GreaterThan.getDefaults(), arguments, [\"value\"]);\n\n\t\tthis._subtract = this.input = new Subtract({\n\t\t\tcontext: this.context,\n\t\t\tvalue: options.value\n\t\t});\n\t\tthis._gtz = this.output = new GreaterThanZero({ context: this.context });\n\n\t\tthis.comparator = this._param = this._subtract.subtrahend;\n\t\treadOnly(this, \"comparator\");\n\n\t\t// connect\n\t\tthis._subtract.connect(this._gtz);\n\t}\n\n\tstatic getDefaults(): GreaterThanOptions {\n\t\treturn Object.assign(Signal.getDefaults(), {\n\t\t\tvalue: 0,\n\t\t});\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._gtz.dispose();\n\t\tthis._subtract.dispose();\n\t\tthis.comparator.dispose();\n\t\treturn this;\n\t}\n}\n","import { WaveShaper, WaveShaperMappingFn } from \"./WaveShaper\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { SignalOperator } from \"./SignalOperator\";\nimport { ToneAudioNodeOptions } from \"../core/context/ToneAudioNode\";\n\nexport interface PowOptions extends ToneAudioNodeOptions {\n\tvalue: number;\n}\n\n/**\n * Pow applies an exponent to the incoming signal. The incoming signal must be AudioRange [-1, 1]\n *\n * @example\n * const pow = new Tone.Pow(2);\n * const sig = new Tone.Signal(0.5).connect(pow);\n * // output of pow is 0.25. \n * @category Signal\n */\nexport class Pow extends SignalOperator<PowOptions> {\n\n\treadonly name: string = \"Pow\";\n\n\tprivate _exponent: number;\n\n\tprivate _exponentScaler: WaveShaper;\n\n\tinput: WaveShaper;\n\n\toutput: WaveShaper;\n\n\t/**\n\t * @param value Constant exponent value to use\n\t */\n\tconstructor(value?: number);\n\tconstructor(options?: Partial<PowOptions>);\n\tconstructor() {\n\t\tsuper(Object.assign(optionsFromArguments(Pow.getDefaults(), arguments, [\"value\"])));\n\t\tconst options = optionsFromArguments(Pow.getDefaults(), arguments, [\"value\"]);\n\n\t\tthis._exponentScaler = this.input = this.output = new WaveShaper({\n\t\t\tcontext: this.context,\n\t\t\tmapping: this._expFunc(options.value),\n\t\t\tlength: 8192,\n\t\t});\n\n\t\tthis._exponent = options.value;\n\t}\n\n\tstatic getDefaults(): PowOptions {\n\t\treturn Object.assign(SignalOperator.getDefaults(), {\n\t\t\tvalue: 1,\n\t\t});\n\t}\n\n\t/**\n\t * the function which maps the waveshaper\n\t * @param exponent exponent value\n\t */\n\tprivate _expFunc(exponent: number): WaveShaperMappingFn {\n\t\treturn (val: number) => {\n\t\t\treturn Math.pow(Math.abs(val), exponent);\n\t\t};\n\t}\n\n\t/**\n\t * The value of the exponent.\n\t */\n\tget value(): number {\n\t\treturn this._exponent;\n\t}\n\tset value(exponent: number) {\n\t\tthis._exponent = exponent;\n\t\tthis._exponentScaler.setMap(this._expFunc(this._exponent));\n\t}\n\n\t/**\n\t * Clean up.\n\t */\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._exponentScaler.dispose();\n\t\treturn this;\n\t}\n}\n","import { Scale, ScaleOptions } from \"./Scale\";\nimport { Positive } from \"../core/type/Units\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { Pow } from \"./Pow\";\n\nexport interface ScaleExpOptions extends ScaleOptions {\n\texponent: Positive;\n}\n\n/**\n * Performs an exponential scaling on an input signal.\n * Scales a NormalRange value [0,1] exponentially\n * to the output range of outputMin to outputMax.\n * @example\n * const scaleExp = new Tone.ScaleExp(0, 100, 2);\n * const signal = new Tone.Signal(0.5).connect(scaleExp);\n * @category Signal\n */\nexport class ScaleExp extends Scale<ScaleExpOptions> {\n\n\treadonly name: string = \"ScaleExp\";\n\n\t/**\n\t * The exponent scaler\n\t */\n\tprivate _exp: Pow;\n\n\t/**\n\t * @param min The output value when the input is 0.\n\t * @param max The output value when the input is 1.\n\t * @param exponent The exponent which scales the incoming signal.\n\t */\n\tconstructor(min?: number, max?: number, exponent?: number);\n\tconstructor(options?: Partial<ScaleExpOptions>);\n\tconstructor() {\n\t\tsuper(Object.assign(optionsFromArguments(ScaleExp.getDefaults(), arguments, [\"min\", \"max\", \"exponent\"])));\n\t\tconst options = optionsFromArguments(ScaleExp.getDefaults(), arguments, [\"min\", \"max\", \"exponent\"]);\n\n\t\tthis.input = this._exp = new Pow({\n\t\t\tcontext: this.context,\n\t\t\tvalue: options.exponent,\n\t\t});\n\t\tthis._exp.connect(this._mult);\n\t}\n\n\tstatic getDefaults(): ScaleExpOptions {\n\t\treturn Object.assign(Scale.getDefaults(), {\n\t\t\texponent: 1,\n\t\t});\n\t}\n\n\t/**\n\t * Instead of interpolating linearly between the [[min]] and\n\t * [[max]] values, setting the exponent will interpolate between\n\t * the two values with an exponential curve.\n\t */\n\tget exponent(): Positive {\n\t\treturn this._exp.value;\n\t}\n\tset exponent(exp) {\n\t\tthis._exp.value = exp;\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._exp.dispose();\n\t\treturn this;\n\t}\n}\n","import { Signal, SignalOptions } from \"./Signal\";\nimport { NormalRange, Seconds, Time, TransportTime, UnitMap, UnitName } from \"../core/type/Units\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { TransportTimeClass } from \"../core/type/TransportTime\";\nimport { ToneConstantSource } from \"./ToneConstantSource\";\nimport { OutputNode } from \"../core/context/ToneAudioNode\";\n\n/**\n * Adds the ability to synchronize the signal to the [[Transport]]\n */\nexport class SyncedSignal<TypeName extends UnitName = \"number\"> extends Signal<TypeName> {\n\n\treadonly name: string = \"SyncedSignal\";\n\t\n\t/**\n\t * Don't override when something is connected to the input\n\t */\n\treadonly override = false;\n\n\treadonly output: OutputNode;\n\n\t/**\n\t * Keep track of the last value as an optimization.\n\t */\n\tprivate _lastVal: UnitMap[TypeName];\n\n\t/**\n\t * The ID returned from scheduleRepeat\n\t */\n\tprivate _synced: number;\n\n\t/**\n\t * Remember the callback value\n\t */\n\tprivate _syncedCallback: () => void;\n\n\t/**\n\t * @param value Initial value of the signal\n\t * @param units The unit name, e.g. \"frequency\"\n\t */\n\tconstructor(value?: UnitMap[TypeName], units?: TypeName);\n\tconstructor(options?: Partial<SignalOptions<TypeName>>);\n\tconstructor() {\n\n\t\tsuper(optionsFromArguments(Signal.getDefaults(), arguments, [\"value\", \"units\"]));\n\t\tconst options = optionsFromArguments(Signal.getDefaults(), arguments, [\"value\", \"units\"]) as SignalOptions<TypeName>;\n\n\t\tthis._lastVal = options.value;\n\t\tthis._synced = this.context.transport.scheduleRepeat(this._onTick.bind(this), \"1i\");\n\n\t\tthis._syncedCallback = this._anchorValue.bind(this);\n\t\tthis.context.transport.on(\"start\", this._syncedCallback);\n\t\tthis.context.transport.on(\"pause\", this._syncedCallback);\n\t\tthis.context.transport.on(\"stop\", this._syncedCallback);\n\n\t\t// disconnect the constant source from the output and replace it with another one\n\t\tthis._constantSource.disconnect();\n\t\tthis._constantSource.stop(0);\n\n\t\t// create a new one\n\t\tthis._constantSource = this.output = new ToneConstantSource<TypeName>({ \n\t\t\tcontext: this.context,\n\t\t\toffset: options.value,\n\t\t\tunits: options.units,\n\t\t}).start(0);\n\t\tthis.setValueAtTime(options.value, 0);\n\t}\n\n\t/**\n\t * Callback which is invoked every tick.\n\t */\n\tprivate _onTick(time: Seconds): void {\n\t\tconst val = super.getValueAtTime(this.context.transport.seconds);\n\t\t// approximate ramp curves with linear ramps\n\t\tif (this._lastVal !== val) {\n\t\t\tthis._lastVal = val;\n\t\t\tthis._constantSource.offset.setValueAtTime(val, time);\n\t\t}\n\t}\n\n\t/**\n\t * Anchor the value at the start and stop of the Transport\n\t */\n\tprivate _anchorValue(time: Seconds): void {\n\t\tconst val = super.getValueAtTime(this.context.transport.seconds);\n\t\tthis._lastVal = val;\n\t\tthis._constantSource.offset.cancelAndHoldAtTime(time);\n\t\tthis._constantSource.offset.setValueAtTime(val, time);\n\t}\n\n\tgetValueAtTime(time: TransportTime): UnitMap[TypeName] {\n\t\tconst computedTime = new TransportTimeClass(this.context, time).toSeconds();\n\t\treturn super.getValueAtTime(computedTime);\n\t}\n\t\n\tsetValueAtTime(value: UnitMap[TypeName], time: TransportTime) {\n\t\tconst computedTime = new TransportTimeClass(this.context, time).toSeconds();\n\t\tsuper.setValueAtTime(value, computedTime);\n\t\treturn this;\n\t}\n\n\tlinearRampToValueAtTime(value: UnitMap[TypeName], time: TransportTime) {\n\t\tconst computedTime = new TransportTimeClass(this.context, time).toSeconds();\n\t\tsuper.linearRampToValueAtTime(value, computedTime);\n\t\treturn this;\n\t}\n\n\texponentialRampToValueAtTime(value: UnitMap[TypeName], time: TransportTime) {\n\t\tconst computedTime = new TransportTimeClass(this.context, time).toSeconds();\n\t\tsuper.exponentialRampToValueAtTime(value, computedTime);\n\t\treturn this;\n\t}\n\n\tsetTargetAtTime(value, startTime: TransportTime, timeConstant: number): this {\n\t\tconst computedTime = new TransportTimeClass(this.context, startTime).toSeconds();\n\t\tsuper.setTargetAtTime(value, computedTime, timeConstant);\n\t\treturn this;\n\t}\n\n\tcancelScheduledValues(startTime: TransportTime): this {\n\t\tconst computedTime = new TransportTimeClass(this.context, startTime).toSeconds();\n\t\tsuper.cancelScheduledValues(computedTime);\n\t\treturn this;\n\t}\n\n\tsetValueCurveAtTime(values: UnitMap[TypeName][], startTime: TransportTime, duration: Time, scaling: NormalRange): this {\n\t\tconst computedTime = new TransportTimeClass(this.context, startTime).toSeconds();\n\t\tduration = this.toSeconds(duration);\n\t\tsuper.setValueCurveAtTime(values, computedTime, duration, scaling);\n\t\treturn this;\n\t}\n\n\tcancelAndHoldAtTime(time: TransportTime): this {\n\t\tconst computedTime = new TransportTimeClass(this.context, time).toSeconds();\n\t\tsuper.cancelAndHoldAtTime(computedTime);\n\t\treturn this;\n\t}\n\t\n\tsetRampPoint(time: TransportTime): this {\n\t\tconst computedTime = new TransportTimeClass(this.context, time).toSeconds();\n\t\tsuper.setRampPoint(computedTime);\n\t\treturn this;\n\t}\n\t\n\texponentialRampTo(value: UnitMap[TypeName], rampTime: Time, startTime?: TransportTime): this {\n\t\tconst computedTime = new TransportTimeClass(this.context, startTime).toSeconds();\n\t\tsuper.exponentialRampTo(value, rampTime, computedTime);\n\t\treturn this;\n\t}\n\t\n\tlinearRampTo(value: UnitMap[TypeName], rampTime: Time, startTime?: TransportTime): this {\n\t\tconst computedTime = new TransportTimeClass(this.context, startTime).toSeconds();\n\t\tsuper.linearRampTo(value, rampTime, computedTime);\n\t\treturn this;\n\t}\n\n\ttargetRampTo(value: UnitMap[TypeName], rampTime: Time, startTime?: TransportTime): this {\n\t\tconst computedTime = new TransportTimeClass(this.context, startTime).toSeconds();\n\t\tsuper.targetRampTo(value, rampTime, computedTime);\n\t\treturn this;\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis.context.transport.clear(this._synced);\n\t\tthis.context.transport.off(\"start\", this._syncedCallback);\n\t\tthis.context.transport.off(\"pause\", this._syncedCallback);\n\t\tthis.context.transport.off(\"stop\", this._syncedCallback);\n\t\tthis._constantSource.dispose();\n\t\treturn this;\n\t}\n}\n","export * from \"./Add\";\nexport * from \"./Abs\";\nexport * from \"./AudioToGain\";\nexport * from \"./GainToAudio\";\nexport * from \"./GreaterThan\";\nexport * from \"./GreaterThanZero\";\nexport * from \"./Multiply\";\nexport * from \"./Negate\";\nexport * from \"./Pow\";\nexport * from \"./Signal\";\nexport * from \"./Scale\";\nexport * from \"./ScaleExp\";\nexport * from \"./Subtract\";\nexport * from \"./SyncedSignal\";\nexport * from \"./WaveShaper\";\nexport * from \"./Zero\";\n","import { InputNode, OutputNode } from \"../../core/context/ToneAudioNode\";\nimport { ToneAudioNode, ToneAudioNodeOptions } from \"../../core/context/ToneAudioNode\";\nimport { NormalRange, Time } from \"../../core/type/Units\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { isArray, isObject, isString } from \"../../core/util/TypeCheck\";\nimport { connectSignal, Signal } from \"../../signal/Signal\";\nimport { OfflineContext } from \"../../core/context/OfflineContext\";\nimport { assert } from \"../../core/util/Debug\";\nimport { range, timeRange } from \"../../core/util/Decorator\";\n\ntype BasicEnvelopeCurve = \"linear\" | \"exponential\";\ntype InternalEnvelopeCurve = BasicEnvelopeCurve | number[];\nexport type EnvelopeCurve = EnvelopeCurveName | number[];\n\nexport interface EnvelopeOptions extends ToneAudioNodeOptions {\n\tattack: Time;\n\tdecay: Time;\n\tsustain: NormalRange;\n\trelease: Time;\n\tattackCurve: EnvelopeCurve;\n\treleaseCurve: EnvelopeCurve;\n\tdecayCurve: BasicEnvelopeCurve;\n}\n\n/**\n * Envelope is an [ADSR](https://en.wikipedia.org/wiki/Synthesizer#ADSR_envelope)\n * envelope generator. Envelope outputs a signal which\n * can be connected to an AudioParam or Tone.Signal.\n * ```\n *           /\\\n *          /  \\\n *         /    \\\n *        /      \\\n *       /        \\___________\n *      /                     \\\n *     /                       \\\n *    /                         \\\n *   /                           \\\n * ```\n * @example\n * return Tone.Offline(() => {\n * \tconst env = new Tone.Envelope({\n * \t\tattack: 0.1,\n * \t\tdecay: 0.2,\n * \t\tsustain: 0.5,\n * \t\trelease: 0.8,\n * \t}).toDestination();\n * \tenv.triggerAttackRelease(0.5);\n * }, 1.5, 1);\n * @category Component\n */\nexport class Envelope extends ToneAudioNode<EnvelopeOptions> {\n\n\treadonly name: string = \"Envelope\";\n\n\t/**\n\t * When triggerAttack is called, the attack time is the amount of\n\t * time it takes for the envelope to reach it's maximum value.\n\t * ```\n\t *           /\\\n\t *          /X \\\n\t *         /XX  \\\n\t *        /XXX   \\\n\t *       /XXXX    \\___________\n\t *      /XXXXX                \\\n\t *     /XXXXXX                 \\\n\t *    /XXXXXXX                  \\\n\t *   /XXXXXXXX                   \\\n\t * ```\n\t * @min 0\n\t * @max 2\n\t */\n\t@timeRange(0)\n\tattack: Time;\n\n\t/**\n\t * After the attack portion of the envelope, the value will fall\n\t * over the duration of the decay time to it's sustain value.\n\t * ```\n\t *           /\\\n\t *          / X\\\n\t *         /  XX\\\n\t *        /   XXX\\\n\t *       /    XXXX\\___________\n\t *      /     XXXXX           \\\n\t *     /      XXXXX            \\\n\t *    /       XXXXX             \\\n\t *   /        XXXXX              \\\n\t * ```\n\t * @min 0\n\t * @max 2\n\t */\n\t@timeRange(0)\n\tdecay: Time;\n\n\t/**\n\t * The sustain value is the value\n\t * which the envelope rests at after triggerAttack is\n\t * called, but before triggerRelease is invoked.\n\t * ```\n\t *           /\\\n\t *          /  \\\n\t *         /    \\\n\t *        /      \\\n\t *       /        \\___________\n\t *      /          XXXXXXXXXXX\\\n\t *     /           XXXXXXXXXXX \\\n\t *    /            XXXXXXXXXXX  \\\n\t *   /             XXXXXXXXXXX   \\\n\t * ```\n\t */\n\t@range(0, 1)\n\tsustain: NormalRange;\n\n\t/**\n\t * After triggerRelease is called, the envelope's\n\t * value will fall to it's miminum value over the\n\t * duration of the release time.\n\t * ```\n\t *           /\\\n\t *          /  \\\n\t *         /    \\\n\t *        /      \\\n\t *       /        \\___________\n\t *      /                    X\\\n\t *     /                     XX\\\n\t *    /                      XXX\\\n\t *   /                       XXXX\\\n\t * ```\n\t * @min 0\n\t * @max 5\n\t */\n\t@timeRange(0)\n\trelease: Time;\n\n\t/**\n\t * The automation curve type for the attack\n\t */\n\tprivate _attackCurve!: InternalEnvelopeCurve;\n\n\t/**\n\t * The automation curve type for the decay\n\t */\n\tprivate _decayCurve!: BasicEnvelopeCurve;\n\n\t/**\n\t * The automation curve type for the release\n\t */\n\tprivate _releaseCurve!: InternalEnvelopeCurve;\n\n\t/**\n\t * the signal which is output.\n\t */\n\tprotected _sig: Signal<\"normalRange\"> = new Signal({\n\t\tcontext: this.context,\n\t\tvalue: 0,\n\t});\n\n\t/**\n\t * The output signal of the envelope\n\t */\n\toutput: OutputNode = this._sig;\n\n\t/**\n\t * Envelope has no input\n\t */\n\tinput: InputNode | undefined = undefined;\n\n\t/**\n\t * @param attack The amount of time it takes for the envelope to go from\n\t *                        0 to it's maximum value.\n\t * @param decay\tThe period of time after the attack that it takes for the envelope\n\t *                      \tto fall to the sustain value. Value must be greater than 0.\n\t * @param sustain\tThe percent of the maximum value that the envelope rests at until\n\t *                               \tthe release is triggered.\n\t * @param release\tThe amount of time after the release is triggered it takes to reach 0.\n\t *                        \tValue must be greater than 0.\n\t */\n\tconstructor(attack?: Time, decay?: Time, sustain?: NormalRange, release?: Time);\n\tconstructor(options?: Partial<EnvelopeOptions>)\n\tconstructor() {\n\n\t\tsuper(optionsFromArguments(Envelope.getDefaults(), arguments, [\"attack\", \"decay\", \"sustain\", \"release\"]));\n\t\tconst options = optionsFromArguments(Envelope.getDefaults(), arguments, [\"attack\", \"decay\", \"sustain\", \"release\"]);\n\n\t\tthis.attack = options.attack;\n\t\tthis.decay = options.decay;\n\t\tthis.sustain = options.sustain;\n\t\tthis.release = options.release;\n\t\tthis.attackCurve = options.attackCurve;\n\t\tthis.releaseCurve = options.releaseCurve;\n\t\tthis.decayCurve = options.decayCurve;\n\t}\n\n\tstatic getDefaults(): EnvelopeOptions {\n\t\treturn Object.assign(ToneAudioNode.getDefaults(), {\n\t\t\tattack: 0.01,\n\t\t\tattackCurve: \"linear\" as EnvelopeCurveName,\n\t\t\tdecay: 0.1,\n\t\t\tdecayCurve: \"exponential\" as BasicEnvelopeCurve,\n\t\t\trelease: 1,\n\t\t\treleaseCurve: \"exponential\" as EnvelopeCurveName,\n\t\t\tsustain: 0.5,\n\t\t});\n\t}\n\n\t/**\n\t * Read the current value of the envelope. Useful for\n\t * synchronizing visual output to the envelope.\n\t */\n\tget value(): NormalRange {\n\t\treturn this.getValueAtTime(this.now());\n\t}\n\n\t/**\n\t * Get the curve\n\t * @param  curve\n\t * @param  direction  In/Out\n\t * @return The curve name\n\t */\n\tprivate _getCurve(curve: InternalEnvelopeCurve, direction: EnvelopeDirection): EnvelopeCurve {\n\t\tif (isString(curve)) {\n\t\t\treturn curve;\n\t\t} else {\n\t\t\t// look up the name in the curves array\n\t\t\tlet curveName: EnvelopeCurveName;\n\t\t\tfor (curveName in EnvelopeCurves) {\n\t\t\t\tif (EnvelopeCurves[curveName][direction] === curve) {\n\t\t\t\t\treturn curveName;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// return the custom curve\n\t\t\treturn curve;\n\t\t}\n\t}\n\n\t/**\n\t * Assign a the curve to the given name using the direction\n\t * @param  name\n\t * @param  direction In/Out\n\t * @param  curve\n\t */\n\tprivate _setCurve(\n\t\tname: \"_attackCurve\" | \"_decayCurve\" | \"_releaseCurve\",\n\t\tdirection: EnvelopeDirection,\n\t\tcurve: EnvelopeCurve,\n\t): void {\n\t\t// check if it's a valid type\n\t\tif (isString(curve) && Reflect.has(EnvelopeCurves, curve)) {\n\t\t\tconst curveDef = EnvelopeCurves[curve];\n\t\t\tif (isObject(curveDef)) {\n\t\t\t\tif (name !== \"_decayCurve\") {\n\t\t\t\t\tthis[name] = curveDef[direction];\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis[name] = curveDef;\n\t\t\t}\n\t\t} else if (isArray(curve) && name !== \"_decayCurve\") {\n\t\t\tthis[name] = curve;\n\t\t} else {\n\t\t\tthrow new Error(\"Envelope: invalid curve: \" + curve);\n\t\t}\n\t}\n\n\t/**\n\t * The shape of the attack.\n\t * Can be any of these strings:\n\t * * \"linear\"\n\t * * \"exponential\"\n\t * * \"sine\"\n\t * * \"cosine\"\n\t * * \"bounce\"\n\t * * \"ripple\"\n\t * * \"step\"\n\t *\n\t * Can also be an array which describes the curve. Values\n\t * in the array are evenly subdivided and linearly\n\t * interpolated over the duration of the attack.\n\t * @example\n\t * return Tone.Offline(() => {\n\t * \tconst env = new Tone.Envelope(0.4).toDestination();\n\t * \tenv.attackCurve = \"linear\";\n\t * \tenv.triggerAttack();\n\t * }, 1, 1);\n\t */\n\tget attackCurve(): EnvelopeCurve {\n\t\treturn this._getCurve(this._attackCurve, \"In\");\n\t}\n\tset attackCurve(curve) {\n\t\tthis._setCurve(\"_attackCurve\", \"In\", curve);\n\t}\n\n\t/**\n\t * The shape of the release. See the attack curve types.\n\t * @example\n\t * return Tone.Offline(() => {\n\t * \tconst env = new Tone.Envelope({\n\t * \t\trelease: 0.8\n\t * \t}).toDestination();\n\t * \tenv.triggerAttack();\n\t * \t// release curve could also be defined by an array\n\t * \tenv.releaseCurve = [1, 0.3, 0.4, 0.2, 0.7, 0];\n\t * \tenv.triggerRelease(0.2);\n\t * }, 1, 1);\n\t */\n\tget releaseCurve(): EnvelopeCurve {\n\t\treturn this._getCurve(this._releaseCurve, \"Out\");\n\t}\n\tset releaseCurve(curve) {\n\t\tthis._setCurve(\"_releaseCurve\", \"Out\", curve);\n\t}\n\n\t/**\n\t * The shape of the decay either \"linear\" or \"exponential\"\n\t * @example\n\t * return Tone.Offline(() => {\n\t * \tconst env = new Tone.Envelope({\n\t * \t\tsustain: 0.1,\n\t * \t\tdecay: 0.5\n\t * \t}).toDestination();\n\t * \tenv.decayCurve = \"linear\";\n\t * \tenv.triggerAttack();\n\t * }, 1, 1);\n\t */\n\tget decayCurve(): BasicEnvelopeCurve {\n\t\treturn this._decayCurve;\n\t}\n\tset decayCurve(curve) {\n\t\tassert([\"linear\", \"exponential\"].some(c => c === curve), `Invalid envelope curve: ${curve}`);\n\t\tthis._decayCurve = curve;\n\t}\n\n\t/**\n\t * Trigger the attack/decay portion of the ADSR envelope.\n\t * @param  time When the attack should start.\n\t * @param velocity The velocity of the envelope scales the vales.\n\t *                             number between 0-1\n\t * @example\n\t * const env = new Tone.AmplitudeEnvelope().toDestination();\n\t * const osc = new Tone.Oscillator().connect(env).start();\n\t * // trigger the attack 0.5 seconds from now with a velocity of 0.2\n\t * env.triggerAttack(\"+0.5\", 0.2);\n\t */\n\ttriggerAttack(time?: Time, velocity: NormalRange = 1): this {\n\t\tthis.log(\"triggerAttack\", time, velocity);\n\t\ttime = this.toSeconds(time);\n\t\tconst originalAttack = this.toSeconds(this.attack);\n\t\tlet attack = originalAttack;\n\t\tconst decay = this.toSeconds(this.decay);\n\t\t// check if it's not a complete attack\n\t\tconst currentValue = this.getValueAtTime(time);\n\t\tif (currentValue > 0) {\n\t\t\t// subtract the current value from the attack time\n\t\t\tconst attackRate = 1 / attack;\n\t\t\tconst remainingDistance = 1 - currentValue;\n\t\t\t// the attack is now the remaining time\n\t\t\tattack = remainingDistance / attackRate;\n\t\t}\n\t\t// attack\n\t\tif (attack < this.sampleTime) {\n\t\t\tthis._sig.cancelScheduledValues(time);\n\t\t\t// case where the attack time is 0 should set instantly\n\t\t\tthis._sig.setValueAtTime(velocity, time);\n\t\t} else if (this._attackCurve === \"linear\") {\n\t\t\tthis._sig.linearRampTo(velocity, attack, time);\n\t\t} else if (this._attackCurve === \"exponential\") {\n\t\t\tthis._sig.targetRampTo(velocity, attack, time);\n\t\t} else {\n\t\t\tthis._sig.cancelAndHoldAtTime(time);\n\t\t\tlet curve = this._attackCurve;\n\t\t\t// find the starting position in the curve\n\t\t\tfor (let i = 1; i < curve.length; i++) {\n\t\t\t\t// the starting index is between the two values\n\t\t\t\tif (curve[i - 1] <= currentValue && currentValue <= curve[i]) {\n\t\t\t\t\tcurve = this._attackCurve.slice(i);\n\t\t\t\t\t// the first index is the current value\n\t\t\t\t\tcurve[0] = currentValue;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._sig.setValueCurveAtTime(curve, time, attack, velocity);\n\t\t}\n\t\t// decay\n\t\tif (decay && this.sustain < 1) {\n\t\t\tconst decayValue = velocity * this.sustain;\n\t\t\tconst decayStart = time + attack;\n\t\t\tthis.log(\"decay\", decayStart);\n\t\t\tif (this._decayCurve === \"linear\") {\n\t\t\t\tthis._sig.linearRampToValueAtTime(decayValue, decay + decayStart);\n\t\t\t} else {\n\t\t\t\tthis._sig.exponentialApproachValueAtTime(decayValue, decayStart, decay);\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Triggers the release of the envelope.\n\t * @param  time When the release portion of the envelope should start.\n\t * @example\n\t * const env = new Tone.AmplitudeEnvelope().toDestination();\n\t * const osc = new Tone.Oscillator({\n\t * \ttype: \"sawtooth\"\n\t * }).connect(env).start();\n\t * env.triggerAttack();\n\t * // trigger the release half a second after the attack\n\t * env.triggerRelease(\"+0.5\");\n\t */\n\ttriggerRelease(time?: Time): this {\n\t\tthis.log(\"triggerRelease\", time);\n\t\ttime = this.toSeconds(time);\n\t\tconst currentValue = this.getValueAtTime(time);\n\t\tif (currentValue > 0) {\n\t\t\tconst release = this.toSeconds(this.release);\n\t\t\tif (release < this.sampleTime) {\n\t\t\t\tthis._sig.setValueAtTime(0, time);\n\t\t\t} else if (this._releaseCurve === \"linear\") {\n\t\t\t\tthis._sig.linearRampTo(0, release, time);\n\t\t\t} else if (this._releaseCurve === \"exponential\") {\n\t\t\t\tthis._sig.targetRampTo(0, release, time);\n\t\t\t} else {\n\t\t\t\tassert(isArray(this._releaseCurve), \"releaseCurve must be either 'linear', 'exponential' or an array\");\n\t\t\t\tthis._sig.cancelAndHoldAtTime(time);\n\t\t\t\tthis._sig.setValueCurveAtTime(this._releaseCurve, time, release, currentValue);\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Get the scheduled value at the given time. This will\n\t * return the unconverted (raw) value.\n\t * @example\n\t * const env = new Tone.Envelope(0.5, 1, 0.4, 2);\n\t * env.triggerAttackRelease(2);\n\t * setInterval(() => console.log(env.getValueAtTime(Tone.now())), 100);\n\t */\n\tgetValueAtTime(time: Time): NormalRange {\n\t\treturn this._sig.getValueAtTime(time);\n\t}\n\n\t/**\n\t * triggerAttackRelease is shorthand for triggerAttack, then waiting\n\t * some duration, then triggerRelease.\n\t * @param duration The duration of the sustain.\n\t * @param time When the attack should be triggered.\n\t * @param velocity The velocity of the envelope.\n\t * @example\n\t * const env = new Tone.AmplitudeEnvelope().toDestination();\n\t * const osc = new Tone.Oscillator().connect(env).start();\n\t * // trigger the release 0.5 seconds after the attack\n\t * env.triggerAttackRelease(0.5);\n\t */\n\ttriggerAttackRelease(duration: Time, time?: Time, velocity: NormalRange = 1): this {\n\t\ttime = this.toSeconds(time);\n\t\tthis.triggerAttack(time, velocity);\n\t\tthis.triggerRelease(time + this.toSeconds(duration));\n\t\treturn this;\n\t}\n\n\t/**\n\t * Cancels all scheduled envelope changes after the given time.\n\t */\n\tcancel(after?: Time): this {\n\t\tthis._sig.cancelScheduledValues(this.toSeconds(after));\n\t\treturn this;\n\t}\n\n\t/**\n\t * Connect the envelope to a destination node.\n\t */\n\tconnect(destination: InputNode, outputNumber = 0, inputNumber = 0): this {\n\t\tconnectSignal(this, destination, outputNumber, inputNumber);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Render the envelope curve to an array of the given length. \n\t * Good for visualizing the envelope curve. Rescales the duration of the\n\t * envelope to fit the length.\n\t */\n\tasync asArray(length = 1024): Promise<Float32Array> {\n\t\tconst duration = length / this.context.sampleRate;\n\t\tconst context = new OfflineContext(1, duration, this.context.sampleRate);\n\t\t// normalize the ADSR for the given duration with 20% sustain time\n\t\tconst attackPortion = this.toSeconds(this.attack) + this.toSeconds(this.decay);\n\t\tconst envelopeDuration = attackPortion + this.toSeconds(this.release);\n\t\tconst sustainTime = envelopeDuration * 0.1;\n\t\tconst totalDuration = envelopeDuration + sustainTime;\n\t\t// @ts-ignore\n\t\tconst clone = new this.constructor(Object.assign(this.get(), {\n\t\t\tattack: duration * this.toSeconds(this.attack) / totalDuration,\n\t\t\tdecay: duration * this.toSeconds(this.decay) / totalDuration,\n\t\t\trelease: duration * this.toSeconds(this.release) / totalDuration,\n\t\t\tcontext\n\t\t})) as Envelope;\n\t\tclone._sig.toDestination();\n\t\tclone.triggerAttackRelease(duration * (attackPortion + sustainTime) / totalDuration, 0);\n\t\tconst buffer = await context.render();\n\t\treturn buffer.getChannelData(0);\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._sig.dispose();\n\t\treturn this;\n\t}\n}\n\ninterface EnvelopeCurveObject {\n\tIn: number[];\n\tOut: number[];\n}\n\ntype EnvelopeDirection = keyof EnvelopeCurveObject;\n\ninterface EnvelopeCurveMap {\n\tlinear: \"linear\";\n\texponential: \"exponential\";\n\tbounce: EnvelopeCurveObject;\n\tcosine: EnvelopeCurveObject;\n\tsine: EnvelopeCurveObject;\n\tripple: EnvelopeCurveObject;\n\tstep: EnvelopeCurveObject;\n}\n\ntype EnvelopeCurveName = keyof EnvelopeCurveMap;\n\n/**\n * Generate some complex envelope curves.\n */\nconst EnvelopeCurves: EnvelopeCurveMap = (() => {\n\n\tconst curveLen = 128;\n\n\tlet i: number;\n\tlet k: number;\n\n\t// cosine curve\n\tconst cosineCurve: number[] = [];\n\tfor (i = 0; i < curveLen; i++) {\n\t\tcosineCurve[i] = Math.sin((i / (curveLen - 1)) * (Math.PI / 2));\n\t}\n\n\t// ripple curve\n\tconst rippleCurve: number[] = [];\n\tconst rippleCurveFreq = 6.4;\n\tfor (i = 0; i < curveLen - 1; i++) {\n\t\tk = (i / (curveLen - 1));\n\t\tconst sineWave = Math.sin(k * (Math.PI * 2) * rippleCurveFreq - Math.PI / 2) + 1;\n\t\trippleCurve[i] = sineWave / 10 + k * 0.83;\n\t}\n\trippleCurve[curveLen - 1] = 1;\n\n\t// stairs curve\n\tconst stairsCurve: number[] = [];\n\tconst steps = 5;\n\tfor (i = 0; i < curveLen; i++) {\n\t\tstairsCurve[i] = Math.ceil((i / (curveLen - 1)) * steps) / steps;\n\t}\n\n\t// in-out easing curve\n\tconst sineCurve: number[] = [];\n\tfor (i = 0; i < curveLen; i++) {\n\t\tk = i / (curveLen - 1);\n\t\tsineCurve[i] = 0.5 * (1 - Math.cos(Math.PI * k));\n\t}\n\n\t// a bounce curve\n\tconst bounceCurve: number[] = [];\n\tfor (i = 0; i < curveLen; i++) {\n\t\tk = i / (curveLen - 1);\n\t\tconst freq = Math.pow(k, 3) * 4 + 0.2;\n\t\tconst val = Math.cos(freq * Math.PI * 2 * k);\n\t\tbounceCurve[i] = Math.abs(val * (1 - k));\n\t}\n\n\t/**\n\t * Invert a value curve to make it work for the release\n\t */\n\tfunction invertCurve(curve: number[]): number[] {\n\t\tconst out = new Array(curve.length);\n\t\tfor (let j = 0; j < curve.length; j++) {\n\t\t\tout[j] = 1 - curve[j];\n\t\t}\n\t\treturn out;\n\t}\n\n\t/**\n\t * reverse the curve\n\t */\n\tfunction reverseCurve(curve: number[]): number[] {\n\t\treturn curve.slice(0).reverse();\n\t}\n\n\t/**\n\t * attack and release curve arrays\n\t */\n\treturn {\n\t\tbounce: {\n\t\t\tIn: invertCurve(bounceCurve),\n\t\t\tOut: bounceCurve,\n\t\t},\n\t\tcosine: {\n\t\t\tIn: cosineCurve,\n\t\t\tOut: reverseCurve(cosineCurve),\n\t\t},\n\t\texponential: \"exponential\" as \"exponential\",\n\t\tlinear: \"linear\" as \"linear\",\n\t\tripple: {\n\t\t\tIn: rippleCurve,\n\t\t\tOut: invertCurve(rippleCurve),\n\t\t},\n\t\tsine: {\n\t\t\tIn: sineCurve,\n\t\t\tOut: invertCurve(sineCurve),\n\t\t},\n\t\tstep: {\n\t\t\tIn: stairsCurve,\n\t\t\tOut: invertCurve(stairsCurve),\n\t\t},\n\t};\n})();\n","import { Volume } from \"../component/channel/Volume\";\nimport { Param } from \"../core/context/Param\";\nimport { OutputNode, ToneAudioNode, ToneAudioNodeOptions } from \"../core/context/ToneAudioNode\";\nimport { Decibels, Frequency, NormalRange, Time } from \"../core/type/Units\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { readOnly } from \"../core/util/Interface\";\n\nexport interface InstrumentOptions extends ToneAudioNodeOptions {\n\tvolume: Decibels;\n}\n\n/**\n * Base-class for all instruments\n */\nexport abstract class Instrument<Options extends InstrumentOptions> extends ToneAudioNode<Options> {\n\n\t/**\n\t * The output and volume triming node\n\t */\n\tprivate _volume: Volume;\n\toutput: OutputNode;\n\n\t/**\n\t * The instrument only has an output\n\t */\n\tinput: undefined;\n\n\t/**\n\t * The volume of the output in decibels.\n\t * @example\n\t * const amSynth = new Tone.AMSynth().toDestination();\n\t * amSynth.volume.value = -6;\n\t * amSynth.triggerAttackRelease(\"G#3\", 0.2);\n\t */\n\tvolume: Param<\"decibels\">;\n\n\t/**\n\t * Keep track of all events scheduled to the transport\n\t * when the instrument is 'synced'\n\t */\n\tprivate _scheduledEvents: number[] = [];\n\n\t/**\n\t * If the instrument is currently synced\n\t */\n\tprivate _synced = false;\n\n\tconstructor(options?: Partial<InstrumentOptions>);\n\tconstructor() {\n\n\t\tsuper(optionsFromArguments(Instrument.getDefaults(), arguments));\n\t\tconst options = optionsFromArguments(Instrument.getDefaults(), arguments);\n\n\t\tthis._volume = this.output = new Volume({\n\t\t\tcontext: this.context,\n\t\t\tvolume: options.volume,\n\t\t});\n\t\tthis.volume = this._volume.volume;\n\t\treadOnly(this, \"volume\");\n\t}\n\n\tstatic getDefaults(): InstrumentOptions {\n\t\treturn Object.assign(ToneAudioNode.getDefaults(), {\n\t\t\tvolume: 0,\n\t\t});\n\t}\n\n\t/**\n\t * Sync the instrument to the Transport. All subsequent calls of\n\t * [[triggerAttack]] and [[triggerRelease]] will be scheduled along the transport.\n\t * @example\n\t * const fmSynth = new Tone.FMSynth().toDestination();\n\t * fmSynth.volume.value = -6;\n\t * fmSynth.sync();\n\t * // schedule 3 notes when the transport first starts\n\t * fmSynth.triggerAttackRelease(\"C4\", \"8n\", 0);\n\t * fmSynth.triggerAttackRelease(\"E4\", \"8n\", \"8n\");\n\t * fmSynth.triggerAttackRelease(\"G4\", \"8n\", \"4n\");\n\t * // start the transport to hear the notes\n\t * Tone.Transport.start();\n\t */\n\tsync(): this {\n\t\tif (this._syncState()) {\n\t\t\tthis._syncMethod(\"triggerAttack\", 1);\n\t\t\tthis._syncMethod(\"triggerRelease\", 0);\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * set _sync\n\t */\n\tprotected _syncState(): boolean {\n\t\tlet changed = false;\n\t\tif (!this._synced) {\n\t\t\tthis._synced = true;\n\t\t\tchanged = true;\n\t\t}\n\t\treturn changed;\n\t}\n\n\t/**\n\t * Wrap the given method so that it can be synchronized\n\t * @param method Which method to wrap and sync\n\t * @param  timePosition What position the time argument appears in\n\t */\n\tprotected _syncMethod(method: string, timePosition: number): void {\n\t\tconst originalMethod = this[\"_original_\" + method] = this[method];\n\t\tthis[method] = (...args: any[]) => {\n\t\t\tconst time = args[timePosition];\n\t\t\tconst id = this.context.transport.schedule((t) => {\n\t\t\t\targs[timePosition] = t;\n\t\t\t\toriginalMethod.apply(this, args);\n\t\t\t}, time);\n\t\t\tthis._scheduledEvents.push(id);\n\t\t};\n\t}\n\n\t/**\n\t * Unsync the instrument from the Transport\n\t */\n\tunsync(): this {\n\t\tthis._scheduledEvents.forEach(id => this.context.transport.clear(id));\n\t\tthis._scheduledEvents = [];\n\t\tif (this._synced) {\n\t\t\tthis._synced = false;\n\t\t\tthis.triggerAttack = this._original_triggerAttack;\n\t\t\tthis.triggerRelease = this._original_triggerRelease;\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Trigger the attack and then the release after the duration.\n\t * @param  note     The note to trigger.\n\t * @param  duration How long the note should be held for before\n\t *                         triggering the release. This value must be greater than 0.\n\t * @param time  When the note should be triggered.\n\t * @param  velocity The velocity the note should be triggered at.\n\t * @example\n\t * const synth = new Tone.Synth().toDestination();\n\t * // trigger \"C4\" for the duration of an 8th note\n\t * synth.triggerAttackRelease(\"C4\", \"8n\");\n\t */\n\ttriggerAttackRelease(note: Frequency, duration: Time, time?: Time, velocity?: NormalRange): this {\n\t\tconst computedTime = this.toSeconds(time);\n\t\tconst computedDuration = this.toSeconds(duration);\n\t\tthis.triggerAttack(note, computedTime, velocity);\n\t\tthis.triggerRelease(computedTime + computedDuration);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Start the instrument's note.\n\t * @param note the note to trigger\n\t * @param time the time to trigger the ntoe\n\t * @param velocity the velocity to trigger the note (betwee 0-1)\n\t */\n\tabstract triggerAttack(note: Frequency, time?: Time, velocity?: NormalRange): this;\n\tprivate _original_triggerAttack = this.triggerAttack;\n\n\t/**\n\t * Trigger the release phase of the current note.\n\t * @param time when to trigger the release\n\t */\n\tabstract triggerRelease(...args: any[]): this;\n\tprivate _original_triggerRelease = this.triggerRelease;\n\n\t/**\n\t * clean up\n\t * @returns {Instrument} this\n\t */\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._volume.dispose();\n\t\tthis.unsync();\n\t\tthis._scheduledEvents = [];\n\t\treturn this;\n\t}\n}\n","import { FrequencyClass } from \"../core/type/Frequency\";\nimport { Cents, Frequency, NormalRange, Seconds, Time } from \"../core/type/Units\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { noOp } from \"../core/util/Interface\";\nimport { Instrument, InstrumentOptions } from \"../instrument/Instrument\";\nimport { Signal } from \"../signal/Signal\";\nimport { timeRange } from \"../core/util/Decorator\";\n\ntype onSilenceCallback = (instrument: Monophonic<any>) => void;\n\nexport interface MonophonicOptions extends InstrumentOptions {\n\tportamento: Seconds;\n\tonsilence: onSilenceCallback;\n\tdetune: Cents;\n}\n\n/**\n * Abstract base class for other monophonic instruments to extend.\n */\nexport abstract class Monophonic<Options extends MonophonicOptions> extends Instrument<Options> {\n\n\t/**\n\t * The glide time between notes.\n\t */\n\t@timeRange(0)\n\tportamento: Seconds;\n\n\t/**\n\t * Invoked when the release has finished and the output is silent.\n\t */\n\tonsilence: onSilenceCallback;\n\n\t/**\n\t * The instrument's frequency signal.\n\t */\n\tabstract readonly frequency: Signal<\"frequency\">;\n\n\t/**\n\t * The instrument's detune control signal.\n\t */\n\tabstract readonly detune: Signal<\"cents\">;\n\n\tconstructor(options?: Partial<MonophonicOptions>);\n\tconstructor() {\n\n\t\tsuper(optionsFromArguments(Monophonic.getDefaults(), arguments));\n\t\tconst options = optionsFromArguments(Monophonic.getDefaults(), arguments);\n\n\t\tthis.portamento = options.portamento;\n\t\tthis.onsilence = options.onsilence;\n\t}\n\n\tstatic getDefaults(): MonophonicOptions {\n\t\treturn Object.assign(Instrument.getDefaults(), {\n\t\t\tdetune: 0,\n\t\t\tonsilence: noOp,\n\t\t\tportamento: 0,\n\t\t});\n\t}\n\n\t/**\n\t * Trigger the attack of the note optionally with a given velocity.\n\t * @param  note The note to trigger.\n\t * @param  time When the note should start.\n\t * @param  velocity The velocity determines how \"loud\" the note will be.\n\t * @example\n\t * const synth = new Tone.Synth().toDestination();\n\t * // trigger the note a half second from now at half velocity\n\t * synth.triggerAttack(\"C4\", \"+0.5\", 0.5);\n\t */\n\ttriggerAttack(note: Frequency | FrequencyClass, time?: Time, velocity: NormalRange = 1): this {\n\t\tthis.log(\"triggerAttack\", note, time, velocity);\n\t\tconst seconds = this.toSeconds(time);\n\t\tthis._triggerEnvelopeAttack(seconds, velocity);\n\t\tthis.setNote(note, seconds);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Trigger the release portion of the envelope.\n\t * @param  time If no time is given, the release happens immediately.\n\t * @example\n\t * const synth = new Tone.Synth().toDestination();\n\t * synth.triggerAttack(\"C4\");\n\t * // trigger the release a second from now\n\t * synth.triggerRelease(\"+1\");\n\t */\n\ttriggerRelease(time?: Time): this {\n\t\tthis.log(\"triggerRelease\", time);\n\t\tconst seconds = this.toSeconds(time);\n\t\tthis._triggerEnvelopeRelease(seconds);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Internal method which starts the envelope attack\n\t */\n\tprotected abstract _triggerEnvelopeAttack(time: Seconds, velocity: NormalRange): void;\n\n\t/**\n\t * Internal method which starts the envelope release\n\t */\n\tprotected abstract _triggerEnvelopeRelease(time: Seconds): void;\n\n\t/**\n\t * Get the level of the output at the given time. Measures\n\t * the envelope(s) value at the time.\n\t * @param time The time to query the envelope value\n\t * @return The output level between 0-1\n\t */\n\tabstract getLevelAtTime(time: Time): NormalRange;\n\n\t/**\n\t * Set the note at the given time. If no time is given, the note\n\t * will set immediately.\n\t * @param note The note to change to.\n\t * @param  time The time when the note should be set.\n\t * @example\n\t * const synth = new Tone.Synth().toDestination();\n\t * synth.triggerAttack(\"C4\");\n\t * // change to F#6 in one quarter note from now.\n\t * synth.setNote(\"F#6\", \"+4n\");\n\t */\n\tsetNote(note: Frequency | FrequencyClass, time?: Time): this {\n\t\tconst computedTime = this.toSeconds(time);\n\t\tconst computedFrequency = note instanceof FrequencyClass ? note.toFrequency() : note;\n\t\tif (this.portamento > 0 && this.getLevelAtTime(computedTime) > 0.05) {\n\t\t\tconst portTime = this.toSeconds(this.portamento);\n\t\t\tthis.frequency.exponentialRampTo(computedFrequency, portTime, computedTime);\n\t\t} else {\n\t\t\tthis.frequency.setValueAtTime(computedFrequency, computedTime);\n\t\t}\n\t\treturn this;\n\t}\n}\n","import { Gain } from \"../../core/context/Gain\";\nimport { NormalRange, Time } from \"../../core/type/Units\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { Envelope, EnvelopeOptions } from \"./Envelope\";\n\n/**\n * AmplitudeEnvelope is a Tone.Envelope connected to a gain node.\n * Unlike Tone.Envelope, which outputs the envelope's value, AmplitudeEnvelope accepts\n * an audio signal as the input and will apply the envelope to the amplitude\n * of the signal.\n * Read more about ADSR Envelopes on [Wikipedia](https://en.wikipedia.org/wiki/Synthesizer#ADSR_envelope).\n *\n * @example\n * return Tone.Offline(() => {\n * \tconst ampEnv = new Tone.AmplitudeEnvelope({\n * \t\tattack: 0.1,\n * \t\tdecay: 0.2,\n * \t\tsustain: 1.0,\n * \t\trelease: 0.8\n * \t}).toDestination();\n * \t// create an oscillator and connect it\n * \tconst osc = new Tone.Oscillator().connect(ampEnv).start();\n * \t// trigger the envelopes attack and release \"8t\" apart\n * \tampEnv.triggerAttackRelease(\"8t\");\n * }, 1.5, 1);\n * @category Component\n */\nexport class AmplitudeEnvelope extends Envelope {\n\n\treadonly name: string = \"AmplitudeEnvelope\";\n\n\tprivate _gainNode: Gain = new Gain({\n\t\tcontext: this.context,\n\t\tgain: 0,\n\t});\n\toutput: Gain = this._gainNode;\n\tinput: Gain = this._gainNode;\n\n\t/**\n\t * @param attack The amount of time it takes for the envelope to go from 0 to it's maximum value.\n\t * @param decay\tThe period of time after the attack that it takes for the envelope\n\t *                      \tto fall to the sustain value. Value must be greater than 0.\n\t * @param sustain\tThe percent of the maximum value that the envelope rests at until\n\t *                               \tthe release is triggered.\n\t * @param release\tThe amount of time after the release is triggered it takes to reach 0.\n\t *                        \tValue must be greater than 0.\n\t */\n\tconstructor(attack?: Time, decay?: Time, sustain?: NormalRange, release?: Time);\n\tconstructor(options?: Partial<EnvelopeOptions>)\n\tconstructor() {\n\t\tsuper(optionsFromArguments(AmplitudeEnvelope.getDefaults(), arguments, [\"attack\", \"decay\", \"sustain\", \"release\"]));\n\t\tthis._sig.connect(this._gainNode.gain);\n\t\tthis.output = this._gainNode;\n\t\tthis.input = this._gainNode;\n\t}\n\n\t/**\n\t * Clean up\n\t */\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._gainNode.dispose();\n\t\treturn this;\n\t}\n}\n","import { AmplitudeEnvelope } from \"../component/envelope/AmplitudeEnvelope\";\nimport { Envelope, EnvelopeOptions } from \"../component/envelope/Envelope\";\nimport { ToneAudioNode, ToneAudioNodeOptions } from \"../core/context/ToneAudioNode\";\nimport { NormalRange, Seconds, Time } from \"../core/type/Units\";\nimport { omitFromObject, optionsFromArguments } from \"../core/util/Defaults\";\nimport { readOnly } from \"../core/util/Interface\";\nimport { RecursivePartial } from \"../core/util/Interface\";\nimport { Signal } from \"../signal/Signal\";\nimport { OmniOscillator } from \"../source/oscillator/OmniOscillator\";\nimport { OmniOscillatorOptions, OmniOscillatorSynthOptions } from \"../source/oscillator/OscillatorInterface\";\nimport { Source } from \"../source/Source\";\nimport { Monophonic, MonophonicOptions } from \"./Monophonic\";\n\nexport interface SynthOptions extends MonophonicOptions {\n\toscillator: OmniOscillatorSynthOptions;\n\tenvelope: Omit<EnvelopeOptions, keyof ToneAudioNodeOptions>;\n}\n\n/**\n * Synth is composed simply of a [[OmniOscillator]] routed through an [[AmplitudeEnvelope]].\n * ```\n * +----------------+   +-------------------+\n * | OmniOscillator +>--> AmplitudeEnvelope +>--> Output\n * +----------------+   +-------------------+\n * ```\n * @example\n * const synth = new Tone.Synth().toDestination();\n * synth.triggerAttackRelease(\"C4\", \"8n\");\n * @category Instrument\n */\nexport class Synth<Options extends SynthOptions = SynthOptions> extends Monophonic<Options> {\n\n\treadonly name: string = \"Synth\";\n\n\t/**\n\t * The oscillator.\n\t */\n\treadonly oscillator: OmniOscillator<any>;\n\n\t/**\n\t * The frequency signal\n\t */\n\treadonly frequency: Signal<\"frequency\">;\n\n\t/**\n\t * The detune signal\n\t */\n\treadonly detune: Signal<\"cents\">;\n\n\t/**\n\t * The envelope\n\t */\n\treadonly envelope: AmplitudeEnvelope;\n\n\t/**\n\t * @param options the options available for the synth.\n\t */\n\tconstructor(options?: RecursivePartial<SynthOptions>);\n\tconstructor() {\n\t\tsuper(optionsFromArguments(Synth.getDefaults(), arguments));\n\t\tconst options = optionsFromArguments(Synth.getDefaults(), arguments);\n\n\t\tthis.oscillator = new OmniOscillator(Object.assign({\n\t\t\tcontext: this.context,\n\t\t\tdetune: options.detune,\n\t\t\tonstop: () => this.onsilence(this),\n\t\t}, options.oscillator));\n\n\t\tthis.frequency = this.oscillator.frequency;\n\t\tthis.detune = this.oscillator.detune;\n\n\t\tthis.envelope = new AmplitudeEnvelope(Object.assign({\n\t\t\tcontext: this.context,\n\t\t}, options.envelope));\n\n\t\t// connect the oscillators to the output\n\t\tthis.oscillator.chain(this.envelope, this.output);\n\t\treadOnly(this, [\"oscillator\", \"frequency\", \"detune\", \"envelope\"]);\n\t}\n\n\tstatic getDefaults(): SynthOptions {\n\t\treturn Object.assign(Monophonic.getDefaults(), {\n\t\t\tenvelope: Object.assign(\n\t\t\t\tomitFromObject(Envelope.getDefaults(), Object.keys(ToneAudioNode.getDefaults())),\n\t\t\t\t{\n\t\t\t\t\tattack: 0.005,\n\t\t\t\t\tdecay: 0.1,\n\t\t\t\t\trelease: 1,\n\t\t\t\t\tsustain: 0.3,\n\t\t\t\t},\n\t\t\t),\n\t\t\toscillator: Object.assign(\n\t\t\t\tomitFromObject(OmniOscillator.getDefaults(), [...Object.keys(Source.getDefaults()), \"frequency\", \"detune\"]),\n\t\t\t\t{\n\t\t\t\t\ttype: \"triangle\",\n\t\t\t\t},\n\t\t\t) as OmniOscillatorOptions,\n\t\t});\n\t}\n\n\t/**\n\t * start the attack portion of the envelope\n\t * @param time the time the attack should start\n\t * @param velocity the velocity of the note (0-1)\n\t */\n\tprotected _triggerEnvelopeAttack(time: Seconds, velocity: number): void {\n\t\t// the envelopes\n\t\tthis.envelope.triggerAttack(time, velocity);\n\t\tthis.oscillator.start(time);\n\t\t// if there is no release portion, stop the oscillator\n\t\tif (this.envelope.sustain === 0) {\n\t\t\tconst computedAttack = this.toSeconds(this.envelope.attack);\n\t\t\tconst computedDecay = this.toSeconds(this.envelope.decay);\n\t\t\tthis.oscillator.stop(time + computedAttack + computedDecay);\n\t\t}\n\t}\n\n\t/**\n\t * start the release portion of the envelope\n\t * @param time the time the release should start\n\t */\n\tprotected _triggerEnvelopeRelease(time: Seconds): void {\n\t\tthis.envelope.triggerRelease(time);\n\t\tthis.oscillator.stop(time + this.toSeconds(this.envelope.release));\n\t}\n\n\tgetLevelAtTime(time: Time): NormalRange {\n\t\ttime = this.toSeconds(time);\n\t\treturn this.envelope.getValueAtTime(time);\n\t}\n\n\t/**\n\t * clean up\n\t */\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis.oscillator.dispose();\n\t\tthis.envelope.dispose();\n\t\treturn this;\n\t}\n}\n","import { Signal } from \"../signal/Signal\";\nimport { Multiply } from \"../signal/Multiply\";\nimport { Gain } from \"../core/context/Gain\";\nimport { NormalRange, Positive, Seconds, Time } from \"../core/type/Units\";\nimport { Envelope, EnvelopeOptions } from \"../component/envelope/Envelope\";\nimport { ToneAudioNode, ToneAudioNodeOptions } from \"../core/context/ToneAudioNode\";\nimport { Monophonic } from \"./Monophonic\";\nimport { OmniOscillator } from \"../source/oscillator/OmniOscillator\";\nimport { OmniOscillatorSynthOptions } from \"../source/oscillator/OscillatorInterface\";\nimport { Source } from \"../source/Source\";\nimport { Synth, SynthOptions } from \"./Synth\";\nimport { AmplitudeEnvelope } from \"../component/envelope/AmplitudeEnvelope\";\nimport { readOnly, RecursivePartial } from \"../core/util/Interface\";\nimport { omitFromObject, optionsFromArguments } from \"../core/util/Defaults\";\n\nexport interface ModulationSynthOptions extends SynthOptions {\n\tharmonicity: Positive;\n\tmodulationEnvelope: Omit<EnvelopeOptions, keyof ToneAudioNodeOptions>;\n\tmodulation: OmniOscillatorSynthOptions;\n}\n/**\n * Base class for both AM and FM synths\n */\nexport abstract class ModulationSynth<Options extends ModulationSynthOptions> extends Monophonic<Options> {\n\n\treadonly name: string = \"ModulationSynth\";\n\n\t/**\n\t * The carrier voice.\n\t */\n\tprotected _carrier: Synth;\n\n\t/**\n\t * The modulator voice.\n\t */\n\n\tprotected _modulator: Synth;\n\n\t/**\n\t * The carrier's oscillator\n\t */\n\treadonly oscillator: OmniOscillator<any>;\n\n\t/**\n\t * The carrier's envelope\n\t */\n\treadonly envelope: AmplitudeEnvelope;\n\n\t/**\n\t * The modulator's oscillator which is applied to the amplitude of the oscillator\n\t */\n\treadonly modulation: OmniOscillator<any>;\n\n\t/**\n\t * The modulator's envelope\n\t */\n\treadonly modulationEnvelope: AmplitudeEnvelope;\n\n\t/**\n\t * The frequency control\n\t */\n\treadonly frequency: Signal<\"frequency\">;\n\n\t/**\n\t * The detune in cents\n\t */\n\treadonly detune: Signal<\"cents\">;\n\n\t/**\n\t * Harmonicity is the ratio between the two voices. A harmonicity of\n\t * 1 is no change. Harmonicity = 2 means a change of an octave.\n\t * @example\n\t * const amSynth = new Tone.AMSynth().toDestination();\n\t * // pitch the modulator an octave below oscillator\n\t * amSynth.harmonicity.value = 0.5;\n\t * amSynth.triggerAttackRelease(\"C5\", \"4n\");\n\t */\n\treadonly harmonicity: Multiply;\n\n\t/**\n\t * The node where the modulation happens\n\t */\n\tprotected _modulationNode: Gain;\n\n\tconstructor(options?: RecursivePartial<ModulationSynthOptions>);\n\tconstructor() {\n\t\tsuper(optionsFromArguments(ModulationSynth.getDefaults(), arguments));\n\t\tconst options = optionsFromArguments(ModulationSynth.getDefaults(), arguments);\n\n\t\tthis._carrier = new Synth({\n\t\t\tcontext: this.context,\n\t\t\toscillator: options.oscillator,\n\t\t\tenvelope: options.envelope,\n\t\t\tonsilence: () => this.onsilence(this),\n\t\t\tvolume: -10,\n\t\t});\n\t\tthis._modulator = new Synth({\n\t\t\tcontext: this.context,\n\t\t\toscillator: options.modulation,\n\t\t\tenvelope: options.modulationEnvelope,\n\t\t\tvolume: -10,\n\t\t});\n\n\t\tthis.oscillator = this._carrier.oscillator;\n\t\tthis.envelope = this._carrier.envelope;\n\t\tthis.modulation = this._modulator.oscillator;\n\t\tthis.modulationEnvelope = this._modulator.envelope;\n\n\t\tthis.frequency = new Signal({\n\t\t\tcontext: this.context,\n\t\t\tunits: \"frequency\",\n\t\t});\n\t\tthis.detune = new Signal({\n\t\t\tcontext: this.context,\n\t\t\tvalue: options.detune,\n\t\t\tunits: \"cents\"\n\t\t});\n\t\tthis.harmonicity = new Multiply({\n\t\t\tcontext: this.context,\n\t\t\tvalue: options.harmonicity,\n\t\t\tminValue: 0,\n\t\t});\n\t\tthis._modulationNode = new Gain({\n\t\t\tcontext: this.context,\n\t\t\tgain: 0,\n\t\t});\n\n\t\treadOnly(this, [\"frequency\", \"harmonicity\", \"oscillator\", \"envelope\", \"modulation\", \"modulationEnvelope\", \"detune\"]);\n\t}\n\n\tstatic getDefaults(): ModulationSynthOptions {\n\t\treturn Object.assign(Monophonic.getDefaults(), {\n\t\t\tharmonicity: 3,\n\t\t\toscillator: Object.assign(\n\t\t\t\tomitFromObject(OmniOscillator.getDefaults(), [\n\t\t\t\t\t...Object.keys(Source.getDefaults()),\n\t\t\t\t\t\"frequency\",\n\t\t\t\t\t\"detune\"\n\t\t\t\t]),\n\t\t\t\t{\n\t\t\t\t\ttype: \"sine\"\n\t\t\t\t}\n\t\t\t) as OmniOscillatorSynthOptions,\n\t\t\tenvelope: Object.assign(\n\t\t\t\tomitFromObject(\n\t\t\t\t\tEnvelope.getDefaults(),\n\t\t\t\t\tObject.keys(ToneAudioNode.getDefaults())\n\t\t\t\t),\n\t\t\t\t{\n\t\t\t\t\tattack: 0.01,\n\t\t\t\t\tdecay: 0.01,\n\t\t\t\t\tsustain: 1,\n\t\t\t\t\trelease: 0.5\n\t\t\t\t}\n\t\t\t),\n\t\t\tmodulation: Object.assign(\n\t\t\t\tomitFromObject(OmniOscillator.getDefaults(), [\n\t\t\t\t\t...Object.keys(Source.getDefaults()),\n\t\t\t\t\t\"frequency\",\n\t\t\t\t\t\"detune\"\n\t\t\t\t]),\n\t\t\t\t{\n\t\t\t\t\ttype: \"square\"\n\t\t\t\t}\n\t\t\t) as OmniOscillatorSynthOptions,\n\t\t\tmodulationEnvelope: Object.assign(\n\t\t\t\tomitFromObject(\n\t\t\t\t\tEnvelope.getDefaults(),\n\t\t\t\t\tObject.keys(ToneAudioNode.getDefaults())\n\t\t\t\t),\n\t\t\t\t{\n\t\t\t\t\tattack: 0.5,\n\t\t\t\t\tdecay: 0.0,\n\t\t\t\t\tsustain: 1,\n\t\t\t\t\trelease: 0.5\n\t\t\t\t}\n\t\t\t)\n\t\t});\n\t}\n\n\t/**\n\t * Trigger the attack portion of the note\n\t */\n\tprotected _triggerEnvelopeAttack(time: Seconds, velocity: number): void {\n\t\t// @ts-ignore\n\t\tthis._carrier._triggerEnvelopeAttack(time, velocity);\n\t\t// @ts-ignore\n\t\tthis._modulator._triggerEnvelopeAttack(time, velocity);\n\t}\n\n\t/**\n\t * Trigger the release portion of the note\n\t */\n\tprotected _triggerEnvelopeRelease(time: Seconds) {\n\t\t// @ts-ignore\n\t\tthis._carrier._triggerEnvelopeRelease(time);\n\t\t// @ts-ignore\n\t\tthis._modulator._triggerEnvelopeRelease(time);\n\t\treturn this;\n\t}\n\n\tgetLevelAtTime(time: Time): NormalRange {\n\t\ttime = this.toSeconds(time);\n\t\treturn this.envelope.getValueAtTime(time);\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._carrier.dispose();\n\t\tthis._modulator.dispose();\n\t\tthis.frequency.dispose();\n\t\tthis.detune.dispose();\n\t\tthis.harmonicity.dispose();\n\t\tthis._modulationNode.dispose();\n\t\treturn this;\n\t}\n}\n","import { AudioToGain } from \"../signal/AudioToGain\";\nimport { RecursivePartial } from \"../core/util/Interface\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { ModulationSynth, ModulationSynthOptions } from \"./ModulationSynth\";\n\nexport type AMSynthOptions = ModulationSynthOptions;\n\n/**\n * AMSynth uses the output of one Tone.Synth to modulate the\n * amplitude of another Tone.Synth. The harmonicity (the ratio between\n * the two signals) affects the timbre of the output signal greatly.\n * Read more about Amplitude Modulation Synthesis on\n * [SoundOnSound](https://web.archive.org/web/20160404103653/http://www.soundonsound.com:80/sos/mar00/articles/synthsecrets.htm).\n *\n * @example\n * const synth = new Tone.AMSynth().toDestination();\n * synth.triggerAttackRelease(\"C4\", \"4n\");\n * \n * @category Instrument\n */\nexport class AMSynth extends ModulationSynth<AMSynthOptions> {\n\n\treadonly name: string = \"AMSynth\";\n\n\t/**\n\t * Scale the oscillator from -1,1 to 0-1\n\t */\n\tprivate _modulationScale: AudioToGain;\n\n\tconstructor(options?: RecursivePartial<AMSynthOptions>);\n\tconstructor() {\n\t\tsuper(optionsFromArguments(AMSynth.getDefaults(), arguments));\n\n\t\tthis._modulationScale = new AudioToGain({\n\t\t\tcontext: this.context,\n\t\t});\n\n\t\t// control the two voices frequency\n\t\tthis.frequency.connect(this._carrier.frequency);\n\t\tthis.frequency.chain(this.harmonicity, this._modulator.frequency);\n\t\tthis.detune.fan(this._carrier.detune, this._modulator.detune);\n\t\tthis._modulator.chain(this._modulationScale, this._modulationNode.gain);\n\t\tthis._carrier.chain(this._modulationNode, this.output);\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._modulationScale.dispose();\n\t\treturn this;\n\t}\n}\n","import { ToneAudioNode, ToneAudioNodeOptions } from \"../../core/context/ToneAudioNode\";\nimport { Cents, Frequency, GainFactor } from \"../../core/type/Units\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { Param } from \"../../core/context/Param\";\nimport { assert } from \"../../core/util/Debug\";\n\nexport interface BiquadFilterOptions extends ToneAudioNodeOptions {\n\tfrequency: Frequency;\n\tdetune: Cents;\n\tQ: number;\n\ttype: BiquadFilterType;\n\tgain: GainFactor;\n}\n\n/**\n * Thin wrapper around the native Web Audio [BiquadFilterNode](https://webaudio.github.io/web-audio-api/#biquadfilternode). \n * BiquadFilter is similar to [[Filter]] but doesn't have the option to set the \"rolloff\" value. \n * @category Component\n */\nexport class BiquadFilter extends ToneAudioNode<BiquadFilterOptions> {\n\treadonly name: string = \"BiquadFilter\";\n\n\treadonly input: BiquadFilterNode;\n\treadonly output: BiquadFilterNode;\n\n\t/**\n\t * The frequency of the filter\n\t */\n\treadonly frequency: Param<\"frequency\">;\n\n\t/**\n\t * A detune value, in cents, for the frequency.\n\t */\n\treadonly detune: Param<\"cents\">;\n\t\n\t/**\n\t * The Q factor of the filter.\n\t * For lowpass and highpass filters the Q value is interpreted to be in dB. \n\t * For these filters the nominal range is [−𝑄𝑙𝑖𝑚,𝑄𝑙𝑖𝑚] where 𝑄𝑙𝑖𝑚 is the largest value for which 10𝑄/20 does not overflow. This is approximately 770.63678.\n\t * For the bandpass, notch, allpass, and peaking filters, this value is a linear value. \n\t * The value is related to the bandwidth of the filter and hence should be a positive value. The nominal range is \n\t * [0,3.4028235𝑒38], the upper limit being the most-positive-single-float.\n\t * This is not used for the lowshelf and highshelf filters.\n\t */\n\treadonly Q: Param<\"number\">;\n\n\t/**\n\t * The gain of the filter. Its value is in dB units. The gain is only used for lowshelf, highshelf, and peaking filters.\n\t */\n\treadonly gain: Param<\"decibels\">;\n\n\tprivate readonly _filter: BiquadFilterNode;\n\n\t/**\n\t * @param frequency The cutoff frequency of the filter.\n\t * @param type The type of filter.\n\t */\n\tconstructor(frequency?: Frequency, type?: BiquadFilterType);\n\tconstructor(options?: Partial<BiquadFilterOptions>);\n\tconstructor() {\n\t\tsuper(optionsFromArguments(BiquadFilter.getDefaults(), arguments, [\"frequency\", \"type\"]));\n\t\tconst options = optionsFromArguments(BiquadFilter.getDefaults(), arguments, [\"frequency\", \"type\"]);\n\n\t\tthis._filter = this.context.createBiquadFilter();\n\t\tthis.input = this.output = this._filter;\n\n\t\tthis.Q = new Param({\n\t\t\tcontext: this.context,\n\t\t\tunits: \"number\",\n\t\t\tvalue: options.Q,\n\t\t\tparam: this._filter.Q,\n\t\t});\n\t\t\n\t\tthis.frequency = new Param({\n\t\t\tcontext: this.context,\n\t\t\tunits: \"frequency\",\n\t\t\tvalue: options.frequency,\n\t\t\tparam: this._filter.frequency,\n\t\t});\n\t\t\n\t\tthis.detune = new Param({\n\t\t\tcontext: this.context,\n\t\t\tunits: \"cents\",\n\t\t\tvalue: options.detune,\n\t\t\tparam: this._filter.detune,\n\t\t});\n\t\t\n\t\tthis.gain = new Param({\n\t\t\tcontext: this.context,\n\t\t\tunits: \"decibels\",\n\t\t\tconvert: false,\n\t\t\tvalue: options.gain,\n\t\t\tparam: this._filter.gain,\n\t\t});\n\n\t\tthis.type = options.type;\n\t}\n\n\tstatic getDefaults(): BiquadFilterOptions {\n\t\treturn Object.assign(ToneAudioNode.getDefaults(), {\n\t\t\tQ: 1,\n\t\t\ttype: \"lowpass\" as const,\n\t\t\tfrequency: 350,\n\t\t\tdetune: 0,\n\t\t\tgain: 0,\n\t\t});\n\t}\n\n\t/**\n\t * The type of this BiquadFilterNode. For a complete list of types and their attributes, see the\n\t * [Web Audio API](https://webaudio.github.io/web-audio-api/#dom-biquadfiltertype-lowpass)\n\t */\n\tget type(): BiquadFilterType {\n\t\treturn this._filter.type;\n\t}\n\tset type(type) {\n\t\tconst types: BiquadFilterType[] = [\"lowpass\", \"highpass\", \"bandpass\",\n\t\t\t\"lowshelf\", \"highshelf\", \"notch\", \"allpass\", \"peaking\"];\n\t\tassert(types.indexOf(type) !== -1, `Invalid filter type: ${type}`);\n\t\tthis._filter.type = type;\n\t}\n\n\t/**\n\t * Get the frequency response curve. This curve represents how the filter\n\t * responses to frequencies between 20hz-20khz.\n\t * @param  len The number of values to return\n\t * @return The frequency response curve between 20-20kHz\n\t */\n\tgetFrequencyResponse(len = 128): Float32Array {\n\t\t// start with all 1s\n\t\tconst freqValues = new Float32Array(len);\n\t\tfor (let i = 0; i < len; i++) {\n\t\t\tconst norm = Math.pow(i / len, 2);\n\t\t\tconst freq = norm * (20000 - 20) + 20;\n\t\t\tfreqValues[i] = freq;\n\t\t}\n\t\tconst magValues = new Float32Array(len);\n\t\tconst phaseValues = new Float32Array(len);\n\t\t// clone the filter to remove any connections which may be changing the value\n\t\tconst filterClone = this.context.createBiquadFilter();\n\t\tfilterClone.type = this.type;\n\t\tfilterClone.Q.value = this.Q.value;\n\t\tfilterClone.frequency.value = this.frequency.value as number;\n\t\tfilterClone.gain.value = this.gain.value as number;\n\t\tfilterClone.getFrequencyResponse(freqValues, magValues, phaseValues);\n\t\treturn magValues;\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._filter.disconnect();\n\t\tthis.Q.dispose();\n\t\tthis.frequency.dispose();\n\t\tthis.gain.dispose();\n\t\tthis.detune.dispose();\n\t\treturn this;\n\t}\n}\n","import { Gain } from \"../../core/context/Gain\";\nimport { connectSeries, ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { Frequency } from \"../../core/type/Units\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { readOnly, writable } from \"../../core/util/Interface\";\nimport { isNumber } from \"../../core/util/TypeCheck\";\nimport { Signal } from \"../../signal/Signal\";\nimport { assert } from \"../../core/util/Debug\";\nimport { BiquadFilter, BiquadFilterOptions } from \"./BiquadFilter\";\n\nexport type FilterRollOff = -12 | -24 | -48 | -96;\n\nexport type FilterOptions = BiquadFilterOptions & {\n\trolloff: FilterRollOff;\n}\n\n/**\n * Tone.Filter is a filter which allows for all of the same native methods\n * as the [BiquadFilterNode](http://webaudio.github.io/web-audio-api/#the-biquadfilternode-interface).\n * Tone.Filter has the added ability to set the filter rolloff at -12\n * (default), -24 and -48.\n * @example\n * const filter = new Tone.Filter(1500, \"highpass\").toDestination();\n * filter.frequency.rampTo(20000, 10);\n * const noise = new Tone.Noise().connect(filter).start();\n * @category Component\n */\nexport class Filter extends ToneAudioNode<FilterOptions> {\n\n\treadonly name: string = \"Filter\";\n\n\treadonly input = new Gain({ context: this.context });\n\treadonly output = new Gain({ context: this.context });\n\tprivate _filters: BiquadFilter[] = [];\n\n\t/**\n\t * the rolloff value of the filter\n\t */\n\tprivate _rolloff!: FilterRollOff;\n\tprivate _type: BiquadFilterType;\n\n\t/**\n\t * The Q or Quality of the filter\n\t */\n\treadonly Q: Signal<\"positive\">;\n\n\t/**\n\t * The cutoff frequency of the filter.\n\t */\n\treadonly frequency: Signal<\"frequency\">;\n\n\t/**\n\t * The detune parameter\n\t */\n\treadonly detune: Signal<\"cents\">;\n\n\t/**\n\t * The gain of the filter, only used in certain filter types\n\t */\n\treadonly gain: Signal<\"decibels\">;\n\n\t/**\n\t * @param frequency The cutoff frequency of the filter.\n\t * @param type The type of filter.\n\t * @param rolloff The drop in decibels per octave after the cutoff frequency\n\t */\n\tconstructor(frequency?: Frequency, type?: BiquadFilterType, rolloff?: FilterRollOff);\n\tconstructor(options?: Partial<FilterOptions>);\n\tconstructor() {\n\t\tsuper(optionsFromArguments(Filter.getDefaults(), arguments, [\"frequency\", \"type\", \"rolloff\"]));\n\t\tconst options = optionsFromArguments(Filter.getDefaults(), arguments, [\"frequency\", \"type\", \"rolloff\"]);\n\n\t\tthis._filters = [];\n\n\t\tthis.Q = new Signal({\n\t\t\tcontext: this.context,\n\t\t\tunits: \"positive\",\n\t\t\tvalue: options.Q,\n\t\t});\n\t\tthis.frequency = new Signal({\n\t\t\tcontext: this.context,\n\t\t\tunits: \"frequency\",\n\t\t\tvalue: options.frequency,\n\t\t});\n\t\tthis.detune = new Signal({\n\t\t\tcontext: this.context,\n\t\t\tunits: \"cents\",\n\t\t\tvalue: options.detune,\n\t\t});\n\t\tthis.gain = new Signal({\n\t\t\tcontext: this.context,\n\t\t\tunits: \"decibels\",\n\t\t\tconvert: false,\n\t\t\tvalue: options.gain,\n\t\t});\n\t\tthis._type = options.type;\n\t\tthis.rolloff = options.rolloff;\n\t\treadOnly(this, [\"detune\", \"frequency\", \"gain\", \"Q\"]);\n\t}\n\n\tstatic getDefaults(): FilterOptions {\n\t\treturn Object.assign(ToneAudioNode.getDefaults(), {\n\t\t\tQ: 1,\n\t\t\tdetune: 0,\n\t\t\tfrequency: 350,\n\t\t\tgain: 0,\n\t\t\trolloff: -12 as FilterRollOff,\n\t\t\ttype: \"lowpass\" as BiquadFilterType,\n\t\t});\n\t}\n\n\t/**\n\t * The type of the filter. Types: \"lowpass\", \"highpass\",\n\t * \"bandpass\", \"lowshelf\", \"highshelf\", \"notch\", \"allpass\", or \"peaking\".\n\t */\n\tget type(): BiquadFilterType {\n\t\treturn this._type;\n\t}\n\tset type(type: BiquadFilterType) {\n\t\tconst types: BiquadFilterType[] = [\"lowpass\", \"highpass\", \"bandpass\",\n\t\t\t\"lowshelf\", \"highshelf\", \"notch\", \"allpass\", \"peaking\"];\n\t\tassert(types.indexOf(type) !== -1, `Invalid filter type: ${type}`);\n\t\tthis._type = type;\n\t\tthis._filters.forEach(filter => filter.type = type);\n\t}\n\n\t/**\n\t * The rolloff of the filter which is the drop in db\n\t * per octave. Implemented internally by cascading filters.\n\t * Only accepts the values -12, -24, -48 and -96.\n\t */\n\tget rolloff(): FilterRollOff {\n\t\treturn this._rolloff;\n\t}\n\tset rolloff(rolloff) {\n\t\tconst rolloffNum = isNumber(rolloff) ? rolloff : parseInt(rolloff, 10) as FilterRollOff;\n\t\tconst possibilities = [-12, -24, -48, -96];\n\t\tlet cascadingCount = possibilities.indexOf(rolloffNum);\n\t\t// check the rolloff is valid\n\t\tassert(cascadingCount !== -1, `rolloff can only be ${possibilities.join(\", \")}`);\n\t\tcascadingCount += 1;\n\n\t\tthis._rolloff = rolloffNum;\n\t\tthis.input.disconnect();\n\t\tthis._filters.forEach(filter => filter.disconnect());\n\n\t\tthis._filters = new Array(cascadingCount);\n\t\tfor (let count = 0; count < cascadingCount; count++) {\n\t\t\tconst filter = new BiquadFilter({\n\t\t\t\tcontext: this.context,\n\t\t\t});\n\t\t\tfilter.type = this._type;\n\t\t\tthis.frequency.connect(filter.frequency);\n\t\t\tthis.detune.connect(filter.detune);\n\t\t\tthis.Q.connect(filter.Q);\n\t\t\tthis.gain.connect(filter.gain);\n\t\t\tthis._filters[count] = filter;\n\t\t}\n\t\tthis._internalChannels = this._filters;\n\t\tconnectSeries(this.input, ...this._internalChannels, this.output);\n\t}\n\n\t/**\n\t * Get the frequency response curve. This curve represents how the filter\n\t * responses to frequencies between 20hz-20khz.\n\t * @param  len The number of values to return\n\t * @return The frequency response curve between 20-20kHz\n\t */\n\tgetFrequencyResponse(len = 128): Float32Array {\n\t\tconst filterClone = new BiquadFilter({\n\t\t\tfrequency: this.frequency.value,\n\t\t\tgain: this.gain.value,\n\t\t\tQ: this.Q.value,\n\t\t\ttype: this._type,\n\t\t\tdetune: this.detune.value,\n\t\t});\n\t\t// start with all 1s\n\t\tconst totalResponse = new Float32Array(len).map(() => 1);\n\t\tthis._filters.forEach(() => {\n\t\t\tconst response = filterClone.getFrequencyResponse(len);\n\t\t\tresponse.forEach((val, i) => totalResponse[i] *= val);\n\t\t});\n\t\tfilterClone.dispose();\n\t\treturn totalResponse;\n\t}\n\n\t/**\n\t * Clean up.\n\t */\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._filters.forEach(filter => {\n\t\t\tfilter.dispose();\n\t\t});\n\t\twritable(this, [\"detune\", \"frequency\", \"gain\", \"Q\"]);\n\t\tthis.frequency.dispose();\n\t\tthis.Q.dispose();\n\t\tthis.detune.dispose();\n\t\tthis.gain.dispose();\n\t\treturn this;\n\t}\n}\n","import { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { Frequency, Hertz, NormalRange, Time } from \"../../core/type/Units\";\nimport { Envelope, EnvelopeOptions } from \"./Envelope\";\nimport { Scale } from \"../../signal/Scale\";\nimport { Pow } from \"../../signal/Pow\";\nimport { assertRange } from \"../../core/util/Debug\";\n\nexport interface FrequencyEnvelopeOptions extends EnvelopeOptions {\n\tbaseFrequency: Frequency;\n\toctaves: number;\n\texponent: number;\n}\n/**\n * FrequencyEnvelope is an [[Envelope]] which ramps between [[baseFrequency]]\n * and [[octaves]]. It can also have an optional [[exponent]] to adjust the curve\n * which it ramps. \n * @example\n * const oscillator = new Tone.Oscillator().toDestination().start();\n * const freqEnv = new Tone.FrequencyEnvelope({\n * \tattack: 0.2,\n * \tbaseFrequency: \"C2\",\n * \toctaves: 4\n * });\n * freqEnv.connect(oscillator.frequency);\n * freqEnv.triggerAttack();\n * @category Component\n */\nexport class FrequencyEnvelope extends Envelope {\n\n\treadonly name: string = \"FrequencyEnvelope\";\n\n\t/**\n\t * Private reference to the base frequency as a number\n\t */\n\tprivate _baseFrequency: Hertz;\n\n\t/**\n\t * The number of octaves\n\t */\n\tprivate _octaves: number;\n\n\t/**\n\t * Internal scaler from 0-1 to the final output range\n\t */\n\tprivate _scale: Scale;\n\n\t/**\n\t * Apply a power curve to the output\n\t */\n\tprivate _exponent: Pow;\n\n\t/**\n\t * @param attack\tthe attack time in seconds\n\t * @param decay\t\tthe decay time in seconds\n\t * @param sustain \ta percentage (0-1) of the full amplitude\n\t * @param release\tthe release time in seconds\n\t */\n\tconstructor(attack?: Time, decay?: Time, sustain?: NormalRange, release?: Time);\n\tconstructor(options?: Partial<FrequencyEnvelopeOptions>)\n\tconstructor() {\n\t\tsuper(optionsFromArguments(FrequencyEnvelope.getDefaults(), arguments, [\"attack\", \"decay\", \"sustain\", \"release\"]));\n\t\tconst options = optionsFromArguments(FrequencyEnvelope.getDefaults(), arguments, [\"attack\", \"decay\", \"sustain\", \"release\"]);\n\n\t\tthis._octaves = options.octaves;\n\t\tthis._baseFrequency = this.toFrequency(options.baseFrequency);\n\n\t\tthis._exponent = this.input = new Pow({\n\t\t\tcontext: this.context,\n\t\t\tvalue: options.exponent\n\t\t});\n\t\tthis._scale = this.output = new Scale({\n\t\t\tcontext: this.context,\n\t\t\tmin: this._baseFrequency,\n\t\t\tmax: this._baseFrequency * Math.pow(2, this._octaves),\n\t\t});\n\t\tthis._sig.chain(this._exponent, this._scale);\n\t}\n\n\tstatic getDefaults(): FrequencyEnvelopeOptions {\n\t\treturn Object.assign(Envelope.getDefaults(), {\n\t\t\tbaseFrequency: 200,\n\t\t\texponent: 1,\n\t\t\toctaves: 4,\n\t\t});\n\t}\n\n\t/**\n\t * The envelope's minimum output value. This is the value which it\n\t * starts at.\n\t */\n\tget baseFrequency(): Frequency {\n\t\treturn this._baseFrequency;\n\t}\n\tset baseFrequency(min) {\n\t\tconst freq = this.toFrequency(min);\n\t\tassertRange(freq, 0);\n\t\tthis._baseFrequency = freq;\n\t\tthis._scale.min = this._baseFrequency;\n\t\t// update the max value when the min changes\n\t\tthis.octaves = this._octaves;\n\t}\n\n\t/**\n\t * The number of octaves above the baseFrequency that the\n\t * envelope will scale to.\n\t */\n\tget octaves(): number {\n\t\treturn this._octaves;\n\t}\n\tset octaves(octaves: number) {\n\t\tthis._octaves = octaves;\n\t\tthis._scale.max = this._baseFrequency * Math.pow(2, octaves);\n\t}\n\n\t/**\n\t * The envelope's exponent value.\n\t */\n\tget exponent(): number {\n\t\treturn this._exponent.value;\n\t}\n\tset exponent(exponent) {\n\t\tthis._exponent.value = exponent;\n\t}\n\n\t/**\n\t * Clean up\n\t */\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._exponent.dispose();\n\t\tthis._scale.dispose();\n\t\treturn this;\n\t}\n}\n","import { AmplitudeEnvelope } from \"../component/envelope/AmplitudeEnvelope\";\nimport { Envelope, EnvelopeOptions } from \"../component/envelope/Envelope\";\nimport { Filter, FilterOptions } from \"../component/filter/Filter\";\nimport { omitFromObject, optionsFromArguments } from \"../core/util/Defaults\";\nimport { readOnly, RecursivePartial } from \"../core/util/Interface\";\nimport { Monophonic, MonophonicOptions } from \"../instrument/Monophonic\";\nimport { OmniOscillator } from \"../source/oscillator/OmniOscillator\";\nimport { Source } from \"../source/Source\";\nimport { FrequencyEnvelope, FrequencyEnvelopeOptions } from \"../component/envelope/FrequencyEnvelope\";\nimport { NormalRange, Seconds, Time } from \"../core/type/Units\";\nimport { Signal } from \"../signal/Signal\";\nimport { ToneAudioNode, ToneAudioNodeOptions } from \"../core/context/ToneAudioNode\";\nimport { OmniOscillatorSynthOptions } from \"../source/oscillator/OscillatorInterface\";\n\nexport interface MonoSynthOptions extends MonophonicOptions {\n\toscillator: OmniOscillatorSynthOptions;\n\tenvelope: Omit<EnvelopeOptions, keyof ToneAudioNodeOptions>;\n\tfilterEnvelope: Omit<FrequencyEnvelopeOptions, keyof ToneAudioNodeOptions>;\n\tfilter: Omit<FilterOptions, keyof ToneAudioNodeOptions>;\n}\n\n/**\n * MonoSynth is composed of one `oscillator`, one `filter`, and two `envelopes`.\n * The amplitude of the Oscillator and the cutoff frequency of the\n * Filter are controlled by Envelopes.\n * <img src=\"https://docs.google.com/drawings/d/1gaY1DF9_Hzkodqf8JI1Cg2VZfwSElpFQfI94IQwad38/pub?w=924&h=240\">\n * @example\n * const synth = new Tone.MonoSynth({\n * \toscillator: {\n * \t\ttype: \"square\"\n * \t},\n * \tenvelope: {\n * \t\tattack: 0.1\n * \t}\n * }).toDestination();\n * synth.triggerAttackRelease(\"C4\", \"8n\");\n * @category Instrument\n */\nexport class MonoSynth extends Monophonic<MonoSynthOptions> {\n\n\treadonly name = \"MonoSynth\";\n\n\t/**\n\t * The oscillator.\n\t */\n\treadonly oscillator: OmniOscillator<any>;\n\n\t/**\n\t * The frequency control.\n\t */\n\treadonly frequency: Signal<\"frequency\">;\n\n\t/**\n\t * The detune control.\n\t */\n\treadonly detune: Signal<\"cents\">;\n\n\t/**\n\t * The filter.\n\t */\n\treadonly filter: Filter;\n\n\t/**\n\t * The filter envelope.\n\t */\n\treadonly filterEnvelope: FrequencyEnvelope;\n\n\t/**\n\t * The amplitude envelope.\n\t */\n\treadonly envelope: AmplitudeEnvelope;\n\n\tconstructor(options?: RecursivePartial<MonoSynthOptions>);\n\tconstructor() {\n\t\tsuper(optionsFromArguments(MonoSynth.getDefaults(), arguments));\n\t\tconst options = optionsFromArguments(MonoSynth.getDefaults(), arguments);\n\n\t\tthis.oscillator = new OmniOscillator(Object.assign(options.oscillator, {\n\t\t\tcontext: this.context,\n\t\t\tdetune: options.detune,\n\t\t\tonstop: () => this.onsilence(this),\n\t\t}));\n\t\tthis.frequency = this.oscillator.frequency;\n\t\tthis.detune = this.oscillator.detune;\n\t\tthis.filter = new Filter(Object.assign(options.filter, { context: this.context }));\n\t\tthis.filterEnvelope = new FrequencyEnvelope(Object.assign(options.filterEnvelope, { context: this.context }));\n\t\tthis.envelope = new AmplitudeEnvelope(Object.assign(options.envelope, { context: this.context }));\n\n\t\t// connect the oscillators to the output\n\t\tthis.oscillator.chain(this.filter, this.envelope, this.output);\n\n\t\t// connect the filter envelope\n\t\tthis.filterEnvelope.connect(this.filter.frequency);\n\n\t\treadOnly(this, [\"oscillator\", \"frequency\", \"detune\", \"filter\", \"filterEnvelope\", \"envelope\"]);\n\t}\n\n\tstatic getDefaults(): MonoSynthOptions {\n\t\treturn Object.assign(Monophonic.getDefaults(), {\n\t\t\tenvelope: Object.assign(\n\t\t\t\tomitFromObject(Envelope.getDefaults(), Object.keys(ToneAudioNode.getDefaults())),\n\t\t\t\t{\n\t\t\t\t\tattack: 0.005,\n\t\t\t\t\tdecay: 0.1,\n\t\t\t\t\trelease: 1,\n\t\t\t\t\tsustain: 0.9,\n\t\t\t\t},\n\t\t\t),\n\t\t\tfilter: Object.assign(\n\t\t\t\tomitFromObject(Filter.getDefaults(), Object.keys(ToneAudioNode.getDefaults())),\n\t\t\t\t{\n\t\t\t\t\tQ: 1,\n\t\t\t\t\trolloff: -12,\n\t\t\t\t\ttype: \"lowpass\",\n\t\t\t\t},\n\t\t\t),\n\t\t\tfilterEnvelope: Object.assign(\n\t\t\t\tomitFromObject(FrequencyEnvelope.getDefaults(), Object.keys(ToneAudioNode.getDefaults())),\n\t\t\t\t{\n\t\t\t\t\tattack: 0.6,\n\t\t\t\t\tbaseFrequency: 200,\n\t\t\t\t\tdecay: 0.2,\n\t\t\t\t\texponent: 2,\n\t\t\t\t\toctaves: 3,\n\t\t\t\t\trelease: 2,\n\t\t\t\t\tsustain: 0.5,\n\t\t\t\t}\n\t\t\t),\n\t\t\toscillator: Object.assign(\n\t\t\t\tomitFromObject(OmniOscillator.getDefaults(), Object.keys(Source.getDefaults())),\n\t\t\t\t{\n\t\t\t\t\ttype: \"sawtooth\",\n\t\t\t\t},\n\t\t\t) as OmniOscillatorSynthOptions,\n\t\t});\n\t}\n\n\t/**\n\t * start the attack portion of the envelope\n\t * @param time the time the attack should start\n\t * @param velocity the velocity of the note (0-1)\n\t */\n\tprotected _triggerEnvelopeAttack(time: Seconds, velocity = 1): void {\n\t\tthis.envelope.triggerAttack(time, velocity);\n\t\tthis.filterEnvelope.triggerAttack(time);\n\t\tthis.oscillator.start(time);\n\t\tif (this.envelope.sustain === 0) {\n\t\t\tconst computedAttack = this.toSeconds(this.envelope.attack);\n\t\t\tconst computedDecay = this.toSeconds(this.envelope.decay);\n\t\t\tthis.oscillator.stop(time + computedAttack + computedDecay);\n\t\t}\n\t}\n\n\t/**\n\t * start the release portion of the envelope\n\t * @param time the time the release should start\n\t */\n\tprotected _triggerEnvelopeRelease(time: Seconds): void {\n\t\tthis.envelope.triggerRelease(time);\n\t\tthis.filterEnvelope.triggerRelease(time);\n\t\tthis.oscillator.stop(time + this.toSeconds(this.envelope.release));\n\t}\n\n\tgetLevelAtTime(time: Time): NormalRange {\n\t\ttime = this.toSeconds(time);\n\t\treturn this.envelope.getValueAtTime(time);\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis.oscillator.dispose();\n\t\tthis.envelope.dispose();\n\t\tthis.filterEnvelope.dispose();\n\t\tthis.filter.dispose();\n\t\treturn this;\n\t}\n}\n","import { Monophonic, MonophonicOptions } from \"./Monophonic\";\nimport { MonoSynth, MonoSynthOptions } from \"./MonoSynth\";\nimport { Signal } from \"../signal/Signal\";\nimport { readOnly, RecursivePartial } from \"../core/util/Interface\";\nimport { LFO } from \"../source/oscillator/LFO\";\nimport { Gain, } from \"../core/context/Gain\";\nimport { Multiply } from \"../signal/Multiply\";\nimport { Frequency, NormalRange, Positive, Seconds, Time } from \"../core/type/Units\";\nimport { deepMerge, omitFromObject, optionsFromArguments } from \"../core/util/Defaults\";\nimport { Param } from \"../core/context/Param\";\n\nexport interface DuoSynthOptions extends MonophonicOptions {\n\tvoice0: Omit<MonoSynthOptions, keyof MonophonicOptions>;\n\tvoice1: Omit<MonoSynthOptions, keyof MonophonicOptions>;\n\tharmonicity: Positive;\n\tvibratoRate: Frequency;\n\tvibratoAmount: Positive;\n}\n\n/**\n * DuoSynth is a monophonic synth composed of two [[MonoSynths]] run in parallel with control over the\n * frequency ratio between the two voices and vibrato effect.\n * @example\n * const duoSynth = new Tone.DuoSynth().toDestination();\n * duoSynth.triggerAttackRelease(\"C4\", \"2n\");\n * @category Instrument\n */\nexport class DuoSynth extends Monophonic<DuoSynthOptions> {\n\n\treadonly name: string = \"DuoSynth\";\n\n\treadonly frequency: Signal<\"frequency\">;\n\treadonly detune: Signal<\"cents\">;\n\n\t/**\n\t * the first voice\n\t */\n\treadonly voice0: MonoSynth;\n\n\t/**\n\t * the second voice\n\t */\n\treadonly voice1: MonoSynth;\n\n\t/**\n\t * The amount of vibrato\n\t */\n\tpublic vibratoAmount: Param<\"normalRange\">;\n\n\t/**\n\t * the vibrato frequency\n\t */\n\tpublic vibratoRate: Signal<\"frequency\">;\n\n\t/**\n\t * Harmonicity is the ratio between the two voices. A harmonicity of\n\t * 1 is no change. Harmonicity = 2 means a change of an octave.\n\t * @example\n\t * const duoSynth = new Tone.DuoSynth().toDestination();\n\t * duoSynth.triggerAttackRelease(\"C4\", \"2n\");\n\t * // pitch voice1 an octave below voice0\n\t * duoSynth.harmonicity.value = 0.5;\n\t */\n\tpublic harmonicity: Signal<\"positive\">;\n\n\t/**\n\t * The vibrato LFO.\n\t */\n\tprivate _vibrato: LFO;\n\n\t/**\n\t * the vibrato gain\n\t */\n\tprivate _vibratoGain: Gain<\"normalRange\">;\n\n\tconstructor(options?: RecursivePartial<DuoSynthOptions>);\n\tconstructor() {\n\t\tsuper(optionsFromArguments(DuoSynth.getDefaults(), arguments));\n\t\tconst options = optionsFromArguments(DuoSynth.getDefaults(), arguments);\n\n\t\tthis.voice0 = new MonoSynth(Object.assign(options.voice0, {\n\t\t\tcontext: this.context,\n\t\t\tonsilence: () => this.onsilence(this)\n\t\t}));\n\t\tthis.voice1 = new MonoSynth(Object.assign(options.voice1, {\n\t\t\tcontext: this.context,\n\t\t}));\n\n\t\tthis.harmonicity = new Multiply({\n\t\t\tcontext: this.context,\n\t\t\tunits: \"positive\",\n\t\t\tvalue: options.harmonicity,\n\t\t});\n\n\t\tthis._vibrato = new LFO({\n\t\t\tfrequency: options.vibratoRate,\n\t\t\tcontext: this.context,\n\t\t\tmin: -50,\n\t\t\tmax: 50\n\t\t});\n\t\t// start the vibrato immediately\n\t\tthis._vibrato.start();\n\t\tthis.vibratoRate = this._vibrato.frequency;\n\t\tthis._vibratoGain = new Gain({\n\t\t\tcontext: this.context,\n\t\t\tunits: \"normalRange\",\n\t\t\tgain: options.vibratoAmount\n\t\t});\n\t\tthis.vibratoAmount = this._vibratoGain.gain;\n\n\t\tthis.frequency = new Signal({\n\t\t\tcontext: this.context,\n\t\t\tunits: \"frequency\",\n\t\t\tvalue: 440\n\t\t});\n\t\tthis.detune = new Signal({\n\t\t\tcontext: this.context,\n\t\t\tunits: \"cents\",\n\t\t\tvalue: options.detune\n\t\t});\n\n\t\t// control the two voices frequency\n\t\tthis.frequency.connect(this.voice0.frequency);\n\t\tthis.frequency.chain(this.harmonicity, this.voice1.frequency);\n\n\t\tthis._vibrato.connect(this._vibratoGain);\n\t\tthis._vibratoGain.fan(this.voice0.detune, this.voice1.detune);\n\n\t\tthis.detune.fan(this.voice0.detune, this.voice1.detune);\n\n\t\tthis.voice0.connect(this.output);\n\t\tthis.voice1.connect(this.output);\n\n\t\treadOnly(this, [\"voice0\", \"voice1\", \"frequency\", \"vibratoAmount\", \"vibratoRate\"]);\n\t}\n\n\tgetLevelAtTime(time: Time): NormalRange {\n\t\ttime = this.toSeconds(time);\n\t\treturn this.voice0.envelope.getValueAtTime(time) + this.voice1.envelope.getValueAtTime(time);\n\t}\n\n\tstatic getDefaults(): DuoSynthOptions {\n\t\treturn deepMerge(Monophonic.getDefaults(), {\n\t\t\tvibratoAmount: 0.5,\n\t\t\tvibratoRate: 5,\n\t\t\tharmonicity: 1.5,\n\t\t\tvoice0: deepMerge(\n\t\t\t\tomitFromObject(MonoSynth.getDefaults(), Object.keys(Monophonic.getDefaults())),\n\t\t\t\t{\n\t\t\t\t\tfilterEnvelope: {\n\t\t\t\t\t\tattack: 0.01,\n\t\t\t\t\t\tdecay: 0.0,\n\t\t\t\t\t\tsustain: 1,\n\t\t\t\t\t\trelease: 0.5\n\t\t\t\t\t},\n\t\t\t\t\tenvelope: {\n\t\t\t\t\t\tattack: 0.01,\n\t\t\t\t\t\tdecay: 0.0,\n\t\t\t\t\t\tsustain: 1,\n\t\t\t\t\t\trelease: 0.5\n\t\t\t\t\t}\n\t\t\t\t}),\n\t\t\tvoice1: deepMerge(\n\t\t\t\tomitFromObject(MonoSynth.getDefaults(), Object.keys(Monophonic.getDefaults())),\n\t\t\t\t{\n\n\t\t\t\t\tfilterEnvelope: {\n\t\t\t\t\t\tattack: 0.01,\n\t\t\t\t\t\tdecay: 0.0,\n\t\t\t\t\t\tsustain: 1,\n\t\t\t\t\t\trelease: 0.5\n\t\t\t\t\t},\n\t\t\t\t\tenvelope: {\n\t\t\t\t\t\tattack: 0.01,\n\t\t\t\t\t\tdecay: 0.0,\n\t\t\t\t\t\tsustain: 1,\n\t\t\t\t\t\trelease: 0.5\n\t\t\t\t\t}\n\t\t\t\t}),\n\t\t}) as DuoSynthOptions;\n\t}\n\t/**\n\t * Trigger the attack portion of the note\n\t */\n\tprotected _triggerEnvelopeAttack(time: Seconds, velocity: number): void {\n\t\t// @ts-ignore\n\t\tthis.voice0._triggerEnvelopeAttack(time, velocity);\n\t\t// @ts-ignore\n\t\tthis.voice1._triggerEnvelopeAttack(time, velocity);\n\t}\n\n\t/**\n\t * Trigger the release portion of the note\n\t */\n\tprotected _triggerEnvelopeRelease(time: Seconds) {\n\t\t// @ts-ignore\n\t\tthis.voice0._triggerEnvelopeRelease(time);\n\t\t// @ts-ignore\n\t\tthis.voice1._triggerEnvelopeRelease(time);\n\t\treturn this;\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis.voice0.dispose();\n\t\tthis.voice1.dispose();\n\t\tthis.frequency.dispose();\n\t\tthis.detune.dispose();\n\t\tthis._vibrato.dispose();\n\t\tthis.vibratoRate.dispose();\n\t\tthis._vibratoGain.dispose();\n\t\tthis.harmonicity.dispose();\n\t\treturn this;\n\t}\n}\n\n","import { Positive } from \"../core/type/Units\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { RecursivePartial } from \"../core/util/Interface\";\nimport { Multiply } from \"../signal/Multiply\";\nimport { ModulationSynth, ModulationSynthOptions } from \"./ModulationSynth\";\n\nexport interface FMSynthOptions extends ModulationSynthOptions {\n\tmodulationIndex: Positive;\n}\n\n/**\n * FMSynth is composed of two Tone.Synths where one Tone.Synth modulates\n * the frequency of a second Tone.Synth. A lot of spectral content\n * can be explored using the modulationIndex parameter. Read more about\n * frequency modulation synthesis on Sound On Sound: [Part 1](https://web.archive.org/web/20160403123704/http://www.soundonsound.com/sos/apr00/articles/synthsecrets.htm), [Part 2](https://web.archive.org/web/20160403115835/http://www.soundonsound.com/sos/may00/articles/synth.htm).\n *\n * @example\n * const fmSynth = new Tone.FMSynth().toDestination();\n * fmSynth.triggerAttackRelease(\"C5\", \"4n\");\n * \n * @category Instrument\n */\n\nexport class FMSynth extends ModulationSynth<FMSynthOptions> {\n\treadonly name: string = \"FMSynth\";\n\n\t/**\n\t * The modulation index which essentially the depth or amount of the modulation. It is the\n\t * ratio of the frequency of the modulating signal (mf) to the amplitude of the\n\t * modulating signal (ma) -- as in ma/mf.\n\t */\n\treadonly modulationIndex: Multiply;\n\n\tconstructor(options?: RecursivePartial<FMSynthOptions>);\n\tconstructor() {\n\t\tsuper(optionsFromArguments(FMSynth.getDefaults(), arguments));\n\t\tconst options = optionsFromArguments(FMSynth.getDefaults(), arguments);\n\n\t\tthis.modulationIndex = new Multiply({\n\t\t\tcontext: this.context,\n\t\t\tvalue: options.modulationIndex,\n\t\t});\n\n\t\t// control the two voices frequency\n\t\tthis.frequency.connect(this._carrier.frequency);\n\t\tthis.frequency.chain(this.harmonicity, this._modulator.frequency);\n\t\tthis.frequency.chain(this.modulationIndex, this._modulationNode);\n\t\tthis.detune.fan(this._carrier.detune, this._modulator.detune);\n\t\tthis._modulator.connect(this._modulationNode.gain);\n\t\tthis._modulationNode.connect(this._carrier.frequency);\n\t\tthis._carrier.connect(this.output);\n\t}\n\n\tstatic getDefaults(): FMSynthOptions {\n\t\treturn Object.assign(ModulationSynth.getDefaults(), {\n\t\t\tmodulationIndex: 10,\n\t\t});\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis.modulationIndex.dispose();\n\t\treturn this;\n\t}\n}\n","import { Envelope, EnvelopeOptions } from \"../component/envelope/Envelope\";\nimport { Filter } from \"../component/filter/Filter\";\nimport { Gain } from \"../core/context/Gain\";\nimport { ToneAudioNode, ToneAudioNodeOptions } from \"../core/context/ToneAudioNode\";\nimport { Frequency, NormalRange, Positive, Seconds, Time } from \"../core/type/Units\";\nimport { deepMerge, omitFromObject, optionsFromArguments } from \"../core/util/Defaults\";\nimport { noOp, RecursivePartial } from \"../core/util/Interface\";\nimport { Multiply } from \"../signal/Multiply\";\nimport { Scale } from \"../signal/Scale\";\nimport { Signal } from \"../signal/Signal\";\nimport { FMOscillator } from \"../source/oscillator/FMOscillator\";\nimport { Monophonic, MonophonicOptions } from \"./Monophonic\";\n\nexport interface MetalSynthOptions extends MonophonicOptions {\n\tharmonicity: Positive;\n\tmodulationIndex: Positive;\n\toctaves: number;\n\tresonance: Frequency;\n\tenvelope: Omit<EnvelopeOptions, keyof ToneAudioNodeOptions>;\n}\n\n/**\n * Inharmonic ratio of frequencies based on the Roland TR-808\n * Taken from https://ccrma.stanford.edu/papers/tr-808-cymbal-physically-informed-circuit-bendable-digital-model\n */\nconst inharmRatios: number[] = [1.0, 1.483, 1.932, 2.546, 2.630, 3.897];\n\n/**\n * A highly inharmonic and spectrally complex source with a highpass filter\n * and amplitude envelope which is good for making metallophone sounds.\n * Based on CymbalSynth by [@polyrhythmatic](https://github.com/polyrhythmatic).\n * Inspiration from [Sound on Sound](https://shorturl.at/rSZ12).\n * @category Instrument\n */\nexport class MetalSynth extends Monophonic<MetalSynthOptions> {\n\n\treadonly name: string = \"MetalSynth\";\n\n\t/**\n\t * The frequency of the cymbal\n\t */\n\treadonly frequency: Signal<\"frequency\">;\n\n\t/**\n\t * The detune applied to the oscillators\n\t */\n\treadonly detune: Signal<\"cents\">;\n\n\t/**\n\t * The array of FMOscillators\n\t */\n\tprivate _oscillators: FMOscillator[] = [];\n\n\t/**\n\t * The frequency multipliers\n\t */\n\tprivate _freqMultipliers: Multiply[] = [];\n\n\t/**\n\t * The gain node for the envelope.\n\t */\n\tprivate _amplitude: Gain;\n\n\t/**\n\t * Highpass the output\n\t */\n\tprivate _highpass: Filter;\n\n\t/**\n\t * The number of octaves the highpass\n\t * filter frequency ramps\n\t */\n\tprivate _octaves: number;\n\n\t/**\n\t * Scale the body envelope for the highpass filter\n\t */\n\tprivate _filterFreqScaler: Scale;\n\n\t/**\n\t * The envelope which is connected both to the\n\t * amplitude and a highpass filter's cutoff frequency.\n\t * The lower-limit of the filter is controlled by the [[resonance]]\n\t */\n\treadonly envelope: Envelope;\n\n\tconstructor(options?: RecursivePartial<MetalSynthOptions>)\n\tconstructor() {\n\t\tsuper(optionsFromArguments(MetalSynth.getDefaults(), arguments));\n\t\tconst options = optionsFromArguments(MetalSynth.getDefaults(), arguments);\n\n\t\tthis.detune = new Signal({\n\t\t\tcontext: this.context,\n\t\t\tunits: \"cents\",\n\t\t\tvalue: options.detune,\n\t\t});\n\n\t\tthis.frequency = new Signal({\n\t\t\tcontext: this.context,\n\t\t\tunits: \"frequency\",\n\t\t});\n\n\t\tthis._amplitude = new Gain({\n\t\t\tcontext: this.context,\n\t\t\tgain: 0,\n\t\t}).connect(this.output);\n\n\t\tthis._highpass = new Filter({\n\t\t\t// Q: -3.0102999566398125,\n\t\t\tQ: 0,\n\t\t\tcontext: this.context,\n\t\t\ttype: \"highpass\",\n\t\t}).connect(this._amplitude);\n\n\t\tfor (let i = 0; i < inharmRatios.length; i++) {\n\t\t\tconst osc = new FMOscillator({\n\t\t\t\tcontext: this.context,\n\t\t\t\tharmonicity: options.harmonicity,\n\t\t\t\tmodulationIndex: options.modulationIndex,\n\t\t\t\tmodulationType: \"square\",\n\t\t\t\tonstop: i === 0 ? () => this.onsilence(this) : noOp,\n\t\t\t\ttype: \"square\",\n\t\t\t});\n\t\t\tosc.connect(this._highpass);\n\t\t\tthis._oscillators[i] = osc;\n\n\t\t\tconst mult = new Multiply({\n\t\t\t\tcontext: this.context,\n\t\t\t\tvalue: inharmRatios[i],\n\t\t\t});\n\t\t\tthis._freqMultipliers[i] = mult;\n\t\t\tthis.frequency.chain(mult, osc.frequency);\n\t\t\tthis.detune.connect(osc.detune);\n\t\t}\n\n\t\tthis._filterFreqScaler = new Scale({\n\t\t\tcontext: this.context,\n\t\t\tmax: 7000,\n\t\t\tmin: this.toFrequency(options.resonance),\n\t\t});\n\n\t\tthis.envelope = new Envelope({\n\t\t\tattack: options.envelope.attack,\n\t\t\tattackCurve: \"linear\",\n\t\t\tcontext: this.context,\n\t\t\tdecay: options.envelope.decay,\n\t\t\trelease: options.envelope.release,\n\t\t\tsustain: 0,\n\t\t});\n\n\t\tthis.envelope.chain(this._filterFreqScaler, this._highpass.frequency);\n\t\tthis.envelope.connect(this._amplitude.gain);\n\t\t// set the octaves\n\t\tthis._octaves = options.octaves;\n\t\tthis.octaves = options.octaves;\n\t}\n\n\tstatic getDefaults(): MetalSynthOptions {\n\t\treturn deepMerge(Monophonic.getDefaults(), {\n\t\t\tenvelope: Object.assign(\n\t\t\t\tomitFromObject(Envelope.getDefaults(), Object.keys(ToneAudioNode.getDefaults())),\n\t\t\t\t{\n\t\t\t\t\tattack: 0.001,\n\t\t\t\t\tdecay: 1.4,\n\t\t\t\t\trelease: 0.2,\n\t\t\t\t},\n\t\t\t),\n\t\t\tharmonicity: 5.1,\n\t\t\tmodulationIndex: 32,\n\t\t\toctaves: 1.5,\n\t\t\tresonance: 4000,\n\t\t});\n\t}\n\n\t/**\n\t * Trigger the attack.\n\t * @param time When the attack should be triggered.\n\t * @param velocity The velocity that the envelope should be triggered at.\n\t */\n\tprotected _triggerEnvelopeAttack(time: Seconds, velocity: NormalRange = 1): this {\n\t\tthis.envelope.triggerAttack(time, velocity);\n\t\tthis._oscillators.forEach(osc => osc.start(time));\n\t\tif (this.envelope.sustain === 0) {\n\t\t\tthis._oscillators.forEach(osc => {\n\t\t\t\tosc.stop(time + this.toSeconds(this.envelope.attack) + this.toSeconds(this.envelope.decay));\n\t\t\t});\n\t\t}\n\t\treturn this;\n\t}\n\t\n\t/**\n\t * Trigger the release of the envelope.\n\t * @param time When the release should be triggered.\n\t */\n\tprotected _triggerEnvelopeRelease(time: Seconds): this {\n\t\tthis.envelope.triggerRelease(time);\n\t\tthis._oscillators.forEach(osc => osc.stop(time + this.toSeconds(this.envelope.release)));\n\t\treturn this;\n\t}\n\n\tgetLevelAtTime(time: Time): NormalRange {\n\t\ttime = this.toSeconds(time);\n\t\treturn this.envelope.getValueAtTime(time);\n\t}\n\n\t/**\n\t * The modulationIndex of the oscillators which make up the source.\n\t * see [[FMOscillator.modulationIndex]]\n\t * @min 1\n\t * @max 100\n\t */\n\tget modulationIndex(): number {\n\t\treturn this._oscillators[0].modulationIndex.value;\n\t}\n\tset modulationIndex(val) {\n\t\tthis._oscillators.forEach(osc => (osc.modulationIndex.value = val));\n\t}\n\n\t/**\n\t * The harmonicity of the oscillators which make up the source.\n\t * see Tone.FMOscillator.harmonicity\n\t * @min 0.1\n\t * @max 10\n\t */\n\tget harmonicity(): number {\n\t\treturn this._oscillators[0].harmonicity.value;\n\t}\n\tset harmonicity(val) {\n\t\tthis._oscillators.forEach(osc => (osc.harmonicity.value = val));\n\t}\n\n\t/**\n\t * The lower level of the highpass filter which is attached to the envelope.\n\t * This value should be between [0, 7000]\n\t * @min 0\n\t * @max 7000\n\t */\n\tget resonance(): Frequency {\n\t\treturn this._filterFreqScaler.min;\n\t}\n\tset resonance(val) {\n\t\tthis._filterFreqScaler.min = this.toFrequency(val);\n\t\tthis.octaves = this._octaves;\n\t}\n\n\t/**\n\t * The number of octaves above the \"resonance\" frequency\n\t * that the filter ramps during the attack/decay envelope\n\t * @min 0\n\t * @max 8\n\t */\n\tget octaves(): number {\n\t\treturn this._octaves;\n\t}\n\tset octaves(val) {\n\t\tthis._octaves = val;\n\t\tthis._filterFreqScaler.max = this._filterFreqScaler.min * Math.pow(2, val);\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._oscillators.forEach(osc => osc.dispose());\n\t\tthis._freqMultipliers.forEach(freqMult => freqMult.dispose());\n\t\tthis.frequency.dispose();\n\t\tthis.detune.dispose();\n\t\tthis._filterFreqScaler.dispose();\n\t\tthis._amplitude.dispose();\n\t\tthis.envelope.dispose();\n\t\tthis._highpass.dispose();\n\t\treturn this;\n\t}\n}\n","import { FrequencyClass } from \"../core/type/Frequency\";\nimport { Frequency, Positive, Time } from \"../core/type/Units\";\nimport { deepMerge, optionsFromArguments } from \"../core/util/Defaults\";\nimport { readOnly, RecursivePartial } from \"../core/util/Interface\";\nimport { Monophonic } from \"./Monophonic\";\nimport { Synth, SynthOptions } from \"./Synth\";\nimport { range, timeRange } from \"../core/util/Decorator\";\n\nexport interface MembraneSynthOptions extends SynthOptions {\n\tpitchDecay: Time;\n\toctaves: Positive;\n}\n\n/**\n * MembraneSynth makes kick and tom sounds using a single oscillator\n * with an amplitude envelope and frequency ramp. A Tone.OmniOscillator\n * is routed through a Tone.AmplitudeEnvelope to the output. The drum\n * quality of the sound comes from the frequency envelope applied\n * during MembraneSynth.triggerAttack(note). The frequency envelope\n * starts at <code>note * .octaves</code> and ramps to <code>note</code>\n * over the duration of <code>.pitchDecay</code>.\n * @example\n * const synth = new Tone.MembraneSynth().toDestination();\n * synth.triggerAttackRelease(\"C2\", \"8n\");\n * @category Instrument\n */\nexport class MembraneSynth extends Synth<MembraneSynthOptions> {\n\n\treadonly name: string = \"MembraneSynth\";\n\n\t/**\n\t * The number of octaves the pitch envelope ramps.\n\t * @min 0.5\n\t * @max 8\n\t */\n\t@range(0)\n\toctaves: Positive;\n\n\t/**\n\t * The amount of time the frequency envelope takes.\n\t * @min 0\n\t * @max 0.5\n\t */\n\t@timeRange(0)\n\tpitchDecay: Time;\n\n\t/**\n\t * Portamento is ignored in this synth. use pitch decay instead.\n\t */\n\treadonly portamento = 0;\n\n\t/**\n\t * @param options the options available for the synth see defaults\n\t */\n\tconstructor(options?: RecursivePartial<MembraneSynthOptions>)\n\tconstructor() {\n\n\t\tsuper(optionsFromArguments(MembraneSynth.getDefaults(), arguments));\n\t\tconst options = optionsFromArguments(MembraneSynth.getDefaults(), arguments);\n\n\t\tthis.pitchDecay = options.pitchDecay;\n\t\tthis.octaves = options.octaves;\n\t\treadOnly(this, [\"oscillator\", \"envelope\"]);\n\t}\n\n\tstatic getDefaults(): MembraneSynthOptions {\n\t\treturn deepMerge(Monophonic.getDefaults(), Synth.getDefaults(), {\n\t\t\tenvelope: {\n\t\t\t\tattack: 0.001,\n\t\t\t\tattackCurve: \"exponential\",\n\t\t\t\tdecay: 0.4,\n\t\t\t\trelease: 1.4,\n\t\t\t\tsustain: 0.01,\n\t\t\t},\n\t\t\toctaves: 10,\n\t\t\toscillator: {\n\t\t\t\ttype: \"sine\",\n\t\t\t},\n\t\t\tpitchDecay: 0.05,\n\t\t});\n\t}\n\n\tsetNote(note: Frequency | FrequencyClass, time?: Time): this {\n\t\tconst seconds = this.toSeconds(time);\n\t\tconst hertz = this.toFrequency(note instanceof FrequencyClass ? note.toFrequency() : note);\n\t\tconst maxNote = hertz * this.octaves;\n\t\tthis.oscillator.frequency.setValueAtTime(maxNote, seconds);\n\t\tthis.oscillator.frequency.exponentialRampToValueAtTime(hertz, seconds + this.toSeconds(this.pitchDecay));\n\t\treturn this;\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\treturn this;\n\t}\n}\n","import { AmplitudeEnvelope } from \"../component/envelope/AmplitudeEnvelope\";\nimport { NormalRange, Time } from \"../core/type/Units\";\nimport { omitFromObject, optionsFromArguments } from \"../core/util/Defaults\";\nimport { RecursivePartial } from \"../core/util/Interface\";\nimport { Noise, NoiseOptions } from \"../source/Noise\";\nimport { Instrument, InstrumentOptions } from \"./Instrument\";\nimport { ToneAudioNode, ToneAudioNodeOptions } from \"../core/context/ToneAudioNode\";\nimport { Envelope, EnvelopeOptions } from \"../component/envelope/Envelope\";\nimport { Source } from \"../source/Source\";\n\nexport interface NoiseSynthOptions extends InstrumentOptions {\n\tenvelope: Omit<EnvelopeOptions, keyof ToneAudioNodeOptions>;\n\tnoise: Omit<NoiseOptions, keyof ToneAudioNodeOptions>;\n}\n\n/**\n * Tone.NoiseSynth is composed of [[Noise]] through an [[AmplitudeEnvelope]]. \n * ```\n * +-------+   +-------------------+\n * | Noise +>--> AmplitudeEnvelope +>--> Output\n * +-------+   +-------------------+\n * ```\n * @example\n * const noiseSynth = new Tone.NoiseSynth().toDestination();\n * noiseSynth.triggerAttackRelease(\"8n\", 0.05);\n * @category Instrument\n */\nexport class NoiseSynth extends Instrument<NoiseSynthOptions> {\n\n\treadonly name = \"NoiseSynth\";\n\n\t/**\n\t * The noise source.\n\t */\n\treadonly noise: Noise;\n\n\t/**\n\t * The amplitude envelope.\n\t */\n\treadonly envelope: AmplitudeEnvelope;\n\n\tconstructor(options?: RecursivePartial<NoiseSynthOptions>)\n\tconstructor() {\n\t\tsuper(optionsFromArguments(NoiseSynth.getDefaults(), arguments));\n\t\tconst options = optionsFromArguments(NoiseSynth.getDefaults(), arguments);\n\t\tthis.noise = new Noise(Object.assign({\n\t\t\tcontext: this.context,\n\t\t}, options.noise));\n\n\t\tthis.envelope = new AmplitudeEnvelope(Object.assign({\n\t\t\tcontext: this.context,\n\t\t}, options.envelope));\n\n\t\t// connect the noise to the output\n\t\tthis.noise.chain(this.envelope, this.output);\n\t}\n\n\tstatic getDefaults(): NoiseSynthOptions {\n\t\treturn Object.assign(Instrument.getDefaults(), {\n\t\t\tenvelope: Object.assign(\n\t\t\t\tomitFromObject(Envelope.getDefaults(), Object.keys(ToneAudioNode.getDefaults())),\n\t\t\t\t{\n\t\t\t\t\tdecay: 0.1,\n\t\t\t\t\tsustain: 0.0,\n\t\t\t\t},\n\t\t\t),\n\t\t\tnoise: Object.assign(\n\t\t\t\tomitFromObject(Noise.getDefaults(), Object.keys(Source.getDefaults())),\n\t\t\t\t{\n\t\t\t\t\ttype: \"white\",\n\t\t\t\t},\n\t\t\t),\n\t\t});\n\t}\n\n\t/**\n\t * Start the attack portion of the envelopes. Unlike other\n\t * instruments, Tone.NoiseSynth doesn't have a note.\n\t * @example\n\t * const noiseSynth = new Tone.NoiseSynth().toDestination();\n\t * noiseSynth.triggerAttack();\n\t */\n\ttriggerAttack(time?: Time, velocity: NormalRange = 1): this {\n\t\ttime = this.toSeconds(time);\n\t\t// the envelopes\n\t\tthis.envelope.triggerAttack(time, velocity);\n\t\t// start the noise\n\t\tthis.noise.start(time);\n\t\tif (this.envelope.sustain === 0) {\n\t\t\tthis.noise.stop(time + this.toSeconds(this.envelope.attack) + this.toSeconds(this.envelope.decay));\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Start the release portion of the envelopes.\n\t */\n\ttriggerRelease(time?: Time): this {\n\t\ttime = this.toSeconds(time);\n\t\tthis.envelope.triggerRelease(time);\n\t\tthis.noise.stop(time + this.toSeconds(this.envelope.release));\n\t\treturn this;\n\t}\n\n\tsync(): this {\n\t\tif (this._syncState()) {\n\t\t\tthis._syncMethod(\"triggerAttack\", 0);\n\t\t\tthis._syncMethod(\"triggerRelease\", 0);\n\t\t}\n\t\treturn this;\n\t}\n\n\ttriggerAttackRelease(duration: Time, time?: Time, velocity: NormalRange = 1): this {\n\t\ttime = this.toSeconds(time);\n\t\tduration = this.toSeconds(duration);\n\t\tthis.triggerAttack(time, velocity);\n\t\tthis.triggerRelease(time + duration);\n\t\treturn this;\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis.noise.dispose();\n\t\tthis.envelope.dispose();\n\t\treturn this;\n\t}\n}\n","/**\n * All of the classes or functions which are loaded into the AudioWorkletGlobalScope\n */\nconst workletContext: Set<string> = new Set();\n\n/**\n * Add a class to the AudioWorkletGlobalScope\n */\nexport function addToWorklet(classOrFunction: string) {\n\tworkletContext.add(classOrFunction);\n}\n\n/**\n * Register a processor in the AudioWorkletGlobalScope with the given name\n */\nexport function registerProcessor(name: string, classDesc: string) {\n\tconst processor = /* javascript */`registerProcessor(\"${name}\", ${classDesc})`;\n\tworkletContext.add(processor);\n}\n\n/**\n * Get all of the modules which have been registered to the AudioWorkletGlobalScope\n */\nexport function getWorkletGlobalScope(): string {\n\treturn Array.from(workletContext).join(\"\\n\");\n}\n","import { ToneAudioNode, ToneAudioNodeOptions } from \"../context/ToneAudioNode\";\nimport { noOp } from \"../util/Interface\";\nimport { getWorkletGlobalScope } from \"./WorkletGlobalScope\";\n\nexport type ToneAudioWorkletOptions = ToneAudioNodeOptions;\n\nexport abstract class ToneAudioWorklet<Options extends ToneAudioWorkletOptions> extends ToneAudioNode<Options> {\n\n\treadonly name: string = \"ToneAudioWorklet\";\n\n\t/**\n\t * The processing node\n\t */\n\tprotected _worklet!: AudioWorkletNode;\n\n\t/**\n\t * A dummy gain node to create a dummy audio param from\n\t */\n\tprivate _dummyGain: GainNode;\n\n\t/**\n\t * A dummy audio param to use when creating Params\n\t */\n\tprotected _dummyParam: AudioParam;\n\n\t/**\n\t * The constructor options for the node\n\t */\n\tprotected workletOptions: Partial<AudioWorkletNodeOptions> = {};\n\n\t/**\n\t * Get the name of the audio worklet\n\t */\n\tprotected abstract _audioWorkletName(): string;\n\n\t/**\n\t * Invoked when the module is loaded and the node is created\n\t */\n\tprotected abstract onReady(node: AudioWorkletNode): void;\n\n\t/**\n\t * Callback which is invoked when there is an error in the processing\n\t */\n\tonprocessorerror: (e: string) => void = noOp;\n\n\tconstructor(options: Options) {\n\t\tsuper(options);\n\n\t\tconst blobUrl = URL.createObjectURL(new Blob([getWorkletGlobalScope()], { type: \"text/javascript\" }));\n\t\tconst name = this._audioWorkletName();\n\n\t\tthis._dummyGain = this.context.createGain();\n\t\tthis._dummyParam = this._dummyGain.gain;\n\n\t\t// Register the processor\n\t\tthis.context.addAudioWorkletModule(blobUrl, name).then(() => {\n\t\t\t// create the worklet when it's read\n\t\t\tif (!this.disposed) {\n\t\t\t\tthis._worklet = this.context.createAudioWorkletNode(name, this.workletOptions);\n\t\t\t\tthis._worklet.onprocessorerror = this.onprocessorerror.bind(this);\n\t\t\t\tthis.onReady(this._worklet);\n\t\t\t}\n\t\t});\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._dummyGain.disconnect();\n\t\tif (this._worklet) {\n\t\t\tthis._worklet.port.postMessage(\"dispose\");\n\t\t\tthis._worklet.disconnect();\n\t\t}\n\t\treturn this;\n\t}\n\n}\n","import { addToWorklet } from \"./WorkletGlobalScope\";\n\nconst toneAudioWorkletProcessor = /* javascript */ `\n\t/**\n\t * The base AudioWorkletProcessor for use in Tone.js. Works with the [[ToneAudioWorklet]]. \n\t */\n\tclass ToneAudioWorkletProcessor extends AudioWorkletProcessor {\n\n\t\tconstructor(options) {\n\t\t\t\n\t\t\tsuper(options);\n\t\t\t/**\n\t\t\t * If the processor was disposed or not. Keep alive until it's disposed.\n\t\t\t */\n\t\t\tthis.disposed = false;\n\t\t   \t/** \n\t\t\t * The number of samples in the processing block\n\t\t\t */\n\t\t\tthis.blockSize = 128;\n\t\t\t/**\n\t\t\t * the sample rate\n\t\t\t */\n\t\t\tthis.sampleRate = sampleRate;\n\n\t\t\tthis.port.onmessage = (event) => {\n\t\t\t\t// when it receives a dispose \n\t\t\t\tif (event.data === \"dispose\") {\n\t\t\t\t\tthis.disposed = true;\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t}\n`;\n\naddToWorklet(toneAudioWorkletProcessor);\n","import \"./ToneAudioWorkletProcessor.worklet\";\nimport { addToWorklet } from \"./WorkletGlobalScope\";\n\nexport const singleIOProcess = /* javascript */ `\n\t/**\n\t * Abstract class for a single input/output processor. \n\t * has a 'generate' function which processes one sample at a time\n\t */\n\tclass SingleIOProcessor extends ToneAudioWorkletProcessor {\n\n\t\tconstructor(options) {\n\t\t\tsuper(Object.assign(options, {\n\t\t\t\tnumberOfInputs: 1,\n\t\t\t\tnumberOfOutputs: 1\n\t\t\t}));\n\t\t\t/**\n\t\t\t * Holds the name of the parameter and a single value of that\n\t\t\t * parameter at the current sample\n\t\t\t * @type { [name: string]: number }\n\t\t\t */\n\t\t\tthis.params = {}\n\t\t}\n\n\t\t/**\n\t\t * Generate an output sample from the input sample and parameters\n\t\t * @abstract\n\t\t * @param input number\n\t\t * @param channel number\n\t\t * @param parameters { [name: string]: number }\n\t\t * @returns number\n\t\t */\n\t\tgenerate(){}\n\n\t\t/**\n\t\t * Update the private params object with the \n\t\t * values of the parameters at the given index\n\t\t * @param parameters { [name: string]: Float32Array },\n\t\t * @param index number\n\t\t */\n\t\tupdateParams(parameters, index) {\n\t\t\tfor (const paramName in parameters) {\n\t\t\t\tconst param = parameters[paramName];\n\t\t\t\tif (param.length > 1) {\n\t\t\t\t\tthis.params[paramName] = parameters[paramName][index];\n\t\t\t\t} else {\n\t\t\t\t\tthis.params[paramName] = parameters[paramName][0];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Process a single frame of the audio\n\t\t * @param inputs Float32Array[][]\n\t\t * @param outputs Float32Array[][]\n\t\t */\n\t\tprocess(inputs, outputs, parameters) {\n\t\t\tconst input = inputs[0];\n\t\t\tconst output = outputs[0];\n\t\t\t// get the parameter values\n\t\t\tconst channelCount = Math.max(input && input.length || 0, output.length);\n\t\t\tfor (let sample = 0; sample < this.blockSize; sample++) {\n\t\t\t\tthis.updateParams(parameters, sample);\n\t\t\t\tfor (let channel = 0; channel < channelCount; channel++) {\n\t\t\t\t\tconst inputSample = input && input.length ? input[channel][sample] : 0;\n\t\t\t\t\toutput[channel][sample] = this.generate(inputSample, channel, this.params);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn !this.disposed;\n\t\t}\n\t};\n`;\n\naddToWorklet(singleIOProcess);\n","import { addToWorklet } from \"./WorkletGlobalScope\";\n\nconst delayLine = /* javascript */ `\n\t/**\n\t * A multichannel buffer for use within an AudioWorkletProcessor as a delay line\n\t */\n\tclass DelayLine {\n\t\t\n\t\tconstructor(size, channels) {\n\t\t\tthis.buffer = [];\n\t\t\tthis.writeHead = []\n\t\t\tthis.size = size;\n\n\t\t\t// create the empty channels\n\t\t\tfor (let i = 0; i < channels; i++) {\n\t\t\t\tthis.buffer[i] = new Float32Array(this.size);\n\t\t\t\tthis.writeHead[i] = 0;\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Push a value onto the end\n\t\t * @param channel number\n\t\t * @param value number\n\t\t */\n\t\tpush(channel, value) {\n\t\t\tthis.writeHead[channel] += 1;\n\t\t\tif (this.writeHead[channel] > this.size) {\n\t\t\t\tthis.writeHead[channel] = 0;\n\t\t\t}\n\t\t\tthis.buffer[channel][this.writeHead[channel]] = value;\n\t\t}\n\n\t\t/**\n\t\t * Get the recorded value of the channel given the delay\n\t\t * @param channel number\n\t\t * @param delay number delay samples\n\t\t */\n\t\tget(channel, delay) {\n\t\t\tlet readHead = this.writeHead[channel] - Math.floor(delay);\n\t\t\tif (readHead < 0) {\n\t\t\t\treadHead += this.size;\n\t\t\t}\n\t\t\treturn this.buffer[channel][readHead];\n\t\t}\n\t}\n`;\n\naddToWorklet(delayLine);\n","import \"../../core/worklet/SingleIOProcessor.worklet\";\nimport \"../../core/worklet/DelayLine.worklet\";\nimport { registerProcessor } from \"../../core/worklet/WorkletGlobalScope\";\n\nexport const workletName = \"feedback-comb-filter\";\n\nconst feedbackCombFilter = /* javascript */`\n\tclass FeedbackCombFilterWorklet extends SingleIOProcessor {\n\n\t\tconstructor(options) {\n\t\t\tsuper(options);\n\t\t\tthis.delayLine = new DelayLine(this.sampleRate, options.channelCount || 2);\n\t\t}\n\n\t\tstatic get parameterDescriptors() {\n\t\t\treturn [{\n\t\t\t\tname: \"delayTime\",\n\t\t\t\tdefaultValue: 0.1,\n\t\t\t\tminValue: 0,\n\t\t\t\tmaxValue: 1,\n\t\t\t\tautomationRate: \"k-rate\"\n\t\t\t}, {\n\t\t\t\tname: \"feedback\",\n\t\t\t\tdefaultValue: 0.5,\n\t\t\t\tminValue: 0,\n\t\t\t\tmaxValue: 0.9999,\n\t\t\t\tautomationRate: \"k-rate\"\n\t\t\t}];\n\t\t}\n\n\t\tgenerate(input, channel, parameters) {\n\t\t\tconst delayedSample = this.delayLine.get(channel, parameters.delayTime * this.sampleRate);\n\t\t\tthis.delayLine.push(channel, input + delayedSample * parameters.feedback);\n\t\t\treturn delayedSample;\n\t\t}\n\t}\n`;\n\nregisterProcessor(workletName, feedbackCombFilter);\n","import { Gain } from \"../../core/context/Gain\";\nimport { Param } from \"../../core/context/Param\";\nimport { connectSeries, ToneAudioNode, ToneAudioNodeOptions } from \"../../core/context/ToneAudioNode\";\nimport { NormalRange, Time } from \"../../core/type/Units\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { readOnly, RecursivePartial } from \"../../core/util/Interface\";\nimport { ToneAudioWorklet } from \"../../core/worklet/ToneAudioWorklet\";\nimport { workletName } from \"./FeedbackCombFilter.worklet\";\n\nexport interface FeedbackCombFilterOptions extends ToneAudioNodeOptions {\n\tdelayTime: Time;\n\tresonance: NormalRange;\n}\n\n/**\n * Comb filters are basic building blocks for physical modeling. Read more\n * about comb filters on [CCRMA's website](https://ccrma.stanford.edu/~jos/pasp/Feedback_Comb_Filters.html).\n * \n * This comb filter is implemented with the AudioWorkletNode which allows it to have feedback delays less than the \n * Web Audio processing block of 128 samples. There is a polyfill for browsers that don't yet support the \n * AudioWorkletNode, but it will add some latency and have slower performance than the AudioWorkletNode. \n * @category Component\n */\nexport class FeedbackCombFilter extends ToneAudioWorklet<FeedbackCombFilterOptions> {\n\n\treadonly name = \"FeedbackCombFilter\";\n\n\t/**\n\t * The amount of delay of the comb filter.\n\t */\n\treadonly delayTime: Param<\"time\">;\n\n\t/**\n\t * The amount of feedback of the delayed signal.\n\t */\n\treadonly resonance: Param<\"normalRange\">;\n\n\treadonly input: Gain;\n\treadonly output: Gain;\n\n\t/**\n\t * @param delayTime The delay time of the filter.\n\t * @param resonance The amount of feedback the filter has.\n\t */\n\tconstructor(delayTime?: Time, resonance?: NormalRange);\n\tconstructor(options?: RecursivePartial<FeedbackCombFilterOptions>);\n\tconstructor() {\n\t\tsuper(optionsFromArguments(FeedbackCombFilter.getDefaults(), arguments, [\"delayTime\", \"resonance\"]));\n\t\tconst options = optionsFromArguments(FeedbackCombFilter.getDefaults(), arguments, [\"delayTime\", \"resonance\"]);\n\n\t\tthis.input = new Gain({ context: this.context });\n\t\tthis.output = new Gain({ context: this.context });\n\n\t\tthis.delayTime = new Param<\"time\">({\n\t\t\tcontext: this.context,\n\t\t\tvalue: options.delayTime,\n\t\t\tunits: \"time\",\n\t\t\tminValue: 0,\n\t\t\tmaxValue: 1,\n\t\t\tparam: this._dummyParam,\n\t\t\tswappable: true,\n\t\t});\n\n\t\tthis.resonance = new Param<\"normalRange\">({\n\t\t\tcontext: this.context,\n\t\t\tvalue: options.resonance,\n\t\t\tunits: \"normalRange\",\n\t\t\tparam: this._dummyParam,\n\t\t\tswappable: true,\n\t\t});\n\n\t\treadOnly(this, [\"resonance\", \"delayTime\"]);\n\t}\n\n\tprotected _audioWorkletName(): string {\n\t\treturn workletName;\n\t}\n\n\t/**\n\t * The default parameters\n\t */\n\tstatic getDefaults(): FeedbackCombFilterOptions {\n\t\treturn Object.assign(ToneAudioNode.getDefaults(), {\n\t\t\tdelayTime: 0.1,\n\t\t\tresonance: 0.5,\n\t\t});\n\t}\n\n\tonReady(node: AudioWorkletNode) {\n\t\tconnectSeries(this.input, node, this.output);\n\t\tconst delayTime = node.parameters.get(\"delayTime\") as AudioParam;;\n\t\tthis.delayTime.setParam(delayTime);\n\t\tconst feedback = node.parameters.get(\"feedback\") as AudioParam;;\n\t\tthis.resonance.setParam(feedback);\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis.input.dispose();\n\t\tthis.output.dispose();\n\t\tthis.delayTime.dispose();\n\t\tthis.resonance.dispose();\n\t\treturn this;\n\t}\n}\n","import { ToneAudioNode, ToneAudioNodeOptions } from \"../../core/context/ToneAudioNode\";\nimport { Frequency } from \"../../core/type/Units\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { Gain } from \"../../core/context/Gain\";\n\nexport type OnePoleFilterType = \"highpass\" | \"lowpass\";\n\nexport interface OnePoleFilterOptions extends ToneAudioNodeOptions {\n\tfrequency: Frequency;\n\ttype: OnePoleFilterType;\n}\n\n/**\n * A one pole filter with 6db-per-octave rolloff. Either \"highpass\" or \"lowpass\". \n * Note that changing the type or frequency may result in a discontinuity which\n * can sound like a click or pop. \n * References: \n * * http://www.earlevel.com/main/2012/12/15/a-one-pole-filter/  \n * * http://www.dspguide.com/ch19/2.htm\n * * https://github.com/vitaliy-bobrov/js-rocks/blob/master/src/app/audio/effects/one-pole-filters.ts\n * @category Component\n */\nexport class OnePoleFilter extends ToneAudioNode<OnePoleFilterOptions> {\n\t\n\treadonly name: string = \"OnePoleFilter\";\n\n\t/**\n\t * Hold the current frequency\n\t */\n\tprivate _frequency: Frequency;\n\n\t/**\n\t * the current one pole type\n\t */\n\tprivate _type: OnePoleFilterType;\n\n\t/**\n\t * the current one pole filter\n\t */\n\tprivate _filter!: IIRFilterNode;\n\n\treadonly input: Gain;\n\treadonly output: Gain;\n\n\t/**\n\t * @param frequency The frequency\n\t * @param type The  filter type, either \"lowpass\" or \"highpass\"\n\t */\n\tconstructor(frequency?: Frequency, type?: OnePoleFilterType);\n\tconstructor(options?: Partial<OnePoleFilterOptions>)\n\tconstructor() {\n\n\t\tsuper(optionsFromArguments(OnePoleFilter.getDefaults(), arguments, [\"frequency\", \"type\"]));\n\t\tconst options = optionsFromArguments(OnePoleFilter.getDefaults(), arguments, [\"frequency\", \"type\"]);\n\n\t\tthis._frequency = options.frequency;\n\t\tthis._type = options.type;\n\t\tthis.input = new Gain({ context: this.context });\n\t\tthis.output = new Gain({ context: this.context });\n\t\tthis._createFilter();\n\t}\n\n\tstatic getDefaults(): OnePoleFilterOptions {\n\t\treturn Object.assign(ToneAudioNode.getDefaults(), {\n\t\t\tfrequency: 880,\n\t\t\ttype: \"lowpass\" as OnePoleFilterType\n\t\t});\n\t}\n\n\t/**\n\t * Create a filter and dispose the old one\n\t */\n\tprivate _createFilter() {\n\t\tconst oldFilter = this._filter;\n\t\tconst freq = this.toFrequency(this._frequency);\n\t\tconst t = 1 / (2 * Math.PI * freq);\n\t\tif (this._type === \"lowpass\") {\n\t\t\tconst a0 = 1 / (t * this.context.sampleRate);\n\t\t\tconst b1 = a0 - 1;\n\t\t\tthis._filter = this.context.createIIRFilter([a0, 0], [1, b1]);\n\t\t} else {\n\t\t\tconst b1 = 1 / (t * this.context.sampleRate) - 1;\n\t\t\tthis._filter = this.context.createIIRFilter([1, -1], [1, b1]);\n\t\t}\n\t\t\n\t\tthis.input.chain(this._filter, this.output);\n\t\tif (oldFilter) {\n\t\t\t// dispose it on the next block\n\t\t\tthis.context.setTimeout(() => {\n\t\t\t\tif (!this.disposed) {\n\t\t\t\t\tthis.input.disconnect(oldFilter);\n\t\t\t\t\toldFilter.disconnect();\n\t\t\t\t}\n\t\t\t}, this.blockTime);\n\t\t}\n\t}\n\n\t/**\n\t * The frequency value. \n\t */\n\tget frequency(): Frequency {\n\t\treturn this._frequency;\n\t}\n\tset frequency(fq) {\n\t\tthis._frequency = fq;\n\t\tthis._createFilter();\n\t}\n\t\n\t/**\n\t * The OnePole Filter type, either \"highpass\" or \"lowpass\"\n\t */\n\tget type(): OnePoleFilterType {\n\t\treturn this._type;\n\t}\n\tset type(t) {\n\t\tthis._type = t;\n\t\tthis._createFilter();\n\t}\n\n\t/**\n\t * Get the frequency response curve. This curve represents how the filter\n\t * responses to frequencies between 20hz-20khz.\n\t * @param  len The number of values to return\n\t * @return The frequency response curve between 20-20kHz\n\t */\n\tgetFrequencyResponse(len = 128): Float32Array {\n\t\tconst freqValues = new Float32Array(len);\n\t\tfor (let i = 0; i < len; i++) {\n\t\t\tconst norm = Math.pow(i / len, 2);\n\t\t\tconst freq = norm * (20000 - 20) + 20;\n\t\t\tfreqValues[i] = freq;\n\t\t}\n\t\tconst magValues = new Float32Array(len);\n\t\tconst phaseValues = new Float32Array(len);\n\t\tthis._filter.getFrequencyResponse(freqValues, magValues, phaseValues);\n\t\treturn magValues;\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis.input.dispose();\n\t\tthis.output.dispose();\n\t\tthis._filter.disconnect();\n\t\treturn this;\n\t}\n}\n","import { Param } from \"../../core/context/Param\";\nimport { InputNode, OutputNode, ToneAudioNode, ToneAudioNodeOptions } from \"../../core/context/ToneAudioNode\";\nimport { Frequency, NormalRange, Time } from \"../../core/type/Units\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { RecursivePartial } from \"../../core/util/Interface\";\nimport { FeedbackCombFilter } from \"./FeedbackCombFilter\";\nimport { OnePoleFilter } from \"./OnePoleFilter\";\n\ninterface LowpassCombFilterOptions extends ToneAudioNodeOptions {\n\tdelayTime: Time;\n\tresonance: NormalRange;\n\tdampening: Frequency;\n}\n\n/**\n * A lowpass feedback comb filter. It is similar to\n * [[FeedbackCombFilter]], but includes a lowpass filter.\n * @category Component\n */\nexport class LowpassCombFilter extends ToneAudioNode<LowpassCombFilterOptions> {\n\n\treadonly name = \"LowpassCombFilter\";\n\n\t/**\n\t * The delay node\n\t */\n\tprivate _combFilter: FeedbackCombFilter;\n\n\t/**\n\t * The lowpass filter\n\t */\n\tprivate _lowpass: OnePoleFilter;\n\n\t/**\n\t * The delayTime of the comb filter.\n\t */\n\treadonly delayTime: Param<\"time\">;\n\n\t/**\n\t * The amount of feedback of the delayed signal.\n\t */\n\treadonly resonance: Param<\"normalRange\">;\n\n\treadonly input: InputNode;\n\treadonly output: OutputNode;\n\n\t/**\n\t * @param delayTime The delay time of the comb filter\n\t * @param resonance The resonance (feedback) of the comb filter\n\t * @param dampening The cutoff of the lowpass filter dampens the signal as it is fedback.\n\t */\n\tconstructor(delayTime?: Time, resonance?: NormalRange, dampening?: Frequency);\n\tconstructor(options?: RecursivePartial<LowpassCombFilterOptions>);\n\tconstructor() {\n\t\tsuper(optionsFromArguments(LowpassCombFilter.getDefaults(), arguments, [\"delayTime\", \"resonance\", \"dampening\"]));\n\t\tconst options = optionsFromArguments(LowpassCombFilter.getDefaults(), arguments, [\"delayTime\", \"resonance\", \"dampening\"]);\n\n\t\tthis._combFilter = this.output = new FeedbackCombFilter({\n\t\t\tcontext: this.context,\n\t\t\tdelayTime: options.delayTime,\n\t\t\tresonance: options.resonance,\n\t\t});\n\t\tthis.delayTime = this._combFilter.delayTime;\n\t\tthis.resonance = this._combFilter.resonance;\n\n\t\tthis._lowpass = this.input = new OnePoleFilter({\n\t\t\tcontext: this.context,\n\t\t\tfrequency: options.dampening,\n\t\t\ttype: \"lowpass\",\n\t\t});\n\n\t\t// connections\n\t\tthis._lowpass.connect(this._combFilter);\n\t}\n\n\tstatic getDefaults(): LowpassCombFilterOptions {\n\t\treturn Object.assign(ToneAudioNode.getDefaults(), {\n\t\t\tdampening: 3000,\n\t\t\tdelayTime: 0.1,\n\t\t\tresonance: 0.5,\n\t\t});\n\t}\n\t\n\t/**\n\t * The dampening control of the feedback\n\t */\n\tget dampening(): Frequency {\n\t\treturn this._lowpass.frequency;\n\t}\n\tset dampening(fq) {\n\t\tthis._lowpass.frequency = fq;\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._combFilter.dispose();\n\t\tthis._lowpass.dispose();\n\t\treturn this;\n\t}\n}\n","import { Frequency, NormalRange, Time } from \"../core/type/Units\";\nimport { LowpassCombFilter } from \"../component/filter/LowpassCombFilter\";\nimport { deepMerge } from \"../core/util/Defaults\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { RecursivePartial } from \"../core/util/Interface\";\nimport { Noise } from \"../source/Noise\";\nimport { Instrument, InstrumentOptions } from \"./Instrument\";\n\nexport interface PluckSynthOptions extends InstrumentOptions {\n\tattackNoise: number;\n\tdampening: Frequency;\n\tresonance: NormalRange;\n\trelease: Time;\n}\n\n/**\n * Karplus-String string synthesis.\n * @example\n * const plucky = new Tone.PluckSynth().toDestination();\n * plucky.triggerAttack(\"C4\", \"+0.5\");\n * plucky.triggerAttack(\"C3\", \"+1\");\n * plucky.triggerAttack(\"C2\", \"+1.5\");\n * plucky.triggerAttack(\"C1\", \"+2\");\n * @category Instrument\n */\nexport class PluckSynth extends Instrument<PluckSynthOptions> {\n\n\treadonly name = \"PluckSynth\";\n\n\t/**\n\t * Noise burst at the beginning\n\t */\n\tprivate _noise: Noise;\n\tprivate _lfcf: LowpassCombFilter;\n\n\t/**\n\t * The amount of noise at the attack.\n\t * Nominal range of [0.1, 20]\n\t * @min 0.1\n\t * @max 20\n\t */\n\tattackNoise: number;\n\n\t/**\n\t * The amount of resonance of the pluck. Also correlates to the sustain duration.\n\t */\n\tresonance: NormalRange;\n\n\t/**\n\t * The release time which corresponds to a resonance ramp down to 0\n\t */\n\trelease: Time;\n\n\tconstructor(options?: RecursivePartial<PluckSynthOptions>)\n\tconstructor() {\n\n\t\tsuper(optionsFromArguments(PluckSynth.getDefaults(), arguments));\n\t\tconst options = optionsFromArguments(PluckSynth.getDefaults(), arguments);\n\n\t\tthis._noise = new Noise({\n\t\t\tcontext: this.context,\n\t\t\ttype: \"pink\"\n\t\t});\n\n\t\tthis.attackNoise = options.attackNoise;\n\n\t\tthis._lfcf = new LowpassCombFilter({\n\t\t\tcontext: this.context,\n\t\t\tdampening: options.dampening,\n\t\t\tresonance: options.resonance,\n\t\t});\n\n\t\tthis.resonance = options.resonance;\n\t\tthis.release = options.release;\n\n\t\tthis._noise.connect(this._lfcf);\n\t\tthis._lfcf.connect(this.output);\n\t}\n\n\tstatic getDefaults(): PluckSynthOptions {\n\t\treturn deepMerge(Instrument.getDefaults(), {\n\t\t\tattackNoise: 1,\n\t\t\tdampening: 4000,\n\t\t\tresonance: 0.7,\n\t\t\trelease: 1,\n\t\t});\n\t}\n\n\t/**\n\t * The dampening control. i.e. the lowpass filter frequency of the comb filter\n\t * @min 0\n\t * @max 7000\n\t */\n\tget dampening(): Frequency {\n\t\treturn this._lfcf.dampening;\n\t}\n\tset dampening(fq) {\n\t\tthis._lfcf.dampening = fq;\n\t}\n\n\ttriggerAttack(note: Frequency, time?: Time): this {\n\t\tconst freq = this.toFrequency(note);\n\t\ttime = this.toSeconds(time);\n\t\tconst delayAmount = 1 / freq;\n\t\tthis._lfcf.delayTime.setValueAtTime(delayAmount, time);\n\t\tthis._noise.start(time);\n\t\tthis._noise.stop(time + delayAmount * this.attackNoise);\n\t\tthis._lfcf.resonance.cancelScheduledValues(time);\n\t\tthis._lfcf.resonance.setValueAtTime(this.resonance, time);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Ramp down the [[resonance]] to 0 over the duration of the release time.\n\t */\n\ttriggerRelease(time?: Time): this {\n\t\tthis._lfcf.resonance.linearRampTo(0, this.release, time);\n\t\treturn this;\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._noise.dispose();\n\t\tthis._lfcf.dispose();\n\t\treturn this;\n\t}\n}\n","import { MidiClass } from \"../core/type/Midi\";\nimport { Frequency, MidiNote, NormalRange, Seconds, Time } from \"../core/type/Units\";\nimport { deepMerge, omitFromObject, optionsFromArguments } from \"../core/util/Defaults\";\nimport { RecursivePartial } from \"../core/util/Interface\";\nimport { isArray, isNumber } from \"../core/util/TypeCheck\";\nimport { Instrument, InstrumentOptions } from \"./Instrument\";\nimport { MembraneSynth, MembraneSynthOptions } from \"./MembraneSynth\";\nimport { FMSynth, FMSynthOptions } from \"./FMSynth\";\nimport { AMSynth, AMSynthOptions } from \"./AMSynth\";\nimport { MonoSynth, MonoSynthOptions } from \"./MonoSynth\";\nimport { MetalSynth, MetalSynthOptions } from \"./MetalSynth\";\nimport { Monophonic } from \"./Monophonic\";\nimport { Synth, SynthOptions } from \"./Synth\";\nimport { assert, warn } from \"../core/util/Debug\";\n\ntype VoiceConstructor<V> = {\n\tgetDefaults: () => VoiceOptions<V>;\n} & (new (...args: any[]) => V);\n\ntype OmitMonophonicOptions<T> = Omit<T, \"context\" | \"onsilence\">;\n\ntype VoiceOptions<T> =\n\tT extends MembraneSynth ? MembraneSynthOptions :\n\t\tT extends MetalSynth ? MetalSynthOptions :\n\t\t\tT extends FMSynth ? FMSynthOptions :\n\t\t\t\tT extends MonoSynth ? MonoSynthOptions :\n\t\t\t\t\tT extends AMSynth ? AMSynthOptions :\n\t\t\t\t\t\tT extends Synth ? SynthOptions :\n\t\t\t\t\t\t\tnever;\n\n/**\n * The settable synth options. excludes monophonic options.\n */\ntype PartialVoiceOptions<T> = RecursivePartial<OmitMonophonicOptions<VoiceOptions<T>>>;\n\nexport interface PolySynthOptions<Voice> extends InstrumentOptions {\n\tmaxPolyphony: number;\n\tvoice: VoiceConstructor<Voice>;\n\toptions: PartialVoiceOptions<Voice>;\n}\n\n/**\n * PolySynth handles voice creation and allocation for any\n * instruments passed in as the second paramter. PolySynth is\n * not a synthesizer by itself, it merely manages voices of\n * one of the other types of synths, allowing any of the\n * monophonic synthesizers to be polyphonic.\n *\n * @example\n * const synth = new Tone.PolySynth().toDestination();\n * // set the attributes across all the voices using 'set'\n * synth.set({ detune: -1200 });\n * // play a chord\n * synth.triggerAttackRelease([\"C4\", \"E4\", \"A4\"], 1);\n * @category Instrument\n */\nexport class PolySynth<Voice extends Monophonic<any> = Synth> extends Instrument<VoiceOptions<Voice>> {\n\n\treadonly name: string = \"PolySynth\";\n\n\t/**\n\t * The voices which are not currently in use\n\t */\n\tprivate _availableVoices: Voice[] = [];\n\n\t/**\n\t * The currently active voices\n\t */\n\tprivate _activeVoices: Array<{ midi: MidiNote; voice: Voice; released: boolean }> = [];\n\n\t/**\n\t * All of the allocated voices for this synth.\n\t */\n\tprivate _voices: Voice[] = [];\n\n\t/**\n\t * The options that are set on the synth.\n\t */\n\tprivate options: VoiceOptions<Voice>;\n\n\t/**\n\t * The polyphony limit.\n\t */\n\tmaxPolyphony: number;\n\n\t/**\n\t * The voice constructor\n\t */\n\tprivate readonly voice: VoiceConstructor<Voice>;\n\n\t/**\n\t * A voice used for holding the get/set values\n\t */\n\tprivate _dummyVoice: Voice;\n\n\t/**\n\t * The GC timeout. Held so that it could be cancelled when the node is disposed.\n\t */\n\tprivate _gcTimeout = -1;\n\n\t/**\n\t * A moving average of the number of active voices\n\t */\n\tprivate _averageActiveVoices = 0;\n\n\t/**\n\t * @param voice The constructor of the voices\n\t * @param options\tThe options object to set the synth voice\n\t */\n\tconstructor(\n\t\tvoice?: VoiceConstructor<Voice>,\n\t\toptions?: PartialVoiceOptions<Voice>,\n\t);\n\tconstructor(options?: Partial<PolySynthOptions<Voice>>);\n\tconstructor() {\n\n\t\tsuper(optionsFromArguments(PolySynth.getDefaults(), arguments, [\"voice\", \"options\"]));\n\t\tconst options = optionsFromArguments(PolySynth.getDefaults(), arguments, [\"voice\", \"options\"]);\n\n\t\t// check against the old API (pre 14.3.0)\n\t\tassert(!isNumber(options.voice), \"DEPRECATED: The polyphony count is no longer the first argument.\");\n\n\t\tconst defaults = options.voice.getDefaults();\n\t\tthis.options = Object.assign(defaults, options.options) as VoiceOptions<Voice>;\n\t\tthis.voice = options.voice as unknown as VoiceConstructor<Voice>;\n\t\tthis.maxPolyphony = options.maxPolyphony;\n\n\t\t// create the first voice\n\t\tthis._dummyVoice = this._getNextAvailableVoice() as Voice;\n\t\t// remove it from the voices list\n\t\tconst index = this._voices.indexOf(this._dummyVoice);\n\t\tthis._voices.splice(index, 1);\n\t\t// kick off the GC interval\n\t\tthis._gcTimeout = this.context.setInterval(this._collectGarbage.bind(this), 1);\n\t}\n\n\tstatic getDefaults(): PolySynthOptions<Synth> {\n\t\treturn Object.assign(Instrument.getDefaults(), {\n\t\t\tmaxPolyphony: 32,\n\t\t\toptions: {},\n\t\t\tvoice: Synth,\n\t\t});\n\t}\n\n\t/**\n\t * The number of active voices.\n\t */\n\tget activeVoices(): number {\n\t\treturn this._activeVoices.length;\n\t}\n\n\t/**\n\t * Invoked when the source is done making sound, so that it can be\n\t * readded to the pool of available voices\n\t */\n\tprivate _makeVoiceAvailable(voice: Voice): void {\n\t\tthis._availableVoices.push(voice);\n\t\t// remove the midi note from 'active voices'\n\t\tconst activeVoiceIndex = this._activeVoices.findIndex((e) => e.voice === voice);\n\t\tthis._activeVoices.splice(activeVoiceIndex, 1);\n\t}\n\n\t/**\n\t * Get an available voice from the pool of available voices.\n\t * If one is not available and the maxPolyphony limit is reached,\n\t * steal a voice, otherwise return null.\n\t */\n\tprivate _getNextAvailableVoice(): Voice | undefined {\n\t\t// if there are available voices, return the first one\n\t\tif (this._availableVoices.length) {\n\t\t\treturn this._availableVoices.shift();\n\t\t} else if (this._voices.length < this.maxPolyphony) {\n\t\t\t// otherwise if there is still more maxPolyphony, make a new voice\n\t\t\tconst voice = new this.voice(Object.assign(this.options, {\n\t\t\t\tcontext: this.context,\n\t\t\t\tonsilence: this._makeVoiceAvailable.bind(this),\n\t\t\t}));\n\t\t\tvoice.connect(this.output);\n\t\t\tthis._voices.push(voice);\n\t\t\treturn voice;\n\t\t} else {\n\t\t\twarn(\"Max polyphony exceeded. Note dropped.\");\n\t\t}\n\t}\n\n\t/**\n\t * Occasionally check if there are any allocated voices which can be cleaned up.\n\t */\n\tprivate _collectGarbage(): void {\n\t\tthis._averageActiveVoices = Math.max(this._averageActiveVoices * 0.95, this.activeVoices);\n\t\tif (this._availableVoices.length && this._voices.length > Math.ceil(this._averageActiveVoices + 1)) {\n\t\t\t// take off an available note\n\t\t\tconst firstAvail = this._availableVoices.shift() as Voice;\n\t\t\tconst index = this._voices.indexOf(firstAvail);\n\t\t\tthis._voices.splice(index, 1);\n\t\t\tif (!this.context.isOffline) {\n\t\t\t\tfirstAvail.dispose();\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Internal method which triggers the attack\n\t */\n\tprivate _triggerAttack(notes: Frequency[], time: Seconds, velocity?: NormalRange): void {\n\t\tnotes.forEach(note => {\n\t\t\tconst midiNote = new MidiClass(this.context, note).toMidi();\n\t\t\tconst voice = this._getNextAvailableVoice();\n\t\t\tif (voice) {\n\t\t\t\tvoice.triggerAttack(note, time, velocity);\n\t\t\t\tthis._activeVoices.push({\n\t\t\t\t\tmidi: midiNote, voice, released: false,\n\t\t\t\t});\n\t\t\t\tthis.log(\"triggerAttack\", note, time);\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Internal method which triggers the release\n\t */\n\tprivate _triggerRelease(notes: Frequency[], time: Seconds): void {\n\t\tnotes.forEach(note => {\n\t\t\tconst midiNote = new MidiClass(this.context, note).toMidi();\n\t\t\tconst event = this._activeVoices.find(({ midi, released }) => midi === midiNote && !released);\n\t\t\tif (event) {\n\t\t\t\t// trigger release on that note\n\t\t\t\tevent.voice.triggerRelease(time);\n\t\t\t\t// mark it as released\n\t\t\t\tevent.released = true;\n\t\t\t\tthis.log(\"triggerRelease\", note, time);\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Schedule the attack/release events. If the time is in the future, then it should set a timeout\n\t * to wait for just-in-time scheduling\n\t */\n\tprivate _scheduleEvent(type: \"attack\" | \"release\", notes: Frequency[], time: Seconds, velocity?: NormalRange): void {\n\t\tassert(!this.disposed, \"Synth was already disposed\");\n\t\t// if the notes are greater than this amount of time in the future, they should be scheduled with setTimeout\n\t\tif (time <= this.now()) {\n\t\t\t// do it immediately\n\t\t\tif (type === \"attack\") {\n\t\t\t\tthis._triggerAttack(notes, time, velocity);\n\t\t\t} else {\n\t\t\t\tthis._triggerRelease(notes, time);\n\t\t\t}\n\t\t} else {\n\t\t\t// schedule it to start in the future\n\t\t\tthis.context.setTimeout(() => {\n\t\t\t\tif (!this.disposed) {\n\t\t\t\t\tthis._scheduleEvent(type, notes, time, velocity);\n\t\t\t\t}\n\t\t\t}, time - this.now());\n\t\t}\n\t}\n\n\t/**\n\t * Trigger the attack portion of the note\n\t * @param  notes The notes to play. Accepts a single Frequency or an array of frequencies.\n\t * @param  time  The start time of the note.\n\t * @param velocity The velocity of the note.\n\t * @example\n\t * const synth = new Tone.PolySynth(Tone.FMSynth).toDestination();\n\t * // trigger a chord immediately with a velocity of 0.2\n\t * synth.triggerAttack([\"Ab3\", \"C4\", \"F5\"], Tone.now(), 0.2);\n\t */\n\ttriggerAttack(notes: Frequency | Frequency[], time?: Time, velocity?: NormalRange): this {\n\n\t\tif (!Array.isArray(notes)) {\n\t\t\tnotes = [notes];\n\t\t}\n\t\tconst computedTime = this.toSeconds(time);\n\t\tthis._scheduleEvent(\"attack\", notes, computedTime, velocity);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Trigger the release of the note. Unlike monophonic instruments,\n\t * a note (or array of notes) needs to be passed in as the first argument.\n\t * @param  notes The notes to play. Accepts a single Frequency or an array of frequencies.\n\t * @param  time  When the release will be triggered.\n\t * @example\n\t * @example\n\t * const poly = new Tone.PolySynth(Tone.AMSynth).toDestination();\n\t * poly.triggerAttack([\"Ab3\", \"C4\", \"F5\"]);\n\t * // trigger the release of the given notes.\n\t * poly.triggerRelease([\"Ab3\", \"C4\"], \"+1\");\n\t * poly.triggerRelease(\"F5\", \"+3\");\n\t */\n\ttriggerRelease(notes: Frequency | Frequency[], time?: Time): this {\n\t\tif (!Array.isArray(notes)) {\n\t\t\tnotes = [notes];\n\t\t}\n\t\tconst computedTime = this.toSeconds(time);\n\t\tthis._scheduleEvent(\"release\", notes, computedTime);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Trigger the attack and release after the specified duration\n\t * @param  notes The notes to play. Accepts a single  Frequency or an array of frequencies.\n\t * @param  duration the duration of the note\n\t * @param  time  if no time is given, defaults to now\n\t * @param  velocity the velocity of the attack (0-1)\n\t * @example\n\t * const poly = new Tone.PolySynth(Tone.AMSynth).toDestination();\n\t * // can pass in an array of durations as well\n\t * poly.triggerAttackRelease([\"Eb3\", \"G4\", \"Bb4\", \"D5\"], [4, 3, 2, 1]);\n\t */\n\ttriggerAttackRelease(\n\t\tnotes: Frequency | Frequency[],\n\t\tduration: Time | Time[],\n\t\ttime?: Time,\n\t\tvelocity?: NormalRange,\n\t): this {\n\t\tconst computedTime = this.toSeconds(time);\n\t\tthis.triggerAttack(notes, computedTime, velocity);\n\t\tif (isArray(duration)) {\n\t\t\tassert(isArray(notes), \"If the duration is an array, the notes must also be an array\");\n\t\t\tnotes = notes as Frequency[];\n\t\t\tfor (let i = 0; i < notes.length; i++) {\n\t\t\t\tconst d = duration[Math.min(i, duration.length - 1)];\n\t\t\t\tconst durationSeconds = this.toSeconds(d);\n\t\t\t\tassert(durationSeconds > 0, \"The duration must be greater than 0\");\n\t\t\t\tthis.triggerRelease(notes[i], computedTime + durationSeconds);\n\t\t\t}\n\t\t} else {\n\t\t\tconst durationSeconds = this.toSeconds(duration);\n\t\t\tassert(durationSeconds > 0, \"The duration must be greater than 0\");\n\t\t\tthis.triggerRelease(notes, computedTime + durationSeconds);\n\t\t}\n\t\treturn this;\n\t}\n\n\tsync(): this {\n\t\tif (this._syncState()) {\n\t\t\tthis._syncMethod(\"triggerAttack\", 1);\n\t\t\tthis._syncMethod(\"triggerRelease\", 1);\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Set a member/attribute of the voices\n\t * @example\n\t * const poly = new Tone.PolySynth().toDestination();\n\t * // set all of the voices using an options object for the synth type\n\t * poly.set({\n\t * \tenvelope: {\n\t * \t\tattack: 0.25\n\t * \t}\n\t * });\n\t * poly.triggerAttackRelease(\"Bb3\", 0.2);\n\t */\n\tset(options: RecursivePartial<VoiceOptions<Voice>>): this {\n\t\t// remove options which are controlled by the PolySynth\n\t\tconst sanitizedOptions = omitFromObject(options, [\"onsilence\", \"context\"]);\n\t\t// store all of the options\n\t\tthis.options = deepMerge(this.options, sanitizedOptions);\n\t\tthis._voices.forEach(voice => voice.set(sanitizedOptions));\n\t\tthis._dummyVoice.set(sanitizedOptions);\n\t\treturn this;\n\t}\n\n\tget(): VoiceOptions<Voice> {\n\t\treturn this._dummyVoice.get();\n\t}\n\n\t/**\n\t * Trigger the release portion of all the currently active voices immediately.\n\t * Useful for silencing the synth.\n\t */\n\treleaseAll(time?: Time): this {\n\t\tconst computedTime = this.toSeconds(time);\n\t\tthis._activeVoices.forEach(({ voice }) => {\n\t\t\tvoice.triggerRelease(computedTime);\n\t\t});\n\t\treturn this;\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._dummyVoice.dispose();\n\t\tthis._voices.forEach(v => v.dispose());\n\t\tthis._activeVoices = [];\n\t\tthis._availableVoices = [];\n\t\tthis.context.clearInterval(this._gcTimeout);\n\t\treturn this;\n\t}\n}\n","import { ToneAudioBuffer } from \"../core/context/ToneAudioBuffer\";\nimport { ToneAudioBuffers } from \"../core/context/ToneAudioBuffers\";\nimport { ftomf, intervalToFrequencyRatio } from \"../core/type/Conversions\";\nimport { FrequencyClass } from \"../core/type/Frequency\";\nimport { Frequency, Interval, MidiNote, NormalRange, Note, Time } from \"../core/type/Units\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { noOp } from \"../core/util/Interface\";\nimport { isArray, isNote, isNumber } from \"../core/util/TypeCheck\";\nimport { Instrument, InstrumentOptions } from \"../instrument/Instrument\";\nimport { ToneBufferSource, ToneBufferSourceCurve } from \"../source/buffer/ToneBufferSource\";\nimport { timeRange } from \"../core/util/Decorator\";\nimport { assert } from \"../core/util/Debug\";\n\ninterface SamplesMap {\n\t[note: string]: ToneAudioBuffer | AudioBuffer | string;\n\t[midi: number]: ToneAudioBuffer | AudioBuffer | string;\n}\n\nexport interface SamplerOptions extends InstrumentOptions {\n\tattack: Time;\n\trelease: Time;\n\tonload: () => void;\n\tonerror: (error: Error) => void;\n\tbaseUrl: string;\n\tcurve: ToneBufferSourceCurve;\n\turls: SamplesMap;\n}\n\n/**\n * Pass in an object which maps the note's pitch or midi value to the url,\n * then you can trigger the attack and release of that note like other instruments.\n * By automatically repitching the samples, it is possible to play pitches which\n * were not explicitly included which can save loading time.\n *\n * For sample or buffer playback where repitching is not necessary,\n * use [[Player]].\n * @example\n * const sampler = new Tone.Sampler({\n * \turls: {\n * \t\tA1: \"A1.mp3\",\n * \t\tA2: \"A2.mp3\",\n * \t},\n * \tbaseUrl: \"https://tonejs.github.io/audio/casio/\",\n * \tonload: () => {\n * \t\tsampler.triggerAttackRelease([\"C1\", \"E1\", \"G1\", \"B1\"], 0.5);\n * \t}\n * }).toDestination();\n * @category Instrument\n */\nexport class Sampler extends Instrument<SamplerOptions> {\n\n\treadonly name: string = \"Sampler\";\n\n\t/**\n\t * The stored and loaded buffers\n\t */\n\tprivate _buffers: ToneAudioBuffers;\n\n\t/**\n\t * The object of all currently playing BufferSources\n\t */\n\tprivate _activeSources: Map<MidiNote, ToneBufferSource[]> = new Map();\n\n\t/**\n\t * The envelope applied to the beginning of the sample.\n\t * @min 0\n\t * @max 1\n\t */\n\t@timeRange(0)\n\tattack: Time;\n\n\t/**\n\t * The envelope applied to the end of the envelope.\n\t * @min 0\n\t * @max 1\n\t */\n\t@timeRange(0)\n\trelease: Time;\n\n\t/**\n\t * The shape of the attack/release curve.\n\t * Either \"linear\" or \"exponential\"\n\t */\n\tcurve: ToneBufferSourceCurve;\n\n\t/**\n\t * @param samples An object of samples mapping either Midi Note Numbers or\n\t * \t\t\tScientific Pitch Notation to the url of that sample.\n\t * @param onload The callback to invoke when all of the samples are loaded.\n\t * @param baseUrl The root URL of all of the samples, which is prepended to all the URLs.\n\t */\n\tconstructor(samples?: SamplesMap, onload?: () => void, baseUrl?: string);\n\t/**\n\t * @param samples An object of samples mapping either Midi Note Numbers or\n\t * \t\t\tScientific Pitch Notation to the url of that sample.\n\t * @param options The remaining options associated with the sampler\n\t */\n\tconstructor(samples?: SamplesMap, options?: Partial<Omit<SamplerOptions, \"urls\">>);\n\tconstructor(options?: Partial<SamplerOptions>);\n\tconstructor() {\n\n\t\tsuper(optionsFromArguments(Sampler.getDefaults(), arguments, [\"urls\", \"onload\", \"baseUrl\"], \"urls\"));\n\t\tconst options = optionsFromArguments(Sampler.getDefaults(), arguments, [\"urls\", \"onload\", \"baseUrl\"], \"urls\");\n\n\t\tconst urlMap = {};\n\t\tObject.keys(options.urls).forEach((note) => {\n\t\t\tconst noteNumber = parseInt(note, 10);\n\t\t\tassert(isNote(note)\n\t\t\t\t|| (isNumber(noteNumber) && isFinite(noteNumber)), `url key is neither a note or midi pitch: ${note}`);\n\t\t\tif (isNote(note)) {\n\t\t\t\t// convert the note name to MIDI\n\t\t\t\tconst mid = new FrequencyClass(this.context, note).toMidi();\n\t\t\t\turlMap[mid] = options.urls[note];\n\t\t\t} else if (isNumber(noteNumber) && isFinite(noteNumber)) {\n\t\t\t\t// otherwise if it's numbers assume it's midi\n\t\t\t\turlMap[noteNumber] = options.urls[noteNumber];\n\t\t\t}\n\t\t});\n\n\t\tthis._buffers = new ToneAudioBuffers({\n\t\t\turls: urlMap,\n\t\t\tonload: options.onload,\n\t\t\tbaseUrl: options.baseUrl,\n\t\t\tonerror: options.onerror,\n\t\t});\n\t\tthis.attack = options.attack;\n\t\tthis.release = options.release;\n\t\tthis.curve = options.curve;\n\n\t\t// invoke the callback if it's already loaded\n\t\tif (this._buffers.loaded) {\n\t\t\t// invoke onload deferred\n\t\t\tPromise.resolve().then(options.onload);\n\t\t}\n\t}\n\n\tstatic getDefaults(): SamplerOptions {\n\t\treturn Object.assign(Instrument.getDefaults(), {\n\t\t\tattack: 0,\n\t\t\tbaseUrl: \"\",\n\t\t\tcurve: \"exponential\" as \"exponential\",\n\t\t\tonload: noOp,\n\t\t\tonerror: noOp,\n\t\t\trelease: 0.1,\n\t\t\turls: {},\n\t\t});\n\t}\n\n\t/**\n\t * Returns the difference in steps between the given midi note at the closets sample.\n\t */\n\tprivate _findClosest(midi: MidiNote): Interval {\n\t\t// searches within 8 octaves of the given midi note\n\t\tconst MAX_INTERVAL = 96;\n\t\tlet interval = 0;\n\t\twhile (interval < MAX_INTERVAL) {\n\t\t\t// check above and below\n\t\t\tif (this._buffers.has(midi + interval)) {\n\t\t\t\treturn -interval;\n\t\t\t} else if (this._buffers.has(midi - interval)) {\n\t\t\t\treturn interval;\n\t\t\t}\n\t\t\tinterval++;\n\t\t}\n\t\tthrow new Error(`No available buffers for note: ${midi}`);\n\t}\n\n\t/**\n\t * @param  notes\tThe note to play, or an array of notes.\n\t * @param  time     When to play the note\n\t * @param  velocity The velocity to play the sample back.\n\t */\n\ttriggerAttack(notes: Frequency | Frequency[], time?: Time, velocity: NormalRange = 1): this {\n\t\tthis.log(\"triggerAttack\", notes, time, velocity);\n\t\tif (!Array.isArray(notes)) {\n\t\t\tnotes = [notes];\n\t\t}\n\t\tnotes.forEach(note => {\n\t\t\tconst midiFloat = ftomf(new FrequencyClass(this.context, note).toFrequency());\n\t\t\tconst midi = Math.round(midiFloat) as MidiNote;\n\t\t\tconst remainder = midiFloat - midi;\n\t\t\t// find the closest note pitch\n\t\t\tconst difference = this._findClosest(midi);\n\t\t\tconst closestNote = midi - difference;\n\t\t\tconst buffer = this._buffers.get(closestNote);\n\t\t\tconst playbackRate = intervalToFrequencyRatio(difference + remainder);\n\t\t\t// play that note\n\t\t\tconst source = new ToneBufferSource({\n\t\t\t\turl: buffer,\n\t\t\t\tcontext: this.context,\n\t\t\t\tcurve: this.curve,\n\t\t\t\tfadeIn: this.attack,\n\t\t\t\tfadeOut: this.release,\n\t\t\t\tplaybackRate,\n\t\t\t}).connect(this.output);\n\t\t\tsource.start(time, 0, buffer.duration / playbackRate, velocity);\n\t\t\t// add it to the active sources\n\t\t\tif (!isArray(this._activeSources.get(midi))) {\n\t\t\t\tthis._activeSources.set(midi, []);\n\t\t\t}\n\t\t\t(this._activeSources.get(midi) as ToneBufferSource[]).push(source);\n\n\t\t\t// remove it when it's done\n\t\t\tsource.onended = () => {\n\t\t\t\tif (this._activeSources && this._activeSources.has(midi)) {\n\t\t\t\t\tconst sources = this._activeSources.get(midi) as ToneBufferSource[];\n\t\t\t\t\tconst index = sources.indexOf(source);\n\t\t\t\t\tif (index !== -1) {\n\t\t\t\t\t\tsources.splice(index, 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t});\n\t\treturn this;\n\t}\n\n\t/**\n\t * @param  notes\tThe note to release, or an array of notes.\n\t * @param  time     \tWhen to release the note.\n\t */\n\ttriggerRelease(notes: Frequency | Frequency[], time?: Time): this {\n\t\tthis.log(\"triggerRelease\", notes, time);\n\t\tif (!Array.isArray(notes)) {\n\t\t\tnotes = [notes];\n\t\t}\n\t\tnotes.forEach(note => {\n\t\t\tconst midi = new FrequencyClass(this.context, note).toMidi();\n\t\t\t// find the note\n\t\t\tif (this._activeSources.has(midi) && (this._activeSources.get(midi) as ToneBufferSource[]).length) {\n\t\t\t\tconst sources = this._activeSources.get(midi) as ToneBufferSource[];\n\t\t\t\ttime = this.toSeconds(time);\n\t\t\t\tsources.forEach(source => {\n\t\t\t\t\tsource.stop(time);\n\t\t\t\t});\n\t\t\t\tthis._activeSources.set(midi, []);\n\t\t\t}\n\t\t});\n\t\treturn this;\n\t}\n\n\t/**\n\t * Release all currently active notes.\n\t * @param  time     \tWhen to release the notes.\n\t */\n\treleaseAll(time?: Time): this {\n\t\tconst computedTime = this.toSeconds(time);\n\t\tthis._activeSources.forEach(sources => {\n\t\t\twhile (sources.length) {\n\t\t\t\tconst source = sources.shift() as ToneBufferSource;\n\t\t\t\tsource.stop(computedTime);\n\t\t\t}\n\t\t});\n\t\treturn this;\n\t}\n\n\tsync(): this {\n\t\tif (this._syncState()) {\n\t\t\tthis._syncMethod(\"triggerAttack\", 1);\n\t\t\tthis._syncMethod(\"triggerRelease\", 1);\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Invoke the attack phase, then after the duration, invoke the release.\n\t * @param  notes\tThe note to play and release, or an array of notes.\n\t * @param  duration The time the note should be held\n\t * @param  time     When to start the attack\n\t * @param  velocity The velocity of the attack\n\t */\n\ttriggerAttackRelease(\n\t\tnotes: Frequency[] | Frequency,\n\t\tduration: Time | Time[],\n\t\ttime?: Time,\n\t\tvelocity: NormalRange = 1,\n\t): this {\n\t\tconst computedTime = this.toSeconds(time);\n\t\tthis.triggerAttack(notes, computedTime, velocity);\n\t\tif (isArray(duration)) {\n\t\t\tassert(isArray(notes), \"notes must be an array when duration is array\");\n\t\t\t(notes as Frequency[]).forEach((note, index) => {\n\t\t\t\tconst d = duration[Math.min(index, duration.length - 1)];\n\t\t\t\tthis.triggerRelease(note, computedTime + this.toSeconds(d));\n\t\t\t});\n\t\t} else {\n\t\t\tthis.triggerRelease(notes, computedTime + this.toSeconds(duration));\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Add a note to the sampler.\n\t * @param  note      The buffer's pitch.\n\t * @param  url  Either the url of the buffer, or a buffer which will be added with the given name.\n\t * @param  callback  The callback to invoke when the url is loaded.\n\t */\n\tadd(note: Note | MidiNote, url: string | ToneAudioBuffer | AudioBuffer, callback?: () => void): this {\n\t\tassert(isNote(note) || isFinite(note), `note must be a pitch or midi: ${note}`);\n\t\tif (isNote(note)) {\n\t\t\t// convert the note name to MIDI\n\t\t\tconst mid = new FrequencyClass(this.context, note).toMidi();\n\t\t\tthis._buffers.add(mid, url, callback);\n\t\t} else {\n\t\t\t// otherwise if it's numbers assume it's midi\n\t\t\tthis._buffers.add(note, url, callback);\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * If the buffers are loaded or not\n\t */\n\tget loaded(): boolean {\n\t\treturn this._buffers.loaded;\n\t}\n\n\t/**\n\t * Clean up\n\t */\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._buffers.dispose();\n\t\tthis._activeSources.forEach(sources => {\n\t\t\tsources.forEach(source => source.dispose());\n\t\t});\n\t\tthis._activeSources.clear();\n\t\treturn this;\n\t}\n}\n","export * from \"./AMSynth\";\nexport * from \"./DuoSynth\";\nexport * from \"./FMSynth\";\nexport * from \"./MetalSynth\";\nexport * from \"./MembraneSynth\";\nexport * from \"./MonoSynth\";\nexport * from \"./NoiseSynth\";\nexport * from \"./PluckSynth\";\nexport * from \"./PolySynth\";\nexport * from \"./Sampler\";\nexport * from \"./Synth\";\n","import \"../core/clock/Transport\";\nimport { ToneWithContext, ToneWithContextOptions } from \"../core/context/ToneWithContext\";\nimport { TicksClass } from \"../core/type/Ticks\";\nimport { TransportTimeClass } from \"../core/type/TransportTime\";\nimport { NormalRange, Positive, Seconds, Ticks, Time, TransportTime } from \"../core/type/Units\";\nimport { defaultArg, optionsFromArguments } from \"../core/util/Defaults\";\nimport { noOp } from \"../core/util/Interface\";\nimport { BasicPlaybackState, StateTimeline } from \"../core/util/StateTimeline\";\nimport { isBoolean, isNumber } from \"../core/util/TypeCheck\";\n\nexport type ToneEventCallback<T> = (time: Seconds, value: T) => void;\n\nexport interface ToneEventOptions<T> extends ToneWithContextOptions {\n\tcallback: ToneEventCallback<T>;\n\tloop: boolean | number;\n\tloopEnd: Time;\n\tloopStart: Time;\n\tplaybackRate: Positive;\n\tvalue?: T;\n\tprobability: NormalRange;\n\tmute: boolean;\n\thumanize: boolean | Time;\n}\n\n/**\n * ToneEvent abstracts away this.context.transport.schedule and provides a schedulable\n * callback for a single or repeatable events along the timeline.\n *\n * @example\n * const synth = new Tone.PolySynth().toDestination();\n * const chordEvent = new Tone.ToneEvent(((time, chord) => {\n * \t// the chord as well as the exact time of the event\n * \t// are passed in as arguments to the callback function\n * \tsynth.triggerAttackRelease(chord, 0.5, time);\n * }), [\"D4\", \"E4\", \"F4\"]);\n * // start the chord at the beginning of the transport timeline\n * chordEvent.start();\n * // loop it every measure for 8 measures\n * chordEvent.loop = 8;\n * chordEvent.loopEnd = \"1m\";\n * @category Event\n */\nexport class ToneEvent<ValueType = any> extends ToneWithContext<ToneEventOptions<ValueType>> {\n\n\treadonly name: string = \"ToneEvent\";\n\n\t/**\n\t * Loop value\n\t */\n\tprotected _loop: boolean | number;\n\n\t/**\n\t * The callback to invoke.\n\t */\n\tcallback: ToneEventCallback<ValueType>;\n\n\t/**\n\t * The value which is passed to the\n\t * callback function.\n\t */\n\tvalue: ValueType;\n\n\t/**\n\t * When the note is scheduled to start.\n\t */\n\tprotected _loopStart: Ticks;\n\n\t/**\n\t * When the note is scheduled to start.\n\t */\n\tprotected _loopEnd: Ticks;\n\n\t/**\n\t * Tracks the scheduled events\n\t */\n\tprotected _state: StateTimeline<{\n\t\tid: number;\n\t}> = new StateTimeline(\"stopped\");\n\n\t/**\n\t * The playback speed of the note. A speed of 1\n\t * is no change.\n\t */\n\tprotected _playbackRate: Positive;\n\n\t/**\n\t * A delay time from when the event is scheduled to start\n\t */\n\tprotected _startOffset: Ticks = 0;\n\n\t/**\n\t * private holder of probability value\n\t */\n\tprotected _probability: NormalRange;\n\n\t/**\n\t * the amount of variation from the given time.\n\t */\n\tprotected _humanize: boolean | Time;\n\n\t/**\n\t * If mute is true, the callback won't be invoked.\n\t */\n\tmute: boolean;\n\n\t/**\n\t * @param callback The callback to invoke at the time.\n\t * @param value The value or values which should be passed to the callback function on invocation.\n\t */\n\tconstructor(callback?: ToneEventCallback<ValueType>, value?: ValueType);\n\tconstructor(options?: Partial<ToneEventOptions<ValueType>>);\n\tconstructor() {\n\n\t\tsuper(optionsFromArguments(ToneEvent.getDefaults(), arguments, [\"callback\", \"value\"]));\n\t\tconst options = optionsFromArguments(ToneEvent.getDefaults(), arguments, [\"callback\", \"value\"]);\n\n\t\tthis._loop = options.loop;\n\t\tthis.callback = options.callback;\n\t\tthis.value = options.value;\n\t\tthis._loopStart = this.toTicks(options.loopStart);\n\t\tthis._loopEnd = this.toTicks(options.loopEnd);\n\t\tthis._playbackRate = options.playbackRate;\n\t\tthis._probability = options.probability;\n\t\tthis._humanize = options.humanize;\n\t\tthis.mute = options.mute;\n\t\tthis._playbackRate = options.playbackRate;\n\t\tthis._state.increasing = true;\n\t\t// schedule the events for the first time\n\t\tthis._rescheduleEvents();\n\t}\n\n\tstatic getDefaults(): ToneEventOptions<any> {\n\t\treturn Object.assign(ToneWithContext.getDefaults(), {\n\t\t\tcallback: noOp,\n\t\t\thumanize: false,\n\t\t\tloop: false,\n\t\t\tloopEnd: \"1m\",\n\t\t\tloopStart: 0,\n\t\t\tmute: false,\n\t\t\tplaybackRate: 1,\n\t\t\tprobability: 1,\n\t\t\tvalue: null,\n\t\t});\n\t}\n\n\t/**\n\t * Reschedule all of the events along the timeline\n\t * with the updated values.\n\t * @param after Only reschedules events after the given time.\n\t */\n\tprivate _rescheduleEvents(after: Ticks = -1): void {\n\t\t// if no argument is given, schedules all of the events\n\t\tthis._state.forEachFrom(after, event => {\n\t\t\tlet duration;\n\t\t\tif (event.state === \"started\") {\n\t\t\t\tif (event.id !== -1) {\n\t\t\t\t\tthis.context.transport.clear(event.id);\n\t\t\t\t}\n\t\t\t\tconst startTick = event.time + Math.round(this.startOffset / this._playbackRate);\n\t\t\t\tif (this._loop === true || isNumber(this._loop) && this._loop > 1) {\n\t\t\t\t\tduration = Infinity;\n\t\t\t\t\tif (isNumber(this._loop)) {\n\t\t\t\t\t\tduration = (this._loop) * this._getLoopDuration();\n\t\t\t\t\t}\n\t\t\t\t\tconst nextEvent = this._state.getAfter(startTick);\n\t\t\t\t\tif (nextEvent !== null) {\n\t\t\t\t\t\tduration = Math.min(duration, nextEvent.time - startTick);\n\t\t\t\t\t}\n\t\t\t\t\tif (duration !== Infinity) {\n\t\t\t\t\t\tduration = new TicksClass(this.context, duration);\n\t\t\t\t\t}\n\t\t\t\t\tconst interval = new TicksClass(this.context, this._getLoopDuration());\n\t\t\t\t\tevent.id = this.context.transport.scheduleRepeat(\n\t\t\t\t\t\tthis._tick.bind(this), interval, new TicksClass(this.context, startTick), duration);\n\t\t\t\t} else {\n\t\t\t\t\tevent.id = this.context.transport.schedule(this._tick.bind(this), new TicksClass(this.context, startTick));\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Returns the playback state of the note, either \"started\" or \"stopped\".\n\t */\n\tget state(): BasicPlaybackState {\n\t\treturn this._state.getValueAtTime(this.context.transport.ticks) as BasicPlaybackState;\n\t}\n\n\t/**\n\t * The start from the scheduled start time.\n\t */\n\tget startOffset(): Ticks {\n\t\treturn this._startOffset;\n\t}\n\tset startOffset(offset) {\n\t\tthis._startOffset = offset;\n\t}\n\n\t/**\n\t * The probability of the notes being triggered.\n\t */\n\tget probability(): NormalRange {\n\t\treturn this._probability;\n\t}\n\tset probability(prob) {\n\t\tthis._probability = prob;\n\t}\n\n\t/**\n\t * If set to true, will apply small random variation\n\t * to the callback time. If the value is given as a time, it will randomize\n\t * by that amount.\n\t * @example\n\t * const event = new Tone.ToneEvent();\n\t * event.humanize = true;\n\t */\n\tget humanize(): Time | boolean {\n\t\treturn this._humanize;\n\t}\n\n\tset humanize(variation) {\n\t\tthis._humanize = variation;\n\t}\n\n\t/**\n\t * Start the note at the given time.\n\t * @param  time  When the event should start.\n\t */\n\tstart(time?: TransportTime | TransportTimeClass): this {\n\t\tconst ticks = this.toTicks(time);\n\t\tif (this._state.getValueAtTime(ticks) === \"stopped\") {\n\t\t\tthis._state.add({\n\t\t\t\tid: -1,\n\t\t\t\tstate: \"started\",\n\t\t\t\ttime: ticks,\n\t\t\t});\n\t\t\tthis._rescheduleEvents(ticks);\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Stop the Event at the given time.\n\t * @param  time  When the event should stop.\n\t */\n\tstop(time?: TransportTime | TransportTimeClass): this {\n\t\tthis.cancel(time);\n\t\tconst ticks = this.toTicks(time);\n\t\tif (this._state.getValueAtTime(ticks) === \"started\") {\n\t\t\tthis._state.setStateAtTime(\"stopped\", ticks, { id: -1 });\n\t\t\tconst previousEvent = this._state.getBefore(ticks);\n\t\t\tlet rescheduleTime = ticks;\n\t\t\tif (previousEvent !== null) {\n\t\t\t\trescheduleTime = previousEvent.time;\n\t\t\t}\n\t\t\tthis._rescheduleEvents(rescheduleTime);\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Cancel all scheduled events greater than or equal to the given time\n\t * @param  time  The time after which events will be cancel.\n\t */\n\tcancel(time?: TransportTime | TransportTimeClass): this {\n\t\ttime = defaultArg(time, -Infinity);\n\t\tconst ticks = this.toTicks(time);\n\t\tthis._state.forEachFrom(ticks, event => {\n\t\t\tthis.context.transport.clear(event.id);\n\t\t});\n\t\tthis._state.cancel(ticks);\n\t\treturn this;\n\t}\n\n\t/**\n\t * The callback function invoker. Also\n\t * checks if the Event is done playing\n\t * @param  time  The time of the event in seconds\n\t */\n\tprotected _tick(time: Seconds): void {\n\t\tconst ticks = this.context.transport.getTicksAtTime(time);\n\t\tif (!this.mute && this._state.getValueAtTime(ticks) === \"started\") {\n\t\t\tif (this.probability < 1 && Math.random() > this.probability) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (this.humanize) {\n\t\t\t\tlet variation = 0.02;\n\t\t\t\tif (!isBoolean(this.humanize)) {\n\t\t\t\t\tvariation = this.toSeconds(this.humanize);\n\t\t\t\t}\n\t\t\t\ttime += (Math.random() * 2 - 1) * variation;\n\t\t\t}\n\t\t\tthis.callback(time, this.value);\n\t\t}\n\t}\n\n\t/**\n\t * Get the duration of the loop.\n\t */\n\tprotected _getLoopDuration(): Ticks {\n\t\treturn (this._loopEnd - this._loopStart) / this._playbackRate;\n\t}\n\n\t/**\n\t * If the note should loop or not\n\t * between ToneEvent.loopStart and\n\t * ToneEvent.loopEnd. If set to true,\n\t * the event will loop indefinitely,\n\t * if set to a number greater than 1\n\t * it will play a specific number of\n\t * times, if set to false, 0 or 1, the\n\t * part will only play once.\n\t */\n\tget loop(): boolean | number {\n\t\treturn this._loop;\n\t}\n\tset loop(loop) {\n\t\tthis._loop = loop;\n\t\tthis._rescheduleEvents();\n\t}\n\n\t/**\n\t * The playback rate of the event. Defaults to 1.\n\t * @example\n\t * const note = new Tone.ToneEvent();\n\t * note.loop = true;\n\t * // repeat the note twice as fast\n\t * note.playbackRate = 2;\n\t */\n\tget playbackRate(): Positive {\n\t\treturn this._playbackRate;\n\t}\n\tset playbackRate(rate) {\n\t\tthis._playbackRate = rate;\n\t\tthis._rescheduleEvents();\n\t}\n\n\t/**\n\t * The loopEnd point is the time the event will loop\n\t * if ToneEvent.loop is true.\n\t */\n\tget loopEnd(): Time {\n\t\treturn new TicksClass(this.context, this._loopEnd).toSeconds();\n\t}\n\tset loopEnd(loopEnd) {\n\t\tthis._loopEnd = this.toTicks(loopEnd);\n\t\tif (this._loop) {\n\t\t\tthis._rescheduleEvents();\n\t\t}\n\t}\n\n\t/**\n\t * The time when the loop should start.\n\t */\n\tget loopStart(): Time {\n\t\treturn new TicksClass(this.context, this._loopStart).toSeconds();\n\t}\n\tset loopStart(loopStart) {\n\t\tthis._loopStart = this.toTicks(loopStart);\n\t\tif (this._loop) {\n\t\t\tthis._rescheduleEvents();\n\t\t}\n\t}\n\n\t/**\n\t * The current progress of the loop interval.\n\t * Returns 0 if the event is not started yet or\n\t * it is not set to loop.\n\t */\n\tget progress(): NormalRange {\n\t\tif (this._loop) {\n\t\t\tconst ticks = this.context.transport.ticks;\n\t\t\tconst lastEvent = this._state.get(ticks);\n\t\t\tif (lastEvent !== null && lastEvent.state === \"started\") {\n\t\t\t\tconst loopDuration = this._getLoopDuration();\n\t\t\t\tconst progress = (ticks - lastEvent.time) % loopDuration;\n\t\t\t\treturn progress / loopDuration;\n\t\t\t} else {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis.cancel();\n\t\tthis._state.dispose();\n\t\treturn this;\n\t}\n}\n","import { ToneEvent } from \"./ToneEvent\";\nimport { NormalRange, Positive, Seconds, Time, TransportTime } from \"../core/type/Units\";\nimport { ToneWithContext, ToneWithContextOptions } from \"../core/context/ToneWithContext\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { noOp } from \"../core/util/Interface\";\nimport { BasicPlaybackState } from \"../core/util/StateTimeline\";\n\nexport interface LoopOptions extends ToneWithContextOptions {\n\tcallback: (time: Seconds) => void;\n\tinterval: Time;\n\tplaybackRate: Positive;\n\titerations: number;\n\tprobability: NormalRange;\n\tmute: boolean;\n\thumanize: boolean | Time;\n}\n\n/**\n * Loop creates a looped callback at the \n * specified interval. The callback can be \n * started, stopped and scheduled along\n * the Transport's timeline. \n * @example\n * const loop = new Tone.Loop((time) => {\n * \t// triggered every eighth note. \n * \tconsole.log(time);\n * }, \"8n\").start(0);\n * Tone.Transport.start();\n * @category Event\n */\nexport class Loop<Options extends LoopOptions = LoopOptions> extends ToneWithContext<Options> {\n\n\treadonly name: string = \"Loop\";\n\n\t/**\n\t * The event which produces the callbacks\n\t */\n\tprivate _event: ToneEvent;\n\n\t/**\n\t * The callback to invoke with the next event in the pattern\n\t */\n\tcallback: (time: Seconds) => void\n\n\t/**\n\t * @param callback The callback to invoke at the time.\n\t * @param interval The time between successive callback calls. \n\t */\n\tconstructor(callback?: (time: Seconds) => void, interval?: Time);\n\tconstructor(options?: Partial<LoopOptions>);\n\tconstructor() {\n\t\tsuper(optionsFromArguments(Loop.getDefaults(), arguments, [\"callback\", \"interval\"]));\n\t\tconst options = optionsFromArguments(Loop.getDefaults(), arguments, [\"callback\", \"interval\"]);\n\n\t\tthis._event = new ToneEvent({\n\t\t\tcontext: this.context,\n\t\t\tcallback: this._tick.bind(this),\n\t\t\tloop: true,\n\t\t\tloopEnd: options.interval,\n\t\t\tplaybackRate: options.playbackRate,\n\t\t\tprobability: options.probability\n\t\t});\n\n\t\tthis.callback = options.callback;\n\t\t// set the iterations\n\t\tthis.iterations = options.iterations;\n\t}\n\n\tstatic getDefaults(): LoopOptions {\n\t\treturn Object.assign(ToneWithContext.getDefaults(), {\n\t\t\tinterval: \"4n\",\n\t\t\tcallback: noOp,\n\t\t\tplaybackRate: 1,\n\t\t\titerations: Infinity,\n\t\t\tprobability: 1,\n\t\t\tmute: false,\n\t\t\thumanize: false\n\t\t});\n\t}\n\n\t/**\n\t * Start the loop at the specified time along the Transport's timeline.\n\t * @param  time  When to start the Loop.\n\t */\n\tstart(time?: TransportTime): this {\n\t\tthis._event.start(time);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Stop the loop at the given time.\n\t * @param  time  When to stop the Loop.\n\t */\n\tstop(time?: TransportTime): this {\n\t\tthis._event.stop(time);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Cancel all scheduled events greater than or equal to the given time\n\t * @param  time  The time after which events will be cancel.\n\t */\n\tcancel(time?: TransportTime): this {\n\t\tthis._event.cancel(time);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Internal function called when the notes should be called\n\t * @param time  The time the event occurs\n\t */\n\tprotected _tick(time: Seconds): void {\n\t\tthis.callback(time);\n\t}\n\n\t/**\n\t * The state of the Loop, either started or stopped.\n\t */\n\tget state(): BasicPlaybackState {\n\t\treturn this._event.state;\n\t}\n\n\t/**\n\t * The progress of the loop as a value between 0-1. 0, when the loop is stopped or done iterating. \n\t */\n\tget progress(): NormalRange {\n\t\treturn this._event.progress;\n\t}\n\n\t/**\n\t * The time between successive callbacks. \n\t * @example\n\t * const loop = new Tone.Loop();\n\t * loop.interval = \"8n\"; // loop every 8n\n\t */\n\tget interval(): Time {\n\t\treturn this._event.loopEnd;\n\t}\n\tset interval(interval) {\n\t\tthis._event.loopEnd = interval;\n\t}\n\n\t/**\n\t * The playback rate of the loop. The normal playback rate is 1 (no change). \n\t * A `playbackRate` of 2 would be twice as fast. \n\t */\n\tget playbackRate(): Positive {\n\t\treturn this._event.playbackRate;\n\t}\n\tset playbackRate(rate) {\n\t\tthis._event.playbackRate = rate;\n\t}\n\n\t/**\n\t * Random variation +/-0.01s to the scheduled time. \n\t * Or give it a time value which it will randomize by.\n\t */\n\tget humanize(): boolean | Time {\n\t\treturn this._event.humanize;\n\t}\n\tset humanize(variation) {\n\t\tthis._event.humanize = variation;\n\t}\n\n\t/**\n\t * The probably of the callback being invoked.\n\t */\n\tget probability(): NormalRange {\n\t\treturn this._event.probability;\n\t}\n\n\tset probability(prob) {\n\t\tthis._event.probability = prob;\n\t}\n\n\t/**\n\t * Muting the Loop means that no callbacks are invoked.\n\t */\n\tget mute(): boolean {\n\t\treturn this._event.mute;\n\t}\n\n\tset mute(mute) {\n\t\tthis._event.mute = mute;\n\t}\n\n\t/**\n\t * The number of iterations of the loop. The default value is `Infinity` (loop forever).\n\t */\n\tget iterations(): number {\n\t\tif (this._event.loop === true) {\n\t\t\treturn Infinity;\n\t\t} else {\n\t\t\treturn this._event.loop as number;\n\t\t}\n\t}\n\tset iterations(iters) {\n\t\tif (iters === Infinity) {\n\t\t\tthis._event.loop = true;\n\t\t} else {\n\t\t\tthis._event.loop = iters;\n\t\t}\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._event.dispose();\n\t\treturn this;\n\t}\n}\n","import { TicksClass } from \"../core/type/Ticks\";\nimport { TransportTimeClass } from \"../core/type/TransportTime\";\nimport { NormalRange, Positive, Seconds, Ticks, Time, TransportTime } from \"../core/type/Units\";\nimport { defaultArg, optionsFromArguments } from \"../core/util/Defaults\";\nimport { StateTimeline } from \"../core/util/StateTimeline\";\nimport { isArray, isDefined, isObject, isUndef } from \"../core/util/TypeCheck\";\nimport { ToneEvent, ToneEventCallback, ToneEventOptions } from \"./ToneEvent\";\n\ntype CallbackType<T> =\n\tT extends {\n\t\ttime: Time;\n\t\t[key: string]: any;\n\t} ? T :\n\t\tT extends ArrayLike<any> ? T[1] :\n\t\t\tT extends Time ? null : never;\n\ninterface PartOptions<T> extends Omit<ToneEventOptions<CallbackType<T>>, \"value\"> {\n\tevents: T[];\n}\n\n/**\n * Part is a collection ToneEvents which can be started/stopped and looped as a single unit.\n *\n * @example\n * const synth = new Tone.Synth().toDestination();\n * const part = new Tone.Part(((time, note) => {\n * \t// the notes given as the second element in the array\n * \t// will be passed in as the second argument\n * \tsynth.triggerAttackRelease(note, \"8n\", time);\n * }), [[0, \"C2\"], [\"0:2\", \"C3\"], [\"0:3:2\", \"G2\"]]);\n * Tone.Transport.start();\n * @example\n * const synth = new Tone.Synth().toDestination();\n * // use an array of objects as long as the object has a \"time\" attribute\n * const part = new Tone.Part(((time, value) => {\n * \t// the value is an object which contains both the note and the velocity\n * \tsynth.triggerAttackRelease(value.note, \"8n\", time, value.velocity);\n * }), [{ time: 0, note: \"C3\", velocity: 0.9 },\n * \t{ time: \"0:2\", note: \"C4\", velocity: 0.5 }\n * ]).start(0);\n * Tone.Transport.start();\n * @category Event\n */\nexport class Part<ValueType = any> extends ToneEvent<ValueType> {\n\n\treadonly name: string = \"Part\";\n\n\t/**\n\t * Tracks the scheduled events\n\t */\n\tprotected _state: StateTimeline<{\n\t\tid: number;\n\t\toffset: number;\n\t}> = new StateTimeline(\"stopped\");\n\n\t/**\n\t * The events that belong to this part\n\t */\n\tprivate _events: Set<ToneEvent> = new Set();\n\n\t/**\n\t * @param callback The callback to invoke on each event\n\t * @param events the array of events\n\t */\n\tconstructor(callback?: ToneEventCallback<CallbackType<ValueType>>, value?: ValueType[]);\n\tconstructor(options?: Partial<PartOptions<ValueType>>);\n\tconstructor() {\n\n\t\tsuper(optionsFromArguments(Part.getDefaults(), arguments, [\"callback\", \"events\"]));\n\t\tconst options = optionsFromArguments(Part.getDefaults(), arguments, [\"callback\", \"events\"]);\n\n\t\t// make sure things are assigned in the right order\n\t\tthis._state.increasing = true;\n\n\t\t// add the events\n\t\toptions.events.forEach(event => {\n\t\t\tif (isArray(event)) {\n\t\t\t\tthis.add(event[0], event[1]);\n\t\t\t} else {\n\t\t\t\tthis.add(event);\n\t\t\t}\n\t\t});\n\t}\n\n\tstatic getDefaults(): PartOptions<any> {\n\t\treturn Object.assign(ToneEvent.getDefaults(), {\n\t\t\tevents: [],\n\t\t});\n\t}\n\n\t/**\n\t * Start the part at the given time.\n\t * @param  time    When to start the part.\n\t * @param  offset  The offset from the start of the part to begin playing at.\n\t */\n\tstart(time?: TransportTime, offset?: Time): this {\n\t\tconst ticks = this.toTicks(time);\n\t\tif (this._state.getValueAtTime(ticks) !== \"started\") {\n\t\t\toffset = defaultArg(offset, this._loop ? this._loopStart : 0);\n\t\t\tif (this._loop) {\n\t\t\t\toffset = defaultArg(offset, this._loopStart);\n\t\t\t} else {\n\t\t\t\toffset = defaultArg(offset, 0);\n\t\t\t}\n\t\t\tconst computedOffset = this.toTicks(offset);\n\t\t\tthis._state.add({\n\t\t\t\tid: -1,\n\t\t\t\toffset: computedOffset,\n\t\t\t\tstate: \"started\",\n\t\t\t\ttime: ticks,\n\t\t\t});\n\t\t\tthis._forEach(event => {\n\t\t\t\tthis._startNote(event, ticks, computedOffset);\n\t\t\t});\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Start the event in the given event at the correct time given\n\t * the ticks and offset and looping.\n\t * @param  event\n\t * @param  ticks\n\t * @param  offset\n\t */\n\tprivate _startNote(event: ToneEvent, ticks: Ticks, offset: Ticks): void {\n\t\tticks -= offset;\n\t\tif (this._loop) {\n\t\t\tif (event.startOffset >= this._loopStart && event.startOffset < this._loopEnd) {\n\t\t\t\tif (event.startOffset < offset) {\n\t\t\t\t\t// start it on the next loop\n\t\t\t\t\tticks += this._getLoopDuration();\n\t\t\t\t}\n\t\t\t\tevent.start(new TicksClass(this.context, ticks));\n\t\t\t} else if (event.startOffset < this._loopStart && event.startOffset >= offset) {\n\t\t\t\tevent.loop = false;\n\t\t\t\tevent.start(new TicksClass(this.context, ticks));\n\t\t\t}\n\t\t} else if (event.startOffset >= offset) {\n\t\t\tevent.start(new TicksClass(this.context, ticks));\n\t\t}\n\t}\n\n\tget startOffset(): Ticks {\n\t\treturn this._startOffset;\n\t}\n\tset startOffset(offset) {\n\t\tthis._startOffset = offset;\n\t\tthis._forEach(event => {\n\t\t\tevent.startOffset += this._startOffset;\n\t\t});\n\t}\n\n\t/**\n\t * Stop the part at the given time.\n\t * @param  time  When to stop the part.\n\t */\n\tstop(time?: TransportTime): this {\n\t\tconst ticks = this.toTicks(time);\n\t\tthis._state.cancel(ticks);\n\t\tthis._state.setStateAtTime(\"stopped\", ticks);\n\t\tthis._forEach(event => {\n\t\t\tevent.stop(time);\n\t\t});\n\t\treturn this;\n\t}\n\n\t/**\n\t * Get/Set an Event's value at the given time.\n\t * If a value is passed in and no event exists at\n\t * the given time, one will be created with that value.\n\t * If two events are at the same time, the first one will\n\t * be returned.\n\t * @example\n\t * const part = new Tone.Part();\n\t * part.at(\"1m\"); // returns the part at the first measure\n\t * part.at(\"2m\", \"C2\"); // set the value at \"2m\" to C2.\n\t * // if an event didn't exist at that time, it will be created.\n\t * @param time The time of the event to get or set.\n\t * @param value If a value is passed in, the value of the event at the given time will be set to it.\n\t */\n\tat(time: Time, value?: any): ToneEvent | null {\n\t\tconst timeInTicks = new TransportTimeClass(this.context, time).toTicks();\n\t\tconst tickTime = new TicksClass(this.context, 1).toSeconds();\n\n\t\tconst iterator = this._events.values();\n\t\tlet result = iterator.next();\n\t\twhile (!result.done) {\n\t\t\tconst event = result.value;\n\t\t\tif (Math.abs(timeInTicks - event.startOffset) < tickTime) {\n\t\t\t\tif (isDefined(value)) {\n\t\t\t\t\tevent.value = value;\n\t\t\t\t}\n\t\t\t\treturn event;\n\t\t\t}\n\t\t\tresult = iterator.next();\n\t\t}\n\t\t// if there was no event at that time, create one\n\t\tif (isDefined(value)) {\n\t\t\tthis.add(time, value);\n\t\t\t// return the new event\n\t\t\treturn this.at(time);\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}\n\n\t/**\n\t * Add a an event to the part.\n\t * @param time The time the note should start. If an object is passed in, it should\n\t * \t\thave a 'time' attribute and the rest of the object will be used as the 'value'.\n\t * @param  value\n\t * @example\n\t * const part = new Tone.Part();\n\t * part.add(\"1m\", \"C#+11\");\n\t */\n\tadd(obj: {\n\t\ttime: Time;\n\t\t[key: string]: any;\n\t}): this;\n\tadd(time: Time, value?: any): this;\n\tadd(time: Time | object, value?: any): this {\n\t\t// extract the parameters\n\t\tif (time instanceof Object && Reflect.has(time, \"time\")) {\n\t\t\tvalue = time;\n\t\t\ttime = value.time;\n\t\t}\n\t\tconst ticks = this.toTicks(time);\n\t\tlet event: ToneEvent;\n\t\tif (value instanceof ToneEvent) {\n\t\t\tevent = value;\n\t\t\tevent.callback = this._tick.bind(this);\n\t\t} else {\n\t\t\tevent = new ToneEvent({\n\t\t\t\tcallback: this._tick.bind(this),\n\t\t\t\tcontext: this.context,\n\t\t\t\tvalue,\n\t\t\t});\n\t\t}\n\t\t// the start offset\n\t\tevent.startOffset = ticks;\n\n\t\t// initialize the values\n\t\tevent.set({\n\t\t\thumanize: this.humanize,\n\t\t\tloop: this.loop,\n\t\t\tloopEnd: this.loopEnd,\n\t\t\tloopStart: this.loopStart,\n\t\t\tplaybackRate: this.playbackRate,\n\t\t\tprobability: this.probability,\n\t\t});\n\n\t\tthis._events.add(event);\n\n\t\t// start the note if it should be played right now\n\t\tthis._restartEvent(event);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Restart the given event\n\t */\n\tprivate _restartEvent(event: ToneEvent): void {\n\t\tthis._state.forEach((stateEvent) => {\n\t\t\tif (stateEvent.state === \"started\") {\n\t\t\t\tthis._startNote(event, stateEvent.time, stateEvent.offset);\n\t\t\t} else {\n\t\t\t\t// stop the note\n\t\t\t\tevent.stop(new TicksClass(this.context, stateEvent.time));\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Remove an event from the part. If the event at that time is a Part,\n\t * it will remove the entire part.\n\t * @param time The time of the event\n\t * @param value Optionally select only a specific event value\n\t */\n\tremove(obj: {\n\t\ttime: Time;\n\t\t[key: string]: any;\n\t}): this;\n\tremove(time: Time, value?: any): this;\n\tremove(time: Time | object, value?: any): this {\n\t\t// extract the parameters\n\t\tif (isObject(time) && time.hasOwnProperty(\"time\")) {\n\t\t\tvalue = time;\n\t\t\ttime = value.time;\n\t\t}\n\t\ttime = this.toTicks(time);\n\t\tthis._events.forEach(event => {\n\t\t\tif (event.startOffset === time) {\n\t\t\t\tif (isUndef(value) || (isDefined(value) && event.value === value)) {\n\t\t\t\t\tthis._events.delete(event);\n\t\t\t\t\tevent.dispose();\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\treturn this;\n\t}\n\n\t/**\n\t * Remove all of the notes from the group.\n\t */\n\tclear(): this {\n\t\tthis._forEach(event => event.dispose());\n\t\tthis._events.clear();\n\t\treturn this;\n\t}\n\n\t/**\n\t * Cancel scheduled state change events: i.e. \"start\" and \"stop\".\n\t * @param after The time after which to cancel the scheduled events.\n\t */\n\tcancel(after?: TransportTime | TransportTimeClass): this {\n\t\tthis._forEach(event => event.cancel(after));\n\t\tthis._state.cancel(this.toTicks(after));\n\t\treturn this;\n\t}\n\n\t/**\n\t * Iterate over all of the events\n\t */\n\tprivate _forEach(callback: (event: ToneEvent) => void): this {\n\t\tif (this._events) {\n\t\t\tthis._events.forEach(event => {\n\t\t\t\tif (event instanceof Part) {\n\t\t\t\t\tevent._forEach(callback);\n\t\t\t\t} else {\n\t\t\t\t\tcallback(event);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Set the attribute of all of the events\n\t * @param  attr  the attribute to set\n\t * @param  value      The value to set it to\n\t */\n\tprivate _setAll(attr: string, value: any): void {\n\t\tthis._forEach(event => {\n\t\t\tevent[attr] = value;\n\t\t});\n\t}\n\n\t/**\n\t * Internal tick method\n\t * @param  time  The time of the event in seconds\n\t */\n\tprotected _tick(time: Seconds, value?: any): void {\n\t\tif (!this.mute) {\n\t\t\tthis.callback(time, value);\n\t\t}\n\t}\n\n\t/**\n\t * Determine if the event should be currently looping\n\t * given the loop boundries of this Part.\n\t * @param  event  The event to test\n\t */\n\tprivate _testLoopBoundries(event: ToneEvent): void {\n\t\tif (this._loop && (event.startOffset < this._loopStart || event.startOffset >= this._loopEnd)) {\n\t\t\tevent.cancel(0);\n\t\t} else if (event.state === \"stopped\") {\n\t\t\t// reschedule it if it's stopped\n\t\t\tthis._restartEvent(event);\n\t\t}\n\t}\n\n\tget probability(): NormalRange {\n\t\treturn this._probability;\n\t}\n\tset probability(prob) {\n\t\tthis._probability = prob;\n\t\tthis._setAll(\"probability\", prob);\n\t}\n\n\tget humanize(): boolean | Time {\n\t\treturn this._humanize;\n\t}\n\tset humanize(variation) {\n\t\tthis._humanize = variation;\n\t\tthis._setAll(\"humanize\", variation);\n\t}\n\n\t/**\n\t * If the part should loop or not\n\t * between Part.loopStart and\n\t * Part.loopEnd. If set to true,\n\t * the part will loop indefinitely,\n\t * if set to a number greater than 1\n\t * it will play a specific number of\n\t * times, if set to false, 0 or 1, the\n\t * part will only play once.\n\t * @example\n\t * const part = new Tone.Part();\n\t * // loop the part 8 times\n\t * part.loop = 8;\n\t */\n\tget loop(): boolean | number {\n\t\treturn this._loop;\n\t}\n\tset loop(loop) {\n\t\tthis._loop = loop;\n\t\tthis._forEach(event => {\n\t\t\tevent.loopStart = this.loopStart;\n\t\t\tevent.loopEnd = this.loopEnd;\n\t\t\tevent.loop = loop;\n\t\t\tthis._testLoopBoundries(event);\n\t\t});\n\t}\n\n\t/**\n\t * The loopEnd point determines when it will\n\t * loop if Part.loop is true.\n\t */\n\tget loopEnd(): Time {\n\t\treturn new TicksClass(this.context, this._loopEnd).toSeconds();\n\t}\n\tset loopEnd(loopEnd) {\n\t\tthis._loopEnd = this.toTicks(loopEnd);\n\t\tif (this._loop) {\n\t\t\tthis._forEach(event => {\n\t\t\t\tevent.loopEnd = loopEnd;\n\t\t\t\tthis._testLoopBoundries(event);\n\t\t\t});\n\t\t}\n\t}\n\n\t/**\n\t * The loopStart point determines when it will\n\t * loop if Part.loop is true.\n\t */\n\tget loopStart(): Time {\n\t\treturn new TicksClass(this.context, this._loopStart).toSeconds();\n\t}\n\tset loopStart(loopStart) {\n\t\tthis._loopStart = this.toTicks(loopStart);\n\t\tif (this._loop) {\n\t\t\tthis._forEach(event => {\n\t\t\t\tevent.loopStart = this.loopStart;\n\t\t\t\tthis._testLoopBoundries(event);\n\t\t\t});\n\t\t}\n\t}\n\n\t/**\n\t * The playback rate of the part\n\t */\n\tget playbackRate(): Positive {\n\t\treturn this._playbackRate;\n\t}\n\tset playbackRate(rate) {\n\t\tthis._playbackRate = rate;\n\t\tthis._setAll(\"playbackRate\", rate);\n\t}\n\n\t/**\n\t * The number of scheduled notes in the part.\n\t */\n\tget length(): number {\n\t\treturn this._events.size;\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis.clear();\n\t\treturn this;\n\t}\n}\n","import { assert } from \"../core/util/Debug\";\nimport { clamp } from \"../core/util/Math\";\n\n/**\n * The name of the patterns\n */\nexport type PatternName = \"up\" | \"down\" | \"upDown\" | \"downUp\" | \"alternateUp\" | \"alternateDown\" | \"random\" | \"randomOnce\" | \"randomWalk\";\n\n/**\n * Start at the first value and go up to the last\n */\nfunction* upPatternGen<T>(values: T[]): IterableIterator<T> {\n\tlet index = 0;\n\twhile (index < values.length) {\n\t\tindex = clampToArraySize(index, values);\n\t\tyield values[index];\n\t\tindex++;\n\t}\n}\n\n/**\n * Start at the last value and go down to 0\n */\nfunction* downPatternGen<T>(values: T[]): IterableIterator<T> {\n\tlet index = values.length - 1;\n\twhile (index >= 0) {\n\t\tindex = clampToArraySize(index, values);\n\t\tyield values[index];\n\t\tindex--;\n\t}\n}\n\n/**\n * Infinitely yield the generator\n */\nfunction* infiniteGen<T>(values: T[], gen: typeof upPatternGen): IterableIterator<T> {\n\twhile (true) {\n\t\tyield* gen(values);\n\t}\n}\n\n/**\n * Make sure that the index is in the given range\n */\nfunction clampToArraySize(index: number, values: any[]): number {\n\treturn clamp(index, 0, values.length - 1);\n}\n\n/**\n * Alternate between two generators\n */\nfunction* alternatingGenerator<T>(values: T[], directionUp: boolean): IterableIterator<T> {\n\tlet index = directionUp ? 0 : values.length - 1;\n\twhile (true) {\n\t\tindex = clampToArraySize(index, values);\n\t\tyield values[index];\n\t\tif (directionUp) {\n\t\t\tindex++;\n\t\t\tif (index >= values.length - 1) {\n\t\t\t\tdirectionUp = false;\n\t\t\t}\n\t\t} else {\n\t\t\tindex--;\n\t\t\tif (index <= 0) {\n\t\t\t\tdirectionUp = true;\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * Starting from the bottom move up 2, down 1\n */\nfunction* jumpUp<T>(values: T[]): IterableIterator<T> {\n\tlet index = 0;\n\tlet stepIndex = 0;\n\twhile (index < values.length) {\n\t\tindex = clampToArraySize(index, values);\n\t\tyield values[index];\n\t\tstepIndex++;\n\t\tindex += (stepIndex % 2 ? 2 : -1);\n\t}\n}\n\n/**\n * Starting from the top move down 2, up 1\n */\nfunction* jumpDown<T>(values: T[]): IterableIterator<T> {\n\tlet index = values.length - 1;\n\tlet stepIndex = 0;\n\twhile (index >= 0) {\n\t\tindex = clampToArraySize(index, values);\n\t\tyield values[index];\n\t\tstepIndex++;\n\t\tindex += (stepIndex % 2 ? -2 : 1);\n\t}\n}\n\n/**\n * Choose a random index each time\n */\nfunction* randomGen<T>(values: T[]): IterableIterator<T> {\n\twhile (true) {\n\t\tconst randomIndex = Math.floor(Math.random() * values.length);\n\t\tyield values[randomIndex];\n\t}\n}\n\n/**\n * Randomly go through all of the values once before choosing a new random order\n */\nfunction* randomOnce<T>(values: T[]): IterableIterator<T> {\n\t// create an array of indices\n\tconst copy: number[] = [];\n\tfor (let i = 0; i < values.length; i++) {\n\t\tcopy.push(i);\n\t}\n\twhile (copy.length > 0) {\n\t\t// random choose an index, and then remove it so it's not chosen again\n\t\tconst randVal = copy.splice(Math.floor(copy.length * Math.random()), 1);\n\t\tconst index = clampToArraySize(randVal[0], values);\n\t\tyield values[index];\n\t}\n}\n\n/**\n * Randomly choose to walk up or down 1 index in the values array\n */\nfunction* randomWalk<T>(values: T[]): IterableIterator<T> {\n\t// randomly choose a starting index in the values array\n\tlet index = Math.floor(Math.random() * values.length);\n\twhile (true) {\n\t\tif (index === 0) {\n\t\t\tindex++; // at bottom of array, so force upward step\n\t\t} else if (index === values.length - 1) {\n\t\t\tindex--; // at top of array, so force downward step\n\t\t} else if (Math.random() < 0.5) { // else choose random downward or upward step\n\t\t\tindex--;\n\t\t} else {\n\t\t\tindex++;\n\t\t}\n\t\tyield values[index];\n\t}\n}\n\n/**\n * PatternGenerator returns a generator which will iterate over the given array\n * of values and yield the items according to the passed in pattern\n * @param values An array of values to iterate over\n * @param pattern The name of the pattern use when iterating over\n * @param index Where to start in the offset of the values array\n */\nexport function* PatternGenerator<T>(values: T[], pattern: PatternName = \"up\", index = 0): Iterator<T> {\n\t// safeguards\n\tassert(values.length > 0, \"The array must have more than one value in it\");\n\tswitch (pattern) {\n\t\tcase \"up\" :\n\t\t\tyield* infiniteGen(values, upPatternGen);\n\t\tcase \"down\" :\n\t\t\tyield* infiniteGen(values, downPatternGen);\n\t\tcase \"upDown\" :\n\t\t\tyield* alternatingGenerator(values, true);\n\t\tcase \"downUp\" :\n\t\t\tyield* alternatingGenerator(values, false);\n\t\tcase \"alternateUp\":\n\t\t\tyield* infiniteGen(values, jumpUp);\n\t\tcase \"alternateDown\":\n\t\t\tyield* infiniteGen(values, jumpDown);\n\t\tcase \"random\":\n\t\t\tyield* randomGen(values);\n\t\tcase \"randomOnce\":\n\t\t\tyield* infiniteGen(values, randomOnce);\n\t\tcase \"randomWalk\":\n\t\t\tyield* randomWalk(values);\n\t}\n}\n","import { Loop, LoopOptions } from \"./Loop\";\nimport { PatternGenerator, PatternName } from \"./PatternGenerator\";\nimport { ToneEventCallback } from \"./ToneEvent\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { Seconds } from \"../core/type/Units\";\nimport { noOp } from \"../core/util/Interface\";\n\nexport interface PatternOptions<ValueType> extends LoopOptions {\n\tpattern: PatternName;\n\tvalues: ValueType[];\n\tcallback: (time: Seconds, value?: ValueType) => void;\n}\n\n/**\n * Pattern arpeggiates between the given notes\n * in a number of patterns. \n * @example\n * const pattern = new Tone.Pattern((time, note) => {\n * \t// the order of the notes passed in depends on the pattern\n * }, [\"C2\", \"D4\", \"E5\", \"A6\"], \"upDown\");\n * @category Event\n */\nexport class Pattern<ValueType> extends Loop<PatternOptions<ValueType>> {\n\n\treadonly name: string = \"Pattern\";\n\n\t/**\n\t * The pattern generator function\n\t */\n\tprivate _pattern: Iterator<ValueType>;\n\n\t/**\n\t * The current value\n\t */\n\tprivate _value?: ValueType;\n\n\t/**\n\t * Hold the pattern type\n\t */\n\tprivate _type: PatternName;\n\n\t/**\n\t * Hold the values\n\t */\n\tprivate _values: ValueType[];\n\n\t/**\n\t * The callback to be invoked at a regular interval\n\t */\n\tcallback: (time: Seconds, value?: ValueType) => void;\n\n\t/**\n\t * @param  callback The callback to invoke with the event.\n\t * @param  values The values to arpeggiate over.\n\t * @param  pattern  The name of the pattern\n\t */\n\tconstructor(\n\t\tcallback?: ToneEventCallback<ValueType>,\n\t\tvalues?: ValueType[],\n\t\tpattern?: PatternName,\n\t);\n\tconstructor(options?: Partial<PatternOptions<ValueType>>);\n\tconstructor() {\n\n\t\tsuper(optionsFromArguments(Pattern.getDefaults(), arguments, [\"callback\", \"values\", \"pattern\"]));\n\t\tconst options = optionsFromArguments(Pattern.getDefaults(), arguments, [\"callback\", \"values\", \"pattern\"]);\n\n\t\tthis.callback = options.callback;\n\t\tthis._values = options.values;\n\t\tthis._pattern = PatternGenerator(options.values, options.pattern);\n\t\tthis._type = options.pattern;\n\t}\n\n\tstatic getDefaults(): PatternOptions<any> {\n\t\treturn Object.assign(Loop.getDefaults(), {\n\t\t\tpattern: \"up\" as \"up\",\n\t\t\tvalues: [],\n\t\t\tcallback: noOp,\n\t\t});\n\t}\n\n\t/**\n\t * Internal function called when the notes should be called\n\t */\n\tprotected _tick(time: Seconds): void {\n\t\tconst value = this._pattern.next() as IteratorResult<ValueType>;\n\t\tthis._value = value.value;\n\t\tthis.callback(time, this._value);\n\t}\n\n\t/**\n\t * The array of events.\n\t */\n\tget values(): ValueType[] {\n\t\treturn this._values;\n\t}\n\tset values(val) {\n\t\tthis._values = val;\n\t\t// reset the pattern\n\t\tthis.pattern = this._type;\n\t}\n\n\t/**\n\t * The current value of the pattern.\n\t */\n\tget value(): ValueType | undefined {\n\t\treturn this._value;\n\t}\n\n\t/**\n\t * The pattern type. See Tone.CtrlPattern for the full list of patterns.\n\t */\n\tget pattern(): PatternName {\n\t\treturn this._type;\n\t}\n\tset pattern(pattern) {\n\t\tthis._type = pattern;\n\t\tthis._pattern = PatternGenerator(this._values, this._type);\n\t}\n}\n\n","import { TicksClass } from \"../core/type/Ticks\";\nimport { NormalRange, Positive, Seconds, Ticks, Time, TransportTime } from \"../core/type/Units\";\nimport { omitFromObject, optionsFromArguments } from \"../core/util/Defaults\";\nimport { isArray, isString } from \"../core/util/TypeCheck\";\nimport { Part } from \"./Part\";\nimport { ToneEvent, ToneEventCallback, ToneEventOptions } from \"./ToneEvent\";\n\ntype SequenceEventDescription<T> = Array<T | Array<T | Array<T | Array<T | Array<T | T[]>>>>>;\n\ninterface SequenceOptions<T> extends Omit<ToneEventOptions<T>, \"value\"> {\n\tloopStart: number;\n\tloopEnd: number;\n\tsubdivision: Time;\n\tevents: SequenceEventDescription<T>;\n}\n\n/**\n * A sequence is an alternate notation of a part. Instead\n * of passing in an array of [time, event] pairs, pass\n * in an array of events which will be spaced at the\n * given subdivision. Sub-arrays will subdivide that beat\n * by the number of items are in the array.\n * Sequence notation inspiration from [Tidal](http://yaxu.org/tidal/)\n * @example\n * const synth = new Tone.Synth().toDestination();\n * const seq = new Tone.Sequence((time, note) => {\n * \tsynth.triggerAttackRelease(note, 0.1, time);\n * \t// subdivisions are given as subarrays\n * }, [\"C4\", [\"E4\", \"D4\", \"E4\"], \"G4\", [\"A4\", \"G4\"]]).start(0);\n * Tone.Transport.start();\n * @category Event\n */\nexport class Sequence<ValueType = any> extends ToneEvent<ValueType> {\n\n\treadonly name: string = \"Sequence\";\n\n\t/**\n\t * The subdivison of each note\n\t */\n\tprivate _subdivision: Ticks;\n\n\t/**\n\t * The object responsible for scheduling all of the events\n\t */\n\tprivate _part: Part = new Part({\n\t\tcallback: this._seqCallback.bind(this),\n\t\tcontext: this.context,\n\t});\n\n\t/**\n\t * private reference to all of the sequence proxies\n\t */\n\tprivate _events: SequenceEventDescription<ValueType> = [];\n\n\t/**\n\t * The proxied array\n\t */\n\tprivate _eventsArray: SequenceEventDescription<ValueType> = [];\n\n\t/**\n\t * @param  callback  The callback to invoke with every note\n\t * @param  sequence  The sequence\n\t * @param  subdivision  The subdivision between which events are placed.\n\t */\n\tconstructor(\n\t\tcallback?: ToneEventCallback<ValueType>,\n\t\tevents?: SequenceEventDescription<ValueType>,\n\t\tsubdivision?: Time,\n\t);\n\tconstructor(options?: Partial<SequenceOptions<ValueType>>);\n\tconstructor() {\n\n\t\tsuper(optionsFromArguments(Sequence.getDefaults(), arguments, [\"callback\", \"events\", \"subdivision\"]));\n\t\tconst options = optionsFromArguments(Sequence.getDefaults(), arguments, [\"callback\", \"events\", \"subdivision\"]);\n\n\t\tthis._subdivision = this.toTicks(options.subdivision);\n\n\t\tthis.events = options.events;\n\n\t\t// set all of the values\n\t\tthis.loop = options.loop;\n\t\tthis.loopStart = options.loopStart;\n\t\tthis.loopEnd = options.loopEnd;\n\t\tthis.playbackRate = options.playbackRate;\n\t\tthis.probability = options.probability;\n\t\tthis.humanize = options.humanize;\n\t\tthis.mute = options.mute;\n\t\tthis.playbackRate = options.playbackRate;\n\t}\n\n\tstatic getDefaults(): SequenceOptions<any> {\n\t\treturn Object.assign(omitFromObject(ToneEvent.getDefaults(), [\"value\"]), {\n\t\t\tevents: [],\n\t\t\tloop: true,\n\t\t\tloopEnd: 0,\n\t\t\tloopStart: 0,\n\t\t\tsubdivision: \"8n\",\n\t\t});\n\t}\n\n\t/**\n\t * The internal callback for when an event is invoked\n\t */\n\tprivate _seqCallback(time: Seconds, value: any): void {\n\t\tif (value !== null && !this.mute) {\n\t\t\tthis.callback(time, value);\n\t\t}\n\t}\n\n\t/**\n\t * The sequence\n\t */\n\tget events(): any[] {\n\t\treturn this._events;\n\t}\n\tset events(s) {\n\t\tthis.clear();\n\t\tthis._eventsArray = s;\n\t\tthis._events = this._createSequence(this._eventsArray);\n\t\tthis._eventsUpdated();\n\t}\n\n\t/**\n\t * Start the part at the given time.\n\t * @param  time    When to start the part.\n\t * @param  offset  The offset index to start at\n\t */\n\tstart(time?: TransportTime, offset?: number): this {\n\t\tthis._part.start(time, offset ? this._indexTime(offset) : offset);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Stop the part at the given time.\n\t * @param  time  When to stop the part.\n\t */\n\tstop(time?: TransportTime): this {\n\t\tthis._part.stop(time);\n\t\treturn this;\n\t}\n\n\t/**\n\t * The subdivision of the sequence. This can only be\n\t * set in the constructor. The subdivision is the\n\t * interval between successive steps.\n\t */\n\tget subdivision(): Seconds {\n\t\treturn new TicksClass(this.context, this._subdivision).toSeconds();\n\t}\n\n\t/**\n\t * Create a sequence proxy which can be monitored to create subsequences\n\t */\n\tprivate _createSequence(array: any[]): any[] {\n\t\treturn new Proxy(array, {\n\t\t\tget: (target: any[], property: PropertyKey): any => {\n\t\t\t\t// property is index in this case\n\t\t\t\treturn target[property];\n\t\t\t},\n\t\t\tset: (target: any[], property: PropertyKey, value: any): boolean => {\n\t\t\t\tif (isString(property) && isFinite(parseInt(property, 10))) {\n\t\t\t\t\tif (isArray(value)) {\n\t\t\t\t\t\ttarget[property] = this._createSequence(value);\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttarget[property] = value;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\ttarget[property] = value;\n\t\t\t\t}\n\t\t\t\tthis._eventsUpdated();\n\t\t\t\t// return true to accept the changes\n\t\t\t\treturn true;\n\t\t\t},\n\t\t});\n\t}\n\n\t/**\n\t * When the sequence has changed, all of the events need to be recreated\n\t */\n\tprivate _eventsUpdated(): void {\n\t\tthis._part.clear();\n\t\tthis._rescheduleSequence(this._eventsArray, this._subdivision, this.startOffset);\n\t\t// update the loopEnd\n\t\tthis.loopEnd = this.loopEnd;\n\t}\n\n\t/**\n\t * reschedule all of the events that need to be rescheduled\n\t */\n\tprivate _rescheduleSequence(sequence: any[], subdivision: Ticks, startOffset: Ticks): void {\n\t\tsequence.forEach((value, index) => {\n\t\t\tconst eventOffset = index * (subdivision) + startOffset;\n\t\t\tif (isArray(value)) {\n\t\t\t\tthis._rescheduleSequence(value, subdivision / value.length, eventOffset);\n\t\t\t} else {\n\t\t\t\tconst startTime = new TicksClass(this.context, eventOffset, \"i\").toSeconds();\n\t\t\t\tthis._part.add(startTime, value);\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Get the time of the index given the Sequence's subdivision\n\t * @param  index\n\t * @return The time of that index\n\t */\n\tprivate _indexTime(index: number): Seconds {\n\t\treturn new TicksClass(this.context, index * (this._subdivision) + this.startOffset).toSeconds();\n\t}\n\n\t/**\n\t * Clear all of the events\n\t */\n\tclear(): this {\n\t\tthis._part.clear();\n\t\treturn this;\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._part.dispose();\n\t\treturn this;\n\t}\n\n\t//-------------------------------------\n\t// PROXY CALLS\n\t//-------------------------------------\n\n\tget loop(): boolean | number {\n\t\treturn this._part.loop;\n\t}\n\tset loop(l) {\n\t\tthis._part.loop = l;\n\t}\n\n\t/**\n\t * The index at which the sequence should start looping\n\t */\n\tget loopStart(): number {\n\t\treturn this._loopStart;\n\t}\n\tset loopStart(index) {\n\t\tthis._loopStart = index;\n\t\tthis._part.loopStart = this._indexTime(index);\n\t}\n\n\t/**\n\t * The index at which the sequence should end looping\n\t */\n\tget loopEnd(): number {\n\t\treturn this._loopEnd;\n\t}\n\tset loopEnd(index) {\n\t\tthis._loopEnd = index;\n\t\tif (index === 0) {\n\t\t\tthis._part.loopEnd = this._indexTime(this._eventsArray.length);\n\t\t} else {\n\t\t\tthis._part.loopEnd = this._indexTime(index);\n\t\t}\n\t}\n\n\tget startOffset(): Ticks {\n\t\treturn this._part.startOffset;\n\t}\n\tset startOffset(start) {\n\t\tthis._part.startOffset = start;\n\t}\n\n\tget playbackRate(): Positive {\n\t\treturn this._part.playbackRate;\n\t}\n\tset playbackRate(rate) {\n\t\tthis._part.playbackRate = rate;\n\t}\n\n\tget probability(): NormalRange {\n\t\treturn this._part.probability;\n\t}\n\tset probability(prob) {\n\t\tthis._part.probability = prob;\n\t}\n\n\tget progress(): NormalRange {\n\t\treturn this._part.progress;\n\t}\n\n\tget humanize(): boolean | Time {\n\t\treturn this._part.humanize;\n\t}\n\tset humanize(variation) {\n\t\tthis._part.humanize = variation;\n\t}\n\n\t/**\n\t * The number of scheduled events\n\t */\n\tget length(): number {\n\t\treturn this._part.length;\n\t}\n}\n","export * from \"./Loop\";\nexport * from \"./Part\";\nexport * from \"./Pattern\";\nexport * from \"./Sequence\";\nexport * from \"./ToneEvent\";\n","import { Gain } from \"../../core/context/Gain\";\nimport { connect, ToneAudioNode, ToneAudioNodeOptions } from \"../../core/context/ToneAudioNode\";\nimport { NormalRange } from \"../../core/type/Units\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { readOnly } from \"../../core/util/Interface\";\nimport { GainToAudio } from \"../../signal/GainToAudio\";\nimport { Signal } from \"../../signal/Signal\";\n\ninterface CrossFadeOptions extends ToneAudioNodeOptions {\n\tfade: NormalRange;\n}\n\n/**\n * Tone.Crossfade provides equal power fading between two inputs.\n * More on crossfading technique [here](https://en.wikipedia.org/wiki/Fade_(audio_engineering)#Crossfading).\n * ```\n *                                             +---------+\n *                                            +> input a +>--+\n * +-----------+   +---------------------+     |         |   |\n * | 1s signal +>--> stereoPannerNode  L +>----> gain    |   |\n * +-----------+   |                     |     +---------+   |\n *               +-> pan               R +>-+                |   +--------+\n *               | +---------------------+  |                +---> output +>\n *  +------+     |                          |  +---------+   |   +--------+\n *  | fade +>----+                          | +> input b +>--+\n *  +------+                                |  |         |\n *                                          +--> gain    |\n *                                             +---------+\n * ```\n * @example\n * const crossFade = new Tone.CrossFade().toDestination();\n * // connect two inputs Tone.to a/b\n * const inputA = new Tone.Oscillator(440, \"square\").connect(crossFade.a).start();\n * const inputB = new Tone.Oscillator(440, \"sine\").connect(crossFade.b).start();\n * // use the fade to control the mix between the two\n * crossFade.fade.value = 0.5;\n * @category Component\n */\nexport class CrossFade extends ToneAudioNode<CrossFadeOptions> {\n\n\treadonly name: string = \"CrossFade\";\n\n\t/**\n\t * The crossfading is done by a StereoPannerNode\n\t */\n\tprivate _panner: StereoPannerNode = this.context.createStereoPanner();\n\n\t/**\n\t * Split the output of the panner node into two values used to control the gains.\n\t */\n\tprivate _split: ChannelSplitterNode = this.context.createChannelSplitter(2);\n\n\t/**\n\t * Convert the fade value into an audio range value so it can be connected\n\t * to the panner.pan AudioParam\n\t */\n\tprivate _g2a: GainToAudio = new GainToAudio({ context: this.context });\n\n\t/**\n\t * The input which is at full level when fade = 0\n\t */\n\treadonly a: Gain = new Gain({\n\t\tcontext: this.context,\n\t\tgain: 0,\n\t});\n\n\t/**\n\t * The input which is at full level when fade = 1\n\t */\n\treadonly b: Gain = new Gain({\n\t\tcontext: this.context,\n\t\tgain: 0,\n\t});\n\n\t/**\n\t * The output is a mix between `a` and `b` at the ratio of `fade`\n\t */\n\treadonly output: Gain = new Gain({ context: this.context });\n\n\t/**\n\t * CrossFade has no input, you must choose either `a` or `b`\n\t */\n\treadonly input: undefined;\n\n\t/**\n\t * The mix between the two inputs. A fade value of 0\n\t * will output 100% crossFade.a and\n\t * a value of 1 will output 100% crossFade.b.\n\t */\n\treadonly fade: Signal<\"normalRange\">;\n\n\tprotected _internalChannels = [this.a, this.b];\n\n\t/**\n\t * @param fade The initial fade value [0, 1].\n\t */\n\tconstructor(fade?: NormalRange);\n\tconstructor(options?: Partial<CrossFadeOptions>);\n\tconstructor() {\n\t\tsuper(Object.assign(optionsFromArguments(CrossFade.getDefaults(), arguments, [\"fade\"])));\n\t\tconst options = optionsFromArguments(CrossFade.getDefaults(), arguments, [\"fade\"]);\n\n\t\tthis.fade = new Signal({\n\t\t\tcontext: this.context,\n\t\t\tunits: \"normalRange\",\n\t\t\tvalue: options.fade,\n\t\t});\n\t\treadOnly(this, \"fade\");\n\n\t\tthis.context.getConstant(1).connect(this._panner);\n\t\tthis._panner.connect(this._split);\n\t\t// this is necessary for standardized-audio-context\n\t\t// doesn't make any difference for the native AudioContext\n\t\t// https://github.com/chrisguttandin/standardized-audio-context/issues/647\n\t\tthis._panner.channelCount = 1;\n\t\tthis._panner.channelCountMode = \"explicit\";\n\t\tconnect(this._split, this.a.gain, 0);\n\t\tconnect(this._split, this.b.gain, 1);\n\n\t\tthis.fade.chain(this._g2a, this._panner.pan);\n\n\t\tthis.a.connect(this.output);\n\t\tthis.b.connect(this.output);\n\t}\n\n\tstatic getDefaults(): CrossFadeOptions {\n\t\treturn Object.assign(ToneAudioNode.getDefaults(), {\n\t\t\tfade: 0.5,\n\t\t});\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis.a.dispose();\n\t\tthis.b.dispose();\n\t\tthis.output.dispose();\n\t\tthis.fade.dispose();\n\t\tthis._g2a.dispose();\n\t\tthis._panner.disconnect();\n\t\tthis._split.disconnect();\n\t\treturn this;\n\t}\n}\n","import { CrossFade } from \"../component/channel/CrossFade\";\nimport { Gain } from \"../core/context/Gain\";\nimport { ToneAudioNode, ToneAudioNodeOptions } from \"../core/context/ToneAudioNode\";\nimport { NormalRange } from \"../core/type/Units\";\nimport { readOnly } from \"../core/util/Interface\";\nimport { Signal } from \"../signal/Signal\";\n\nexport interface EffectOptions extends ToneAudioNodeOptions {\n\twet: NormalRange;\n}\n/**\n * Effect is the base class for effects. Connect the effect between\n * the effectSend and effectReturn GainNodes, then control the amount of\n * effect which goes to the output using the wet control.\n */\nexport abstract class Effect<Options extends EffectOptions>\n\textends ToneAudioNode<Options> {\n\n\treadonly name: string = \"Effect\";\n\n\t/**\n\t * the drywet knob to control the amount of effect\n\t */\n\tprivate _dryWet: CrossFade = new CrossFade({ context: this.context });\n\n\t/**\n\t * The wet control is how much of the effected\n\t * will pass through to the output. 1 = 100% effected\n\t * signal, 0 = 100% dry signal.\n\t */\n\twet: Signal<\"normalRange\"> = this._dryWet.fade;\n\n\t/**\n\t * connect the effectSend to the input of hte effect\n\t */\n\tprotected effectSend: Gain = new Gain({ context: this.context });\n\n\t/**\n\t * connect the output of the effect to the effectReturn\n\t */\n\tprotected effectReturn: Gain = new Gain({ context: this.context });\n\n\t/**\n\t * The effect input node\n\t */\n\tinput: Gain = new Gain({ context: this.context });\n\n\t/**\n\t * The effect output\n\t */\n\toutput = this._dryWet;\n\n\tconstructor(options: EffectOptions) {\n\t\tsuper(options);\n\n\t\t// connections\n\t\tthis.input.fan(this._dryWet.a, this.effectSend);\n\t\tthis.effectReturn.connect(this._dryWet.b);\n\t\tthis.wet.setValueAtTime(options.wet, 0);\n\t\tthis._internalChannels = [this.effectReturn, this.effectSend];\n\t\treadOnly(this, \"wet\");\n\t}\n\n\tstatic getDefaults(): EffectOptions {\n\t\treturn Object.assign(ToneAudioNode.getDefaults(), {\n\t\t\twet: 1,\n\t\t});\n\t}\n\n\t/**\n\t * chains the effect in between the effectSend and effectReturn\n\t */\n\tprotected connectEffect(effect: ToneAudioNode | AudioNode): this {\n\t\t// add it to the internal channels\n\t\tthis._internalChannels.push(effect);\n\t\tthis.effectSend.chain(effect, this.effectReturn);\n\t\treturn this;\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._dryWet.dispose();\n\t\tthis.effectSend.dispose();\n\t\tthis.effectReturn.dispose();\n\t\tthis.wet.dispose();\n\t\treturn this;\n\t}\n}\n","import { Effect, EffectOptions } from \"../effect/Effect\";\nimport { Frequency, NormalRange, Time } from \"../core/type/Units\";\nimport { LFO } from \"../source/oscillator/LFO\";\nimport { ToneOscillatorType } from \"../source/oscillator/OscillatorInterface\";\nimport { Signal } from \"../signal/Signal\";\nimport { readOnly } from \"../core/util/Interface\";\nimport { Param } from \"../core/context/Param\";\n\nexport interface LFOEffectOptions extends EffectOptions {\n\tfrequency: Frequency;\n\ttype: ToneOscillatorType;\n\tdepth: NormalRange;\n}\n\n/**\n * Base class for LFO-based effects.\n */\nexport abstract class LFOEffect<Options extends LFOEffectOptions> extends Effect<Options> {\n\n\treadonly name: string = \"LFOEffect\";\n\n\t/**\n\t * the lfo which drives the filter cutoff\n\t */\n\tprotected _lfo: LFO;\n\n\t/**\n\t * The range of the filter modulating between the min and max frequency. \n\t * 0 = no modulation. 1 = full modulation.\n\t */\n\treadonly depth: Param<\"normalRange\">;\n\n\t/**\n\t * How fast the filter modulates between min and max. \n\t */\n\treadonly frequency: Signal<\"frequency\">;\n\n\tconstructor(options: LFOEffectOptions) {\n\n\t\tsuper(options);\n\n\t\tthis._lfo = new LFO({\n\t\t\tcontext: this.context,\n\t\t\tfrequency: options.frequency,\n\t\t\tamplitude: options.depth,\n\t\t});\n\t\tthis.depth = this._lfo.amplitude;\n\t\tthis.frequency = this._lfo.frequency;\n\n\t\tthis.type = options.type;\n\t\treadOnly(this, [\"frequency\", \"depth\"]);\n\t}\n\n\tstatic getDefaults(): LFOEffectOptions {\n\t\treturn Object.assign(Effect.getDefaults(), {\n\t\t\tfrequency: 1,\n\t\t\ttype: \"sine\" as ToneOscillatorType,\n\t\t\tdepth: 1,\n\t\t});\n\t}\n\n\t/**\n\t * Start the effect.\n\t */\n\tstart(time?: Time): this {\n\t\tthis._lfo.start(time);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Stop the lfo\n\t */\n\tstop(time?: Time): this {\n\t\tthis._lfo.stop(time);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sync the filter to the transport. See [[LFO.sync]]\n\t */\n\tsync(): this {\n\t\tthis._lfo.sync();\n\t\treturn this;\n\t}\n\n\t/**\n\t * Unsync the filter from the transport.\n\t */\n\tunsync(): this {\n\t\tthis._lfo.unsync();\n\t\treturn this;\n\t}\n\n\t/**\n\t * The type of the LFO's oscillator: See [[Oscillator.type]]\n\t * @example\n\t * const autoFilter = new Tone.AutoFilter().start().toDestination();\n\t * const noise = new Tone.Noise().start().connect(autoFilter);\n\t * autoFilter.type = \"square\";\n\t */\n\tget type() {\n\t\treturn this._lfo.type;\n\t}\n\tset type(type) {\n\t\tthis._lfo.type = type;\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._lfo.dispose();\n\t\tthis.frequency.dispose();\n\t\tthis.depth.dispose();\n\t\treturn this;\n\t}\n}\n","import { Frequency, Positive } from \"../core/type/Units\";\nimport { Filter, FilterOptions } from \"../component/filter/Filter\";\nimport { SourceOptions } from \"../source/Source\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { LFOEffect, LFOEffectOptions } from \"./LFOEffect\";\n\nexport interface AutoFilterOptions extends LFOEffectOptions {\n\tbaseFrequency: Frequency;\n\toctaves: Positive;\n\tfilter: Omit<FilterOptions, keyof SourceOptions | \"frequency\" | \"detune\" | \"gain\">;\n}\n\n/**\n * AutoFilter is a Tone.Filter with a Tone.LFO connected to the filter cutoff frequency.\n * Setting the LFO rate and depth allows for control over the filter modulation rate \n * and depth.\n *\n * @example\n * // create an autofilter and start it's LFO\n * const autoFilter = new Tone.AutoFilter(\"4n\").toDestination().start();\n * // route an oscillator through the filter and start it\n * const oscillator = new Tone.Oscillator().connect(autoFilter).start();\n * @category Effect\n */\nexport class AutoFilter extends LFOEffect<AutoFilterOptions> {\n\n\treadonly name: string = \"AutoFilter\";\n\n\t/**\n\t * The filter node\n\t */\n\treadonly filter: Filter;\n\n\t/**\n\t * The octaves placeholder\n\t */\n\tprivate _octaves!: Positive;\n\n\t/**\n\t * @param frequency The rate of the LFO.\n\t * @param baseFrequency The lower value of the LFOs oscillation\n\t * @param octaves The number of octaves above the baseFrequency\n\t */\n\tconstructor(frequency?: Frequency, baseFrequency?: Frequency, octaves?: Positive);\n\tconstructor(options?: Partial<AutoFilterOptions>);\n\tconstructor() {\n\n\t\tsuper(optionsFromArguments(AutoFilter.getDefaults(), arguments, [\"frequency\", \"baseFrequency\", \"octaves\"]));\n\t\tconst options = optionsFromArguments(AutoFilter.getDefaults(), arguments, [\"frequency\", \"baseFrequency\", \"octaves\"]);\n\n\t\tthis.filter = new Filter(Object.assign(options.filter, {\n\t\t\tcontext: this.context,\n\t\t}));\n\n\t\t// connections\n\t\tthis.connectEffect(this.filter);\n\t\tthis._lfo.connect(this.filter.frequency);\n\t\tthis.octaves = options.octaves;\n\t\tthis.baseFrequency = options.baseFrequency;\n\t}\n\n\tstatic getDefaults(): AutoFilterOptions {\n\t\treturn Object.assign(LFOEffect.getDefaults(), {\n\t\t\tbaseFrequency: 200,\n\t\t\toctaves: 2.6,\n\t\t\tfilter: {\n\t\t\t\ttype: \"lowpass\" as \"lowpass\",\n\t\t\t\trolloff: -12 as -12,\n\t\t\t\tQ: 1,\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * The minimum value of the filter's cutoff frequency.\n\t */\n\tget baseFrequency(): Frequency {\n\t\treturn this._lfo.min;\n\t}\n\tset baseFrequency(freq) {\n\t\tthis._lfo.min = this.toFrequency(freq);\n\t\t// and set the max\n\t\tthis.octaves = this._octaves;\n\t}\n\n\t/**\n\t * The maximum value of the filter's cutoff frequency. \n\t */\n\tget octaves(): Positive {\n\t\treturn this._octaves;\n\t}\n\tset octaves(oct) {\n\t\tthis._octaves = oct;\n\t\tthis._lfo.max = this._lfo.min * Math.pow(2, oct);\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis.filter.dispose();\n\t\treturn this;\n\t}\n}\n","import { Param } from \"../../core/context/Param\";\nimport { ToneAudioNode, ToneAudioNodeOptions } from \"../../core/context/ToneAudioNode\";\nimport { AudioRange } from \"../../core/type/Units\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { readOnly } from \"../../core/util/Interface\";\n\ninterface TonePannerOptions extends ToneAudioNodeOptions {\n\tpan: AudioRange;\n\tchannelCount: number;\n}\n\n/**\n * Panner is an equal power Left/Right Panner. It is a wrapper around the StereoPannerNode.\n * @example\n * return Tone.Offline(() => {\n * // move the input signal from right to left\n * \tconst panner = new Tone.Panner(1).toDestination();\n * \tpanner.pan.rampTo(-1, 0.5);\n * \tconst osc = new Tone.Oscillator(100).connect(panner).start();\n * }, 0.5, 2);\n * @category Component\n */\nexport class Panner extends ToneAudioNode<TonePannerOptions> {\n\n\treadonly name: string = \"Panner\";\n\n\t/**\n\t * the panner node\n\t */\n\tprivate _panner: StereoPannerNode = this.context.createStereoPanner();\n\treadonly input: StereoPannerNode = this._panner;\n\treadonly output: StereoPannerNode = this._panner;\n\n\t/**\n\t * The pan control. -1 = hard left, 1 = hard right.\n\t * @min -1\n\t * @max 1\n\t * @example\n\t * return Tone.Offline(() => {\n\t * \t// pan hard right\n\t * \tconst panner = new Tone.Panner(1).toDestination();\n\t * \t// pan hard left\n\t * \tpanner.pan.setValueAtTime(-1, 0.25);\n\t * \tconst osc = new Tone.Oscillator(50, \"triangle\").connect(panner).start();\n\t * }, 0.5, 2);\n\t */\n\treadonly pan: Param<\"audioRange\">;\n\n\tconstructor(options?: Partial<TonePannerOptions>);\n\t/**\n\t * @param pan The initial panner value (Defaults to 0 = \"center\").\n\t */\n\tconstructor(pan?: AudioRange);\n\tconstructor() {\n\t\tsuper(Object.assign(optionsFromArguments(Panner.getDefaults(), arguments, [\"pan\"])));\n\t\tconst options = optionsFromArguments(Panner.getDefaults(), arguments, [\"pan\"]);\n\n\t\tthis.pan = new Param({\n\t\t\tcontext: this.context,\n\t\t\tparam: this._panner.pan,\n\t\t\tvalue: options.pan,\n\t\t\tminValue: -1,\n\t\t\tmaxValue: 1,\n\t\t});\n\n\t\t// this is necessary for standardized-audio-context\n\t\t// doesn't make any difference for the native AudioContext\n\t\t// https://github.com/chrisguttandin/standardized-audio-context/issues/647\n\t\tthis._panner.channelCount = options.channelCount;\n\t\tthis._panner.channelCountMode = \"explicit\";\n\n\t\t// initial value\n\t\treadOnly(this, \"pan\");\n\t}\n\n\tstatic getDefaults(): TonePannerOptions {\n\t\treturn Object.assign(ToneAudioNode.getDefaults(), {\n\t\t\tpan: 0,\n\t\t\tchannelCount: 1,\n\t\t});\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._panner.disconnect();\n\t\tthis.pan.dispose();\n\t\treturn this;\n\t}\n}\n","import { Panner } from \"../component/channel/Panner\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { LFOEffect, LFOEffectOptions } from \"./LFOEffect\";\nimport { Frequency } from \"../core/type/Units\";\n\nexport interface AutoPannerOptions extends LFOEffectOptions {\n\tchannelCount: number;\n}\n\n/**\n * AutoPanner is a [[Panner]] with an [[LFO]] connected to the pan amount. \n * [Related Reading](https://www.ableton.com/en/blog/autopan-chopper-effect-and-more-liveschool/).\n *\n * @example\n * // create an autopanner and start it\n * const autoPanner = new Tone.AutoPanner(\"4n\").toDestination().start();\n * // route an oscillator through the panner and start it\n * const oscillator = new Tone.Oscillator().connect(autoPanner).start();\n * @category Effect\n */\nexport class AutoPanner extends LFOEffect<AutoPannerOptions> {\n\n\treadonly name: string = \"AutoPanner\";\n\n\t/**\n\t * The filter node\n\t */\n\treadonly _panner: Panner;\n\n\t/**\n\t * @param frequency Rate of left-right oscillation. \n\t */\n\tconstructor(frequency?: Frequency);\n\tconstructor(options?: Partial<AutoPannerOptions>);\n\tconstructor() {\n\n\t\tsuper(optionsFromArguments(AutoPanner.getDefaults(), arguments, [\"frequency\"]));\n\t\tconst options = optionsFromArguments(AutoPanner.getDefaults(), arguments, [\"frequency\"]);\n\n\t\tthis._panner = new Panner({\n\t\t\tcontext: this.context,\n\t\t\tchannelCount: options.channelCount\n\t\t});\n\t\t// connections\n\t\tthis.connectEffect(this._panner);\n\t\tthis._lfo.connect(this._panner.pan);\n\t\tthis._lfo.min = -1;\n\t\tthis._lfo.max = 1;\n\t}\n\n\tstatic getDefaults(): AutoPannerOptions {\n\t\treturn Object.assign(LFOEffect.getDefaults(), {\n\t\t\tchannelCount: 1\n\t\t});\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._panner.dispose();\n\t\treturn this;\n\t}\n}\n\n","import { Time } from \"../../core/type/Units\";\nimport { InputNode, OutputNode, ToneAudioNode, ToneAudioNodeOptions } from \"../../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { OnePoleFilter } from \"../filter/OnePoleFilter\";\nimport { Abs } from \"../../signal/Abs\";\n\nexport interface FollowerOptions extends ToneAudioNodeOptions {\n\tsmoothing: Time;\n}\n\n/**\n * Follower is a simple envelope follower. \n * It's implemented by applying a lowpass filter to the absolute value of the incoming signal. \n * ```\n *          +-----+    +---------------+\n * Input +--> Abs +----> OnePoleFilter +--> Output\n *          +-----+    +---------------+\n * ```\n * @category Component\n */\nexport class Follower extends ToneAudioNode<FollowerOptions> {\n\n\treadonly name: string = \"Follower\";\n\n\treadonly input: InputNode;\n\treadonly output: OutputNode;\n\n\t/**\n\t * Private reference to the smoothing parameter\n\t */\n\tprivate _smoothing: Time;\n\n\t/**\n\t * The lowpass filter\n\t */\n\tprivate _lowpass: OnePoleFilter;\n\n\t/**\n\t * The absolute value\n\t */\n\tprivate _abs: Abs;\n\n\t/**\n\t * @param smoothing The rate of change of the follower.\n\t */\n\tconstructor(smoothing?: Time);\n\tconstructor(options?: Partial<FollowerOptions>);\n\tconstructor() {\n\t\tsuper(optionsFromArguments(Follower.getDefaults(), arguments, [\"smoothing\"]));\n\t\tconst options = optionsFromArguments(Follower.getDefaults(), arguments, [\"smoothing\"]);\n\n\t\tthis._abs = this.input = new Abs({ context: this.context });\n\t\tthis._lowpass = this.output = new OnePoleFilter({\n\t\t\tcontext: this.context,\n\t\t\tfrequency: 1 / this.toSeconds(options.smoothing),\n\t\t\ttype: \"lowpass\"\n\t\t});\n\t\tthis._abs.connect(this._lowpass);\n\t\tthis._smoothing = options.smoothing;\n\t}\n\n\tstatic getDefaults(): FollowerOptions {\n\t\treturn Object.assign(ToneAudioNode.getDefaults(), {\n\t\t\tsmoothing: 0.05\n\t\t});\n\t}\n\n\t/**\n\t * The amount of time it takes a value change to arrive at the updated value. \n\t */\n\tget smoothing(): Time {\n\t\treturn this._smoothing;\n\t}\n\tset smoothing(smoothing) {\n\t\tthis._smoothing = smoothing;\n\t\tthis._lowpass.frequency = 1 / this.toSeconds(this.smoothing);\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._abs.dispose();\n\t\tthis._lowpass.dispose();\n\t\treturn this;\n\t}\n}\n","import { Effect, EffectOptions } from \"./Effect\";\nimport { Filter } from \"../component/filter/Filter\";\nimport { Follower } from \"../component/analysis/Follower\";\nimport { Decibels, Frequency, GainFactor, Hertz, Positive, Time } from \"../core/type/Units\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { Gain } from \"../core/context/Gain\";\nimport { dbToGain, gainToDb } from \"../core/type/Conversions\";\nimport { ScaleExp } from \"../signal/ScaleExp\";\nimport { Signal } from \"../signal/Signal\";\nimport { readOnly } from \"../core/util/Interface\";\n\nexport interface AutoWahOptions extends EffectOptions {\n\tbaseFrequency: Frequency;\n\toctaves: Positive;\n\tsensitivity: Decibels;\n\tQ: Positive;\n\tgain: GainFactor;\n\tfollower: Time;\n}\n\n/**\n * AutoWah connects a [[Follower]] to a [[Filter]]. \n * The frequency of the filter, follows the input amplitude curve. \n * Inspiration from [Tuna.js](https://github.com/Dinahmoe/tuna).\n * \n * @example\n * const autoWah = new Tone.AutoWah(50, 6, -30).toDestination();\n * // initialize the synth and connect to autowah\n * const synth = new Tone.Synth().connect(autoWah);\n * // Q value influences the effect of the wah - default is 2\n * autoWah.Q.value = 6;\n * // more audible on higher notes\n * synth.triggerAttackRelease(\"C4\", \"8n\");\n * @category Effect\n */\nexport class AutoWah extends Effect<AutoWahOptions> {\n\n\treadonly name: string = \"AutoWah\";\n\n\t/**\n\t * The envelope follower. Set the attack/release\n\t * timing to adjust how the envelope is followed.\n\t */\n\tprivate _follower: Follower;\n\n\t/**\n\t * scales the follower value to the frequency domain\n\t */\n\tprivate _sweepRange: ScaleExp;\n\n\t/**\n\t * Hold the base frequency value\n\t */\n\tprivate _baseFrequency: Hertz;\n\n\t/**\n\t * Private holder for the octave count\n\t */\n\tprivate _octaves: Positive;\n\n\t/**\n\t * the input gain to adjust the sensitivity\n\t */\n\tprivate _inputBoost: Gain;\n\n\t/**\n\t * Private holder for the filter\n\t */\n\tprivate _bandpass: Filter;\n\n\t/**\n\t * The peaking fitler\n\t */\n\tprivate _peaking: Filter;\n\n\t/**\n\t * The gain of the filter.\n\t */\n\treadonly gain: Signal<\"decibels\">;\n\n\t/**\n\t * The quality of the filter.\n\t */\n\treadonly Q: Signal<\"positive\">;\n\n\t/**\n\t * @param baseFrequency The frequency the filter is set to at the low point of the wah\n\t * @param octaves The number of octaves above the baseFrequency the filter will sweep to when fully open. \n\t * @param sensitivity The decibel threshold sensitivity for the incoming signal. Normal range of -40 to 0.\n\t */\n\tconstructor(baseFrequency?: Frequency, octaves?: Positive, sensitivity?: Decibels);\n\tconstructor(options?: Partial<AutoWahOptions>);\n\tconstructor() {\n\n\t\tsuper(optionsFromArguments(AutoWah.getDefaults(), arguments, [\"baseFrequency\", \"octaves\", \"sensitivity\"]));\n\t\tconst options = optionsFromArguments(AutoWah.getDefaults(), arguments, [\"baseFrequency\", \"octaves\", \"sensitivity\"]);\n\n\t\tthis._follower = new Follower({\n\t\t\tcontext: this.context,\n\t\t\tsmoothing: options.follower,\n\t\t});\n\t\tthis._sweepRange = new ScaleExp({\n\t\t\tcontext: this.context,\n\t\t\tmin: 0,\n\t\t\tmax: 1,\n\t\t\texponent: 0.5,\n\t\t});\n\t\tthis._baseFrequency = this.toFrequency(options.baseFrequency);\n\t\tthis._octaves = options.octaves;\n\t\tthis._inputBoost = new Gain({ context: this.context });\n\t\tthis._bandpass = new Filter({\n\t\t\tcontext: this.context,\n\t\t\trolloff: -48,\n\t\t\tfrequency: 0,\n\t\t\tQ: options.Q,\n\t\t});\n\t\tthis._peaking = new Filter({\n\t\t\tcontext: this.context,\n\t\t\ttype: \"peaking\"\n\t\t});\n\t\tthis._peaking.gain.value = options.gain;\n\t\tthis.gain = this._peaking.gain;\n\t\tthis.Q = this._bandpass.Q;\n\n\t\t// the control signal path\n\t\tthis.effectSend.chain(this._inputBoost, this._follower, this._sweepRange);\n\t\tthis._sweepRange.connect(this._bandpass.frequency);\n\t\tthis._sweepRange.connect(this._peaking.frequency);\n\t\t// the filtered path\n\t\tthis.effectSend.chain(this._bandpass, this._peaking, this.effectReturn);\n\t\t// set the initial value\n\t\tthis._setSweepRange();\n\t\tthis.sensitivity = options.sensitivity;\n\n\t\treadOnly(this, [\"gain\", \"Q\"]);\n\t}\n\n\tstatic getDefaults(): AutoWahOptions {\n\t\treturn Object.assign(Effect.getDefaults(), {\n\t\t\tbaseFrequency: 100,\n\t\t\toctaves: 6,\n\t\t\tsensitivity: 0,\n\t\t\tQ: 2,\n\t\t\tgain: 2,\n\t\t\tfollower: 0.2,\n\t\t});\n\t}\n\n\t/**\n\t * The number of octaves that the filter will sweep above the baseFrequency.\n\t */\n\tget octaves() {\n\t\treturn this._octaves;\n\t}\n\tset octaves(octaves) {\n\t\tthis._octaves = octaves;\n\t\tthis._setSweepRange();\n\t}\n\n\t/**\n\t * The follower's smoothing time\n\t */\n\tget follower(): Time {\n\t\treturn this._follower.smoothing;\n\t}\n\tset follower(follower) {\n\t\tthis._follower.smoothing = follower;\n\t}\n\n\t/**\n\t * The base frequency from which the sweep will start from.\n\t */\n\tget baseFrequency(): Frequency {\n\t\treturn this._baseFrequency;\n\t}\n\tset baseFrequency(baseFreq) {\n\t\tthis._baseFrequency = this.toFrequency(baseFreq);\n\t\tthis._setSweepRange();\n\t}\n\n\t/**\n\t * The sensitivity to control how responsive to the input signal the filter is.\n\t */\n\tget sensitivity(): Decibels {\n\t\treturn gainToDb(1 / this._inputBoost.gain.value);\n\t}\n\tset sensitivity(sensitivity) {\n\t\tthis._inputBoost.gain.value = 1 / dbToGain(sensitivity);\n\t}\n\n\t/**\n\t * sets the sweep range of the scaler\n\t */\n\tprivate _setSweepRange() {\n\t\tthis._sweepRange.min = this._baseFrequency;\n\t\tthis._sweepRange.max = Math.min(this._baseFrequency * Math.pow(2, this._octaves), this.context.sampleRate / 2);\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._follower.dispose();\n\t\tthis._sweepRange.dispose();\n\t\tthis._bandpass.dispose();\n\t\tthis._peaking.dispose();\n\t\tthis._inputBoost.dispose();\n\t\treturn this;\n\t}\n}\n","import \"../core/worklet/SingleIOProcessor.worklet\";\nimport { registerProcessor } from \"../core/worklet/WorkletGlobalScope\";\n\nexport const workletName = \"bit-crusher\";\n\nexport const bitCrusherWorklet = /* javascript */`\n\tclass BitCrusherWorklet extends SingleIOProcessor {\n\n\t\tstatic get parameterDescriptors() {\n\t\t\treturn [{\n\t\t\t\tname: \"bits\",\n\t\t\t\tdefaultValue: 12,\n\t\t\t\tminValue: 1,\n\t\t\t\tmaxValue: 16,\n\t\t\t\tautomationRate: 'k-rate'\n\t\t\t}];\n\t\t}\n\n\t\tgenerate(input, _channel, parameters) {\n\t\t\tconst step = Math.pow(0.5, parameters.bits - 1);\n\t\t\tconst val = step * Math.floor(input / step + 0.5);\n\t\t\treturn val;\n\t\t}\n\t}\n`;\n\nregisterProcessor(workletName, bitCrusherWorklet);\n","import { ToneAudioWorklet, ToneAudioWorkletOptions } from \"../core/worklet/ToneAudioWorklet\";\nimport { Effect, EffectOptions } from \"./Effect\";\nimport { Positive } from \"../core/type/Units\";\nimport { Gain } from \"../core/context/Gain\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { connectSeries } from \"../core/context/ToneAudioNode\";\nimport { Param } from \"../core/context/Param\";\nimport { workletName } from \"./BitCrusher.worklet\";\n\nexport interface BitCrusherOptions extends EffectOptions {\n\tbits: Positive;\n}\n\n/**\n * BitCrusher down-samples the incoming signal to a different bit depth.\n * Lowering the bit depth of the signal creates distortion. Read more about BitCrushing\n * on [Wikipedia](https://en.wikipedia.org/wiki/Bitcrusher).\n * @example\n * // initialize crusher and route a synth through it\n * const crusher = new Tone.BitCrusher(4).toDestination();\n * const synth = new Tone.Synth().connect(crusher);\n * synth.triggerAttackRelease(\"C2\", 2);\n * \n * @category Effect\n */\nexport class BitCrusher extends Effect<BitCrusherOptions> {\n\n\treadonly name: string = \"BitCrusher\";\n\n\t/**\n\t * The bit depth of the effect\n\t * @min 1\n\t * @max 16\n\t */\n\treadonly bits: Param<\"positive\">;\n\n\t/**\n\t * The node which does the bit crushing effect. Runs in an AudioWorklet when possible.\n\t */\n\tprivate _bitCrusherWorklet: BitCrusherWorklet;\n\n\tconstructor(bits?: Positive);\n\tconstructor(options?: Partial<BitCrusherWorkletOptions>);\n\tconstructor() {\n\t\tsuper(optionsFromArguments(BitCrusher.getDefaults(), arguments, [\"bits\"]));\n\t\tconst options = optionsFromArguments(BitCrusher.getDefaults(), arguments, [\"bits\"]);\n\n\t\tthis._bitCrusherWorklet = new BitCrusherWorklet({\n\t\t\tcontext: this.context,\n\t\t\tbits: options.bits,\n\t\t});\n\t\t// connect it up\n\t\tthis.connectEffect(this._bitCrusherWorklet);\n\n\t\tthis.bits = this._bitCrusherWorklet.bits;\n\t}\n\n\tstatic getDefaults(): BitCrusherOptions {\n\t\treturn Object.assign(Effect.getDefaults(), {\n\t\t\tbits: 4,\n\t\t});\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._bitCrusherWorklet.dispose();\n\t\treturn this;\n\t}\n}\n\ninterface BitCrusherWorkletOptions extends ToneAudioWorkletOptions {\n\tbits: number;\n}\n\n/**\n * Internal class which creates an AudioWorklet to do the bit crushing\n */\nclass BitCrusherWorklet extends ToneAudioWorklet<BitCrusherWorkletOptions> {\n\n\treadonly name: string = \"BitCrusherWorklet\";\n\n\treadonly input: Gain;\n\treadonly output: Gain;\n\n\treadonly bits: Param<\"positive\">;\n\n\tconstructor(options?: Partial<BitCrusherWorkletOptions>);\n\tconstructor() {\n\t\tsuper(optionsFromArguments(BitCrusherWorklet.getDefaults(), arguments));\n\t\tconst options = optionsFromArguments(BitCrusherWorklet.getDefaults(), arguments);\n\n\t\tthis.input = new Gain({ context: this.context });\n\t\tthis.output = new Gain({ context: this.context });\n\n\t\tthis.bits = new Param<\"positive\">({\n\t\t\tcontext: this.context,\n\t\t\tvalue: options.bits,\n\t\t\tunits: \"positive\",\n\t\t\tminValue: 1,\n\t\t\tmaxValue: 16,\n\t\t\tparam: this._dummyParam,\n\t\t\tswappable: true,\n\t\t});\n\t}\n\n\tstatic getDefaults(): BitCrusherWorkletOptions {\n\t\treturn Object.assign(ToneAudioWorklet.getDefaults(), {\n\t\t\tbits: 12,\n\t\t});\n\t}\n\n\tprotected _audioWorkletName(): string {\n\t\treturn workletName;\n\t}\n\n\tonReady(node: AudioWorkletNode) {\n\t\tconnectSeries(this.input, node, this.output);\n\t\tconst bits = node.parameters.get(\"bits\") as AudioParam;\n\t\tthis.bits.setParam(bits);\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis.input.dispose();\n\t\tthis.output.dispose();\n\t\tthis.bits.dispose();\n\t\treturn this;\n\t}\n}\n","import { Effect, EffectOptions } from \"./Effect\";\nimport { Positive } from \"../core/type/Units\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { WaveShaper } from \"../signal/WaveShaper\";\nimport { assert } from \"../core/util/Debug\";\n\nexport interface ChebyshevOptions extends EffectOptions {\n\torder: Positive;\n\toversample: OverSampleType;\n}\n\n/**\n * Chebyshev is a waveshaper which is good \n * for making different types of distortion sounds.\n * Note that odd orders sound very different from even ones, \n * and order = 1 is no change. \n * Read more at [music.columbia.edu](http://music.columbia.edu/cmc/musicandcomputers/chapter4/04_06.php).\n * @example\n * // create a new cheby\n * const cheby = new Tone.Chebyshev(50).toDestination();\n * // create a monosynth connected to our cheby\n * const synth = new Tone.MonoSynth().connect(cheby);\n * synth.triggerAttackRelease(\"C2\", 0.4);\n * @category Effect\n */\nexport class Chebyshev extends Effect<ChebyshevOptions> {\n\n\treadonly name: string = \"Chebyshev\";\n\n\t/**\n\t * The private waveshaper node\n\t */\n\tprivate _shaper: WaveShaper;\n\n\t/**\n\t * holds onto the order of the filter\n\t */\n\tprivate _order: number;\n\n\t/**\n\t * @param order The order of the chebyshev polynomial. Normal range between 1-100. \n\t */\n\tconstructor(order?: Positive);\n\tconstructor(options?: Partial<ChebyshevOptions>);\n\tconstructor() {\n\n\t\tsuper(optionsFromArguments(Chebyshev.getDefaults(), arguments, [\"order\"]));\n\t\tconst options = optionsFromArguments(Chebyshev.getDefaults(), arguments, [\"order\"]);\n\n\t\tthis._shaper = new WaveShaper({\n\t\t\tcontext: this.context,\n\t\t\tlength: 4096\n\t\t});\n\t\tthis._order = options.order;\n\n\t\tthis.connectEffect(this._shaper);\n\t\tthis.order = options.order;\n\t\tthis.oversample = options.oversample;\n\t}\n\n\tstatic getDefaults(): ChebyshevOptions {\n\t\treturn Object.assign(Effect.getDefaults(), {\n\t\t\torder: 1,\n\t\t\toversample: \"none\" as \"none\"\n\t\t});\n\t}\n\n\t/**\n\t * get the coefficient for that degree\n\t * @param  x the x value\n\t * @param  degree \n\t * @param  memo memoize the computed value. this speeds up computation greatly. \n\t */\n\tprivate _getCoefficient(x: number, degree: number, memo: Map<number, number>): number {\n\t\tif (memo.has(degree)) {\n\t\t\treturn memo.get(degree) as number;\n\t\t} else if (degree === 0) {\n\t\t\tmemo.set(degree, 0);\n\t\t} else if (degree === 1) {\n\t\t\tmemo.set(degree, x);\n\t\t} else {\n\t\t\tmemo.set(degree, 2 * x * this._getCoefficient(x, degree - 1, memo) - this._getCoefficient(x, degree - 2, memo));\n\t\t}\n\t\treturn memo.get(degree) as number;\n\t}\n\n\t/**\n\t * The order of the Chebyshev polynomial which creates the equation which is applied to the incoming \n\t * signal through a Tone.WaveShaper. Must be an integer. The equations are in the form:\n\t * ```\n\t * order 2: 2x^2 + 1\n\t * order 3: 4x^3 + 3x \n\t * ```\n\t * @min 1\n\t * @max 100\n\t */\n\tget order(): Positive {\n\t\treturn this._order;\n\t}\n\tset order(order) {\n\t\tassert(Number.isInteger(order), \"'order' must be an integer\");\n\t\tthis._order = order;\n\t\tthis._shaper.setMap((x => {\n\t\t\treturn this._getCoefficient(x, order, new Map());\n\t\t}));\n\t}\n\n\t/**\n\t * The oversampling of the effect. Can either be \"none\", \"2x\" or \"4x\".\n\t */\n\tget oversample(): OverSampleType {\n\t\treturn this._shaper.oversample;\n\t}\n\tset oversample(oversampling) {\n\t\tthis._shaper.oversample = oversampling;\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._shaper.dispose();\n\t\treturn this;\n\t}\n}\n","import { ToneAudioNode, ToneAudioNodeOptions } from \"../../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\n\ninterface SplitOptions extends ToneAudioNodeOptions {\n\tchannels: number;\n}\n\n/**\n * Split splits an incoming signal into the number of given channels.\n *\n * @example\n * const split = new Tone.Split();\n * // stereoSignal.connect(split);\n * @category Component\n */\nexport class Split extends ToneAudioNode<SplitOptions> {\n\treadonly name: string = \"Split\";\n\n\t/**\n\t * The splitting node\n\t */\n\tprivate _splitter: ChannelSplitterNode;\n\n\treadonly input: ChannelSplitterNode;\n\treadonly output: ChannelSplitterNode;\n\n\t/**\n\t * @param channels The number of channels to merge.\n\t */\n\tconstructor(channels?: number);\n\tconstructor(options?: Partial<SplitOptions>);\n\tconstructor() {\n\t\tsuper(optionsFromArguments(Split.getDefaults(), arguments, [\"channels\"]));\n\t\tconst options = optionsFromArguments(Split.getDefaults(), arguments, [\"channels\"]);\n\n\t\tthis._splitter = this.input = this.output = this.context.createChannelSplitter(options.channels);\n\t\tthis._internalChannels = [this._splitter];\n\t}\n\n\tstatic getDefaults(): SplitOptions {\n\t\treturn Object.assign(ToneAudioNode.getDefaults(), {\n\t\t\tchannels: 2,\n\t\t});\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._splitter.disconnect();\n\t\treturn this;\n\t}\n}\n","import { ToneAudioNode, ToneAudioNodeOptions } from \"../../core/context/ToneAudioNode\";\nimport { Positive } from \"../../core/type/Units\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\n\ninterface MergeOptions extends ToneAudioNodeOptions {\n\tchannels: Positive;\n}\n\n/**\n * Merge brings multiple mono input channels into a single multichannel output channel.\n *\n * @example\n * const merge = new Tone.Merge().toDestination();\n * // routing a sine tone in the left channel\n * const osc = new Tone.Oscillator().connect(merge, 0, 0).start();\n * // and noise in the right channel\n * const noise = new Tone.Noise().connect(merge, 0, 1).start();;\n * @category Component\n */\nexport class Merge extends ToneAudioNode<MergeOptions> {\n\n\treadonly name: string = \"Merge\";\n\n\t/**\n\t * The merger node for the channels.\n\t */\n\tprivate _merger: ChannelMergerNode;\n\n\t/**\n\t * The output is the input channels combined into a single (multichannel) output\n\t */\n\treadonly output: ChannelMergerNode;\n\n\t/**\n\t * Multiple input connections combine into a single output.\n\t */\n\treadonly input: ChannelMergerNode;\n\n\t/**\n\t * @param channels The number of channels to merge.\n\t */\n\tconstructor(channels?: Positive);\n\tconstructor(options?: Partial<MergeOptions>);\n\tconstructor() {\n\t\tsuper(optionsFromArguments(Merge.getDefaults(), arguments, [\"channels\"]));\n\t\tconst options = optionsFromArguments(Merge.getDefaults(), arguments, [\"channels\"]);\n\n\t\tthis._merger = this.output = this.input = this.context.createChannelMerger(options.channels);\n\t}\n\n\tstatic getDefaults(): MergeOptions {\n\t\treturn Object.assign(ToneAudioNode.getDefaults(), {\n\t\t\tchannels: 2,\n\t\t});\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._merger.disconnect();\n\t\treturn this;\n\t}\n}\n","import { EffectOptions } from \"./Effect\";\nimport { connect, connectSeries, OutputNode, ToneAudioNode } from \"../core/context/ToneAudioNode\";\nimport { CrossFade } from \"../component/channel/CrossFade\";\nimport { Signal } from \"../signal/Signal\";\nimport { Split } from \"../component/channel/Split\";\nimport { Gain } from \"../core/context/Gain\";\nimport { Merge } from \"../component/channel/Merge\";\nimport { readOnly } from \"../core/util/Interface\";\n\nexport type StereoEffectOptions = EffectOptions;\n\n/**\n * Base class for Stereo effects.\n */\nexport class StereoEffect<Options extends StereoEffectOptions> extends ToneAudioNode<Options> {\n\n\treadonly name: string = \"StereoEffect\";\n\n\treadonly input: Gain;\n\treadonly output: CrossFade;\n\n\t/**\n\t * the drywet knob to control the amount of effect\n\t */\n\tprivate _dryWet: CrossFade;\n\t\n\t/**\n\t * The wet control, i.e. how much of the effected\n\t * will pass through to the output.\n\t */\n\treadonly wet: Signal<\"normalRange\">;\n\t\n\t/**\n\t * Split it\n\t */\n\tprotected _split: Split;\n\t\n\t/**\n\t * the stereo effect merger\n\t */\n\tprotected _merge: Merge;\n\n\tconstructor(options: StereoEffectOptions) {\n\n\t\tsuper(options);\n\n\t\tthis.input = new Gain({ context: this.context });\n\t\t// force mono sources to be stereo\n\t\tthis.input.channelCount = 2;\n\t\tthis.input.channelCountMode = \"explicit\";\n\n\t\tthis._dryWet = this.output = new CrossFade({\n\t\t\tcontext: this.context,\n\t\t\tfade: options.wet\n\t\t});\n\t\tthis.wet = this._dryWet.fade;\n\t\tthis._split = new Split({ context: this.context, channels: 2 });\n\t\tthis._merge = new Merge({ context: this.context, channels: 2 });\n\n\t\t// connections\n\t\tthis.input.connect(this._split);\n\t\t// dry wet connections\n\t\tthis.input.connect(this._dryWet.a);\n\t\tthis._merge.connect(this._dryWet.b);\n\t\treadOnly(this, [\"wet\"]);\n\t}\n\t\n\t/**\n\t * Connect the left part of the effect\n\t */\n\tprotected connectEffectLeft(...nodes: OutputNode[]): void{\n\t\tthis._split.connect(nodes[0], 0, 0);\n\t\tconnectSeries(...nodes);\n\t\tconnect(nodes[nodes.length-1], this._merge, 0, 0);\n\t}\n\t\n\t/**\n\t * Connect the right part of the effect\n\t */\n\tprotected connectEffectRight(...nodes: OutputNode[]): void{\n\t\tthis._split.connect(nodes[0], 1, 0);\n\t\tconnectSeries(...nodes);\n\t\tconnect(nodes[nodes.length-1], this._merge, 0, 1);\n\t}\n\n\tstatic getDefaults(): StereoEffectOptions {\n\t\treturn Object.assign(ToneAudioNode.getDefaults(), {\n\t\t\twet: 1,\n\t\t});\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._dryWet.dispose();\n\t\tthis._split.dispose();\n\t\tthis._merge.dispose();\n\t\treturn this;\n\t}\n}\n","import { StereoEffect, StereoEffectOptions } from \"./StereoEffect\";\nimport { NormalRange } from \"../core/type/Units\";\nimport { Signal } from \"../signal/Signal\";\nimport { Gain } from \"../core/context/Gain\";\nimport { readOnly } from \"../core/util/Interface\";\nimport { Split } from \"../component/channel/Split\";\nimport { Merge } from \"../component/channel/Merge\";\n\nexport interface StereoFeedbackEffectOptions extends StereoEffectOptions {\n\tfeedback: NormalRange;\n}\n\n/**\n * Base class for stereo feedback effects where the effectReturn is fed back into the same channel.\n */\nexport class StereoFeedbackEffect<Options extends StereoFeedbackEffectOptions> extends StereoEffect<Options> {\n\t\n\t/**\n\t * The amount of feedback from the output\n\t * back into the input of the effect (routed\n\t * across left and right channels).\n\t */\n\treadonly feedback: Signal<\"normalRange\">;\n\n\t/**\n\t * the left side feedback\n\t */\n\tprotected _feedbackL: Gain;\n\n\t/**\n\t * the right side feedback\n\t */\n\tprotected _feedbackR: Gain;\n\n\t/**\n\t * Split the channels for feedback\n\t */\n\tprotected _feedbackSplit: Split;\n\n\t/**\n\t * Merge the channels for feedback\n\t */\n\tprotected _feedbackMerge: Merge;\n\n\tconstructor(options: StereoFeedbackEffectOptions) {\n\n\t\tsuper(options);\n\n\t\tthis.feedback = new Signal({\n\t\t\tcontext: this.context,\n\t\t\tvalue: options.feedback, \n\t\t\tunits: \"normalRange\"\n\t\t});\n\t\tthis._feedbackL = new Gain({ context: this.context });\n\t\tthis._feedbackR = new Gain({ context: this.context });\n\n\t\tthis._feedbackSplit = new Split({ context: this.context, channels: 2 });\n\t\tthis._feedbackMerge = new Merge({ context: this.context, channels: 2 });\n\n\t\tthis._merge.connect(this._feedbackSplit);\n\t\tthis._feedbackMerge.connect(this._split);\n\t\t\n\t\t// the left output connected to the left input\n\t\tthis._feedbackSplit.connect(this._feedbackL, 0, 0);\n\t\tthis._feedbackL.connect(this._feedbackMerge, 0, 0);\n\n\t\t// the right output connected to the right input\n\t\tthis._feedbackSplit.connect(this._feedbackR, 1, 0);\n\t\tthis._feedbackR.connect(this._feedbackMerge, 0, 1);\n\t\t\n\t\t// the feedback control\n\t\tthis.feedback.fan(this._feedbackL.gain, this._feedbackR.gain);\n\t\treadOnly(this, [\"feedback\"]);\n\t}\n\n\tstatic getDefaults(): StereoFeedbackEffectOptions {\n\t\treturn Object.assign(StereoEffect.getDefaults(), {\n\t\t\tfeedback: 0.5,\n\t\t});\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis.feedback.dispose();\n\t\tthis._feedbackL.dispose();\n\t\tthis._feedbackR.dispose();\n\t\tthis._feedbackSplit.dispose();\n\t\tthis._feedbackMerge.dispose();\n\t\treturn this;\n\t}\n}\n","import { StereoFeedbackEffect, StereoFeedbackEffectOptions } from \"../effect/StereoFeedbackEffect\";\nimport { Degrees, Frequency, Milliseconds, NormalRange, Seconds, Time } from \"../core/type/Units\";\nimport { ToneOscillatorType } from \"../source/oscillator/OscillatorInterface\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { LFO } from \"../source/oscillator/LFO\";\nimport { Delay } from \"../core/context/Delay\";\nimport { Signal } from \"../signal/Signal\";\nimport { readOnly } from \"../core/util/Interface\";\n\nexport interface ChorusOptions extends StereoFeedbackEffectOptions {\n\tfrequency: Frequency;\n\tdelayTime: Milliseconds;\n\tdepth: NormalRange;\n\ttype: ToneOscillatorType;\n\tspread: Degrees;\n}\n\n/**\n * Chorus is a stereo chorus effect composed of a left and right delay with an [[LFO]] applied to the delayTime of each channel.\n * When [[feedback]] is set to a value larger than 0, you also get Flanger-type effects. \n * Inspiration from [Tuna.js](https://github.com/Dinahmoe/tuna/blob/master/tuna.js).\n * Read more on the chorus effect on [SoundOnSound](http://www.soundonsound.com/sos/jun04/articles/synthsecrets.htm).\n *\n * @example\n * const chorus = new Tone.Chorus(4, 2.5, 0.5).toDestination().start();\n * const synth = new Tone.PolySynth().connect(chorus);\n * synth.triggerAttackRelease([\"C3\", \"E3\", \"G3\"], \"8n\");\n * \n * @category Effect\n */\nexport class Chorus extends StereoFeedbackEffect<ChorusOptions> {\n\n\treadonly name: string = \"Chorus\";\n\n\t/**\n\t * the depth of the chorus\n\t */\n\tprivate _depth: NormalRange;\n\n\t/**\n\t * the delayTime in seconds.\n\t */\n\tprivate _delayTime: Seconds;\n\n\t/**\n\t * the lfo which controls the delayTime\n\t */\n\tprivate _lfoL: LFO\n\n\t/**\n\t * another LFO for the right side with a 180 degree phase diff\n\t */\n\tprivate _lfoR: LFO\n\n\t/**\n\t * delay for left\n\t */\n\tprivate _delayNodeL: Delay;\n\n\t/**\n\t * delay for right\n\t */\n\tprivate _delayNodeR: Delay;\n\n\t/**\n\t * The frequency of the LFO which modulates the delayTime.\n\t */\n\treadonly frequency: Signal<\"frequency\">\n\n\t/**\n\t * @param frequency The frequency of the LFO.\n\t * @param delayTime The delay of the chorus effect in ms.\n\t * @param depth The depth of the chorus.\n\t */\n\tconstructor(frequency?: Frequency, delayTime?: Milliseconds, depth?: NormalRange);\n\tconstructor(options?: Partial<ChorusOptions>);\n\tconstructor() {\n\n\t\tsuper(optionsFromArguments(Chorus.getDefaults(), arguments, [\"frequency\", \"delayTime\", \"depth\"]));\n\t\tconst options = optionsFromArguments(Chorus.getDefaults(), arguments, [\"frequency\", \"delayTime\", \"depth\"]);\n\n\t\tthis._depth = options.depth;\n\t\tthis._delayTime = options.delayTime / 1000;\n\t\tthis._lfoL = new LFO({\n\t\t\tcontext: this.context,\n\t\t\tfrequency: options.frequency,\n\t\t\tmin: 0,\n\t\t\tmax: 1,\n\t\t});\n\t\tthis._lfoR = new LFO({\n\t\t\tcontext: this.context,\n\t\t\tfrequency: options.frequency,\n\t\t\tmin: 0,\n\t\t\tmax: 1,\n\t\t\tphase: 180\n\t\t});\n\t\tthis._delayNodeL = new Delay({ context: this.context });\n\t\tthis._delayNodeR = new Delay({ context: this.context });\n\t\tthis.frequency = this._lfoL.frequency;\n\t\treadOnly(this, [\"frequency\"]);\n\t\t// have one LFO frequency control the other\n\t\tthis._lfoL.frequency.connect(this._lfoR.frequency);\n\n\t\t// connections\n\t\tthis.connectEffectLeft(this._delayNodeL);\n\t\tthis.connectEffectRight(this._delayNodeR);\n\t\t// lfo setup\n\t\tthis._lfoL.connect(this._delayNodeL.delayTime);\n\t\tthis._lfoR.connect(this._delayNodeR.delayTime);\n\t\t// set the initial values\n\t\tthis.depth = this._depth;\n\t\tthis.type = options.type;\n\t\tthis.spread = options.spread;\n\t}\n\n\tstatic getDefaults(): ChorusOptions {\n\t\treturn Object.assign(StereoFeedbackEffect.getDefaults(), {\n\t\t\tfrequency: 1.5,\n\t\t\tdelayTime: 3.5,\n\t\t\tdepth: 0.7,\n\t\t\ttype: \"sine\" as \"sine\",\n\t\t\tspread: 180,\n\t\t\tfeedback: 0,\n\t\t\twet: 0.5,\n\t\t});\n\t}\n\n\t/**\n\t * The depth of the effect. A depth of 1 makes the delayTime\n\t * modulate between 0 and 2*delayTime (centered around the delayTime).\n\t */\n\tget depth(): NormalRange {\n\t\treturn this._depth;\n\t}\n\tset depth(depth) {\n\t\tthis._depth = depth;\n\t\tconst deviation = this._delayTime * depth;\n\t\tthis._lfoL.min = Math.max(this._delayTime - deviation, 0);\n\t\tthis._lfoL.max = this._delayTime + deviation;\n\t\tthis._lfoR.min = Math.max(this._delayTime - deviation, 0);\n\t\tthis._lfoR.max = this._delayTime + deviation;\n\t}\n\n\t/**\n\t * The delayTime in milliseconds of the chorus. A larger delayTime\n\t * will give a more pronounced effect. Nominal range a delayTime\n\t * is between 2 and 20ms.\n\t */\n\tget delayTime(): Milliseconds {\n\t\treturn this._delayTime * 1000;\n\t}\n\tset delayTime(delayTime) {\n\t\tthis._delayTime = delayTime / 1000;\n\t\tthis.depth = this._depth;\n\t}\n\n\t/**\n\t * The oscillator type of the LFO.\n\t */\n\tget type(): ToneOscillatorType {\n\t\treturn this._lfoL.type;\n\t}\n\tset type(type) {\n\t\tthis._lfoL.type = type;\n\t\tthis._lfoR.type = type;\n\t}\n\n\t/**\n\t * Amount of stereo spread. When set to 0, both LFO's will be panned centrally.\n\t * When set to 180, LFO's will be panned hard left and right respectively.\n\t */\n\tget spread(): Degrees {\n\t\treturn this._lfoR.phase - this._lfoL.phase;\n\t}\n\tset spread(spread) {\n\t\tthis._lfoL.phase = 90 - (spread / 2);\n\t\tthis._lfoR.phase = (spread / 2) + 90;\n\t}\n\n\t/**\n\t * Start the effect.\n\t */\n\tstart(time?: Time): this {\n\t\tthis._lfoL.start(time);\n\t\tthis._lfoR.start(time);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Stop the lfo\n\t */\n\tstop(time?: Time): this {\n\t\tthis._lfoL.stop(time);\n\t\tthis._lfoR.stop(time);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sync the filter to the transport. See [[LFO.sync]]\n\t */\n\tsync(): this {\n\t\tthis._lfoL.sync();\n\t\tthis._lfoR.sync();\n\t\treturn this;\n\t}\n\n\t/**\n\t * Unsync the filter from the transport.\n\t */\n\tunsync(): this {\n\t\tthis._lfoL.unsync();\n\t\tthis._lfoR.unsync();\n\t\treturn this;\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._lfoL.dispose();\n\t\tthis._lfoR.dispose();\n\t\tthis._delayNodeL.dispose();\n\t\tthis._delayNodeR.dispose();\n\t\tthis.frequency.dispose();\n\t\treturn this;\n\t}\n}\n","import { optionsFromArguments } from \"../core/util/Defaults\";\nimport { WaveShaper } from \"../signal/WaveShaper\";\nimport { Effect, EffectOptions } from \"./Effect\";\n\nexport interface DistortionOptions extends EffectOptions {\n\tdistortion: number;\n\toversample: OverSampleType;\n}\n\n/**\n * A simple distortion effect using Tone.WaveShaper.\n * Algorithm from [this stackoverflow answer](http://stackoverflow.com/a/22313408).\n *\n * @example\n * const dist = new Tone.Distortion(0.8).toDestination();\n * const fm = new Tone.FMSynth().connect(dist);\n * fm.triggerAttackRelease(\"A1\", \"8n\");\n * @category Effect\n */\nexport class Distortion extends Effect<DistortionOptions> {\n\n\treadonly name: string = \"Distortion\";\n\n\t/**\n\t * The waveshaper which does the distortion\n\t */\n\tprivate _shaper: WaveShaper;\n\n\t/**\n\t * Stores the distortion value\n\t */\n\tprivate _distortion: number;\n\n\t/**\n\t * @param distortion The amount of distortion (nominal range of 0-1)\n\t */\n\tconstructor(distortion?: number);\n\tconstructor(options?: Partial<DistortionOptions>);\n\tconstructor() {\n\n\t\tsuper(optionsFromArguments(Distortion.getDefaults(), arguments, [\"distortion\"]));\n\t\tconst options = optionsFromArguments(Distortion.getDefaults(), arguments, [\"distortion\"]);\n\n\t\tthis._shaper = new WaveShaper({\n\t\t\tcontext: this.context,\n\t\t\tlength: 4096,\n\t\t});\n\n\t\tthis._distortion = options.distortion;\n\n\t\tthis.connectEffect(this._shaper);\n\t\tthis.distortion = options.distortion;\n\t\tthis.oversample = options.oversample;\n\t}\n\n\tstatic getDefaults(): DistortionOptions {\n\t\treturn Object.assign(Effect.getDefaults(), {\n\t\t\tdistortion: 0.4,\n\t\t\toversample: \"none\" as OverSampleType,\n\t\t});\n\t}\n\n\t/**\n\t * The amount of distortion. Nominal range is between 0 and 1.\n\t */\n\tget distortion(): number {\n\t\treturn this._distortion;\n\t}\n\tset distortion(amount) {\n\t\tthis._distortion = amount;\n\t\tconst k = amount * 100;\n\t\tconst deg = Math.PI / 180;\n\t\tthis._shaper.setMap((x) => {\n\t\t\tif (Math.abs(x) < 0.001) {\n\t\t\t\t// should output 0 when input is 0\n\t\t\t\treturn 0;\n\t\t\t} else {\n\t\t\t\treturn (3 + k) * x * 20 * deg / (Math.PI + k * Math.abs(x));\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * The oversampling of the effect. Can either be \"none\", \"2x\" or \"4x\".\n\t */\n\tget oversample(): OverSampleType {\n\t\treturn this._shaper.oversample;\n\t}\n\tset oversample(oversampling) {\n\t\tthis._shaper.oversample = oversampling;\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._shaper.dispose();\n\t\treturn this;\n\t}\n}\n","import { Gain } from \"../core/context/Gain\";\nimport { Param } from \"../core/context/Param\";\nimport { NormalRange } from \"../core/type/Units\";\nimport { readOnly } from \"../core/util/Interface\";\nimport { Effect, EffectOptions } from \"./Effect\";\n\nexport interface FeedbackEffectOptions extends EffectOptions {\n\t/**\n\t * The feedback from the output back to the input\n\t * ```\n\t * +---<--------<---+\n\t * |                |\n\t * |  +----------+  |\n\t * +--> feedback +>-+\n\t *    +----------+\n\t * ```\n\t */\n\tfeedback: NormalRange;\n}\n\n/**\n * FeedbackEffect provides a loop between an audio source and its own output.\n * This is a base-class for feedback effects.\n */\nexport abstract class FeedbackEffect<Options extends FeedbackEffectOptions> extends Effect<Options> {\n\n\treadonly name: string = \"FeedbackEffect\";\n\n\t/**\n\t * the gain which controls the feedback\n\t */\n\tprivate _feedbackGain: Gain<\"normalRange\">;\n\n\t/**\n\t * The amount of signal which is fed back into the effect input.\n\t */\n\tfeedback: Param<\"normalRange\">;\n\n\tconstructor(options: FeedbackEffectOptions) {\n\n\t\tsuper(options);\n\n\t\tthis._feedbackGain = new Gain({\n\t\t\tcontext: this.context,\n\t\t\tgain: options.feedback,\n\t\t\tunits: \"normalRange\",\n\t\t});\n\n\t\tthis.feedback = this._feedbackGain.gain;\n\t\treadOnly(this, \"feedback\");\n\n\t\t// the feedback loop\n\t\tthis.effectReturn.chain(this._feedbackGain, this.effectSend);\n\t}\n\n\tstatic getDefaults(): FeedbackEffectOptions {\n\t\treturn Object.assign(Effect.getDefaults(), {\n\t\t\tfeedback: 0.125,\n\t\t});\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._feedbackGain.dispose();\n\t\tthis.feedback.dispose();\n\t\treturn this;\n\t}\n}\n","import { Delay } from \"../core/context/Delay\";\nimport { Param } from \"../core/context/Param\";\nimport { NormalRange, Time } from \"../core/type/Units\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { readOnly } from \"../core/util/Interface\";\nimport { FeedbackEffect, FeedbackEffectOptions } from \"./FeedbackEffect\";\n\ninterface FeedbackDelayOptions extends FeedbackEffectOptions {\n\tdelayTime: Time;\n\tmaxDelay: Time;\n}\n\n/**\n * FeedbackDelay is a DelayNode in which part of output signal is fed back into the delay.\n *\n * @param delayTime The delay applied to the incoming signal.\n * @param feedback The amount of the effected signal which is fed back through the delay.\n * @example\n * const feedbackDelay = new Tone.FeedbackDelay(\"8n\", 0.5).toDestination();\n * const tom = new Tone.MembraneSynth({\n * \toctaves: 4,\n * \tpitchDecay: 0.1\n * }).connect(feedbackDelay);\n * tom.triggerAttackRelease(\"A2\", \"32n\");\n * @category Effect\n */\nexport class FeedbackDelay extends FeedbackEffect<FeedbackDelayOptions> {\n\n\treadonly name: string = \"FeedbackDelay\";\n\n\t/**\n\t * the delay node\n\t */\n\tprivate _delayNode: Delay;\n\n\t/**\n\t * The delayTime of the FeedbackDelay.\n\t */\n\treadonly delayTime: Param<\"time\">;\n\n\tconstructor(delayTime?: Time, feedback?: NormalRange);\n\tconstructor(options?: Partial<FeedbackDelayOptions>);\n\tconstructor() {\n\n\t\tsuper(optionsFromArguments(FeedbackDelay.getDefaults(), arguments, [\"delayTime\", \"feedback\"]));\n\t\tconst options = optionsFromArguments(FeedbackDelay.getDefaults(), arguments, [\"delayTime\", \"feedback\"]);\n\n\t\tthis._delayNode = new Delay({\n\t\t\tcontext: this.context,\n\t\t\tdelayTime: options.delayTime,\n\t\t\tmaxDelay: options.maxDelay,\n\t\t});\n\t\tthis.delayTime = this._delayNode.delayTime;\n\n\t\t// connect it up\n\t\tthis.connectEffect(this._delayNode);\n\t\treadOnly(this, \"delayTime\");\n\t}\n\n\tstatic getDefaults(): FeedbackDelayOptions {\n\t\treturn Object.assign(FeedbackEffect.getDefaults(), {\n\t\t\tdelayTime: 0.25,\n\t\t\tmaxDelay: 1,\n\t\t});\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._delayNode.dispose();\n\t\tthis.delayTime.dispose();\n\t\treturn this;\n\t}\n}\n","import { Gain } from \"../../core/context/Gain\";\nimport { connectSeries, ToneAudioNode, ToneAudioNodeOptions } from \"../../core/context/ToneAudioNode\";\n\n/**\n * PhaseShiftAllpass is an very efficient implementation of a Hilbert Transform\n * using two Allpass filter banks whose outputs have a phase difference of 90°.\n * Here the `offset90` phase is offset by +90° in relation to `output`.\n * Coefficients and structure was developed by Olli Niemitalo.\n * For more details see: http://yehar.com/blog/?p=368\n * @category Component\n */\nexport class PhaseShiftAllpass extends ToneAudioNode<ToneAudioNodeOptions> {\n\n\treadonly name: string = \"PhaseShiftAllpass\";\n\n\treadonly input = new Gain({ context: this.context });\n\n\t/**\n\t * The Allpass filter in the first bank\n\t */\n\tprivate _bank0: IIRFilterNode[];\n\n\t/**\n\t * The Allpass filter in the seconds bank\n\t */\n\tprivate _bank1: IIRFilterNode[];\n\n\t/**\n\t * A IIR filter implementing a delay by one sample used by the first bank\n\t */\n\tprivate _oneSampleDelay: IIRFilterNode;\n\n\t/**\n\t * The phase shifted output\n\t */\n\treadonly output = new Gain({ context: this.context });\n\n\t/**\n\t * The PhaseShifted allpass output\n\t */\n\treadonly offset90 = new Gain({ context: this.context });\n\n\tconstructor(options?: Partial<ToneAudioNodeOptions>) {\n\n\t\tsuper(options);\n\n\t\tconst allpassBank1Values = [0.6923878, 0.9360654322959, 0.9882295226860, 0.9987488452737];\n\t\tconst allpassBank2Values = [0.4021921162426, 0.8561710882420, 0.9722909545651, 0.9952884791278];\n\n\t\tthis._bank0 = this._createAllPassFilterBank(allpassBank1Values);\n\t\tthis._bank1 = this._createAllPassFilterBank(allpassBank2Values);\n\t\tthis._oneSampleDelay = this.context.createIIRFilter([0.0, 1.0], [1.0, 0.0]);\n\n\t\t// connect Allpass filter banks\n\t\tconnectSeries(this.input, ...this._bank0, this._oneSampleDelay, this.output);\n\t\tconnectSeries(this.input, ...this._bank1, this.offset90);\n\t}\n\n\t/**\n\t * Create all of the IIR filters from an array of values using the coefficient calculation.\n\t */\n\tprivate _createAllPassFilterBank(bankValues: number[]): IIRFilterNode[] {\n\t\tconst nodes: IIRFilterNode[] = bankValues.map(value => {\n\t\t\tconst coefficients = [[value * value, 0, -1], [1, 0, -(value * value)]];\n\t\t\treturn this.context.createIIRFilter(coefficients[0], coefficients[1]);\n\t\t});\n\n\t\treturn nodes;\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis.input.dispose();\n\t\tthis.output.dispose();\n\t\tthis.offset90.dispose();\n\t\tthis._bank0.forEach(f => f.disconnect());\n\t\tthis._bank1.forEach(f => f.disconnect());\n\t\tthis._oneSampleDelay.disconnect();\n\t\treturn this;\n\t}\n}\n","import { PhaseShiftAllpass } from \"../component/filter/PhaseShiftAllpass\";\nimport { Frequency } from \"../core/type/Units\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { Effect, EffectOptions } from \"../effect/Effect\";\nimport { Add } from \"../signal/Add\";\nimport { Multiply } from \"../signal/Multiply\";\nimport { Negate } from \"../signal/Negate\";\nimport { Signal } from \"../signal/Signal\";\nimport { Oscillator } from \"../source/oscillator/Oscillator\";\nimport { ToneOscillatorNode } from \"../source/oscillator/ToneOscillatorNode\";\n\ninterface FrequencyShifterOptions extends EffectOptions {\n\tfrequency: Frequency;\n}\n\n/**\n * FrequencyShifter can be used to shift all frequencies of a signal by a fixed amount.\n * The amount can be changed at audio rate and the effect is applied in real time.\n * The frequency shifting is implemented with a technique called single side band modulation using a ring modulator.\n * Note: Contrary to pitch shifting, all frequencies are shifted by the same amount,\n * destroying the harmonic relationship between them. This leads to the classic ring modulator timbre distortion.\n * The algorithm will produces some aliasing towards the high end, especially if your source material\n * contains a lot of high frequencies. Unfortunatelly the webaudio API does not support resampling\n * buffers in real time, so it is not possible to fix it properly. Depending on the use case it might\n * be an option to low pass filter your input before frequency shifting it to get ride of the aliasing.\n * You can find a very detailed description of the algorithm here: https://larzeitlin.github.io/RMFS/\n *\n * @example\n * const input = new Tone.Oscillator(230, \"sawtooth\").start();\n * const shift = new Tone.FrequencyShifter(42).toDestination();\n * input.connect(shift);\n * @category Effect\n */\nexport class FrequencyShifter extends Effect<FrequencyShifterOptions> {\n\n\treadonly name: string = \"FrequencyShifter\";\n\n\t/**\n\t * The ring modulators carrier frequency. This frequency determines\n\t * by how many Hertz the input signal will be shifted up or down. Default is 0.\n\t */\n\treadonly frequency: Signal<\"frequency\">;\n\n\t/**\n\t * The ring modulators sine carrier\n\t */\n\tprivate _sine: ToneOscillatorNode;\n\n\t/**\n\t * The ring modulators cosine carrier\n\t */\n\tprivate _cosine: Oscillator;\n\n\t/**\n\t * The sine multiply operator\n\t */\n\tprivate _sineMultiply: Multiply;\n\n\t/**\n\t * The cosine multiply operator\n\t */\n\tprivate _cosineMultiply: Multiply;\n\n\t/**\n\t * The negate operator\n\t */\n\tprivate _negate: Negate;\n\n\t/**\n\t * The final add operator\n\t */\n\tprivate _add: Add;\n\n\t/**\n\t * The phase shifter to create the initial 90° phase offset\n\t */\n\tprivate _phaseShifter: PhaseShiftAllpass;\n\n\t/**\n\t * @param frequency The incoming signal is shifted by this frequency value.\n\t */\n\tconstructor(frequency?: Frequency);\n\tconstructor(options?: Partial<FrequencyShifterOptions>);\n\tconstructor() {\n\n\t\tsuper(optionsFromArguments(FrequencyShifter.getDefaults(), arguments, [\"frequency\"]));\n\t\tconst options = optionsFromArguments(FrequencyShifter.getDefaults(), arguments, [\"frequency\"]);\n\n\t\tthis.frequency = new Signal({\n\t\t\tcontext: this.context,\n\t\t\tunits: \"frequency\",\n\t\t\tvalue: options.frequency,\n\t\t\tminValue: -this.context.sampleRate / 2,\n\t\t\tmaxValue: this.context.sampleRate / 2,\n\t\t});\n\n\t\tthis._sine = new ToneOscillatorNode({\n\t\t\tcontext: this.context,\n\t\t\ttype: \"sine\",\n\t\t});\n\n\t\tthis._cosine = new Oscillator({\n\t\t\tcontext: this.context,\n\t\t\tphase: -90,\n\t\t\ttype: \"sine\",\n\t\t});\n\n\t\tthis._sineMultiply = new Multiply({ context: this.context });\n\t\tthis._cosineMultiply = new Multiply({ context: this.context });\n\t\tthis._negate = new Negate({ context: this.context });\n\t\tthis._add = new Add({ context: this.context });\n\n\t\tthis._phaseShifter = new PhaseShiftAllpass({ context: this.context });\n\t\tthis.effectSend.connect(this._phaseShifter);\n\n\t\t// connect the carrier frequency signal to the two oscillators\n\t\tthis.frequency.fan(this._sine.frequency, this._cosine.frequency);\n\n\t\tthis._phaseShifter.offset90.connect(this._cosineMultiply);\n\t\tthis._cosine.connect(this._cosineMultiply.factor);\n\n\t\tthis._phaseShifter.connect(this._sineMultiply);\n\t\tthis._sine.connect(this._sineMultiply.factor);\n\t\tthis._sineMultiply.connect(this._negate);\n\n\t\tthis._cosineMultiply.connect(this._add);\n\t\tthis._negate.connect(this._add.addend);\n\n\t\tthis._add.connect(this.effectReturn);\n\n\t\t// start the oscillators at the same time\n\t\tconst now = this.immediate();\n\t\tthis._sine.start(now);\n\t\tthis._cosine.start(now);\n\t}\n\n\tstatic getDefaults(): FrequencyShifterOptions {\n\t\treturn Object.assign(Effect.getDefaults(), {\n\t\t\tfrequency: 0,\n\t\t});\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis.frequency.dispose();\n\t\tthis._add.dispose();\n\t\tthis._cosine.dispose();\n\t\tthis._cosineMultiply.dispose();\n\t\tthis._negate.dispose();\n\t\tthis._phaseShifter.dispose();\n\t\tthis._sine.dispose();\n\t\tthis._sineMultiply.dispose();\n\t\treturn this;\n\t}\n}\n","import { StereoEffect, StereoEffectOptions } from \"./StereoEffect\";\nimport { Frequency, NormalRange } from \"../core/type/Units\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { readOnly } from \"../core/util/Interface\";\nimport { Signal } from \"../signal/Signal\";\nimport { LowpassCombFilter } from \"../component/filter/LowpassCombFilter\";\n\nexport interface FreeverbOptions extends StereoEffectOptions {\n\tdampening: Frequency;\n\troomSize: NormalRange;\n}\n\n/**\n * An array of comb filter delay values from Freeverb implementation\n */\nconst combFilterTunings = [1557 / 44100, 1617 / 44100, 1491 / 44100, 1422 / 44100, 1277 / 44100, 1356 / 44100, 1188 / 44100, 1116 / 44100];\n\n/**\n * An array of allpass filter frequency values from Freeverb implementation\n */\nconst allpassFilterFrequencies = [225, 556, 441, 341];\n\n/**\n * Freeverb is a reverb based on [Freeverb](https://ccrma.stanford.edu/~jos/pasp/Freeverb.html).\n * Read more on reverb on [Sound On Sound](https://web.archive.org/web/20160404083902/http://www.soundonsound.com:80/sos/feb01/articles/synthsecrets.asp).\n * Freeverb is now implemented with an AudioWorkletNode which may result on performance degradation on some platforms. Consider using [[Reverb]].\n * @example\n * const freeverb = new Tone.Freeverb().toDestination();\n * freeverb.dampening = 1000;\n * // routing synth through the reverb\n * const synth = new Tone.NoiseSynth().connect(freeverb);\n * synth.triggerAttackRelease(0.05);\n * @category Effect\n */\nexport class Freeverb extends StereoEffect<FreeverbOptions> {\n\n\treadonly name: string = \"Freeverb\";\n\n\t/**\n\t * The roomSize value between 0 and 1. A larger roomSize will result in a longer decay.\n\t */\n\treadonly roomSize: Signal<\"normalRange\">;\n\n\t/**\n\t * the comb filters\n\t */\n\tprivate _combFilters: LowpassCombFilter[] = [];\n\n\t/**\n\t * the allpass filters on the left\n\t */\n\tprivate _allpassFiltersL: BiquadFilterNode[] = [];\n\n\t/**\n\t * the allpass filters on the right\n\t */\n\tprivate _allpassFiltersR: BiquadFilterNode[] = [];\n\n\t/**\n\t * @param roomSize Correlated to the decay time.\n\t * @param dampening The cutoff frequency of a lowpass filter as part of the reverb.\n\t */\n\tconstructor(roomSize?: NormalRange, dampening?: Frequency);\n\tconstructor(options?: Partial<FreeverbOptions>);\n\tconstructor() {\n\n\t\tsuper(optionsFromArguments(Freeverb.getDefaults(), arguments, [\"roomSize\", \"dampening\"]));\n\t\tconst options = optionsFromArguments(Freeverb.getDefaults(), arguments, [\"roomSize\", \"dampening\"]);\n\n\t\tthis.roomSize = new Signal({\n\t\t\tcontext: this.context,\n\t\t\tvalue: options.roomSize,\n\t\t\tunits: \"normalRange\",\n\t\t});\n\n\t\t// make the allpass filters on the right\n\t\tthis._allpassFiltersL = allpassFilterFrequencies.map(freq => {\n\t\t\tconst allpassL = this.context.createBiquadFilter();\n\t\t\tallpassL.type = \"allpass\";\n\t\t\tallpassL.frequency.value = freq;\n\t\t\treturn allpassL;\n\t\t});\n\n\t\t// make the allpass filters on the left\n\t\tthis._allpassFiltersR = allpassFilterFrequencies.map(freq => {\n\t\t\tconst allpassR = this.context.createBiquadFilter();\n\t\t\tallpassR.type = \"allpass\";\n\t\t\tallpassR.frequency.value = freq;\n\t\t\treturn allpassR;\n\t\t});\n\n\t\t// make the comb filters\n\t\tthis._combFilters = combFilterTunings.map((delayTime, index) => {\n\t\t\tconst lfpf = new LowpassCombFilter({\n\t\t\t\tcontext: this.context,\n\t\t\t\tdampening: options.dampening,\n\t\t\t\tdelayTime,\n\t\t\t});\n\t\t\tif (index < combFilterTunings.length / 2) {\n\t\t\t\tthis.connectEffectLeft(lfpf, ...this._allpassFiltersL);\n\t\t\t} else {\n\t\t\t\tthis.connectEffectRight(lfpf, ...this._allpassFiltersR);\n\t\t\t}\n\t\t\tthis.roomSize.connect(lfpf.resonance);\n\t\t\treturn lfpf;\n\t\t});\n\n\t\treadOnly(this, [\"roomSize\"]);\n\t}\n\n\tstatic getDefaults(): FreeverbOptions {\n\t\treturn Object.assign(StereoEffect.getDefaults(), {\n\t\t\troomSize: 0.7,\n\t\t\tdampening: 3000\n\t\t});\n\t}\n\n\t/**\n\t * The amount of dampening of the reverberant signal.\n\t */\n\n\tget dampening(): Frequency {\n\t\treturn this._combFilters[0].dampening;\n\t}\n\tset dampening(d) {\n\t\tthis._combFilters.forEach(c => c.dampening = d);\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._allpassFiltersL.forEach(al => al.disconnect());\n\t\tthis._allpassFiltersR.forEach(ar => ar.disconnect());\n\t\tthis._combFilters.forEach(cf => cf.dispose());\n\t\tthis.roomSize.dispose();\n\t\treturn this;\n\t}\n}\n","import { NormalRange } from \"../core/type/Units\";\nimport { StereoEffect, StereoEffectOptions } from \"./StereoEffect\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { Scale } from \"../signal/Scale\";\nimport { Signal } from \"../signal/Signal\";\nimport { FeedbackCombFilter } from \"../component/filter/FeedbackCombFilter\";\nimport { readOnly } from \"../core/util/Interface\";\n\nexport interface JCReverbOptions extends StereoEffectOptions {\n\troomSize: NormalRange;\n}\n\n/**\n * an array of the comb filter delay time values\n */\nconst combFilterDelayTimes = [1687 / 25000, 1601 / 25000, 2053 / 25000, 2251 / 25000];\n\n/**\n * the resonances of each of the comb filters\n */\nconst combFilterResonances = [0.773, 0.802, 0.753, 0.733];\n\n/**\n * the allpass filter frequencies\n */\nconst allpassFilterFreqs = [347, 113, 37];\n\n/**\n * JCReverb is a simple [Schroeder Reverberator](https://ccrma.stanford.edu/~jos/pasp/Schroeder_Reverberators.html)\n * tuned by John Chowning in 1970.\n * It is made up of three allpass filters and four [[FeedbackCombFilter]].\n * JCReverb is now implemented with an AudioWorkletNode which may result on performance degradation on some platforms. Consider using [[Reverb]].\n * @example\n * const reverb = new Tone.JCReverb(0.4).toDestination();\n * const delay = new Tone.FeedbackDelay(0.5);\n * // connecting the synth to reverb through delay\n * const synth = new Tone.DuoSynth().chain(delay, reverb);\n * synth.triggerAttackRelease(\"A4\", \"8n\");\n * \n * @category Effect\n */\nexport class JCReverb extends StereoEffect<JCReverbOptions> {\n\n\treadonly name: string = \"JCReverb\";\n\n\t/**\n\t * Room size control values. \n\t */\n\treadonly roomSize: Signal<\"normalRange\">\n\n\t/**\n\t * Scale the room size\n\t */\n\tprivate _scaleRoomSize: Scale;\n\n\t/**\n\t * a series of allpass filters\n\t */\n\tprivate _allpassFilters: BiquadFilterNode[] = [];\n\n\t/**\n\t * parallel feedback comb filters\n\t */\n\tprivate _feedbackCombFilters: FeedbackCombFilter[] = [];\n\n\t/**\n\t * @param roomSize Correlated to the decay time.\n\t */\n\tconstructor(roomSize?: NormalRange);\n\tconstructor(options?: Partial<JCReverbOptions>);\n\tconstructor() {\n\n\t\tsuper(optionsFromArguments(JCReverb.getDefaults(), arguments, [\"roomSize\"]));\n\t\tconst options = optionsFromArguments(JCReverb.getDefaults(), arguments, [\"roomSize\"]);\n\n\t\tthis.roomSize = new Signal({\n\t\t\tcontext: this.context,\n\t\t\tvalue: options.roomSize,\n\t\t\tunits: \"normalRange\",\n\t\t});\n\t\tthis._scaleRoomSize = new Scale({\n\t\t\tcontext: this.context,\n\t\t\tmin: -0.733,\n\t\t\tmax: 0.197,\n\t\t});\n\n\t\t// make the allpass filters\n\t\tthis._allpassFilters = allpassFilterFreqs.map(freq => {\n\t\t\tconst allpass = this.context.createBiquadFilter();\n\t\t\tallpass.type = \"allpass\";\n\t\t\tallpass.frequency.value = freq;\n\t\t\treturn allpass;\n\t\t});\n\n\t\t// and the comb filters\n\t\tthis._feedbackCombFilters = combFilterDelayTimes.map((delayTime, index) => {\n\t\t\tconst fbcf = new FeedbackCombFilter({\n\t\t\t\tcontext: this.context,\n\t\t\t\tdelayTime,\n\t\t\t});\n\t\t\tthis._scaleRoomSize.connect(fbcf.resonance);\n\t\t\tfbcf.resonance.value = combFilterResonances[index];\n\t\t\tif (index < combFilterDelayTimes.length / 2) {\n\t\t\t\tthis.connectEffectLeft(...this._allpassFilters, fbcf);\n\t\t\t} else {\n\t\t\t\tthis.connectEffectRight(...this._allpassFilters, fbcf);\n\t\t\t}\n\t\t\treturn fbcf;\n\t\t});\n\n\t\t// chain the allpass filters together\n\t\tthis.roomSize.connect(this._scaleRoomSize);\n\t\treadOnly(this, [\"roomSize\"]);\n\t}\n\n\tstatic getDefaults(): JCReverbOptions {\n\t\treturn Object.assign(StereoEffect.getDefaults(), {\n\t\t\troomSize: 0.5,\n\t\t});\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._allpassFilters.forEach(apf => apf.disconnect());\n\t\tthis._feedbackCombFilters.forEach(fbcf => fbcf.dispose());\n\t\tthis.roomSize.dispose();\n\t\tthis._scaleRoomSize.dispose();\n\t\treturn this;\n\t}\n}\n","import { StereoFeedbackEffect, StereoFeedbackEffectOptions } from \"./StereoFeedbackEffect\";\nimport { NormalRange } from \"../core/type/Units\";\nimport { readOnly } from \"../core/util/Interface\";\n\nexport interface StereoXFeedbackEffectOptions extends StereoFeedbackEffectOptions {\n\tfeedback: NormalRange;\n}\n\n/**\n * Just like a [[StereoFeedbackEffect]], but the feedback is routed from left to right\n * and right to left instead of on the same channel.\n * ```\n * +--------------------------------+ feedbackL <-----------------------------------+\n * |                                                                                |\n * +-->                          +----->        +---->                          +-----+\n *      feedbackMerge +--> split        (EFFECT)       merge +--> feedbackSplit     | |\n * +-->                          +----->        +---->                          +---+ |\n * |                                                                                  |\n * +--------------------------------+ feedbackR <-------------------------------------+\n * ```\n */\nexport class StereoXFeedbackEffect<Options extends StereoXFeedbackEffectOptions> extends StereoFeedbackEffect<Options> {\n\t\n\tconstructor(options: StereoXFeedbackEffectOptions) {\n\n\t\tsuper(options);\n\t\t// the left output connected to the right input\n\t\tthis._feedbackL.disconnect();\n\t\tthis._feedbackL.connect(this._feedbackMerge, 0, 1);\n\n\t\t// the left output connected to the right input\n\t\tthis._feedbackR.disconnect();\n\t\tthis._feedbackR.connect(this._feedbackMerge, 0, 0);\n\t\t\n\t\treadOnly(this, [\"feedback\"]);\n\t}\n}\n","import { StereoXFeedbackEffect, StereoXFeedbackEffectOptions } from \"./StereoXFeedbackEffect\";\nimport { NormalRange, Seconds, Time } from \"../core/type/Units\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { Delay } from \"../core/context/Delay\";\nimport { Signal } from \"../signal/Signal\";\nimport { readOnly } from \"../core/util/Interface\";\n\nexport interface PingPongDelayOptions extends StereoXFeedbackEffectOptions {\n\tdelayTime: Time;\n\tmaxDelay: Seconds;\n}\n\n/**\n * PingPongDelay is a feedback delay effect where the echo is heard\n * first in one channel and next in the opposite channel. In a stereo\n * system these are the right and left channels.\n * PingPongDelay in more simplified terms is two Tone.FeedbackDelays\n * with independent delay values. Each delay is routed to one channel\n * (left or right), and the channel triggered second will always\n * trigger at the same interval after the first.\n * @example\n * const pingPong = new Tone.PingPongDelay(\"4n\", 0.2).toDestination();\n * const drum = new Tone.MembraneSynth().connect(pingPong);\n * drum.triggerAttackRelease(\"C4\", \"32n\");\n * @category Effect\n */\nexport class PingPongDelay extends StereoXFeedbackEffect<PingPongDelayOptions> {\n\n\treadonly name: string = \"PingPongDelay\";\n\n\t/**\n\t * the delay node on the left side\n\t */\n\tprivate _leftDelay: Delay;\n\n\t/**\n\t * the delay node on the right side\n\t */\n\tprivate _rightDelay: Delay;\n\n\t/**\n\t * the predelay on the right side\n\t */\n\tprivate _rightPreDelay: Delay;\n\n\t/**\n\t * the delay time signal\n\t */\n\treadonly delayTime: Signal<\"time\">;\n\n\t/**\n\t * @param delayTime The delayTime between consecutive echos.\n\t * @param feedback The amount of the effected signal which is fed back through the delay.\n\t */\n\tconstructor(delayTime?: Time, feedback?: NormalRange);\n\tconstructor(options?: Partial<PingPongDelayOptions>);\n\tconstructor() {\n\n\t\tsuper(optionsFromArguments(PingPongDelay.getDefaults(), arguments, [\"delayTime\", \"feedback\"]));\n\t\tconst options = optionsFromArguments(PingPongDelay.getDefaults(), arguments, [\"delayTime\", \"feedback\"]);\n\n\t\tthis._leftDelay = new Delay({\n\t\t\tcontext: this.context,\n\t\t\tmaxDelay: options.maxDelay,\n\t\t});\n\t\tthis._rightDelay = new Delay({\n\t\t\tcontext: this.context,\n\t\t\tmaxDelay: options.maxDelay\n\t\t});\n\t\tthis._rightPreDelay = new Delay({\n\t\t\tcontext: this.context,\n\t\t\tmaxDelay: options.maxDelay\n\t\t});\n\t\tthis.delayTime = new Signal({\n\t\t\tcontext: this.context,\n\t\t\tunits: \"time\",\n\t\t\tvalue: options.delayTime,\n\t\t});\n\n\t\t// connect it up\n\t\tthis.connectEffectLeft(this._leftDelay);\n\t\tthis.connectEffectRight(this._rightPreDelay, this._rightDelay);\n\t\tthis.delayTime.fan(this._leftDelay.delayTime, this._rightDelay.delayTime, this._rightPreDelay.delayTime);\n\t\t// rearranged the feedback to be after the rightPreDelay\n\t\tthis._feedbackL.disconnect();\n\t\tthis._feedbackL.connect(this._rightDelay);\n\t\treadOnly(this, [\"delayTime\"]);\n\t}\n\n\tstatic getDefaults(): PingPongDelayOptions {\n\t\treturn Object.assign(StereoXFeedbackEffect.getDefaults(), {\n\t\t\tdelayTime: 0.25,\n\t\t\tmaxDelay: 1\n\t\t});\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._leftDelay.dispose();\n\t\tthis._rightDelay.dispose();\n\t\tthis._rightPreDelay.dispose();\n\t\tthis.delayTime.dispose();\n\t\treturn this;\n\t}\n}\n","import { Interval, Seconds, Time } from \"../core/type/Units\";\nimport { FeedbackEffect, FeedbackEffectOptions } from \"./FeedbackEffect\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { LFO } from \"../source/oscillator/LFO\";\nimport { Delay } from \"../core/context/Delay\";\nimport { CrossFade } from \"../component/channel/CrossFade\";\nimport { Signal } from \"../signal/Signal\";\nimport { readOnly } from \"../core/util/Interface\";\nimport { Param } from \"../core/context/Param\";\nimport { intervalToFrequencyRatio } from \"../core/type/Conversions\";\n\nexport interface PitchShiftOptions extends FeedbackEffectOptions {\n\tpitch: Interval;\n\twindowSize: Seconds;\n\tdelayTime: Time;\n}\n\n/**\n * PitchShift does near-realtime pitch shifting to the incoming signal.\n * The effect is achieved by speeding up or slowing down the delayTime\n * of a DelayNode using a sawtooth wave.\n * Algorithm found in [this pdf](http://dsp-book.narod.ru/soundproc.pdf).\n * Additional reference by [Miller Pucket](http://msp.ucsd.edu/techniques/v0.11/book-html/node115.html).\n * @category Effect\n */\nexport class PitchShift extends FeedbackEffect<PitchShiftOptions> {\n\n\treadonly name: string = \"PitchShift\";\n\n\t/**\n\t * The pitch signal\n\t */\n\tprivate _frequency: Signal<\"frequency\">;\n\n\t/**\n\t * Uses two DelayNodes to cover up the jump in the sawtooth wave.\n\t */\n\tprivate _delayA: Delay;\n\n\t/**\n\t * The first LFO.\n\t */\n\tprivate _lfoA: LFO;\n\n\t/**\n\t * The second DelayNode\n\t */\n\tprivate _delayB: Delay;\n\n\t/**\n\t * The second LFO.\n\t */\n\tprivate _lfoB: LFO;\n\n\t/**\n\t * Cross fade quickly between the two delay lines to cover up the jump in the sawtooth wave\n\t */\n\tprivate _crossFade: CrossFade;\n\n\t/**\n\t * LFO which alternates between the two delay lines to cover up the disparity in the\n\t * sawtooth wave.\n\t */\n\tprivate _crossFadeLFO: LFO;\n\n\t/**\n\t * The delay node\n\t */\n\tprivate _feedbackDelay: Delay;\n\n\t/**\n\t * The amount of delay on the input signal\n\t */\n\treadonly delayTime: Param<\"time\">;\n\n\t/**\n\t * Hold the current pitch\n\t */\n\tprivate _pitch: Interval;\n\n\t/**\n\t * Hold the current windowSize\n\t */\n\tprivate _windowSize;\n\n\t/**\n\t * @param pitch The interval to transpose the incoming signal by.\n\t */\n\tconstructor(pitch?: Interval);\n\tconstructor(options?: Partial<PitchShiftOptions>);\n\tconstructor() {\n\n\t\tsuper(optionsFromArguments(PitchShift.getDefaults(), arguments, [\"pitch\"]));\n\t\tconst options = optionsFromArguments(PitchShift.getDefaults(), arguments, [\"pitch\"]);\n\n\t\tthis._frequency = new Signal({ context: this.context });\n\t\tthis._delayA = new Delay({\n\t\t\tmaxDelay: 1,\n\t\t\tcontext: this.context\n\t\t});\n\t\tthis._lfoA = new LFO({\n\t\t\tcontext: this.context,\n\t\t\tmin: 0,\n\t\t\tmax: 0.1,\n\t\t\ttype: \"sawtooth\"\n\t\t}).connect(this._delayA.delayTime);\n\t\tthis._delayB = new Delay({\n\t\t\tmaxDelay: 1,\n\t\t\tcontext: this.context\n\t\t});\n\t\tthis._lfoB = new LFO({\n\t\t\tcontext: this.context,\n\t\t\tmin: 0,\n\t\t\tmax: 0.1,\n\t\t\ttype: \"sawtooth\",\n\t\t\tphase: 180\n\t\t}).connect(this._delayB.delayTime);\n\t\tthis._crossFade = new CrossFade({ context: this.context });\n\t\tthis._crossFadeLFO = new LFO({\n\t\t\tcontext: this.context,\n\t\t\tmin: 0,\n\t\t\tmax: 1,\n\t\t\ttype: \"triangle\",\n\t\t\tphase: 90\n\t\t}).connect(this._crossFade.fade);\n\t\tthis._feedbackDelay = new Delay({\n\t\t\tdelayTime: options.delayTime,\n\t\t\tcontext: this.context,\n\t\t});\n\t\tthis.delayTime = this._feedbackDelay.delayTime;\n\t\treadOnly(this, \"delayTime\");\n\t\tthis._pitch = options.pitch;\n\n\t\tthis._windowSize = options.windowSize;\n\n\t\t// connect the two delay lines up\n\t\tthis._delayA.connect(this._crossFade.a);\n\t\tthis._delayB.connect(this._crossFade.b);\n\t\t// connect the frequency\n\t\tthis._frequency.fan(this._lfoA.frequency, this._lfoB.frequency, this._crossFadeLFO.frequency);\n\t\t// route the input\n\t\tthis.effectSend.fan(this._delayA, this._delayB);\n\t\tthis._crossFade.chain(this._feedbackDelay, this.effectReturn);\n\t\t// start the LFOs at the same time\n\t\tconst now = this.now();\n\t\tthis._lfoA.start(now);\n\t\tthis._lfoB.start(now);\n\t\tthis._crossFadeLFO.start(now);\n\t\t// set the initial value\n\t\tthis.windowSize = this._windowSize;\n\t}\n\n\tstatic getDefaults(): PitchShiftOptions {\n\t\treturn Object.assign(FeedbackEffect.getDefaults(), {\n\t\t\tpitch: 0,\n\t\t\twindowSize: 0.1,\n\t\t\tdelayTime: 0,\n\t\t\tfeedback: 0\n\t\t});\n\t}\n\n\t/**\n\t * Repitch the incoming signal by some interval (measured in semi-tones).\n\t * @example\n\t * const pitchShift = new Tone.PitchShift().toDestination();\n\t * const osc = new Tone.Oscillator().connect(pitchShift).start().toDestination();\n\t * pitchShift.pitch = -12; // down one octave\n\t * pitchShift.pitch = 7; // up a fifth\n\t */\n\tget pitch() {\n\t\treturn this._pitch;\n\t}\n\tset pitch(interval) {\n\t\tthis._pitch = interval;\n\t\tlet factor = 0;\n\t\tif (interval < 0) {\n\t\t\tthis._lfoA.min = 0;\n\t\t\tthis._lfoA.max = this._windowSize;\n\t\t\tthis._lfoB.min = 0;\n\t\t\tthis._lfoB.max = this._windowSize;\n\t\t\tfactor = intervalToFrequencyRatio(interval - 1) + 1;\n\t\t} else {\n\t\t\tthis._lfoA.min = this._windowSize;\n\t\t\tthis._lfoA.max = 0;\n\t\t\tthis._lfoB.min = this._windowSize;\n\t\t\tthis._lfoB.max = 0;\n\t\t\tfactor = intervalToFrequencyRatio(interval) - 1;\n\t\t}\n\t\tthis._frequency.value = factor * (1.2 / this._windowSize);\n\t}\n\n\t/**\n\t * The window size corresponds roughly to the sample length in a looping sampler.\n\t * Smaller values are desirable for a less noticeable delay time of the pitch shifted\n\t * signal, but larger values will result in smoother pitch shifting for larger intervals.\n\t * A nominal range of 0.03 to 0.1 is recommended.\n\t */\n\tget windowSize(): Seconds {\n\t\treturn this._windowSize;\n\t}\n\tset windowSize(size) {\n\t\tthis._windowSize = this.toSeconds(size);\n\t\tthis.pitch = this._pitch;\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._frequency.dispose();\n\t\tthis._delayA.dispose();\n\t\tthis._delayB.dispose();\n\t\tthis._lfoA.dispose();\n\t\tthis._lfoB.dispose();\n\t\tthis._crossFade.dispose();\n\t\tthis._crossFadeLFO.dispose();\n\t\tthis._feedbackDelay.dispose();\n\t\treturn this;\n\t}\n}\n","import { StereoEffect, StereoEffectOptions } from \"./StereoEffect\";\nimport { Frequency, Hertz, Positive } from \"../core/type/Units\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { LFO } from \"../source/oscillator/LFO\";\nimport { Signal } from \"../signal/Signal\";\nimport { readOnly } from \"../core/util/Interface\";\n\nexport interface PhaserOptions extends StereoEffectOptions {\n\tfrequency: Frequency;\n\toctaves: Positive;\n\tstages: Positive;\n\tQ: Positive;\n\tbaseFrequency: Frequency;\n}\n\n/**\n * Phaser is a phaser effect. Phasers work by changing the phase\n * of different frequency components of an incoming signal. Read more on\n * [Wikipedia](https://en.wikipedia.org/wiki/Phaser_(effect)).\n * Inspiration for this phaser comes from [Tuna.js](https://github.com/Dinahmoe/tuna/).\n * @example\n * const phaser = new Tone.Phaser({\n * \tfrequency: 15,\n * \toctaves: 5,\n * \tbaseFrequency: 1000\n * }).toDestination();\n * const synth = new Tone.FMSynth().connect(phaser);\n * synth.triggerAttackRelease(\"E3\", \"2n\");\n * @category Effect\n */\nexport class Phaser extends StereoEffect<PhaserOptions> {\n\n\treadonly name: string = \"Phaser\";\n\n\t/**\n\t * the lfo which controls the frequency on the left side\n\t */\n\tprivate _lfoL: LFO;\n\n\t/**\n\t * the lfo which controls the frequency on the right side\n\t */\n\tprivate _lfoR: LFO;\n\n\t/**\n\t * the base modulation frequency\n\t */\n\tprivate _baseFrequency: Hertz;\n\n\t/**\n\t * the octaves of the phasing\n\t */\n\tprivate _octaves: Positive;\n\n\t/**\n\t * The quality factor of the filters\n\t */\n\treadonly Q: Signal<\"positive\">;\n\n\t/**\n\t * the array of filters for the left side\n\t */\n\tprivate _filtersL: BiquadFilterNode[];\n\n\t/**\n\t * the array of filters for the left side\n\t */\n\tprivate _filtersR: BiquadFilterNode[];\n\n\t/**\n\t * the frequency of the effect\n\t */\n\treadonly frequency: Signal<\"frequency\">;\n\n\t/**\n\t * @param frequency The speed of the phasing.\n\t * @param octaves The octaves of the effect.\n\t * @param baseFrequency The base frequency of the filters.\n\t */\n\tconstructor(frequency?: Frequency, octaves?: Positive, baseFrequency?: Frequency);\n\tconstructor(options?: Partial<PhaserOptions>);\n\tconstructor() {\n\n\t\tsuper(optionsFromArguments(Phaser.getDefaults(), arguments, [\"frequency\", \"octaves\", \"baseFrequency\"]));\n\t\tconst options = optionsFromArguments(Phaser.getDefaults(), arguments, [\"frequency\", \"octaves\", \"baseFrequency\"]);\n\n\t\tthis._lfoL = new LFO({\n\t\t\tcontext: this.context,\n\t\t\tfrequency: options.frequency,\n\t\t\tmin: 0,\n\t\t\tmax: 1\n\t\t});\n\t\tthis._lfoR = new LFO({\n\t\t\tcontext: this.context,\n\t\t\tfrequency: options.frequency,\n\t\t\tmin: 0,\n\t\t\tmax: 1,\n\t\t\tphase: 180,\n\t\t});\n\t\tthis._baseFrequency = this.toFrequency(options.baseFrequency);\n\t\tthis._octaves = options.octaves;\n\t\tthis.Q = new Signal({\n\t\t\tcontext: this.context,\n\t\t\tvalue: options.Q,\n\t\t\tunits: \"positive\",\n\t\t});\n\t\tthis._filtersL = this._makeFilters(options.stages, this._lfoL);\n\t\tthis._filtersR = this._makeFilters(options.stages, this._lfoR);\n\n\t\tthis.frequency = this._lfoL.frequency;\n\t\tthis.frequency.value = options.frequency;\n\n\t\t// connect them up\n\t\tthis.connectEffectLeft(...this._filtersL);\n\t\tthis.connectEffectRight(...this._filtersR);\n\t\t// control the frequency with one LFO\n\t\tthis._lfoL.frequency.connect(this._lfoR.frequency);\n\t\t// set the options\n\t\tthis.baseFrequency = options.baseFrequency;\n\t\tthis.octaves = options.octaves;\n\t\t// start the lfo\n\t\tthis._lfoL.start();\n\t\tthis._lfoR.start();\n\t\treadOnly(this, [\"frequency\", \"Q\"]);\n\t}\n\n\tstatic getDefaults(): PhaserOptions {\n\t\treturn Object.assign(StereoEffect.getDefaults(), {\n\t\t\tfrequency: 0.5,\n\t\t\toctaves: 3,\n\t\t\tstages: 10,\n\t\t\tQ: 10,\n\t\t\tbaseFrequency: 350,\n\t\t});\n\t}\n\n\tprivate _makeFilters(stages: number, connectToFreq: LFO): BiquadFilterNode[] {\n\t\tconst filters: BiquadFilterNode[] = [];\n\t\t// make all the filters\n\t\tfor (let i = 0; i < stages; i++) {\n\t\t\tconst filter = this.context.createBiquadFilter();\n\t\t\tfilter.type = \"allpass\";\n\t\t\tthis.Q.connect(filter.Q);\n\t\t\tconnectToFreq.connect(filter.frequency);\n\t\t\tfilters.push(filter);\n\t\t}\n\t\treturn filters;\n\t}\n\n\t/**\n\t * The number of octaves the phase goes above the baseFrequency\n\t */\n\tget octaves() {\n\t\treturn this._octaves;\n\t}\n\tset octaves(octaves) {\n\t\tthis._octaves = octaves;\n\t\tconst max = this._baseFrequency * Math.pow(2, octaves);\n\t\tthis._lfoL.max = max;\n\t\tthis._lfoR.max = max;\n\t}\n\n\t/**\n\t * The the base frequency of the filters.\n\t */\n\tget baseFrequency(): Frequency {\n\t\treturn this._baseFrequency;\n\t}\n\tset baseFrequency(freq) {\n\t\tthis._baseFrequency = this.toFrequency(freq);\n\t\tthis._lfoL.min = this._baseFrequency;\n\t\tthis._lfoR.min = this._baseFrequency;\n\t\tthis.octaves = this._octaves;\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis.Q.dispose();\n\t\tthis._lfoL.dispose();\n\t\tthis._lfoR.dispose();\n\t\tthis._filtersL.forEach(f => f.disconnect());\n\t\tthis._filtersR.forEach(f => f.disconnect());\n\t\tthis.frequency.dispose();\n\t\treturn this;\n\t}\n}\n\n","import { Merge } from \"../component/channel/Merge\";\nimport { Gain } from \"../core/context/Gain\";\nimport { Seconds, Time } from \"../core/type/Units\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { Noise } from \"../source/Noise\";\nimport { Effect, EffectOptions } from \"./Effect\";\nimport { OfflineContext } from \"../core/context/OfflineContext\";\nimport { noOp } from \"../core/util/Interface\";\nimport { assertRange } from \"../core/util/Debug\";\n\ninterface ReverbOptions extends EffectOptions {\n\tdecay: Seconds;\n\tpreDelay: Seconds;\n}\n\n/**\n * Simple convolution created with decaying noise.\n * Generates an Impulse Response Buffer\n * with Tone.Offline then feeds the IR into ConvolverNode.\n * The impulse response generation is async, so you have\n * to wait until [[ready]] resolves before it will make a sound. \n *\n * Inspiration from [ReverbGen](https://github.com/adelespinasse/reverbGen).\n * Copyright (c) 2014 Alan deLespinasse Apache 2.0 License.\n * \n * @category Effect\n */\nexport class Reverb extends Effect<ReverbOptions> {\n\n\treadonly name: string = \"Reverb\";\n\n\t/**\n\t * Convolver node\n\t */\n\tprivate _convolver: ConvolverNode = this.context.createConvolver();\n\n\t/**\n\t * The duration of the reverb.\n\t */\n\tprivate _decay: Seconds;\n\t\n\t/**\n\t * The amount of time before the reverb is fully ramped in.\n\t */\n\tprivate _preDelay: Seconds;\n\n\t/**\n\t * Resolves when the reverb buffer is generated. Whenever either [[decay]]\n\t * or [[preDelay]] are set, you have to wait until [[ready]] resolves\n\t * before the IR is generated with the latest values. \n\t */\n\tready: Promise<void> = Promise.resolve();\n\n\t/**\n\t * @param decay The amount of time it will reverberate for.\n\t */\n\tconstructor(decay?: Seconds);\n\tconstructor(options?: Partial<ReverbOptions>);\n\tconstructor() {\n\n\t\tsuper(optionsFromArguments(Reverb.getDefaults(), arguments, [\"decay\"]));\n\t\tconst options = optionsFromArguments(Reverb.getDefaults(), arguments, [\"decay\"]);\n\n\t\tthis._decay = options.decay;\n\t\tthis._preDelay = options.preDelay;\n\t\tthis.generate();\n\n\t\tthis.connectEffect(this._convolver);\n\t}\n\n\tstatic getDefaults(): ReverbOptions {\n\t\treturn Object.assign(Effect.getDefaults(), {\n\t\t\tdecay: 1.5,\n\t\t\tpreDelay: 0.01,\n\t\t});\n\t}\n\n\t/**\n\t * The duration of the reverb.\n\t */\n\tget decay(): Time {\n\t\treturn this._decay;\n\t}\n\tset decay(time) {\n\t\ttime = this.toSeconds(time);\n\t\tassertRange(time, 0.001);\n\t\tthis._decay = time;\n\t\tthis.generate();\n\t}\n\n\t/**\n\t * The amount of time before the reverb is fully ramped in.\n\t */\n\tget preDelay(): Time {\n\t\treturn this._preDelay;\n\t}\n\tset preDelay(time) {\n\t\ttime = this.toSeconds(time);\n\t\tassertRange(time, 0);\n\t\tthis._preDelay = time;\n\t\tthis.generate();\n\t}\n\n\t/**\n\t * Generate the Impulse Response. Returns a promise while the IR is being generated.\n\t * @return Promise which returns this object.\n\t */\n\tasync generate(): Promise<this> {\n\t\tconst previousReady = this.ready;\n\n\t\t// create a noise burst which decays over the duration in each channel\n\t\tconst context = new OfflineContext(2, this._decay + this._preDelay, this.context.sampleRate);\n\t\tconst noiseL = new Noise({ context });\n\t\tconst noiseR = new Noise({ context });\n\t\tconst merge = new Merge({ context });\n\t\tnoiseL.connect(merge, 0, 0);\n\t\tnoiseR.connect(merge, 0, 1);\n\t\tconst gainNode = new Gain({ context }).toDestination();\n\t\tmerge.connect(gainNode);\n\t\tnoiseL.start(0);\n\t\tnoiseR.start(0);\n\t\t// predelay\n\t\tgainNode.gain.setValueAtTime(0, 0);\n\t\tgainNode.gain.setValueAtTime(1, this._preDelay);\n\t\t// decay\n\t\tgainNode.gain.exponentialApproachValueAtTime(0, this._preDelay, this.decay);\n\t\t\n\t\t// render the buffer\n\t\tconst renderPromise = context.render();\n\t\tthis.ready = renderPromise.then(noOp);\n\t\t\n\t\t// wait for the previous `ready` to resolve\n\t\tawait previousReady;\n\t\t// set the buffer\n\t\tthis._convolver.buffer = (await renderPromise).get() as AudioBuffer;\n\n\t\treturn this;\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._convolver.disconnect();\n\t\treturn this;\n\t}\n}\n","import { ToneAudioNode, ToneAudioNodeOptions } from \"../../core/context/ToneAudioNode\";\nimport { Split } from \"./Split\";\nimport { Add } from \"../../signal/Add\";\nimport { Multiply } from \"../../signal/Multiply\";\nimport { Subtract } from \"../../signal/Subtract\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\n\nexport type MidSideSplitOptions = ToneAudioNodeOptions;\n\n/**\n * Mid/Side processing separates the the 'mid' signal (which comes out of both the left and the right channel)\n * and the 'side' (which only comes out of the the side channels).\n * ```\n * Mid = (Left+Right)/sqrt(2);   // obtain mid-signal from left and right\n * Side = (Left-Right)/sqrt(2);   // obtain side-signal from left and right\n * ```\n * @category Component\n */\nexport class MidSideSplit extends ToneAudioNode<MidSideSplitOptions> {\n\t\n\treadonly name: string = \"MidSideSplit\";\n\n\treadonly input: Split;\n\n\t/**\n\t * There is no output node, use either [[mid]] or [[side]] outputs.\n\t */\n\treadonly output: undefined;\n\t/**\n\t * Split the incoming signal into left and right channels\n\t */\n\tprivate _split: Split;\n\n\t/**\n\t * Sums the left and right channels\n\t */\n\tprivate _midAdd: Add;\n\n\t/**\n\t * Subtract left and right channels. \n\t */\n\tprivate _sideSubtract: Subtract;\n\n\t/**\n\t * The \"mid\" output. `(Left+Right)/sqrt(2)`\n\t */\n\treadonly mid: ToneAudioNode;\n\n\t/**\n\t * The \"side\" output. `(Left-Right)/sqrt(2)`\n\t */\n\treadonly side: ToneAudioNode;\n\t\n\tconstructor(options?: Partial<MidSideSplitOptions>);\n\tconstructor() {\n\t\tsuper(optionsFromArguments(MidSideSplit.getDefaults(), arguments));\n\n\t\tthis._split = this.input = new Split({\n\t\t\tchannels: 2,\n\t\t\tcontext: this.context\n\t\t});\n\t\tthis._midAdd = new Add({ context: this.context });\n\t\tthis.mid = new Multiply({\n\t\t\tcontext: this.context,\n\t\t\tvalue: Math.SQRT1_2,\n\t\t});\n\t\tthis._sideSubtract = new Subtract({ context: this.context });\n\t\tthis.side = new Multiply({\n\t\t\tcontext: this.context,\n\t\t\tvalue: Math.SQRT1_2,\n\t\t});\n\n\t\tthis._split.connect(this._midAdd, 0);\n\t\tthis._split.connect(this._midAdd.addend, 1);\n\t\tthis._split.connect(this._sideSubtract, 0);\n\t\tthis._split.connect(this._sideSubtract.subtrahend, 1);\n\t\tthis._midAdd.connect(this.mid);\n\t\tthis._sideSubtract.connect(this.side);\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis.mid.dispose();\n\t\tthis.side.dispose();\n\t\tthis._midAdd.dispose();\n\t\tthis._sideSubtract.dispose();\n\t\tthis._split.dispose();\n\t\treturn this;\n\t}\n}\n","import { ToneAudioNode, ToneAudioNodeOptions } from \"../../core/context/ToneAudioNode\";\nimport { Merge } from \"./Merge\";\nimport { Add } from \"../../signal/Add\";\nimport { Multiply } from \"../../signal/Multiply\";\nimport { Subtract } from \"../../signal/Subtract\";\nimport { Gain } from \"../../core/context/Gain\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\n\nexport type MidSideMergeOptions = ToneAudioNodeOptions;\n\n/**\n * MidSideMerge merges the mid and side signal after they've been separated by [[MidSideSplit]]\n * ```\n * Mid = (Left+Right)/sqrt(2);   // obtain mid-signal from left and right\n * Side = (Left-Right)/sqrt(2);   // obtain side-signal from left and right\n * ```\n * @category Component\n */\nexport class MidSideMerge extends ToneAudioNode<MidSideMergeOptions> {\n\t\n\treadonly name: string = \"MidSideMerge\";\n\n\t/**\n\t * There is no input, connect sources to either [[mid]] or [[side]] inputs.\n\t */\n\treadonly input: undefined;\n\n\t/**\n\t * The merged signal\n\t */\n\treadonly output: Merge;\n\n\t/**\n\t * Merge the incoming signal into left and right channels\n\t */\n\tprivate _merge: Merge;\n\n\t/**\n\t * The \"mid\" input.\n\t */\n\treadonly mid: ToneAudioNode;\n\n\t/**\n\t * The \"side\" input.\n\t */\n\treadonly side: ToneAudioNode;\n\n\t/**\n\t * Recombine the mid/side into Left\n\t */\n\tprivate _left: Add;\n\n\t/**\n\t * Recombine the mid/side into Right\n\t */\n\tprivate _right: Subtract;\n\n\t/**\n\t * Multiply the right by sqrt(1/2)\n\t */\n\tprivate _leftMult: Multiply;\n\n\t/**\n\t * Multiply the left by sqrt(1/2)\n\t */\n\tprivate _rightMult: Multiply;\n\t\n\tconstructor(options?: Partial<MidSideMergeOptions>);\n\tconstructor() {\n\t\tsuper(optionsFromArguments(MidSideMerge.getDefaults(), arguments));\n\t\tthis.mid = new Gain({ context: this.context });\n\t\tthis.side = new Gain({ context: this.context });\n\t\tthis._left = new Add({ context: this.context });\n\t\tthis._leftMult = new Multiply({\n\t\t\tcontext: this.context, \n\t\t\tvalue: Math.SQRT1_2\n\t\t});\n\t\tthis._right = new Subtract({ context: this.context });\n\t\tthis._rightMult = new Multiply({\n\t\t\tcontext: this.context, \n\t\t\tvalue: Math.SQRT1_2\n\t\t});\n\t\tthis._merge = this.output = new Merge({ context: this.context });\n\n\t\tthis.mid.fan(this._left);\n\t\tthis.side.connect(this._left.addend);\n\t\tthis.mid.connect(this._right);\n\t\tthis.side.connect(this._right.subtrahend);\n\t\tthis._left.connect(this._leftMult);\n\t\tthis._right.connect(this._rightMult);\n\t\tthis._leftMult.connect(this._merge, 0, 0);\n\t\tthis._rightMult.connect(this._merge, 0, 1);\n\t}\n\t\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis.mid.dispose();\n\t\tthis.side.dispose();\n\t\tthis._leftMult.dispose();\n\t\tthis._rightMult.dispose();\n\t\tthis._left.dispose();\n\t\tthis._right.dispose();\n\t\treturn this;\n\t}\n}\n","import { Effect, EffectOptions } from \"./Effect\";\nimport { MidSideSplit } from \"../component/channel/MidSideSplit\";\nimport { MidSideMerge } from \"../component/channel/MidSideMerge\";\nimport { OutputNode, ToneAudioNode } from \"../core/context/ToneAudioNode\";\n\nexport type MidSideEffectOptions = EffectOptions;\n\n/**\n * Mid/Side processing separates the the 'mid' signal\n * (which comes out of both the left and the right channel)\n * and the 'side' (which only comes out of the the side channels)\n * and effects them separately before being recombined.\n * Applies a Mid/Side seperation and recombination.\n * Algorithm found in [kvraudio forums](http://www.kvraudio.com/forum/viewtopic.php?t=212587).\n * This is a base-class for Mid/Side Effects.\n * @category Effect\n */\nexport abstract class MidSideEffect<Options extends MidSideEffectOptions> extends Effect<Options> {\n\n\treadonly name: string = \"MidSideEffect\";\n\n\t/**\n\t * The mid/side split\n\t */\n\tprivate _midSideSplit: MidSideSplit;\n\t\n\t/**\n\t * The mid/side merge\n\t */\n\tprivate _midSideMerge: MidSideMerge;\n\t\n\t/**\n\t * The mid send. Connect to mid processing\n\t */\n\tprotected _midSend: ToneAudioNode;\n\t\n\t/**\n\t * The side send. Connect to side processing\n\t */\n\tprotected _sideSend: ToneAudioNode;\n\t\n\t/**\n\t * The mid return connection\n\t */\n\tprotected _midReturn: ToneAudioNode;\n\t\n\t/**\n\t * The side return connection\n\t */\n\tprotected _sideReturn: ToneAudioNode;\n\n\tconstructor(options: MidSideEffectOptions) {\n\n\t\tsuper(options);\n\n\t\tthis._midSideMerge = new MidSideMerge({ context: this.context });\n\t\tthis._midSideSplit = new MidSideSplit({ context: this.context });\n\t\tthis._midSend = this._midSideSplit.mid;\n\t\tthis._sideSend = this._midSideSplit.side;\n\t\tthis._midReturn = this._midSideMerge.mid;\n\t\tthis._sideReturn = this._midSideMerge.side;\n\n\t\t// the connections\n\t\tthis.effectSend.connect(this._midSideSplit);\n\t\tthis._midSideMerge.connect(this.effectReturn);\n\t}\n\n\t/**\n\t * Connect the mid chain of the effect\n\t */\n\tprotected connectEffectMid(...nodes: OutputNode[]): void{\n\t\tthis._midSend.chain(...nodes, this._midReturn);\n\t}\n\t\n\t/**\n\t * Connect the side chain of the effect\n\t */\n\tprotected connectEffectSide(...nodes: OutputNode[]): void{\n\t\tthis._sideSend.chain(...nodes, this._sideReturn);\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._midSideSplit.dispose();\n\t\tthis._midSideMerge.dispose();\n\t\tthis._midSend.dispose();\n\t\tthis._sideSend.dispose();\n\t\tthis._midReturn.dispose();\n\t\tthis._sideReturn.dispose();\n\t\treturn this;\n\t}\n}\n\n","import { MidSideEffect, MidSideEffectOptions } from \"../effect/MidSideEffect\";\nimport { Signal } from \"../signal/Signal\";\nimport { Multiply } from \"../signal/Multiply\";\nimport { Subtract } from \"../signal/Subtract\";\nimport { NormalRange } from \"../core/type/Units\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { readOnly } from \"../core/util/Interface\";\nimport { connect } from \"../core/context/ToneAudioNode\";\n\nexport interface StereoWidenerOptions extends MidSideEffectOptions {\n\twidth: NormalRange;\n}\n\n/**\n * Applies a width factor to the mid/side seperation.\n * 0 is all mid and 1 is all side.\n * Algorithm found in [kvraudio forums](http://www.kvraudio.com/forum/viewtopic.php?t=212587).\n * ```\n * Mid *= 2*(1-width)<br>\n * Side *= 2*width\n * ```\n * @category Effect\n */\nexport class StereoWidener extends MidSideEffect<StereoWidenerOptions> {\n\n\treadonly name: string = \"StereoWidener\";\n\n\t/**\n\t * The width control. 0 = 100% mid. 1 = 100% side. 0.5 = no change.\n\t */\n\treadonly width: Signal<\"normalRange\">;\n\t\n\t/**\n\t * Two times the (1-width) for the mid channel\n\t */\n\tprivate _twoTimesWidthMid: Multiply;\n\t\n\t/**\n\t * Two times the width for the side channel\n\t */\n\tprivate _twoTimesWidthSide: Multiply;\n\t\n\t/**\n\t * Mid multiplier\n\t */\n\tprivate _midMult: Multiply;\n\t\n\t/**\n\t * 1 - width\n\t */\n\tprivate _oneMinusWidth: Subtract;\n\t\n\t/**\n\t * Side multiplier\n\t */\n\tprivate _sideMult: Multiply;\n\n\t/**\n\t * @param width The stereo width. A width of 0 is mono and 1 is stereo. 0.5 is no change.\n\t */\n\tconstructor(width?: NormalRange);\n\tconstructor(options?: Partial<StereoWidenerOptions>);\n\tconstructor() {\n\n\t\tsuper(optionsFromArguments(StereoWidener.getDefaults(), arguments, [\"width\"]));\n\t\tconst options = optionsFromArguments(StereoWidener.getDefaults(), arguments, [\"width\"]);\n\t\tthis.width = new Signal({\n\t\t\tcontext: this.context,\n\t\t\tvalue: options.width,\n\t\t\tunits: \"normalRange\",\n\t\t});\n\t\treadOnly(this, [\"width\"]);\n\t\tthis._twoTimesWidthMid = new Multiply({\n\t\t\tcontext: this.context,\n\t\t\tvalue: 2,\n\t\t});\n\t\tthis._twoTimesWidthSide = new Multiply({\n\t\t\tcontext: this.context,\n\t\t\tvalue: 2,\n\t\t});\n\t\tthis._midMult = new Multiply({ context: this.context });\n\t\tthis._twoTimesWidthMid.connect(this._midMult.factor);\n\t\tthis.connectEffectMid(this._midMult);\n\n\t\tthis._oneMinusWidth = new Subtract({ context: this.context });\n\t\tthis._oneMinusWidth.connect(this._twoTimesWidthMid);\n\t\tconnect(this.context.getConstant(1), this._oneMinusWidth);\n\t\tthis.width.connect(this._oneMinusWidth.subtrahend);\n\n\t\tthis._sideMult = new Multiply({ context: this.context });\n\t\tthis.width.connect(this._twoTimesWidthSide);\n\t\tthis._twoTimesWidthSide.connect(this._sideMult.factor);\n\t\tthis.connectEffectSide(this._sideMult);\n\t}\n\n\tstatic getDefaults(): StereoWidenerOptions {\n\t\treturn Object.assign(MidSideEffect.getDefaults(), {\n\t\t\twidth: 0.5,\n\t\t});\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis.width.dispose();\n\t\tthis._midMult.dispose();\n\t\tthis._sideMult.dispose();\n\t\tthis._twoTimesWidthMid.dispose();\n\t\tthis._twoTimesWidthSide.dispose();\n\t\tthis._oneMinusWidth.dispose();\n\t\treturn this;\n\t}\n}\n","import { StereoEffect, StereoEffectOptions } from \"./StereoEffect\";\nimport { LFO } from \"../source/oscillator/LFO\";\nimport { Gain } from \"../core/context/Gain\";\nimport { Signal } from \"../signal/Signal\";\nimport { Degrees, Frequency, NormalRange, Time } from \"../core/type/Units\";\nimport { ToneOscillatorType } from \"../source/oscillator/OscillatorInterface\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { readOnly } from \"../core/util/Interface\";\n\nexport interface TremoloOptions extends StereoEffectOptions {\n\tfrequency: Frequency;\n\ttype: ToneOscillatorType;\n\tdepth: NormalRange;\n\tspread: Degrees;\n}\n\n/**\n * Tremolo modulates the amplitude of an incoming signal using an [[LFO]].\n * The effect is a stereo effect where the modulation phase is inverted in each channel.\n *\n * @example\n * // create a tremolo and start it's LFO\n * const tremolo = new Tone.Tremolo(9, 0.75).toDestination().start();\n * // route an oscillator through the tremolo and start it\n * const oscillator = new Tone.Oscillator().connect(tremolo).start();\n * \n * @category Effect\n */\nexport class Tremolo extends StereoEffect<TremoloOptions> {\n\n\treadonly name: string = \"Tremolo\";\n\n\t/**\n\t * The tremolo LFO in the left channel\n\t */\n\tprivate _lfoL: LFO;\n\n\t/**\n\t * The tremolo LFO in the left channel\n\t */\n\tprivate _lfoR: LFO;\n\n\t/**\n\t * Where the gain is multiplied\n\t */\n\tprivate _amplitudeL: Gain;\n\n\t/**\n\t * Where the gain is multiplied\n\t */\n\tprivate _amplitudeR: Gain;\n\n\t/**\n\t * The frequency of the tremolo.\n\t */\n\treadonly frequency: Signal<\"frequency\">;\n\n\t/**\n\t * The depth of the effect. A depth of 0, has no effect\n\t * on the amplitude, and a depth of 1 makes the amplitude\n\t * modulate fully between 0 and 1.\n\t */\n\treadonly depth: Signal<\"normalRange\">;\n\n\t/**\n\t * @param frequency The rate of the effect.\n\t * @param depth The depth of the effect.\n\t */\n\tconstructor(frequency?: Frequency, depth?: NormalRange);\n\tconstructor(options?: Partial<TremoloOptions>);\n\tconstructor() {\n\n\t\tsuper(optionsFromArguments(Tremolo.getDefaults(), arguments, [\"frequency\", \"depth\"]));\n\t\tconst options = optionsFromArguments(Tremolo.getDefaults(), arguments, [\"frequency\", \"depth\"]);\n\n\t\tthis._lfoL = new LFO({\n\t\t\tcontext: this.context,\n\t\t\ttype: options.type,\n\t\t\tmin: 1,\n\t\t\tmax: 0,\n\t\t});\n\t\tthis._lfoR = new LFO({\n\t\t\tcontext: this.context,\n\t\t\ttype: options.type,\n\t\t\tmin: 1,\n\t\t\tmax: 0,\n\t\t});\n\t\tthis._amplitudeL = new Gain({ context: this.context });\n\t\tthis._amplitudeR = new Gain({ context: this.context });\n\t\tthis.frequency = new Signal({\n\t\t\tcontext: this.context,\n\t\t\tvalue: options.frequency,\n\t\t\tunits: \"frequency\",\n\t\t});\n\t\tthis.depth = new Signal({\n\t\t\tcontext: this.context,\n\t\t\tvalue: options.depth,\n\t\t\tunits: \"normalRange\",\n\t\t});\n\n\t\treadOnly(this, [\"frequency\", \"depth\"]);\n\t\tthis.connectEffectLeft(this._amplitudeL);\n\t\tthis.connectEffectRight(this._amplitudeR);\n\t\tthis._lfoL.connect(this._amplitudeL.gain);\n\t\tthis._lfoR.connect(this._amplitudeR.gain);\n\t\tthis.frequency.fan(this._lfoL.frequency, this._lfoR.frequency);\n\t\tthis.depth.fan(this._lfoR.amplitude, this._lfoL.amplitude);\n\t\tthis.spread = options.spread;\n\t}\n\n\tstatic getDefaults(): TremoloOptions {\n\t\treturn Object.assign(StereoEffect.getDefaults(), {\n\t\t\tfrequency: 10,\n\t\t\ttype: \"sine\" as \"sine\",\n\t\t\tdepth: 0.5,\n\t\t\tspread: 180,\n\t\t});\n\t}\n\n\t/**\n\t * Start the tremolo.\n\t */\n\tstart(time?: Time): this {\n\t\tthis._lfoL.start(time);\n\t\tthis._lfoR.start(time);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Stop the tremolo.\n\t */\n\tstop(time?: Time): this {\n\t\tthis._lfoL.stop(time);\n\t\tthis._lfoR.stop(time);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sync the effect to the transport.\n\t */\n\tsync(): this {\n\t\tthis._lfoL.sync();\n\t\tthis._lfoR.sync();\n\t\tthis.context.transport.syncSignal(this.frequency);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Unsync the filter from the transport\n\t */\n\tunsync(): this {\n\t\tthis._lfoL.unsync();\n\t\tthis._lfoR.unsync();\n\t\tthis.context.transport.unsyncSignal(this.frequency);\n\t\treturn this;\n\t}\n\n\t/**\n\t * The oscillator type.\n\t */\n\tget type(): ToneOscillatorType {\n\t\treturn this._lfoL.type;\n\t}\n\tset type(type) {\n\t\tthis._lfoL.type = type;\n\t\tthis._lfoR.type = type;\n\t}\n\n\t/**\n\t * Amount of stereo spread. When set to 0, both LFO's will be panned centrally.\n\t * When set to 180, LFO's will be panned hard left and right respectively.\n\t */\n\tget spread(): Degrees {\n\t\treturn this._lfoR.phase - this._lfoL.phase; // 180\n\t}\n\tset spread(spread) {\n\t\tthis._lfoL.phase = 90 - (spread / 2);\n\t\tthis._lfoR.phase = (spread / 2) + 90;\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._lfoL.dispose();\n\t\tthis._lfoR.dispose();\n\t\tthis._amplitudeL.dispose();\n\t\tthis._amplitudeR.dispose();\n\t\tthis.frequency.dispose();\n\t\tthis.depth.dispose();\n\t\treturn this;\n\t}\n}\n","import { Effect, EffectOptions } from \"./Effect\";\nimport { ToneOscillatorType } from \"../source/oscillator/OscillatorInterface\";\nimport { Frequency, NormalRange, Seconds } from \"../core/type/Units\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { LFO } from \"../source/oscillator/LFO\";\nimport { Delay } from \"../core/context/Delay\";\nimport { Signal } from \"../signal/Signal\";\nimport { Param } from \"../core/context/Param\";\nimport { readOnly } from \"../core/util/Interface\";\n\nexport interface VibratoOptions extends EffectOptions {\n\tmaxDelay: Seconds;\n\tfrequency: Frequency;\n\tdepth: NormalRange;\n\ttype: ToneOscillatorType;\n}\n/**\n * A Vibrato effect composed of a Tone.Delay and a Tone.LFO. The LFO\n * modulates the delayTime of the delay, causing the pitch to rise and fall. \n * @category Effect\n */\nexport class Vibrato extends Effect<VibratoOptions> {\n\n\treadonly name: string = \"Vibrato\";\n\t/**\n\t * The delay node used for the vibrato effect\n\t */\n\tprivate _delayNode: Delay;\n\t\n\t/**\n\t * The LFO used to control the vibrato\n\t */\n\tprivate _lfo: LFO;\n\t\n\t/**\n\t * The frequency of the vibrato\n\t */\n\treadonly frequency: Signal<\"frequency\">;\n\t\n\t/**\n\t * The depth of the vibrato. \n\t */\n\treadonly depth: Param<\"normalRange\">;\n\n\t/**\n\t * @param frequency The frequency of the vibrato.\n\t * @param depth The amount the pitch is modulated.\n\t */\n\tconstructor(frequency?: Frequency, depth?: NormalRange);\n\tconstructor(options?: Partial<VibratoOptions>);\n\tconstructor() {\n\n\t\tsuper(optionsFromArguments(Vibrato.getDefaults(), arguments, [\"frequency\", \"depth\"]));\n\t\tconst options = optionsFromArguments(Vibrato.getDefaults(), arguments, [\"frequency\", \"depth\"]);\n\n\t\tthis._delayNode = new Delay({\n\t\t\tcontext: this.context,\n\t\t\tdelayTime: 0,\n\t\t\tmaxDelay: options.maxDelay,\n\t\t});\n\t\tthis._lfo = new LFO({\n\t\t\tcontext: this.context,\n\t\t\ttype: options.type,\n\t\t\tmin: 0,\n\t\t\tmax: options.maxDelay, \n\t\t\tfrequency: options.frequency,\n\t\t\tphase: -90 // offse the phase so the resting position is in the center\n\t\t}).start().connect(this._delayNode.delayTime);\n\t\tthis.frequency = this._lfo.frequency;\n\t\tthis.depth = this._lfo.amplitude;\n\n\t\tthis.depth.value = options.depth;\n\t\treadOnly(this, [\"frequency\", \"depth\"]);\n\t\tthis.effectSend.chain(this._delayNode, this.effectReturn);\n\t}\n\n\tstatic getDefaults(): VibratoOptions {\n\t\treturn Object.assign(Effect.getDefaults(), {\n\t\t\tmaxDelay: 0.005,\n\t\t\tfrequency: 5,\n\t\t\tdepth: 0.1,\n\t\t\ttype: \"sine\" as \"sine\"\n\t\t});\n\t}\n\n\t/**\n\t * Type of oscillator attached to the Vibrato.\n\t */\n\tget type(): ToneOscillatorType {\n\t\treturn this._lfo.type;\n\t}\n\tset type(type) {\n\t\tthis._lfo.type = type;\n\t}\n\t\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._delayNode.dispose();\n\t\tthis._lfo.dispose();\n\t\tthis.frequency.dispose();\n\t\tthis.depth.dispose();\n\t\treturn this;\n\t}\n}\n","export * from \"./AutoFilter\";\nexport * from \"./AutoPanner\";\nexport * from \"./AutoWah\";\nexport * from \"./BitCrusher\";\nexport * from \"./Chebyshev\";\nexport * from \"./Chorus\";\nexport * from \"./Distortion\";\nexport * from \"./FeedbackDelay\";\nexport * from \"./FrequencyShifter\";\nexport * from \"./Freeverb\";\nexport * from \"./JCReverb\";\nexport * from \"./PingPongDelay\";\nexport * from \"./PitchShift\";\nexport * from \"./Phaser\";\nexport * from \"./Reverb\";\nexport * from \"./StereoWidener\";\nexport * from \"./Tremolo\";\nexport * from \"./Vibrato\";\n","import { InputNode, OutputNode, ToneAudioNode, ToneAudioNodeOptions } from \"../../core/context/ToneAudioNode\";\nimport { NormalRange, PowerOfTwo } from \"../../core/type/Units\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { Split } from \"../channel/Split\";\nimport { Gain } from \"../../core/context/Gain\";\nimport { assert, assertRange } from \"../../core/util/Debug\";\n\nexport type AnalyserType = \"fft\" | \"waveform\";\n\nexport interface AnalyserOptions extends ToneAudioNodeOptions {\n\tsize: PowerOfTwo;\n\ttype: AnalyserType;\n\tsmoothing: NormalRange;\n\tchannels: number;\n}\n\n/**\n * Wrapper around the native Web Audio's [AnalyserNode](http://webaudio.github.io/web-audio-api/#idl-def-AnalyserNode).\n * Extracts FFT or Waveform data from the incoming signal.\n * @category Component\n */\nexport class Analyser extends ToneAudioNode<AnalyserOptions> {\n\n\treadonly name: string = \"Analyser\";\n\n\treadonly input: InputNode;\n\treadonly output: OutputNode;\n\n\t/**\n\t * The analyser node.\n\t */\n\tprivate _analysers: AnalyserNode[] = [];\n\n\t/**\n\t * Input and output are a gain node\n\t */\n\tprivate _gain: Gain;\n\n\t/**\n\t * The channel splitter node\n\t */\n\tprivate _split: Split;\n\n\t/**\n\t * The analysis type\n\t */\n\tprivate _type!: AnalyserType;\n\n\t/**\n\t * The buffer that the FFT data is written to\n\t */\n\tprivate _buffers: Float32Array[] = [];\n\n\t/**\n\t * @param type The return type of the analysis, either \"fft\", or \"waveform\".\n\t * @param size The size of the FFT. This must be a power of two in the range 16 to 16384.\n\t */\n\tconstructor(type?: AnalyserType, size?: number);\n\tconstructor(options?: Partial<AnalyserOptions>);\n\tconstructor() {\n\t\tsuper(optionsFromArguments(Analyser.getDefaults(), arguments, [\"type\", \"size\"]));\n\t\tconst options = optionsFromArguments(Analyser.getDefaults(), arguments, [\"type\", \"size\"]);\n\n\t\tthis.input = this.output = this._gain = new Gain({ context: this.context });\n\t\tthis._split = new Split({\n\t\t\tcontext: this.context,\n\t\t\tchannels: options.channels,\n\t\t});\n\t\tthis.input.connect(this._split);\n\t\t\n\t\tassertRange(options.channels, 1);\n\t\t\n\t\t// create the analysers\n\t\tfor (let channel = 0; channel < options.channels; channel++) {\n\t\t\tthis._analysers[channel] = this.context.createAnalyser();\n\t\t\tthis._split.connect(this._analysers[channel], channel, 0);\n\t\t}\n\n\t\t// set the values initially\n\t\tthis.size = options.size;\n\t\tthis.type = options.type;\n\t}\n\n\tstatic getDefaults(): AnalyserOptions {\n\t\treturn Object.assign(ToneAudioNode.getDefaults(), {\n\t\t\tsize: 1024,\n\t\t\tsmoothing: 0.8,\n\t\t\ttype: \"fft\" as AnalyserType,\n\t\t\tchannels: 1,\n\t\t});\n\t}\n\n\t/**\n\t * Run the analysis given the current settings. If [[channels]] = 1,\n\t * it will return a Float32Array. If [[channels]] > 1, it will\n\t * return an array of Float32Arrays where each index in the array\n\t * represents the analysis done on a channel.\n\t */\n\tgetValue(): Float32Array | Float32Array[] {\n\t\tthis._analysers.forEach((analyser, index) => {\n\t\t\tconst buffer = this._buffers[index];\n\t\t\tif (this._type === \"fft\") {\n\t\t\t\tanalyser.getFloatFrequencyData(buffer);\n\t\t\t} else if (this._type === \"waveform\") {\n\t\t\t\tanalyser.getFloatTimeDomainData(buffer);\n\t\t\t}\n\t\t});\n\t\tif (this.channels === 1) {\n\t\t\treturn this._buffers[0];\n\t\t} else {\n\t\t\treturn this._buffers;\n\t\t}\n\t}\n\n\t/**\n\t * The size of analysis. This must be a power of two in the range 16 to 16384.\n\t */\n\tget size(): PowerOfTwo {\n\t\treturn this._analysers[0].frequencyBinCount;\n\t}\n\tset size(size: PowerOfTwo) {\n\t\tthis._analysers.forEach((analyser, index) => {\n\t\t\tanalyser.fftSize = size * 2;\n\t\t\tthis._buffers[index] = new Float32Array(size);\n\t\t});\n\t}\n\n\t/**\n\t * The number of channels the analyser does the analysis on. Channel\n\t * separation is done using [[Split]]\n\t */\n\tget channels(): number {\n\t\treturn this._analysers.length;\n\t}\n\n\t/**\n\t * The analysis function returned by analyser.getValue(), either \"fft\" or \"waveform\".\n\t */\n\tget type(): AnalyserType {\n\t\treturn this._type;\n\t}\n\tset type(type: AnalyserType) {\n\t\tassert(type === \"waveform\" || type === \"fft\", `Analyser: invalid type: ${type}`);\n\t\tthis._type = type;\n\t}\n\n\t/**\n\t * 0 represents no time averaging with the last analysis frame.\n\t */\n\tget smoothing(): NormalRange {\n\t\treturn this._analysers[0].smoothingTimeConstant;\n\t}\n\tset smoothing(val: NormalRange) {\n\t\tthis._analysers.forEach(a => a.smoothingTimeConstant = val);\n\t}\n\n\t/**\n\t * Clean up.\n\t */\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._analysers.forEach(a => a.disconnect());\n\t\tthis._split.dispose();\n\t\tthis._gain.dispose();\n\t\treturn this;\n\t}\n}\n","import { InputNode, OutputNode, ToneAudioNode, ToneAudioNodeOptions } from \"../../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { Analyser } from \"./Analyser\";\n\nexport type MeterBaseOptions = ToneAudioNodeOptions;\n\n/**\n * The base class for Metering classes.\n */\nexport class MeterBase<Options extends MeterBaseOptions> extends ToneAudioNode<Options> {\n\n\treadonly name: string = \"MeterBase\";\n\n\t/**\n\t * The signal to be analysed\n\t */\n\tinput: InputNode;\n\n\t/**\n\t * The output is just a pass through of the input\n\t */\n\toutput: OutputNode;\n\n\t/**\n\t * The analyser node for the incoming signal\n\t */\n\tprotected _analyser: Analyser;\n\n\tconstructor(options?: Partial<MeterBaseOptions>);\n\tconstructor() {\n\t\tsuper(optionsFromArguments(MeterBase.getDefaults(), arguments));\n\n\t\tthis.input = this.output = this._analyser = new Analyser({\n\t\t\tcontext: this.context,\n\t\t\tsize: 256,\n\t\t\ttype: \"waveform\",\n\t\t});\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._analyser.dispose();\n\t\treturn this;\n\t}\n}\n","import { gainToDb } from \"../../core/type/Conversions\";\nimport { NormalRange } from \"../../core/type/Units\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { MeterBase, MeterBaseOptions } from \"./MeterBase\";\nimport { warn } from \"../../core/util/Debug\";\nimport { Analyser } from \"./Analyser\";\n\nexport interface MeterOptions extends MeterBaseOptions {\n\tsmoothing: NormalRange;\n\tnormalRange: boolean;\n\tchannels: number;\n}\n\n/**\n * Meter gets the [RMS](https://en.wikipedia.org/wiki/Root_mean_square)\n * of an input signal. It can also get the raw value of the input signal.\n *\n * @example\n * const meter = new Tone.Meter();\n * const mic = new Tone.UserMedia();\n * mic.open();\n * // connect mic to the meter\n * mic.connect(meter);\n * // the current level of the mic\n * setInterval(() => console.log(meter.getValue()), 100);\n * @category Component\n */\nexport class Meter extends MeterBase<MeterOptions> {\n\n\treadonly name: string = \"Meter\";\n\n\t/**\n\t * If the output should be in decibels or normal range between 0-1. If `normalRange` is false,\n\t * the output range will be the measured decibel value, otherwise the decibel value will be converted to\n\t * the range of 0-1\n\t */\n\tnormalRange: boolean;\n\n\t/**\n\t * A value from between 0 and 1 where 0 represents no time averaging with the last analysis frame.\n\t */\n\tsmoothing: number;\n\n\t/**\n\t * The previous frame's value\n\t */\n\tprivate _rms = 0;\n\n\t/**\n\t * @param smoothing The amount of smoothing applied between frames.\n\t */\n\tconstructor(smoothing?: NormalRange);\n\tconstructor(options?: Partial<MeterOptions>);\n\tconstructor() {\n\t\tsuper(optionsFromArguments(Meter.getDefaults(), arguments, [\"smoothing\"]));\n\t\tconst options = optionsFromArguments(Meter.getDefaults(), arguments, [\"smoothing\"]);\n\n\t\tthis.input = this.output = this._analyser = new Analyser({\n\t\t\tcontext: this.context,\n\t\t\tsize: 256,\n\t\t\ttype: \"waveform\",\n\t\t\tchannels: options.channels,\n\t\t});\n\n\t\tthis.smoothing = options.smoothing,\n\t\tthis.normalRange = options.normalRange;\n\t}\n\n\tstatic getDefaults(): MeterOptions {\n\t\treturn Object.assign(MeterBase.getDefaults(), {\n\t\t\tsmoothing: 0.8,\n\t\t\tnormalRange: false,\n\t\t\tchannels: 1,\n\t\t});\n\t}\n\n\t/**\n\t * Use [[getValue]] instead. For the previous getValue behavior, use DCMeter.\n\t * @deprecated\n\t */\n\tgetLevel(): number | number[] {\n\t\twarn(\"'getLevel' has been changed to 'getValue'\");\n\t\treturn this.getValue();\n\t}\n\n\t/**\n\t * Get the current value of the incoming signal. \n\t * Output is in decibels when [[normalRange]] is `false`.\n\t * If [[channels]] = 1, then the output is a single number\n\t * representing the value of the input signal. When [[channels]] > 1,\n\t * then each channel is returned as a value in a number array. \n\t */\n\tgetValue(): number | number[] {\n\t\tconst aValues = this._analyser.getValue();\n\t\tconst channelValues = this.channels === 1 ? [aValues as Float32Array] : aValues as Float32Array[];\n\t\tconst vals = channelValues.map(values => {\n\t\t\tconst totalSquared = values.reduce((total, current) => total + current * current, 0);\n\t\t\tconst rms = Math.sqrt(totalSquared / values.length);\n\t\t\t// the rms can only fall at the rate of the smoothing\n\t\t\t// but can jump up instantly\n\t\t\tthis._rms = Math.max(rms, this._rms * this.smoothing);\n\t\t\treturn this.normalRange ? this._rms : gainToDb(this._rms);\n\t\t});\n\t\tif (this.channels === 1) {\n\t\t\treturn vals[0];\n\t\t} else {\n\t\t\treturn vals;\n\t\t}\n\t}\n\n\t/**\n\t * The number of channels of analysis.\n\t */\n\tget channels(): number {\n\t\treturn this._analyser.channels;\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._analyser.dispose();\n\t\treturn this;\n\t}\n}\n","import { ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { dbToGain } from \"../../core/type/Conversions\";\nimport { Hertz, NormalRange, PowerOfTwo } from \"../../core/type/Units\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { MeterBase, MeterBaseOptions } from \"./MeterBase\";\nimport { assert } from \"../../core/util/Debug\";\n\nexport interface FFTOptions extends MeterBaseOptions {\n\tsize: PowerOfTwo;\n\tsmoothing: NormalRange;\n\tnormalRange: boolean;\n}\n\n/**\n * Get the current frequency data of the connected audio source using a fast Fourier transform.\n * @category Component\n */\nexport class FFT extends MeterBase<FFTOptions> {\n\n\treadonly name: string = \"FFT\";\n\n\t/**\n\t * If the output should be in decibels or normal range between 0-1. If `normalRange` is false,\n\t * the output range will be the measured decibel value, otherwise the decibel value will be converted to\n\t * the range of 0-1\n\t */\n\tnormalRange: boolean;\n\n\t/**\n\t * @param size The size of the FFT. Value must be a power of two in the range 16 to 16384.\n\t */\n\tconstructor(size?: PowerOfTwo);\n\tconstructor(options?: Partial<FFTOptions>);\n\tconstructor() {\n\t\tsuper(optionsFromArguments(FFT.getDefaults(), arguments, [\"size\"]));\n\t\tconst options = optionsFromArguments(FFT.getDefaults(), arguments, [\"size\"]);\n\n\t\tthis.normalRange = options.normalRange;\n\t\tthis._analyser.type = \"fft\";\n\t\tthis.size = options.size;\n\t}\n\n\tstatic getDefaults(): FFTOptions {\n\t\treturn Object.assign(ToneAudioNode.getDefaults(), {\n\t\t\tnormalRange: false,\n\t\t\tsize: 1024,\n\t\t\tsmoothing: 0.8,\n\t\t});\n\t}\n\n\t/**\n\t * Gets the current frequency data from the connected audio source.\n\t * Returns the frequency data of length [[size]] as a Float32Array of decibel values.\n\t */\n\tgetValue(): Float32Array {\n\t\tconst values = this._analyser.getValue() as Float32Array;\n\t\treturn values.map(v => this.normalRange ? dbToGain(v) : v);\n\t}\n\n\t/**\n\t * The size of analysis. This must be a power of two in the range 16 to 16384.\n\t * Determines the size of the array returned by [[getValue]] (i.e. the number of\n\t * frequency bins). Large FFT sizes may be costly to compute.\n\t */\n\tget size(): PowerOfTwo {\n\t\treturn this._analyser.size;\n\t}\n\tset size(size) {\n\t\tthis._analyser.size = size;\n\t}\n\n\t/**\n\t * 0 represents no time averaging with the last analysis frame.\n\t */\n\tget smoothing(): NormalRange {\n\t\treturn this._analyser.smoothing;\n\t}\n\tset smoothing(val) {\n\t\tthis._analyser.smoothing = val;\n\t}\n\n\t/**\n\t * Returns the frequency value in hertz of each of the indices of the FFT's [[getValue]] response.\n\t * @example\n\t * const fft = new Tone.FFT(32);\n\t * console.log([0, 1, 2, 3, 4].map(index => fft.getFrequencyOfIndex(index)));\n\t */\n\tgetFrequencyOfIndex(index: number): Hertz {\n\t\tassert(0 <= index && index < this.size, `index must be greater than or equal to 0 and less than ${this.size}`);\n\t\treturn index * this.context.sampleRate / (this.size * 2);\n\t}\n}\n","import { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { MeterBase, MeterBaseOptions } from \"./MeterBase\";\n\nexport type DCMeterOptions = MeterBaseOptions;\n\n/**\n * DCMeter gets the raw value of the input signal at the current time.\n *\n * @example\n * const meter = new Tone.DCMeter();\n * const mic = new Tone.UserMedia();\n * mic.open();\n * // connect mic to the meter\n * mic.connect(meter);\n * // the current level of the mic\n * const level = meter.getValue();\n * @category Component\n */\nexport class DCMeter extends MeterBase<DCMeterOptions> {\n\n\treadonly name: string = \"DCMeter\";\n\n\tconstructor(options?: Partial<DCMeterOptions>);\n\tconstructor() {\n\t\tsuper(optionsFromArguments(DCMeter.getDefaults(), arguments));\n\n\t\tthis._analyser.type = \"waveform\";\n\t\tthis._analyser.size = 256;\n\t}\n\n\t/**\n\t * Get the signal value of the incoming signal\n\t */\n\tgetValue(): number {\n\t\tconst value = this._analyser.getValue() as Float32Array;\n\t\treturn value[0];\n\t}\n}\n","import { PowerOfTwo } from \"../../core/type/Units\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { MeterBase, MeterBaseOptions } from \"./MeterBase\";\n\nexport interface WaveformOptions extends MeterBaseOptions {\n\t/**\n\t * The size of the Waveform. Value must be a power of two in the range 16 to 16384.\n\t */\n\tsize: PowerOfTwo;\n}\n\n/**\n * Get the current waveform data of the connected audio source.\n * @category Component\n */\nexport class Waveform extends MeterBase<WaveformOptions> {\n\n\treadonly name: string = \"Waveform\";\n\n\t/**\n\t * @param size The size of the Waveform. Value must be a power of two in the range 16 to 16384.\n\t */\n\tconstructor(size?: PowerOfTwo);\n\tconstructor(options?: Partial<WaveformOptions>);\n\tconstructor() {\n\t\tsuper(optionsFromArguments(Waveform.getDefaults(), arguments, [\"size\"]));\n\t\tconst options = optionsFromArguments(Waveform.getDefaults(), arguments, [\"size\"]);\n\n\t\tthis._analyser.type = \"waveform\";\n\t\tthis.size = options.size;\n\t}\n\n\tstatic getDefaults(): WaveformOptions {\n\t\treturn Object.assign(MeterBase.getDefaults(), {\n\t\t\tsize: 1024,\n\t\t});\n\t}\n\n\t/**\n\t * Return the waveform for the current time as a Float32Array where each value in the array\n\t * represents a sample in the waveform.\n\t */\n\tgetValue(): Float32Array {\n\t\treturn this._analyser.getValue() as Float32Array;\n\t}\n\n\t/**\n\t * The size of analysis. This must be a power of two in the range 16 to 16384.\n\t * Determines the size of the array returned by [[getValue]].\n\t */\n\tget size(): PowerOfTwo {\n\t\treturn this._analyser.size;\n\t}\n\tset size(size) {\n\t\tthis._analyser.size = size;\n\t}\n}\n","import { BaseContext } from \"../../core/context/BaseContext\";\nimport { Gain } from \"../../core/context/Gain\";\nimport { ToneAudioNode, ToneAudioNodeOptions } from \"../../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\n\nexport interface SoloOptions extends ToneAudioNodeOptions {\n\tsolo: boolean;\n}\n\n/**\n * Solo lets you isolate a specific audio stream. When an instance is set to `solo=true`,\n * it will mute all other instances of Solo.\n * @example\n * const soloA = new Tone.Solo().toDestination();\n * const oscA = new Tone.Oscillator(\"C4\", \"sawtooth\").connect(soloA);\n * const soloB = new Tone.Solo().toDestination();\n * const oscB = new Tone.Oscillator(\"E4\", \"square\").connect(soloB);\n * soloA.solo = true;\n * // no audio will pass through soloB\n * @category Component\n */\nexport class Solo extends ToneAudioNode<SoloOptions> {\n\n\treadonly name: string = \"Solo\";\n\n\treadonly input: Gain;\n\treadonly output: Gain;\n\n\t/**\n\t * @param solo If the connection should be initially solo'ed.\n\t */\n\tconstructor(solo?: boolean);\n\tconstructor(options?: Partial<SoloOptions>);\n\tconstructor() {\n\n\t\tsuper(optionsFromArguments(Solo.getDefaults(), arguments, [\"solo\"]));\n\t\tconst options = optionsFromArguments(Solo.getDefaults(), arguments, [\"solo\"]);\n\n\t\tthis.input = this.output = new Gain({\n\t\t\tcontext: this.context,\n\t\t});\n\n\t\tif (!Solo._allSolos.has(this.context)) {\n\t\t\tSolo._allSolos.set(this.context, new Set());\n\t\t}\n\t\t(Solo._allSolos.get(this.context) as Set<Solo>).add(this);\n\n\t\t// set initially\n\t\tthis.solo = options.solo;\n\t}\n\n\tstatic getDefaults(): SoloOptions {\n\t\treturn Object.assign(ToneAudioNode.getDefaults(), {\n\t\t\tsolo: false,\n\t\t});\n\t}\n\n\t/**\n\t * Hold all of the solo'ed tracks belonging to a specific context\n\t */\n\tprivate static _allSolos: Map<BaseContext, Set<Solo>> = new Map();\n\n\t/**\n\t * Hold the currently solo'ed instance(s)\n\t */\n\tprivate static _soloed: Map<BaseContext, Set<Solo>> = new Map();\n\n\t/**\n\t * Isolates this instance and mutes all other instances of Solo.\n\t * Only one instance can be soloed at a time. A soloed\n\t * instance will report `solo=false` when another instance is soloed.\n\t */\n\tget solo(): boolean {\n\t\treturn this._isSoloed();\n\t}\n\tset solo(solo) {\n\t\tif (solo) {\n\t\t\tthis._addSolo();\n\t\t} else {\n\t\t\tthis._removeSolo();\n\t\t}\n\t\t(Solo._allSolos.get(this.context) as Set<Solo>).forEach(instance => instance._updateSolo());\n\t}\n\n\t/**\n\t * If the current instance is muted, i.e. another instance is soloed\n\t */\n\tget muted(): boolean {\n\t\treturn this.input.gain.value === 0;\n\t}\n\n\t/**\n\t * Add this to the soloed array\n\t */\n\tprivate _addSolo(): void {\n\t\tif (!Solo._soloed.has(this.context)) {\n\t\t\tSolo._soloed.set(this.context, new Set());\n\t\t}\n\t\t(Solo._soloed.get(this.context) as Set<Solo>).add(this);\n\t}\n\n\t/**\n\t * Remove this from the soloed array\n\t */\n\tprivate _removeSolo(): void {\n\t\tif (Solo._soloed.has(this.context)) {\n\t\t\t(Solo._soloed.get(this.context) as Set<Solo>).delete(this);\n\t\t}\n\t}\n\n\t/**\n\t * Is this on the soloed array\n\t */\n\tprivate _isSoloed(): boolean {\n\t\treturn Solo._soloed.has(this.context) && (Solo._soloed.get(this.context) as Set<Solo>).has(this);\n\t}\n\n\t/**\n\t * Returns true if no one is soloed\n\t */\n\tprivate _noSolos(): boolean {\n\t\t// either does not have any soloed added\n\t\treturn !Solo._soloed.has(this.context) ||\n\t\t\t// or has a solo set but doesn't include any items\n\t\t\t(Solo._soloed.has(this.context) && (Solo._soloed.get(this.context) as Set<Solo>).size === 0);\n\t}\n\n\t/**\n\t * Solo the current instance and unsolo all other instances.\n\t */\n\tprivate _updateSolo(): void {\n\t\tif (this._isSoloed()) {\n\t\t\tthis.input.gain.value = 1;\n\t\t} else if (this._noSolos()) {\n\t\t\t// no one is soloed\n\t\t\tthis.input.gain.value = 1;\n\t\t} else {\n\t\t\tthis.input.gain.value = 0;\n\t\t}\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\t(Solo._allSolos.get(this.context) as Set<Solo>).delete(this);\n\t\tthis._removeSolo();\n\t\treturn this;\n\t}\n}\n","import { readOnly } from \"../../core/util/Interface\";\nimport { Param } from \"../../core/context/Param\";\nimport { InputNode, OutputNode, ToneAudioNode, ToneAudioNodeOptions } from \"../../core/context/ToneAudioNode\";\nimport { AudioRange, Decibels } from \"../../core/type/Units\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { Panner } from \"./Panner\";\nimport { Volume } from \"./Volume\";\n\nexport interface PanVolOptions extends ToneAudioNodeOptions {\n\tpan: AudioRange;\n\tvolume: Decibels;\n\tmute: boolean;\n\tchannelCount: number;\n}\n\n/**\n * PanVol is a Tone.Panner and Tone.Volume in one.\n * @example\n * // pan the incoming signal left and drop the volume\n * const panVol = new Tone.PanVol(-0.25, -12).toDestination();\n * const osc = new Tone.Oscillator().connect(panVol).start();\n * @category Component\n */\nexport class PanVol extends ToneAudioNode<PanVolOptions> {\n\n\treadonly name: string = \"PanVol\";\n\n\treadonly input: InputNode;\n\treadonly output: OutputNode;\n\n\t/**\n\t * The panning node\n\t */\n\tprivate _panner: Panner;\n\n\t/**\n\t * The L/R panning control. -1 = hard left, 1 = hard right.\n\t * @min -1\n\t * @max 1\n\t */\n\treadonly pan: Param<\"audioRange\">;\n\n\t/**\n\t * The volume node\n\t */\n\tprivate _volume: Volume;\n\n\t/**\n\t * The volume control in decibels.\n\t */\n\treadonly volume: Param<\"decibels\">;\n\n\t/**\n\t * @param pan the initial pan\n\t * @param volume The output volume.\n\t */\n\tconstructor(pan?: AudioRange, volume?: Decibels);\n\tconstructor(options?: Partial<PanVolOptions>);\n\tconstructor() {\n\n\t\tsuper(optionsFromArguments(PanVol.getDefaults(), arguments, [\"pan\", \"volume\"]));\n\t\tconst options = optionsFromArguments(PanVol.getDefaults(), arguments, [\"pan\", \"volume\"]);\n\n\t\tthis._panner = this.input = new Panner({\n\t\t\tcontext: this.context,\n\t\t\tpan: options.pan,\n\t\t\tchannelCount: options.channelCount,\n\t\t});\n\t\tthis.pan = this._panner.pan;\n\t\tthis._volume = this.output = new Volume({\n\t\t\tcontext: this.context,\n\t\t\tvolume: options.volume,\n\t\t});\n\t\tthis.volume = this._volume.volume;\n\n\t\t// connections\n\t\tthis._panner.connect(this._volume);\n\t\tthis.mute = options.mute;\n\n\t\treadOnly(this, [\"pan\", \"volume\"]);\n\t}\n\n\tstatic getDefaults(): PanVolOptions {\n\t\treturn Object.assign(ToneAudioNode.getDefaults(), {\n\t\t\tmute: false,\n\t\t\tpan: 0,\n\t\t\tvolume: 0,\n\t\t\tchannelCount: 1,\n\t\t});\n\t}\n\n\t/**\n\t * Mute/unmute the volume\n\t */\n\tget mute(): boolean {\n\t\treturn this._volume.mute;\n\t}\n\tset mute(mute) {\n\t\tthis._volume.mute = mute;\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._panner.dispose();\n\t\tthis.pan.dispose();\n\t\tthis._volume.dispose();\n\t\tthis.volume.dispose();\n\t\treturn this;\n\t}\n}\n","import { AudioRange, Decibels } from \"../../core/type/Units\";\nimport { InputNode, OutputNode, ToneAudioNode, ToneAudioNodeOptions } from \"../../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { Solo } from \"./Solo\";\nimport { PanVol } from \"./PanVol\";\nimport { Param } from \"../../core/context/Param\";\nimport { readOnly } from \"../../core/util/Interface\";\nimport { Gain } from \"../../core/context/Gain\";\n\nexport interface ChannelOptions extends ToneAudioNodeOptions {\n\tpan: AudioRange;\n\tvolume: Decibels;\n\tsolo: boolean;\n\tmute: boolean;\n\tchannelCount: number;\n}\n\n/**\n * Channel provides a channel strip interface with volume, pan, solo and mute controls. \n * See [[PanVol]] and [[Solo]]\n * @example\n * // pan the incoming signal left and drop the volume 12db\n * const channel = new Tone.Channel(-0.25, -12);\n * @category Component\n */\nexport class Channel extends ToneAudioNode<ChannelOptions> {\n\n\treadonly name: string = \"Channel\";\n\n\treadonly input: InputNode;\n\treadonly output: OutputNode;\n\n\t/**\n\t * The soloing interface\n\t */\n\tprivate _solo: Solo;\n\n\t/**\n\t * The panning and volume node\n\t */\n\tprivate _panVol: PanVol;\n\n\t/**\n\t * The L/R panning control. -1 = hard left, 1 = hard right.\n\t * @min -1\n\t * @max 1\n\t */\n\treadonly pan: Param<\"audioRange\">;\n\n\t/**\n\t * The volume control in decibels.\n\t */\n\treadonly volume: Param<\"decibels\">;\n\n\t/**\n\t * @param volume The output volume.\n\t * @param pan the initial pan\n\t */\n\tconstructor(volume?: Decibels, pan?: AudioRange);\n\tconstructor(options?: Partial<ChannelOptions>);\n\tconstructor() {\n\t\tsuper(optionsFromArguments(Channel.getDefaults(), arguments, [\"volume\", \"pan\"]));\n\t\tconst options = optionsFromArguments(Channel.getDefaults(), arguments, [\"volume\", \"pan\"]);\n\n\t\tthis._solo = this.input = new Solo({\n\t\t\tsolo: options.solo,\n\t\t\tcontext: this.context,\n\t\t});\n\t\tthis._panVol = this.output = new PanVol({\n\t\t\tcontext: this.context,\n\t\t\tpan: options.pan,\n\t\t\tvolume: options.volume,\n\t\t\tmute: options.mute,\n\t\t\tchannelCount: options.channelCount\n\t\t});\n\t\tthis.pan = this._panVol.pan;\n\t\tthis.volume = this._panVol.volume;\n\n\t\tthis._solo.connect(this._panVol);\n\t\treadOnly(this, [\"pan\", \"volume\"]);\n\t}\n\n\tstatic getDefaults(): ChannelOptions {\n\t\treturn Object.assign(ToneAudioNode.getDefaults(), {\n\t\t\tpan: 0,\n\t\t\tvolume: 0,\n\t\t\tmute: false,\n\t\t\tsolo: false,\n\t\t\tchannelCount: 1,\n\t\t});\n\t}\n\n\t/**\n\t * Solo/unsolo the channel. Soloing is only relative to other [[Channels]] and [[Solo]] instances\n\t */\n\tget solo(): boolean {\n\t\treturn this._solo.solo;\n\t}\n\tset solo(solo) {\n\t\tthis._solo.solo = solo;\n\t}\n\n\t/**\n\t * If the current instance is muted, i.e. another instance is soloed,\n\t * or the channel is muted\n\t */\n\tget muted(): boolean {\n\t\treturn this._solo.muted || this.mute;\n\t}\n\n\t/**\n\t * Mute/unmute the volume\n\t */\n\tget mute(): boolean {\n\t\treturn this._panVol.mute;\n\t}\n\tset mute(mute) {\n\t\tthis._panVol.mute = mute;\n\t}\n\n\t/**\n\t * Store the send/receive channels by name. \n\t */\n\tprivate static buses: Map<string, Gain> = new Map();\n\n\t/**\n\t * Get the gain node belonging to the bus name. Create it if\n\t * it doesn't exist\n\t * @param name The bus name\n\t */\n\tprivate _getBus(name: string): Gain {\n\t\tif (!Channel.buses.has(name)) {\n\t\t\tChannel.buses.set(name, new Gain({ context: this.context }));\n\t\t}\n\t\treturn Channel.buses.get(name) as Gain;\n\t}\n\n\t/**\n\t * Send audio to another channel using a string. `send` is a lot like\n\t * [[connect]], except it uses a string instead of an object. This can \n\t * be useful in large applications to decouple sections since [[send]]\n\t * and [[receive]] can be invoked separately in order to connect an object\n\t * @param name The channel name to send the audio\n\t * @param volume The amount of the signal to send. \n\t * \tDefaults to 0db, i.e. send the entire signal\n\t * @returns Returns the gain node of this connection.\n\t */\n\tsend(name: string, volume: Decibels = 0): Gain<\"decibels\"> {\n\t\tconst bus = this._getBus(name);\n\t\tconst sendKnob = new Gain({\n\t\t\tcontext: this.context,\n\t\t\tunits: \"decibels\",\n\t\t\tgain: volume,\n\t\t});\n\t\tthis.connect(sendKnob);\n\t\tsendKnob.connect(bus);\n\t\treturn sendKnob;\n\t}\n\n\t/**\n\t * Receive audio from a channel which was connected with [[send]]. \n\t * @param name The channel name to receive audio from.\n\t */\n\treceive(name: string): this {\n\t\tconst bus = this._getBus(name);\n\t\tbus.connect(this);\n\t\treturn this;\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._panVol.dispose();\n\t\tthis.pan.dispose();\n\t\tthis.volume.dispose();\n\t\tthis._solo.dispose();\n\t\treturn this;\n\t}\n}\n","import { Gain } from \"../../core/context/Gain\";\nimport { OutputNode, ToneAudioNode, ToneAudioNodeOptions } from \"../../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { Merge } from \"./Merge\";\n\nexport type MonoOptions = ToneAudioNodeOptions;\n\n/**\n * Mono coerces the incoming mono or stereo signal into a mono signal\n * where both left and right channels have the same value. This can be useful\n * for [stereo imaging](https://en.wikipedia.org/wiki/Stereo_imaging).\n * @category Component\n */\nexport class Mono extends ToneAudioNode<MonoOptions> {\n\n\treadonly name: string = \"Mono\";\n\n\t/**\n\t * merge the signal\n\t */\n\tprivate _merge: Merge;\n\n\t/**\n\t * The summed output of the multiple inputs\n\t */\n\treadonly output: OutputNode;\n\n\t/**\n\t * The stereo signal to sum to mono\n\t */\n\treadonly input: Gain;\n\n\tconstructor(options?: Partial<MonoOptions>);\n\tconstructor() {\n\n\t\tsuper(optionsFromArguments(Mono.getDefaults(), arguments));\n\n\t\tthis.input = new Gain({ context: this.context });\n\n\t\tthis._merge = this.output = new Merge({\n\t\t\tchannels: 2,\n\t\t\tcontext: this.context,\n\t\t});\n\n\t\tthis.input.connect(this._merge, 0, 0);\n\t\tthis.input.connect(this._merge, 0, 1);\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._merge.dispose();\n\t\tthis.input.dispose();\n\t\treturn this;\n\t}\n}\n","import { Gain } from \"../../core/context/Gain\";\nimport { ToneAudioNode, ToneAudioNodeOptions } from \"../../core/context/ToneAudioNode\";\nimport { Frequency, Positive } from \"../../core/type/Units\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { readOnly, writable } from \"../../core/util/Interface\";\nimport { Signal } from \"../../signal/Signal\";\nimport { Filter } from \"../filter/Filter\";\n\ninterface MultibandSplitOptions extends ToneAudioNodeOptions {\n\tQ: Positive;\n\tlowFrequency: Frequency;\n\thighFrequency: Frequency;\n}\n\n/**\n * Split the incoming signal into three bands (low, mid, high)\n * with two crossover frequency controls.\n * ```\n *            +----------------------+\n *          +-> input < lowFrequency +------------------> low\n *          | +----------------------+\n *          |\n *          | +--------------------------------------+\n * input ---+-> lowFrequency < input < highFrequency +--> mid\n *          | +--------------------------------------+\n *          |\n *          | +-----------------------+\n *          +-> highFrequency < input +-----------------> high\n *            +-----------------------+\n * ```\n * @category Component\n */\nexport class MultibandSplit extends ToneAudioNode<MultibandSplitOptions> {\n\n\treadonly name: string = \"MultibandSplit\";\n\n\t/**\n\t * the input\n\t */\n\treadonly input = new Gain({ context: this.context });\n\n\t/**\n\t * no output node, use either low, mid or high outputs\n\t */\n\treadonly output = undefined;\n\n\t/**\n\t * The low band.\n\t */\n\treadonly low = new Filter({\n\t\tcontext: this.context,\n\t\tfrequency: 0,\n\t\ttype: \"lowpass\",\n\t});\n\n\t/**\n\t * the lower filter of the mid band\n\t */\n\tprivate _lowMidFilter = new Filter({\n\t\tcontext: this.context,\n\t\tfrequency: 0,\n\t\ttype: \"highpass\",\n\t});\n\n\t/**\n\t * The mid band output.\n\t */\n\treadonly mid = new Filter({\n\t\tcontext: this.context,\n\t\tfrequency: 0,\n\t\ttype: \"lowpass\",\n\t});\n\n\t/**\n\t * The high band output.\n\t */\n\treadonly high = new Filter({\n\t\tcontext: this.context,\n\t\tfrequency: 0,\n\t\ttype: \"highpass\",\n\t});\n\n\t/**\n\t * The low/mid crossover frequency.\n\t */\n\treadonly lowFrequency: Signal<\"frequency\">;\n\n\t/**\n\t * The mid/high crossover frequency.\n\t */\n\treadonly highFrequency: Signal<\"frequency\">;\n\n\tprotected _internalChannels = [this.low, this.mid, this.high];\n\n\t/**\n\t * The Q or Quality of the filter\n\t */\n\treadonly Q: Signal<\"positive\">;\n\n\t/**\n\t * @param lowFrequency the low/mid crossover frequency\n\t * @param highFrequency the mid/high crossover frequency\n\t */\n\tconstructor(lowFrequency?: Frequency, highFrequency?: Frequency);\n\tconstructor(options?: Partial<MultibandSplitOptions>);\n\tconstructor() {\n\t\tsuper(optionsFromArguments(MultibandSplit.getDefaults(), arguments, [\"lowFrequency\", \"highFrequency\"]));\n\t\tconst options = optionsFromArguments(MultibandSplit.getDefaults(), arguments, [\"lowFrequency\", \"highFrequency\"]);\n\n\t\tthis.lowFrequency = new Signal({\n\t\t\tcontext: this.context,\n\t\t\tunits: \"frequency\",\n\t\t\tvalue: options.lowFrequency,\n\t\t});\n\n\t\tthis.highFrequency = new Signal({\n\t\t\tcontext: this.context,\n\t\t\tunits: \"frequency\",\n\t\t\tvalue: options.highFrequency,\n\t\t});\n\n\t\tthis.Q = new Signal({\n\t\t\tcontext: this.context,\n\t\t\tunits: \"positive\",\n\t\t\tvalue: options.Q,\n\t\t});\n\n\t\tthis.input.fan(this.low, this.high);\n\t\tthis.input.chain(this._lowMidFilter, this.mid);\n\t\t// the frequency control signal\n\t\tthis.lowFrequency.fan(this.low.frequency, this._lowMidFilter.frequency);\n\t\tthis.highFrequency.fan(this.mid.frequency, this.high.frequency);\n\t\t// the Q value\n\t\tthis.Q.connect(this.low.Q);\n\t\tthis.Q.connect(this._lowMidFilter.Q);\n\t\tthis.Q.connect(this.mid.Q);\n\t\tthis.Q.connect(this.high.Q);\n\n\t\treadOnly(this, [\"high\", \"mid\", \"low\", \"highFrequency\", \"lowFrequency\"]);\n\t}\n\n\tstatic getDefaults(): MultibandSplitOptions {\n\t\treturn Object.assign(ToneAudioNode.getDefaults(), {\n\t\t\tQ: 1,\n\t\t\thighFrequency: 2500,\n\t\t\tlowFrequency: 400,\n\t\t});\n\t}\n\n\t/**\n\t * Clean up.\n\t */\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\twritable(this, [\"high\", \"mid\", \"low\", \"highFrequency\", \"lowFrequency\"]);\n\t\tthis.low.dispose();\n\t\tthis._lowMidFilter.dispose();\n\t\tthis.mid.dispose();\n\t\tthis.high.dispose();\n\t\tthis.lowFrequency.dispose();\n\t\tthis.highFrequency.dispose();\n\t\tthis.Q.dispose();\n\t\treturn this;\n\t}\n\n}\n","import { ToneAudioNode, ToneAudioNodeOptions } from \"./ToneAudioNode\";\nimport { Param } from \"./Param\";\nimport { onContextClose, onContextInit } from \"./ContextInitialization\";\n\nexport interface ListenerOptions extends ToneAudioNodeOptions{\n\tpositionX: number;\n\tpositionY: number;\n\tpositionZ: number;\n\tforwardX: number;\n\tforwardY: number;\n\tforwardZ: number;\n\tupX: number;\n\tupY: number;\n\tupZ: number;\n}\n\n/**\n * Tone.Listener is a thin wrapper around the AudioListener. Listener combined\n * with [[Panner3D]] makes up the Web Audio API's 3D panning system. Panner3D allows you \n * to place sounds in 3D and Listener allows you to navigate the 3D sound environment from\n * a first-person perspective. There is only one listener per audio context. \n */\nexport class Listener extends ToneAudioNode<ListenerOptions> {\n\n\treadonly name: string = \"Listener\";\n\n\t/**\n\t * The listener has no inputs or outputs. \n\t */\n\toutput: undefined; \n\tinput: undefined; \n\n\treadonly positionX: Param = new Param({\n\t\tcontext: this.context,\n\t\tparam: this.context.rawContext.listener.positionX,\n\t})\n\n\treadonly positionY: Param = new Param({\n\t\tcontext: this.context,\n\t\tparam: this.context.rawContext.listener.positionY,\n\t})\n\n\treadonly positionZ: Param = new Param({\n\t\tcontext: this.context,\n\t\tparam: this.context.rawContext.listener.positionZ,\n\t})\n\n\treadonly forwardX: Param = new Param({\n\t\tcontext: this.context,\n\t\tparam: this.context.rawContext.listener.forwardX,\n\t})\n\n\treadonly forwardY: Param = new Param({\n\t\tcontext: this.context,\n\t\tparam: this.context.rawContext.listener.forwardY,\n\t})\n\n\treadonly forwardZ: Param = new Param({\n\t\tcontext: this.context,\n\t\tparam: this.context.rawContext.listener.forwardZ,\n\t})\n\n\treadonly upX: Param = new Param({\n\t\tcontext: this.context,\n\t\tparam: this.context.rawContext.listener.upX,\n\t})\n\n\treadonly upY: Param = new Param({\n\t\tcontext: this.context,\n\t\tparam: this.context.rawContext.listener.upY,\n\t})\n\n\treadonly upZ: Param = new Param({\n\t\tcontext: this.context,\n\t\tparam: this.context.rawContext.listener.upZ,\n\t})\n\n\tstatic getDefaults(): ListenerOptions {\n\t\treturn Object.assign(ToneAudioNode.getDefaults(), {\n\t\t\tpositionX: 0,\n\t\t\tpositionY: 0,\n\t\t\tpositionZ: 0,\n\t\t\tforwardX: 0,\n\t\t\tforwardY: 0,\n\t\t\tforwardZ: -1,\n\t\t\tupX: 0,\n\t\t\tupY: 1,\n\t\t\tupZ: 0,\n\t\t});\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis.positionX.dispose();\n\t\tthis.positionY.dispose();\n\t\tthis.positionZ.dispose();\n\t\tthis.forwardX.dispose();\n\t\tthis.forwardY.dispose();\n\t\tthis.forwardZ.dispose();\n\t\tthis.upX.dispose();\n\t\tthis.upY.dispose();\n\t\tthis.upZ.dispose();\n\t\treturn this;\n\t}\n}\n\n//-------------------------------------\n// \tINITIALIZATION\n//-------------------------------------\n\nonContextInit(context => {\n\tcontext.listener = new Listener({ context });\n});\n\nonContextClose(context => {\n\tcontext.listener.dispose();\n});\n","import { Param } from \"../../core/context/Param\";\nimport { ToneAudioNode, ToneAudioNodeOptions } from \"../../core/context/ToneAudioNode\";\nimport { Degrees, GainFactor } from \"../../core/type/Units\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport \"../../core/context/Listener\";\n\nexport interface Panner3DOptions extends ToneAudioNodeOptions {\n\tconeInnerAngle: Degrees;\n\tconeOuterAngle: Degrees;\n\tconeOuterGain: GainFactor;\n\tdistanceModel: DistanceModelType;\n\tmaxDistance: number;\n\torientationX: number;\n\torientationY: number;\n\torientationZ: number;\n\tpanningModel: PanningModelType;\n\tpositionX: number;\n\tpositionY: number;\n\tpositionZ: number;\n\trefDistance: number;\n\trolloffFactor: number;\n}\n\n/**\n * A spatialized panner node which supports equalpower or HRTF panning.\n * @category Component\n */\nexport class Panner3D extends ToneAudioNode<Panner3DOptions> {\n\n\treadonly name: string = \"Panner3D\";\n\n\t/**\n\t * The panning object\n\t */\n\tprivate _panner: PannerNode;\n\treadonly input: PannerNode;\n\treadonly output: PannerNode;\n\n\treadonly positionX: Param<\"number\">;\n\treadonly positionY: Param<\"number\">;\n\treadonly positionZ: Param<\"number\">;\n\n\treadonly orientationX: Param<\"number\">;\n\treadonly orientationY: Param<\"number\">;\n\treadonly orientationZ: Param<\"number\">;\n\n\t/**\n\t * @param positionX The initial x position.\n\t * @param positionY The initial y position.\n\t * @param positionZ The initial z position.\n\t */\n\tconstructor(positionX: number, positionY: number, positionZ: number);\n\tconstructor(options?: Partial<Panner3DOptions>);\n\tconstructor() {\n\n\t\tsuper(optionsFromArguments(Panner3D.getDefaults(), arguments, [\"positionX\", \"positionY\", \"positionZ\"]));\n\t\tconst options = optionsFromArguments(Panner3D.getDefaults(), arguments, [\"positionX\", \"positionY\", \"positionZ\"]);\n\n\t\tthis._panner = this.input = this.output = this.context.createPanner();\n\t\t// set some values\n\t\tthis.panningModel = options.panningModel;\n\t\tthis.maxDistance = options.maxDistance;\n\t\tthis.distanceModel = options.distanceModel;\n\t\tthis.coneOuterGain = options.coneOuterGain;\n\t\tthis.coneOuterAngle = options.coneOuterAngle;\n\t\tthis.coneInnerAngle = options.coneInnerAngle;\n\t\tthis.refDistance = options.refDistance;\n\t\tthis.rolloffFactor = options.rolloffFactor;\n\n\t\tthis.positionX = new Param({\n\t\t\tcontext: this.context,\n\t\t\tparam: this._panner.positionX,\n\t\t\tvalue: options.positionX,\n\t\t});\n\t\tthis.positionY = new Param({\n\t\t\tcontext: this.context,\n\t\t\tparam: this._panner.positionY,\n\t\t\tvalue: options.positionY,\n\t\t});\n\t\tthis.positionZ = new Param({\n\t\t\tcontext: this.context,\n\t\t\tparam: this._panner.positionZ,\n\t\t\tvalue: options.positionZ,\n\t\t});\n\t\tthis.orientationX = new Param({\n\t\t\tcontext: this.context,\n\t\t\tparam: this._panner.orientationX,\n\t\t\tvalue: options.orientationX,\n\t\t});\n\t\tthis.orientationY = new Param({\n\t\t\tcontext: this.context,\n\t\t\tparam: this._panner.orientationY,\n\t\t\tvalue: options.orientationY,\n\t\t});\n\t\tthis.orientationZ = new Param({\n\t\t\tcontext: this.context,\n\t\t\tparam: this._panner.orientationZ,\n\t\t\tvalue: options.orientationZ,\n\t\t});\n\t}\n\n\tstatic getDefaults(): Panner3DOptions {\n\t\treturn Object.assign(ToneAudioNode.getDefaults(), {\n\t\t\tconeInnerAngle: 360,\n\t\t\tconeOuterAngle: 360,\n\t\t\tconeOuterGain: 0,\n\t\t\tdistanceModel: \"inverse\" as DistanceModelType,\n\t\t\tmaxDistance: 10000,\n\t\t\torientationX: 0,\n\t\t\torientationY: 0,\n\t\t\torientationZ: 0,\n\t\t\tpanningModel: \"equalpower\" as PanningModelType,\n\t\t\tpositionX: 0,\n\t\t\tpositionY: 0,\n\t\t\tpositionZ: 0,\n\t\t\trefDistance: 1,\n\t\t\trolloffFactor: 1,\n\t\t});\n\t}\n\n\t/**\n\t * Sets the position of the source in 3d space.\n\t */\n\tsetPosition(x: number, y: number, z: number): this {\n\t\tthis.positionX.value = x;\n\t\tthis.positionY.value = y;\n\t\tthis.positionZ.value = z;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sets the orientation of the source in 3d space.\n\t */\n\tsetOrientation(x: number, y: number, z: number): this {\n\t\tthis.orientationX.value = x;\n\t\tthis.orientationY.value = y;\n\t\tthis.orientationZ.value = z;\n\t\treturn this;\n\t}\n\n\t/**\n\t * The panning model. Either \"equalpower\" or \"HRTF\".\n\t */\n\tget panningModel(): PanningModelType {\n\t\treturn this._panner.panningModel;\n\t}\n\tset panningModel(val) {\n\t\tthis._panner.panningModel = val;\n\t}\n\n\t/**\n\t * A reference distance for reducing volume as source move further from the listener\n\t */\n\tget refDistance(): number {\n\t\treturn this._panner.refDistance;\n\t}\n\tset refDistance(val) {\n\t\tthis._panner.refDistance = val;\n\t}\n\n\t/**\n\t * Describes how quickly the volume is reduced as source moves away from listener.\n\t */\n\tget rolloffFactor(): number {\n\t\treturn this._panner.rolloffFactor;\n\t}\n\tset rolloffFactor(val) {\n\t\tthis._panner.rolloffFactor = val;\n\t}\n\n\t/**\n\t * The distance model used by,  \"linear\", \"inverse\", or \"exponential\".\n\t */\n\tget distanceModel(): DistanceModelType {\n\t\treturn this._panner.distanceModel;\n\t}\n\tset distanceModel(val) {\n\t\tthis._panner.distanceModel = val;\n\t}\n\n\t/**\n\t * The angle, in degrees, inside of which there will be no volume reduction\n\t */\n\tget coneInnerAngle(): Degrees {\n\t\treturn this._panner.coneInnerAngle;\n\t}\n\tset coneInnerAngle(val) {\n\t\tthis._panner.coneInnerAngle = val;\n\t}\n\n\t/**\n\t * The angle, in degrees, outside of which the volume will be reduced\n\t * to a constant value of coneOuterGain\n\t */\n\tget coneOuterAngle(): Degrees {\n\t\treturn this._panner.coneOuterAngle;\n\t}\n\tset coneOuterAngle(val) {\n\t\tthis._panner.coneOuterAngle = val;\n\t}\n\n\t/**\n\t * The gain outside of the coneOuterAngle\n\t */\n\tget coneOuterGain(): GainFactor {\n\t\treturn this._panner.coneOuterGain;\n\t}\n\tset coneOuterGain(val) {\n\t\tthis._panner.coneOuterGain = val;\n\t}\n\n\t/**\n\t * The maximum distance between source and listener,\n\t * after which the volume will not be reduced any further.\n\t */\n\tget maxDistance(): number {\n\t\treturn this._panner.maxDistance;\n\t}\n\tset maxDistance(val) {\n\t\tthis._panner.maxDistance = val;\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._panner.disconnect();\n\t\tthis.orientationX.dispose();\n\t\tthis.orientationY.dispose();\n\t\tthis.orientationZ.dispose();\n\t\tthis.positionX.dispose();\n\t\tthis.positionY.dispose();\n\t\tthis.positionZ.dispose();\n\t\treturn this;\n\t}\n}\n","import { ToneAudioNode, ToneAudioNodeOptions } from \"../../core/context/ToneAudioNode\";\nimport { Gain } from \"../../core/context/Gain\";\nimport { assert } from \"../../core/util/Debug\";\nimport { theWindow } from \"../../core/context/AudioContext\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { PlaybackState } from \"../../core/util/StateTimeline\";\n\nexport interface RecorderOptions extends ToneAudioNodeOptions {\n\tmimeType?: string;\n}\n\n/**\n * A wrapper around the MediaRecorder API. Unlike the rest of Tone.js, this module does not offer\n * any sample-accurate scheduling because it is not a feature of the MediaRecorder API.\n * This is only natively supported in Chrome and Firefox. \n * For a cross-browser shim, install (audio-recorder-polyfill)[https://www.npmjs.com/package/audio-recorder-polyfill]. \n * @example\n * const recorder = new Tone.Recorder();\n * const synth = new Tone.Synth().connect(recorder);\n * // start recording\n * recorder.start();\n * // generate a few notes\n * synth.triggerAttackRelease(\"C3\", 0.5);\n * synth.triggerAttackRelease(\"C4\", 0.5, \"+1\");\n * synth.triggerAttackRelease(\"C5\", 0.5, \"+2\");\n * // wait for the notes to end and stop the recording\n * setTimeout(async () => {\n * \t// the recorded audio is returned as a blob\n * \tconst recording = await recorder.stop();\n * \t// download the recording by creating an anchor element and blob url\n * \tconst url = URL.createObjectURL(recording);\n * \tconst anchor = document.createElement(\"a\");\n * \tanchor.download = \"recording.webm\";\n * \tanchor.href = url;\n * \tanchor.click();\n * }, 4000);\n * @category Component\n */\nexport class Recorder extends ToneAudioNode<RecorderOptions> {\n\n\treadonly name = \"Recorder\";\n\n\t/**\n\t * Recorder uses the Media Recorder API\n\t */\n\tprivate _recorder: MediaRecorder;\n\n\t/**\n\t * MediaRecorder requires \n\t */\n\tprivate _stream: MediaStreamAudioDestinationNode;\n\n\treadonly input: Gain;\n\treadonly output: undefined;\n\n\tconstructor(options?: Partial<RecorderOptions>);\n\tconstructor() {\n\n\t\tsuper(optionsFromArguments(Recorder.getDefaults(), arguments));\n\t\tconst options = optionsFromArguments(Recorder.getDefaults(), arguments);\n\n\t\tthis.input = new Gain({\n\t\t\tcontext: this.context\n\t\t});\n\n\t\tassert(Recorder.supported, \"Media Recorder API is not available\");\n\n\t\tthis._stream = this.context.createMediaStreamDestination();\n\t\tthis.input.connect(this._stream);\n\t\tthis._recorder = new MediaRecorder(this._stream.stream, {\n\t\t\tmimeType: options.mimeType\n\t\t});\n\t}\n\n\tstatic getDefaults(): RecorderOptions {\n\t\treturn ToneAudioNode.getDefaults();\n\t}\n\n\t/**\n\t * The mime type is the format that the audio is encoded in. For Chrome \n\t * that is typically webm encoded as \"vorbis\". \n\t */\n\tget mimeType(): string {\n\t\treturn this._recorder.mimeType;\n\t}\n\n\t/**\n\t * Test if your platform supports the Media Recorder API. If it's not available, \n\t * try installing this (polyfill)[https://www.npmjs.com/package/audio-recorder-polyfill].\n\t */\n\tstatic get supported(): boolean {\n\t\treturn theWindow !== null && Reflect.has(theWindow, \"MediaRecorder\");\n\t}\n\n\t/**\n\t * Get the playback state of the Recorder, either \"started\", \"stopped\" or \"paused\"\n\t */\n\tget state(): PlaybackState {\n\t\tif (this._recorder.state === \"inactive\") {\n\t\t\treturn \"stopped\";\n\t\t} else if (this._recorder.state === \"paused\") {\n\t\t\treturn \"paused\";\n\t\t} else {\n\t\t\treturn \"started\";\n\t\t}\n\t}\n\n\t/**\n\t * Start the Recorder. Returns a promise which resolves\n\t * when the recorder has started.\n\t */\n\tasync start() {\n\t\tassert(this.state !== \"started\", \"Recorder is already started\");\n\t\tconst startPromise = new Promise(done => {\n\t\t\tconst handleStart = () => {\n\t\t\t\tthis._recorder.removeEventListener(\"start\", handleStart, false);\n\n\t\t\t\tdone();\n\t\t\t};\n\n\t\t\tthis._recorder.addEventListener(\"start\", handleStart, false);\n\t\t});\n\n\t\tthis._recorder.start();\n\t\treturn await startPromise;\n\t}\n\n\t/**\n\t * Stop the recorder. Returns a promise with the recorded content until this point\n\t * encoded as [[mimeType]]\n\t */\n\tasync stop(): Promise<Blob> {\n\t\tassert(this.state !== \"stopped\", \"Recorder is not started\");\n\t\tconst dataPromise: Promise<Blob> = new Promise(done => {\n\t\t\tconst handleData = (e: BlobEvent) => {\n\t\t\t\tthis._recorder.removeEventListener(\"dataavailable\", handleData, false);\n\n\t\t\t\tdone(e.data);\n\t\t\t};\n\n\t\t\tthis._recorder.addEventListener(\"dataavailable\", handleData, false);\n\t\t});\n\t\tthis._recorder.stop();\n\t\treturn await dataPromise;\n\t}\n\n\t/**\n\t * Pause the recorder\n\t */\n\tpause(): this {\n\t\tassert(this.state === \"started\", \"Recorder must be started\");\n\t\tthis._recorder.pause();\n\t\treturn this;\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis.input.dispose();\n\t\tthis._stream.disconnect();\n\t\treturn this;\n\t}\n}\n","import { Param } from \"../../core/context/Param\";\nimport { ToneAudioNode, ToneAudioNodeOptions } from \"../../core/context/ToneAudioNode\";\nimport { Decibels, Positive, Time } from \"../../core/type/Units\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { readOnly } from \"../../core/util/Interface\";\n\nexport interface CompressorOptions extends ToneAudioNodeOptions {\n\tattack: Time;\n\tknee: Decibels;\n\tratio: Positive;\n\trelease: Time;\n\tthreshold: Decibels;\n}\n\n/**\n * Compressor is a thin wrapper around the Web Audio\n * [DynamicsCompressorNode](http://webaudio.github.io/web-audio-api/#the-dynamicscompressornode-interface).\n * Compression reduces the volume of loud sounds or amplifies quiet sounds\n * by narrowing or \"compressing\" an audio signal's dynamic range.\n * Read more on [Wikipedia](https://en.wikipedia.org/wiki/Dynamic_range_compression).\n * @example\n * const comp = new Tone.Compressor(-30, 3);\n * @category Component\n */\nexport class Compressor extends ToneAudioNode<CompressorOptions> {\n\n\treadonly name: string = \"Compressor\";\n\n\t/**\n\t * the compressor node\n\t */\n\tprivate _compressor: DynamicsCompressorNode = this.context.createDynamicsCompressor();\n\treadonly input = this._compressor;\n\treadonly output = this._compressor;\n\n\t/**\n\t * The decibel value above which the compression will start taking effect.\n\t * @min -100\n\t * @max 0\n\t */\n\treadonly threshold: Param<\"decibels\">;\n\n\t/**\n\t * The amount of time (in seconds) to reduce the gain by 10dB.\n\t * @min 0\n\t * @max 1\n\t */\n\treadonly attack: Param<\"time\">;\n\n\t/**\n\t * The amount of time (in seconds) to increase the gain by 10dB.\n\t * @min 0\n\t * @max 1\n\t */\n\treadonly release: Param<\"time\">;\n\n\t/**\n\t * A decibel value representing the range above the threshold where the\n\t * curve smoothly transitions to the \"ratio\" portion.\n\t * @min 0\n\t * @max 40\n\t */\n\treadonly knee: Param<\"decibels\">;\n\n\t/**\n\t * The amount of dB change in input for a 1 dB change in output.\n\t * @min 1\n\t * @max 20\n\t */\n\treadonly ratio: Param<\"positive\">;\n\n\t/**\n\t * @param threshold The value above which the compression starts to be applied.\n\t * @param ratio The gain reduction ratio.\n\t */\n\tconstructor(threshold?: Decibels, ratio?: Positive);\n\tconstructor(options?: Partial<CompressorOptions>);\n\tconstructor() {\n\n\t\tsuper(optionsFromArguments(Compressor.getDefaults(), arguments, [\"threshold\", \"ratio\"]));\n\t\tconst options = optionsFromArguments(Compressor.getDefaults(), arguments, [\"threshold\", \"ratio\"]);\n\n\t\tthis.threshold = new Param({\n\t\t\tminValue: this._compressor.threshold.minValue,\n\t\t\tmaxValue: this._compressor.threshold.maxValue,\n\t\t\tcontext: this.context,\n\t\t\tconvert: false,\n\t\t\tparam: this._compressor.threshold,\n\t\t\tunits: \"decibels\",\n\t\t\tvalue: options.threshold,\n\t\t});\n\n\t\tthis.attack = new Param({\n\t\t\tminValue: this._compressor.attack.minValue,\n\t\t\tmaxValue: this._compressor.attack.maxValue,\n\t\t\tcontext: this.context,\n\t\t\tparam: this._compressor.attack,\n\t\t\tunits: \"time\",\n\t\t\tvalue: options.attack,\n\t\t});\n\n\t\tthis.release = new Param({\n\t\t\tminValue: this._compressor.release.minValue,\n\t\t\tmaxValue: this._compressor.release.maxValue,\n\t\t\tcontext: this.context,\n\t\t\tparam: this._compressor.release,\n\t\t\tunits: \"time\",\n\t\t\tvalue: options.release,\n\t\t});\n\n\t\tthis.knee = new Param({\n\t\t\tminValue: this._compressor.knee.minValue,\n\t\t\tmaxValue: this._compressor.knee.maxValue,\n\t\t\tcontext: this.context,\n\t\t\tconvert: false,\n\t\t\tparam: this._compressor.knee,\n\t\t\tunits: \"decibels\",\n\t\t\tvalue: options.knee,\n\t\t});\n\n\t\tthis.ratio = new Param({\n\t\t\tminValue: this._compressor.ratio.minValue,\n\t\t\tmaxValue: this._compressor.ratio.maxValue,\n\t\t\tcontext: this.context,\n\t\t\tconvert: false,\n\t\t\tparam: this._compressor.ratio,\n\t\t\tunits: \"positive\",\n\t\t\tvalue: options.ratio,\n\t\t});\n\n\t\t// set the defaults\n\t\treadOnly(this, [\"knee\", \"release\", \"attack\", \"ratio\", \"threshold\"]);\n\t}\n\n\tstatic getDefaults(): CompressorOptions {\n\t\treturn Object.assign(ToneAudioNode.getDefaults(), {\n\t\t\tattack: 0.003,\n\t\t\tknee: 30,\n\t\t\tratio: 12,\n\t\t\trelease: 0.25,\n\t\t\tthreshold: -24,\n\t\t});\n\t}\n\n\t/**\n\t * A read-only decibel value for metering purposes, representing the current amount of gain\n\t * reduction that the compressor is applying to the signal. If fed no signal the value will be 0 (no gain reduction).\n\t */\n\tget reduction(): Decibels {\n\t\treturn this._compressor.reduction;\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._compressor.disconnect();\n\t\tthis.attack.dispose();\n\t\tthis.release.dispose();\n\t\tthis.threshold.dispose();\n\t\tthis.ratio.dispose();\n\t\tthis.knee.dispose();\n\t\treturn this;\n\t}\n}\n","import { ToneAudioNode, ToneAudioNodeOptions } from \"../../core/context/ToneAudioNode\";\nimport { Decibels, Time } from \"../../core/type/Units\";\nimport { GreaterThan } from \"../../signal/GreaterThan\";\nimport { Gain } from \"../../core/context/Gain\";\nimport { Follower } from \"../analysis/Follower\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { dbToGain, gainToDb } from \"../../core/type/Conversions\";\n\nexport interface GateOptions extends ToneAudioNodeOptions {\n\tthreshold: Decibels;\n\tsmoothing: Time;\n}\n\n/**\n * Gate only passes a signal through when the incoming\n * signal exceeds a specified threshold. It uses [[Follower]] to follow the ampltiude\n * of the incoming signal and compares it to the [[threshold]] value using [[GreaterThan]].\n *\n * @example\n * const gate = new Tone.Gate(-30, 0.2).toDestination();\n * const mic = new Tone.UserMedia().connect(gate);\n * // the gate will only pass through the incoming\n * // signal when it's louder than -30db\n * @category Component\n */\nexport class Gate extends ToneAudioNode<GateOptions> {\n\n\treadonly name: string = \"Gate\";\n\n\treadonly input: ToneAudioNode;\n\treadonly output: ToneAudioNode;\n\n\t/**\n\t * Follow the incoming signal\n\t */\n\tprivate _follower: Follower;\n\n\t/**\n\t * Test if it's greater than the threshold\n\t */\n\tprivate _gt: GreaterThan;\n\n\t/**\n\t * Gate the incoming signal when it does not exceed the threshold\n\t */\n\tprivate _gate: Gain;\n\n\t/**\n\t * @param threshold The threshold above which the gate will open.\n\t * @param smoothing The follower's smoothing time\n\t */\n\tconstructor(threshold?: Decibels, smoothing?: Time);\n\tconstructor(options?: Partial<GateOptions>);\n\tconstructor() {\n\t\tsuper(Object.assign(optionsFromArguments(Gate.getDefaults(), arguments, [\"threshold\", \"smoothing\"])));\n\t\tconst options = optionsFromArguments(Gate.getDefaults(), arguments, [\"threshold\", \"smoothing\"]);\n\n\t\tthis._follower = new Follower({\n\t\t\tcontext: this.context,\n\t\t\tsmoothing: options.smoothing,\n\t\t});\n\t\tthis._gt = new GreaterThan({\n\t\t\tcontext: this.context,\n\t\t\tvalue: dbToGain(options.threshold),\n\t\t});\n\t\tthis.input = new Gain({ context: this.context });\n\t\tthis._gate = this.output = new Gain({ context: this.context });\n\n\t\t// connections\n\t\tthis.input.connect(this._gate);\n\t\t// the control signal\n\t\tthis.input.chain(this._follower, this._gt, this._gate.gain);\n\t}\n\n\tstatic getDefaults(): GateOptions {\n\t\treturn Object.assign(ToneAudioNode.getDefaults(), {\n\t\t\tsmoothing: 0.1,\n\t\t\tthreshold: -40\n\t\t});\n\t}\n\n\t/**\n\t * The threshold of the gate in decibels\n\t */\n\tget threshold(): Decibels {\n\t\treturn gainToDb(this._gt.value);\n\t}\n\tset threshold(thresh) {\n\t\tthis._gt.value = dbToGain(thresh);\n\t}\n\n\t/**\n\t * The attack/decay speed of the gate. See [[Follower.smoothing]]\n\t */\n\tget smoothing(): Time {\n\t\treturn this._follower.smoothing;\n\t}\n\tset smoothing(smoothingTime) {\n\t\tthis._follower.smoothing = smoothingTime;\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis.input.dispose();\n\t\tthis._follower.dispose();\n\t\tthis._gt.dispose();\n\t\tthis._gate.dispose();\n\t\treturn this;\n\t}\n}\n","import { InputNode, OutputNode, ToneAudioNode, ToneAudioNodeOptions } from \"../../core/context/ToneAudioNode\";\nimport { Decibels } from \"../../core/type/Units\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { Compressor } from \"./Compressor\";\nimport { Param } from \"../../core/context/Param\";\nimport { readOnly } from \"../../core/util/Interface\";\n\nexport interface LimiterOptions extends ToneAudioNodeOptions {\n\tthreshold: Decibels;\n};\n\n/**\n * Limiter will limit the loudness of an incoming signal.\n * Under the hood it's composed of a [[Compressor]] with a fast attack\n * and release and max compression ratio. \n *\n * @example\n * const limiter = new Tone.Limiter(-20).toDestination();\n * const oscillator = new Tone.Oscillator().connect(limiter);\n * oscillator.start();\n * @category Component\n */\nexport class Limiter extends ToneAudioNode<LimiterOptions> {\n\n\treadonly name: string = \"Limiter\";\n\n\treadonly input: InputNode;\n\treadonly output: OutputNode;\n\n\t/**\n\t * The compressor which does the limiting\n\t */\n\tprivate _compressor: Compressor;\n\n\treadonly threshold: Param<\"decibels\">\n\n\t/**\n\t * @param threshold The threshold above which the gain reduction is applied.\n\t */\n\tconstructor(threshold?: Decibels);\n\tconstructor(options?: Partial<LimiterOptions>);\n\tconstructor() {\n\t\tsuper(Object.assign(optionsFromArguments(Limiter.getDefaults(), arguments, [\"threshold\"])));\n\t\tconst options = optionsFromArguments(Limiter.getDefaults(), arguments, [\"threshold\"]);\n\n\t\tthis._compressor = this.input = this.output = new Compressor({\n\t\t\tcontext: this.context,\n\t\t\tratio: 20,\n\t\t\tattack: 0.003,\n\t\t\trelease: 0.01,\n\t\t\tthreshold: options.threshold\n\t\t});\n\n\t\tthis.threshold = this._compressor.threshold;\n\t\treadOnly(this, \"threshold\");\n\t}\n\n\tstatic getDefaults(): LimiterOptions {\n\t\treturn Object.assign(ToneAudioNode.getDefaults(), {\n\t\t\tthreshold: -12\n\t\t});\n\t}\n\n\t/**\n\t * A read-only decibel value for metering purposes, representing the current amount of gain\n\t * reduction that the compressor is applying to the signal. \n\t */\n\tget reduction(): Decibels {\n\t\treturn this._compressor.reduction;\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._compressor.dispose();\n\t\tthis.threshold.dispose();\n\t\treturn this;\n\t}\n}\n","import { InputNode, OutputNode, ToneAudioNode, ToneAudioNodeOptions } from \"../../core/context/ToneAudioNode\";\nimport { Compressor, CompressorOptions } from \"./Compressor\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { MidSideSplit } from \"../channel/MidSideSplit\";\nimport { MidSideMerge } from \"../channel/MidSideMerge\";\nimport { readOnly, RecursivePartial } from \"../../core/util/Interface\";\n\nexport interface MidSideCompressorOptions extends ToneAudioNodeOptions {\n\tmid: Omit<CompressorOptions, keyof ToneAudioNodeOptions>;\n\tside: Omit<CompressorOptions, keyof ToneAudioNodeOptions>;\n}\n\n/**\n * MidSideCompressor applies two different compressors to the [[mid]]\n * and [[side]] signal components of the input. See [[MidSideSplit]] and [[MidSideMerge]].\n * @category Component\n */\nexport class MidSideCompressor extends ToneAudioNode<MidSideCompressorOptions> {\n\n\treadonly name: string = \"MidSideCompressor\";\n\n\treadonly input: InputNode;\n\treadonly output: OutputNode;\n\n\t/**\n\t * Split the incoming signal into Mid/Side\n\t */\n\tprivate _midSideSplit: MidSideSplit;\n\n\t/**\n\t * Merge the compressed signal back into a single stream\n\t */\n\tprivate _midSideMerge: MidSideMerge;\n\n\t/**\n\t * The compression applied to the mid signal\n\t */\n\treadonly mid: Compressor;\n\n\t/**\n\t * The compression applied to the side signal\n\t */\n\treadonly side: Compressor;\n\n\tconstructor(options?: RecursivePartial<MidSideCompressorOptions>);\n\tconstructor() {\n\t\tsuper(Object.assign(optionsFromArguments(MidSideCompressor.getDefaults(), arguments)));\n\t\tconst options = optionsFromArguments(MidSideCompressor.getDefaults(), arguments);\n\n\t\tthis._midSideSplit = this.input = new MidSideSplit({ context: this.context });\n\t\tthis._midSideMerge = this.output = new MidSideMerge({ context: this.context });\n\t\tthis.mid = new Compressor(Object.assign(options.mid, { context: this.context }));\n\t\tthis.side = new Compressor(Object.assign(options.side, { context: this.context }));\n\n\t\tthis._midSideSplit.mid.chain(this.mid, this._midSideMerge.mid);\n\t\tthis._midSideSplit.side.chain(this.side, this._midSideMerge.side);\n\t\treadOnly(this, [\"mid\", \"side\"]);\n\t}\n\n\tstatic getDefaults(): MidSideCompressorOptions {\n\t\treturn Object.assign(ToneAudioNode.getDefaults(), {\n\t\t\tmid: {\n\t\t\t\tratio: 3,\n\t\t\t\tthreshold: -24,\n\t\t\t\trelease: 0.03,\n\t\t\t\tattack: 0.02,\n\t\t\t\tknee: 16\n\t\t\t},\n\t\t\tside: {\n\t\t\t\tratio: 6,\n\t\t\t\tthreshold: -30,\n\t\t\t\trelease: 0.25,\n\t\t\t\tattack: 0.03,\n\t\t\t\tknee: 10\n\t\t\t}\n\t\t});\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis.mid.dispose();\n\t\tthis.side.dispose();\n\t\tthis._midSideSplit.dispose();\n\t\tthis._midSideMerge.dispose();\n\t\treturn this;\n\t}\n}\n","import { InputNode, ToneAudioNode, ToneAudioNodeOptions } from \"../../core/context/ToneAudioNode\";\nimport { Compressor, CompressorOptions } from \"./Compressor\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { readOnly, RecursivePartial } from \"../../core/util/Interface\";\nimport { Frequency } from \"../../core/type/Units\";\nimport { MultibandSplit } from \"../channel/MultibandSplit\";\nimport { Signal } from \"../../signal/Signal\";\nimport { Gain } from \"../../core/context/Gain\";\n\nexport interface MultibandCompressorOptions extends ToneAudioNodeOptions {\n\tmid: Omit<CompressorOptions, keyof ToneAudioNodeOptions>;\n\tlow: Omit<CompressorOptions, keyof ToneAudioNodeOptions>;\n\thigh: Omit<CompressorOptions, keyof ToneAudioNodeOptions>;\n\tlowFrequency: Frequency;\n\thighFrequency: Frequency;\n}\n\n/**\n * A compressor with separate controls over low/mid/high dynamics. See [[Compressor]] and [[MultibandSplit]]\n *\n * @example\n * const multiband = new Tone.MultibandCompressor({\n * \tlowFrequency: 200,\n * \thighFrequency: 1300,\n * \tlow: {\n * \t\tthreshold: -12\n * \t}\n * });\n * @category Component\n */\nexport class MultibandCompressor extends ToneAudioNode<MultibandCompressorOptions> {\n\n\treadonly name: string = \"MultibandCompressor\";\n\n\treadonly input: InputNode;\n\treadonly output: ToneAudioNode;\n\n\t/**\n\t * Split the incoming signal into high/mid/low\n\t */\n\tprivate _splitter: MultibandSplit;\n\n\t/**\n\t * low/mid crossover frequency.\n\t */\n\treadonly lowFrequency: Signal<\"frequency\">;\n\n\t/**\n\t * mid/high crossover frequency.\n\t */\n\treadonly highFrequency: Signal<\"frequency\">;\n\n\t/**\n\t * The compressor applied to the low frequencies\n\t */\n\treadonly low: Compressor;\n\n\t/**\n\t * The compressor applied to the mid frequencies\n\t */\n\treadonly mid: Compressor;\n\n\t/**\n\t * The compressor applied to the high frequencies\n\t */\n\treadonly high: Compressor;\n\n\tconstructor(options?: RecursivePartial<MultibandCompressorOptions>);\n\tconstructor() {\n\t\tsuper(Object.assign(optionsFromArguments(MultibandCompressor.getDefaults(), arguments)));\n\t\tconst options = optionsFromArguments(MultibandCompressor.getDefaults(), arguments);\n\n\t\tthis._splitter = this.input = new MultibandSplit({\n\t\t\tcontext: this.context,\n\t\t\tlowFrequency: options.lowFrequency,\n\t\t\thighFrequency: options.highFrequency\n\t\t});\n\t\tthis.lowFrequency = this._splitter.lowFrequency;\n\t\tthis.highFrequency = this._splitter.highFrequency;\n\t\tthis.output = new Gain({ context: this.context });\n\t\tthis.low = new Compressor(Object.assign(options.low, { context: this.context }));\n\t\tthis.mid = new Compressor(Object.assign(options.mid, { context: this.context }));\n\t\tthis.high = new Compressor(Object.assign(options.high, { context: this.context }));\n\n\t\t// connect the compressor\n\t\tthis._splitter.low.chain(this.low, this.output);\n\t\tthis._splitter.mid.chain(this.mid, this.output);\n\t\tthis._splitter.high.chain(this.high, this.output);\n\n\t\treadOnly(this, [\"high\", \"mid\", \"low\", \"highFrequency\", \"lowFrequency\"]);\n\t}\n\n\tstatic getDefaults(): MultibandCompressorOptions {\n\t\treturn Object.assign(ToneAudioNode.getDefaults(), {\n\t\t\tlowFrequency: 250,\n\t\t\thighFrequency: 2000,\n\t\t\tlow: {\n\t\t\t\tratio: 6,\n\t\t\t\tthreshold: -30,\n\t\t\t\trelease: 0.25,\n\t\t\t\tattack: 0.03,\n\t\t\t\tknee: 10\n\t\t\t},\n\t\t\tmid: {\n\t\t\t\tratio: 3,\n\t\t\t\tthreshold: -24,\n\t\t\t\trelease: 0.03,\n\t\t\t\tattack: 0.02,\n\t\t\t\tknee: 16\n\t\t\t},\n\t\t\thigh: {\n\t\t\t\tratio: 3,\n\t\t\t\tthreshold: -24,\n\t\t\t\trelease: 0.03,\n\t\t\t\tattack: 0.02,\n\t\t\t\tknee: 16\n\t\t\t},\n\t\t});\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._splitter.dispose();\n\t\tthis.low.dispose();\n\t\tthis.mid.dispose();\n\t\tthis.high.dispose();\n\t\tthis.output.dispose();\n\t\treturn this;\n\t}\n}\n","import { Gain } from \"../../core/context/Gain\";\nimport { Param } from \"../../core/context/Param\";\nimport { ToneAudioNode, ToneAudioNodeOptions } from \"../../core/context/ToneAudioNode\";\nimport { Decibels, Frequency } from \"../../core/type/Units\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { readOnly, writable } from \"../../core/util/Interface\";\nimport { Signal } from \"../../signal/Signal\";\nimport { MultibandSplit } from \"../channel/MultibandSplit\";\n\ninterface EQ3Options extends ToneAudioNodeOptions {\n\tlow: Decibels;\n\tmid: Decibels;\n\thigh: Decibels;\n\tlowFrequency: Frequency;\n\thighFrequency: Frequency;\n}\n\n/**\n * EQ3 provides 3 equalizer bins: Low/Mid/High. \n * @category Component\n */\nexport class EQ3 extends ToneAudioNode<EQ3Options> {\n\n\treadonly name: string = \"EQ3\";\n\n\t/**\n\t * the input\n\t */\n\treadonly input: MultibandSplit;\n\n\t/**\n\t * the output\n\t */\n\treadonly output = new Gain({ context: this.context });\n\n\t/**\n\t * Splits the input into three outputs\n\t */\n\tprivate _multibandSplit: MultibandSplit;\n\n\t/**\n\t * The gain for the lower signals\n\t */\n\tprivate _lowGain: Gain<\"decibels\">;\n\n\t/**\n\t * The gain for the mid signals\n\t */\n\tprivate _midGain: Gain<\"decibels\">;\n\n\t/**\n\t * The gain for the high signals\n\t */\n\tprivate _highGain: Gain<\"decibels\">;\n\n\t/**\n\t * The gain in decibels of the low part\n\t */\n\treadonly low: Param<\"decibels\">;\n\n\t/**\n\t * The gain in decibels of the mid part\n\t */\n\treadonly mid: Param<\"decibels\">;\n\n\t/**\n\t * The gain in decibels of the high part\n\t */\n\treadonly high: Param<\"decibels\">;\n\n\t/**\n\t * The Q value for all of the filters.\n\t */\n\treadonly Q: Signal<\"positive\">;\n\n\t/**\n\t * The low/mid crossover frequency.\n\t */\n\treadonly lowFrequency: Signal<\"frequency\">;\n\n\t/**\n\t * The mid/high crossover frequency.\n\t */\n\treadonly highFrequency: Signal<\"frequency\">;\n\n\tprotected _internalChannels: ToneAudioNode[] = [];\n\n\tconstructor(lowLevel?: Decibels, midLevel?: Decibels, highLevel?: Decibels);\n\tconstructor(options: Partial<EQ3Options>);\n\tconstructor() {\n\t\tsuper(optionsFromArguments(EQ3.getDefaults(), arguments, [\"low\", \"mid\", \"high\"]));\n\t\tconst options = optionsFromArguments(EQ3.getDefaults(), arguments, [\"low\", \"mid\", \"high\"]);\n\n\t\tthis.input = this._multibandSplit = new MultibandSplit({\n\t\t\tcontext: this.context,\n\t\t\thighFrequency: options.highFrequency,\n\t\t\tlowFrequency: options.lowFrequency,\n\t\t});\n\n\t\tthis._lowGain = new Gain({\n\t\t\tcontext: this.context,\n\t\t\tgain: options.low,\n\t\t\tunits: \"decibels\",\n\t\t});\n\n\t\tthis._midGain = new Gain({\n\t\t\tcontext: this.context,\n\t\t\tgain: options.mid,\n\t\t\tunits: \"decibels\",\n\t\t});\n\n\t\tthis._highGain = new Gain({\n\t\t\tcontext: this.context,\n\t\t\tgain: options.high,\n\t\t\tunits: \"decibels\",\n\t\t});\n\n\t\tthis.low = this._lowGain.gain;\n\t\tthis.mid = this._midGain.gain;\n\t\tthis.high = this._highGain.gain;\n\t\tthis.Q = this._multibandSplit.Q;\n\t\tthis.lowFrequency = this._multibandSplit.lowFrequency;\n\t\tthis.highFrequency\t= this._multibandSplit.highFrequency;\n\n\t\t// the frequency bands\n\t\tthis._multibandSplit.low.chain(this._lowGain, this.output);\n\t\tthis._multibandSplit.mid.chain(this._midGain, this.output);\n\t\tthis._multibandSplit.high.chain(this._highGain, this.output);\n\n\t\treadOnly(this, [\"low\", \"mid\", \"high\", \"lowFrequency\", \"highFrequency\"]);\n\t\tthis._internalChannels = [this._multibandSplit];\n\t}\n\n\tstatic getDefaults(): EQ3Options {\n\t\treturn Object.assign(ToneAudioNode.getDefaults(), {\n\t\t\thigh: 0,\n\t\t\thighFrequency: 2500,\n\t\t\tlow: 0,\n\t\t\tlowFrequency: 400,\n\t\t\tmid: 0,\n\t\t});\n\t}\n\n\t/**\n\t * Clean up.\n\t */\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\twritable(this, [\"low\", \"mid\", \"high\", \"lowFrequency\", \"highFrequency\"]);\n\t\tthis._multibandSplit.dispose();\n\t\tthis.lowFrequency.dispose();\n\t\tthis.highFrequency.dispose();\n\t\tthis._lowGain.dispose();\n\t\tthis._midGain.dispose();\n\t\tthis._highGain.dispose();\n\t\tthis.low.dispose();\n\t\tthis.mid.dispose();\n\t\tthis.high.dispose();\n\t\tthis.Q.dispose();\n\t\treturn this;\n\t}\n\n}\n","import { ToneAudioNode, ToneAudioNodeOptions } from \"../../core/context/ToneAudioNode\";\nimport { ToneAudioBuffer } from \"../../core/context/ToneAudioBuffer\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { Gain } from \"../../core/context/Gain\";\nimport { noOp } from \"../../core/util/Interface\";\n\nexport interface ConvolverOptions extends ToneAudioNodeOptions {\n\tonload: () => void;\n\tnormalize: boolean;\n\turl?: string | AudioBuffer | ToneAudioBuffer;\n}\n\n/**\n * Convolver is a wrapper around the Native Web Audio\n * [ConvolverNode](http://webaudio.github.io/web-audio-api/#the-convolvernode-interface).\n * Convolution is useful for reverb and filter emulation. Read more about convolution reverb on\n * [Wikipedia](https://en.wikipedia.org/wiki/Convolution_reverb).\n *\n * @example\n * // initializing the convolver with an impulse response\n * const convolver = new Tone.Convolver(\"./path/to/ir.wav\").toDestination();\n * @category Component\n */\nexport class Convolver extends ToneAudioNode<ConvolverOptions> {\n\n\treadonly name: string = \"Convolver\";\n\n\t/**\n\t * The native ConvolverNode\n\t */\n\tprivate _convolver: ConvolverNode = this.context.createConvolver();\n\n\t/**\n\t * The Buffer belonging to the convolver\n\t */\n\tprivate _buffer: ToneAudioBuffer;\n\n\treadonly input: Gain;\n\treadonly output: Gain;\n\n\t/**\n\t * @param url The URL of the impulse response or the ToneAudioBuffer containing the impulse response.\n\t * @param onload The callback to invoke when the url is loaded.\n\t */\n\tconstructor(url?: string | AudioBuffer | ToneAudioBuffer, onload?: () => void);\n\tconstructor(options?: Partial<ConvolverOptions>);\n\tconstructor() {\n\n\t\tsuper(optionsFromArguments(Convolver.getDefaults(), arguments, [\"url\", \"onload\"]));\n\t\tconst options = optionsFromArguments(Convolver.getDefaults(), arguments, [\"url\", \"onload\"]);\n\n\t\tthis._buffer = new ToneAudioBuffer(options.url, buffer => {\n\t\t\tthis.buffer = buffer;\n\t\t\toptions.onload();\n\t\t});\n\n\t\tthis.input = new Gain({ context: this.context });\n\t\tthis.output = new Gain({ context: this.context });\n\n\t\t// set if it's already loaded, set it immediately\n\t\tif (this._buffer.loaded) {\n\t\t\tthis.buffer = this._buffer;\n\t\t}\n\n\t\t// initially set normalization\n\t\tthis.normalize = options.normalize;\n\n\t\t// connect it up\n\t\tthis.input.chain(this._convolver, this.output);\n\t}\n\n\tstatic getDefaults(): ConvolverOptions {\n\t\treturn Object.assign(ToneAudioNode.getDefaults(), {\n\t\t\tnormalize: true,\n\t\t\tonload: noOp,\n\t\t});\n\t}\n\n\t/**\n\t * Load an impulse response url as an audio buffer.\n\t * Decodes the audio asynchronously and invokes\n\t * the callback once the audio buffer loads.\n\t * @param url The url of the buffer to load. filetype support depends on the browser.\n\t */\n\tasync load(url: string): Promise<void> {\n\t\tthis.buffer = await this._buffer.load(url);\n\t}\n\n\t/**\n\t * The convolver's buffer\n\t */\n\tget buffer(): ToneAudioBuffer | null {\n\t\tif (this._buffer.length) {\n\t\t\treturn this._buffer;\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}\n\tset buffer(buffer) {\n\t\tif (buffer) {\n\t\t\tthis._buffer.set(buffer);\n\t\t}\n\t\t// if it's already got a buffer, create a new one\n\t\tif (this._convolver.buffer) {\n\t\t\t// disconnect the old one\n\t\t\tthis.input.disconnect();\n\t\t\tthis._convolver.disconnect();\n\t\t\t// create and connect a new one\n\t\t\tthis._convolver = this.context.createConvolver();\n\t\t\tthis.input.chain(this._convolver, this.output);\n\t\t}\n\t\tconst buff = this._buffer.get();\n\t\tthis._convolver.buffer = buff ? buff : null;\n\t}\n\n\t/**\n\t * The normalize property of the ConvolverNode interface is a boolean that\n\t * controls whether the impulse response from the buffer will be scaled by\n\t * an equal-power normalization when the buffer attribute is set, or not.\n\t */\n\tget normalize(): boolean {\n\t\treturn this._convolver.normalize;\n\t}\n\tset normalize(norm) {\n\t\tthis._convolver.normalize = norm;\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._buffer.dispose();\n\t\tthis._convolver.disconnect();\n\t\treturn this;\n\t}\n}\n","export * from \"./analysis/Analyser\";\nexport * from \"./analysis/Meter\";\nexport * from \"./analysis/FFT\";\nexport * from \"./analysis/DCMeter\";\nexport * from \"./analysis/Waveform\";\nexport * from \"./analysis/Follower\";\n\nexport * from \"./channel/Channel\";\nexport * from \"./channel/CrossFade\";\nexport * from \"./channel/Merge\";\nexport * from \"./channel/MidSideMerge\";\nexport * from \"./channel/MidSideSplit\";\nexport * from \"./channel/Mono\";\nexport * from \"./channel/MultibandSplit\";\nexport * from \"./channel/Panner\";\nexport * from \"./channel/Panner3D\";\nexport * from \"./channel/PanVol\";\nexport * from \"./channel/Recorder\";\nexport * from \"./channel/Solo\";\nexport * from \"./channel/Split\";\nexport * from \"./channel/Volume\";\n\nexport * from \"./dynamics/Compressor\";\nexport * from \"./dynamics/Gate\";\nexport * from \"./dynamics/Limiter\";\nexport * from \"./dynamics/MidSideCompressor\";\nexport * from \"./dynamics/MultibandCompressor\";\n\nexport * from \"./envelope/AmplitudeEnvelope\";\nexport * from \"./envelope/Envelope\";\nexport * from \"./envelope/FrequencyEnvelope\";\n\nexport * from \"./filter/EQ3\";\nexport * from \"./filter/Filter\";\nexport * from \"./filter/OnePoleFilter\";\nexport * from \"./filter/FeedbackCombFilter\";\nexport * from \"./filter/LowpassCombFilter\";\nexport * from \"./filter/Convolver\";\nexport * from \"./filter/BiquadFilter\";\n","export * from \"./core/index\";\nexport * from \"./source/index\";\nexport * from \"./signal/index\";\nexport * from \"./instrument/index\";\nexport * from \"./event/index\";\nexport * from \"./effect/index\";\nexport * from \"./component/index\";\n","export { getContext, setContext } from \"./core/Global\";\nexport * from \"./classes\";\nexport * from \"./version\";\nimport { getContext } from \"./core/Global\";\nimport { ToneAudioBuffer } from \"./core/context/ToneAudioBuffer\";\nexport { start } from \"./core/Global\";\nimport { Seconds } from \"./core/type/Units\";\nexport { supported } from \"./core/context/AudioContext\";\n\n/**\n * The current audio context time of the global [[Context]]. \n * See [[Context.now]]\n * @category Core\n */\nexport function now(): Seconds {\n\treturn getContext().now();\n}\n\n/**\n * The current audio context time of the global [[Context]] without the [[Context.lookAhead]]\n * See [[Context.immediate]]\n * @category Core\n */\nexport function immediate(): Seconds {\n\treturn getContext().immediate();\n}\n\n/**\n * The Transport object belonging to the global Tone.js Context.\n * See [[Transport]]\n * @category Core\n */\nexport const Transport = getContext().transport;\n\n/**\n * The Transport object belonging to the global Tone.js Context.\n * See [[Transport]]\n * @category Core\n */\nexport function getTransport(): import(\"./core/clock/Transport\").Transport {\n\treturn getContext().transport;\n}\n\n/**\n * The Destination (output) belonging to the global Tone.js Context.\n * See [[Destination]]\n * @category Core\n */\nexport const Destination = getContext().destination;\n\n/**\n * @deprecated Use [[Destination]]\n */\nexport const Master = getContext().destination;\n\n/**\n * The Destination (output) belonging to the global Tone.js Context.\n * See [[Destination]]\n * @category Core\n */\nexport function getDestination(): import(\"./core/context/Destination\").Destination {\n\treturn getContext().destination;\n}\n\n/**\n * The [[Listener]] belonging to the global Tone.js Context.\n * @category Core\n */\nexport const Listener = getContext().listener;\n\n/**\n * The [[Listener]] belonging to the global Tone.js Context.\n * @category Core\n */\nexport function getListener(): import(\"./core/context/Listener\").Listener {\n\treturn getContext().listener;\n}\n\n/**\n * Draw is used to synchronize the draw frame with the Transport's callbacks. \n * See [[Draw]]\n * @category Core\n */\nexport const Draw = getContext().draw;\n\n/**\n * Get the singleton attached to the global context. \n * Draw is used to synchronize the draw frame with the Transport's callbacks. \n * See [[Draw]]\n * @category Core\n */\nexport function getDraw(): import(\"./core/util/Draw\").Draw {\n\treturn getContext().draw;\n}\n\n/**\n * A reference to the global context\n * See [[Context]]\n */\nexport const context = getContext();\n\n/**\n * Promise which resolves when all of the loading promises are resolved. \n * Alias for static [[ToneAudioBuffer.loaded]] method.\n * @category Core\n */\nexport function loaded() {\n\treturn ToneAudioBuffer.loaded();\n}\n\n// this fills in name changes from 13.x to 14.x\nimport { ToneAudioBuffers } from \"./core/context/ToneAudioBuffers\";\nimport { ToneBufferSource } from \"./source/buffer/ToneBufferSource\";\nexport const Buffer: typeof ToneAudioBuffer = ToneAudioBuffer;\nexport const Buffers: typeof ToneAudioBuffers = ToneAudioBuffers;\nexport const BufferSource: typeof ToneBufferSource = ToneBufferSource;\n","// WELLE - grammar\n// =============================================================\n\n/*\nhttps://github.com/harc/ohm\nhttps://ohmlang.github.io/editor/\nuse the online tester \n\nsave grammar as const var. will be used at semantics.js\ngrammar reads from top to bottom\nadding a command needs cmd and destiation function\n*/\n\nconst grammarText = `\nlivecode {\n    Exp =   Commands | Assignments  \n\n    /*\n      TRANSPORT, SEQUENCE & CONTROLS\n      ==============================\n      hints:\n      alnum+  == all is allowed\n      phrases == word (can include numbers, integers)\n      oder of grammar counts, checking is top to bottom\n      Upper/lower case counts with definitions, e.g. phrases but PhraseList\n      single phrases are detected least, because less meaningful\n    */\n\t\n\n\n    Commands =\n        | \"?\" PhraseList?           --questionEvent\n    \t| \">\" PhraseList        \t--playMultiEvent\n        | \".\" PhraseList        \t--stopMultiEvent\n        | \"=\" phrase           \t    --savePartEvent\n        | \"/\" PhraseList\t\t    --deleteEvent\n        | \"save\" phrase         \t--saveEvent\n        | \"delete\" phrase         \t--deleteWordEvent\n        | \"join\" phrase \t\t\t--joinEvent\n        | \"restart\" phrase      \t--restartEvent\n        | \"store\" phrase \t\t\t--storeEvent\n        | \"load\" phrase\t\t\t\t--loadEvent\n        | \"upload\" phrase \t\t\t--uploadEvent\n        | \"record\" phrase           --recordEvent\n        | \"mute\"             \t\t--muteEvent\n        | \"unmute\"             \t\t--unmuteEvent\n        | \">\"               \t\t--playAllEvent\n        | \".\"               \t\t--stopAllEvent\n        | \"/\"               \t\t--deleteAllEvent\n        \n        \n                \n\n    Assignments =\n        | phrase \"+\" PhraseList                     --copyPattern\n        | PhraseList floatPos? Pattern random?      --assignPattern\n        | \"bpm\" intPos floatPos?                    --setBPM\n        | PhraseList floatPos \t\t                --setVolume\n        | PhraseList random?\t\t\t            --plainStartEvent\n        | \"\"                                        --emptyEvent\n        \n        \n        \n        \n    PhraseList \t= NonemptyListOf<phrase, \"\"> \t    --PhraseList\n    \n    phrase \t\t= letter+ \"_\"? (letter+)? intPos?   --phrase\n\n    random \t    = \"&\" \" \"? intPos \t                --random\n    \n    Pattern = NonemptyListOf<EventPattern, \"\"> \t\t--extractPattern\n\n    EventPattern = \n        | Events \n        \n    \n    Events =\n        | \"#\" int?\t                --soundNote\n        | \"-\"                       --soundPause\n\n        \n    /*\n      HELPERS - for calculation\n      ==========================\n    */\n    \n    floatPos = digit* \".\" digit+    --fullFloatPos\n        | digit \".\"                 --dotPos\n        | digit+                    --intPos\n    \n    float = \"-\"? digit* \".\" digit+  --fullFloat\n        | \"-\"? digit \".\"            --dot\n        | \"-\"? digit+               --int\n    \n    intPos = digit+                 --intPos\n    \n    int = \"-\"? digit+               --int\n    \n\n}\n\n`;\n\nexport default grammarText;\n","'use strict';\n\n// --------------------------------------------------------------------\n// Private stuff\n// --------------------------------------------------------------------\n\n/*\n  `Failure`s represent expressions that weren't matched while parsing. They are used to generate\n  error messages automatically. The interface of `Failure`s includes the collowing methods:\n\n  - getText() : String\n  - getType() : String  (one of {\"description\", \"string\", \"code\"})\n  - isDescription() : bool\n  - isStringTerminal() : bool\n  - isCode() : bool\n  - isFluffy() : bool\n  - makeFluffy() : void\n  - subsumes(Failure) : bool\n*/\n\nfunction isValidType(type) {\n  return type === 'description' || type === 'string' || type === 'code';\n}\n\nfunction Failure(pexpr, text, type) {\n  if (!isValidType(type)) {\n    throw new Error('invalid Failure type: ' + type);\n  }\n  this.pexpr = pexpr;\n  this.text = text;\n  this.type = type;\n  this.fluffy = false;\n}\n\nFailure.prototype.getPExpr = function() {\n  return this.pexpr;\n};\n\nFailure.prototype.getText = function() {\n  return this.text;\n};\n\nFailure.prototype.getType = function() {\n  return this.type;\n};\n\nFailure.prototype.isDescription = function() {\n  return this.type === 'description';\n};\n\nFailure.prototype.isStringTerminal = function() {\n  return this.type === 'string';\n};\n\nFailure.prototype.isCode = function() {\n  return this.type === 'code';\n};\n\nFailure.prototype.isFluffy = function() {\n  return this.fluffy;\n};\n\nFailure.prototype.makeFluffy = function() {\n  this.fluffy = true;\n};\n\nFailure.prototype.clearFluffy = function() {\n  this.fluffy = false;\n};\n\nFailure.prototype.subsumes = function(that) {\n  return this.getText() === that.getText() &&\n      this.type === that.type &&\n      (!this.isFluffy() || this.isFluffy() && that.isFluffy());\n};\n\nFailure.prototype.toString = function() {\n  return this.type === 'string' ?\n    JSON.stringify(this.getText()) :\n    this.getText();\n};\n\nFailure.prototype.clone = function() {\n  var failure = new Failure(this.pexpr, this.text, this.type);\n  if (this.isFluffy()) {\n    failure.makeFluffy();\n  }\n  return failure;\n};\n\nFailure.prototype.toKey = function() {\n  return this.toString() + '#' + this.type;\n};\n\n// --------------------------------------------------------------------\n// Exports\n// --------------------------------------------------------------------\n\nmodule.exports = Failure;\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      })\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      var TempCtor = function () {}\n      TempCtor.prototype = superCtor.prototype\n      ctor.prototype = new TempCtor()\n      ctor.prototype.constructor = ctor\n    }\n  }\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nmodule.exports = extend;\nfunction extend(origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || typeof add !== 'object') return origin;\n\n  var keys = Object.keys(add);\n  var i = keys.length;\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n  return origin;\n}\n","'use strict';\n\n// --------------------------------------------------------------------\n// Imports\n// --------------------------------------------------------------------\n\nvar extend = require('util-extend');\n\n// --------------------------------------------------------------------\n// Private Stuff\n// --------------------------------------------------------------------\n\n// Helpers\n\nvar escapeStringFor = {};\nfor (var c = 0; c < 128; c++) {\n  escapeStringFor[c] = String.fromCharCode(c);\n}\nescapeStringFor[\"'\".charCodeAt(0)] = \"\\\\'\";\nescapeStringFor['\"'.charCodeAt(0)] = '\\\\\"';\nescapeStringFor['\\\\'.charCodeAt(0)] = '\\\\\\\\';\nescapeStringFor['\\b'.charCodeAt(0)] = '\\\\b';\nescapeStringFor['\\f'.charCodeAt(0)] = '\\\\f';\nescapeStringFor['\\n'.charCodeAt(0)] = '\\\\n';\nescapeStringFor['\\r'.charCodeAt(0)] = '\\\\r';\nescapeStringFor['\\t'.charCodeAt(0)] = '\\\\t';\nescapeStringFor['\\u000b'.charCodeAt(0)] = '\\\\v';\n\n// --------------------------------------------------------------------\n// Exports\n// --------------------------------------------------------------------\n\nexports.abstract = function(optMethodName) {\n  var methodName = optMethodName || '';\n  return function() {\n    throw new Error(\n      'this method ' + methodName + ' is abstract! ' +\n      '(it has no implementation in class ' + this.constructor.name + ')');\n  };\n};\n\nexports.assert = function(cond, message) {\n  if (!cond) {\n    throw new Error(message);\n  }\n};\n\n// Define a lazily-computed, non-enumerable property named `propName`\n// on the object `obj`. `getterFn` will be called to compute the value the\n// first time the property is accessed.\nexports.defineLazyProperty = function(obj, propName, getterFn) {\n  var memo;\n  Object.defineProperty(obj, propName, {\n    get: function() {\n      if (!memo) {\n        memo = getterFn.call(this);\n      }\n      return memo;\n    }\n  });\n};\n\nexports.clone = function(obj) {\n  if (obj) {\n    return extend({}, obj);\n  }\n  return obj;\n};\n\nexports.extend = extend;\n\nexports.repeatFn = function(fn, n) {\n  var arr = [];\n  while (n-- > 0) {\n    arr.push(fn());\n  }\n  return arr;\n};\n\nexports.repeatStr = function(str, n) {\n  return new Array(n + 1).join(str);\n};\n\nexports.repeat = function(x, n) {\n  return exports.repeatFn(function() { return x; }, n);\n};\n\nexports.getDuplicates = function(array) {\n  var duplicates = [];\n  for (var idx = 0; idx < array.length; idx++) {\n    var x = array[idx];\n    if (array.lastIndexOf(x) !== idx && duplicates.indexOf(x) < 0) {\n      duplicates.push(x);\n    }\n  }\n  return duplicates;\n};\n\nexports.copyWithoutDuplicates = function(array) {\n  var noDuplicates = [];\n  array.forEach(function(entry) {\n    if (noDuplicates.indexOf(entry) < 0) {\n      noDuplicates.push(entry);\n    }\n  });\n  return noDuplicates;\n};\n\nexports.isSyntactic = function(ruleName) {\n  var firstChar = ruleName[0];\n  return firstChar === firstChar.toUpperCase();\n};\n\nexports.isLexical = function(ruleName) {\n  return !exports.isSyntactic(ruleName);\n};\n\nexports.padLeft = function(str, len, optChar) {\n  var ch = optChar || ' ';\n  if (str.length < len) {\n    return exports.repeatStr(ch, len - str.length) + str;\n  }\n  return str;\n};\n\n// StringBuffer\n\nexports.StringBuffer = function() {\n  this.strings = [];\n};\n\nexports.StringBuffer.prototype.append = function(str) {\n  this.strings.push(str);\n};\n\nexports.StringBuffer.prototype.contents = function() {\n  return this.strings.join('');\n};\n\n// Character escaping and unescaping\n\nexports.escapeChar = function(c, optDelim) {\n  var charCode = c.charCodeAt(0);\n  if ((c === '\"' || c === \"'\") && optDelim && c !== optDelim) {\n    return c;\n  } else if (charCode < 128) {\n    return escapeStringFor[charCode];\n  } else if (128 <= charCode && charCode < 256) {\n    return '\\\\x' + exports.padLeft(charCode.toString(16), 2, '0');\n  } else {\n    return '\\\\u' + exports.padLeft(charCode.toString(16), 4, '0');\n  }\n};\n\nexports.unescapeChar = function(s) {\n  if (s.charAt(0) === '\\\\') {\n    switch (s.charAt(1)) {\n      case 'b': return '\\b';\n      case 'f': return '\\f';\n      case 'n': return '\\n';\n      case 'r': return '\\r';\n      case 't': return '\\t';\n      case 'v': return '\\v';\n      case 'x': return String.fromCharCode(parseInt(s.substring(2, 4), 16));\n      case 'u': return String.fromCharCode(parseInt(s.substring(2, 6), 16));\n      default: return s.charAt(1);\n    }\n  } else {\n    return s;\n  }\n};\n\n// Helper for producing a description of an unknown object in a safe way.\n// Especially useful for error messages where an unexpected type of object was encountered.\nexports.unexpectedObjToString = function(obj) {\n  if (obj == null) {\n    return String(obj);\n  }\n  var baseToString = Object.prototype.toString.call(obj);\n  try {\n    var typeName;\n    if (obj.constructor && obj.constructor.name) {\n      typeName = obj.constructor.name;\n    } else if (baseToString.indexOf('[object ') === 0) {\n      typeName = baseToString.slice(8, -1);  // Extract e.g. \"Array\" from \"[object Array]\".\n    } else {\n      typeName = typeof obj;\n    }\n    return typeName + ': ' + JSON.stringify(String(obj));\n  } catch (e) {\n    return baseToString;\n  }\n};\n","'use strict';\n\nvar inherits = require('inherits');\n\nvar common = require('./common');\n\n// --------------------------------------------------------------------\n// Private stuff\n// --------------------------------------------------------------------\n\nfunction Node(grammar, ctorName, matchLength) {\n  this.grammar = grammar;\n  this.ctorName = ctorName;\n  this.matchLength = matchLength;\n}\n\nNode.prototype.numChildren = function() {\n  return this.children ? this.children.length : 0;\n};\n\nNode.prototype.childAt = function(idx) {\n  if (this.children) {\n    return this.children[idx];\n  }\n};\n\nNode.prototype.indexOfChild = function(arg) {\n  return this.children.indexOf(arg);\n};\n\nNode.prototype.hasChildren = function() {\n  return this.numChildren() > 1;\n};\n\nNode.prototype.hasNoChildren = function() {\n  return !this.hasChildren();\n};\n\nNode.prototype.onlyChild = function() {\n  if (this.numChildren() !== 1) {\n    throw new Error(\n        'cannot get only child of a node of type ' + this.ctorName +\n        ' (it has ' + this.numChildren() + ' children)');\n  } else {\n    return this.firstChild();\n  }\n};\n\nNode.prototype.firstChild = function() {\n  if (this.hasNoChildren()) {\n    throw new Error(\n        'cannot get first child of a ' + this.ctorName + ' node, which has no children');\n  } else {\n    return this.childAt(0);\n  }\n};\n\nNode.prototype.lastChild = function() {\n  if (this.hasNoChildren()) {\n    throw new Error(\n        'cannot get last child of a ' + this.ctorName + ' node, which has no children');\n  } else {\n    return this.childAt(this.numChildren() - 1);\n  }\n};\n\nNode.prototype.childBefore = function(child) {\n  var childIdx = this.indexOfChild(child);\n  if (childIdx < 0) {\n    throw new Error('Node.childBefore() called w/ an argument that is not a child');\n  } else if (childIdx === 0) {\n    throw new Error('cannot get child before first child');\n  } else {\n    return this.childAt(childIdx - 1);\n  }\n};\n\nNode.prototype.childAfter = function(child) {\n  var childIdx = this.indexOfChild(child);\n  if (childIdx < 0) {\n    throw new Error('Node.childAfter() called w/ an argument that is not a child');\n  } else if (childIdx === this.numChildren() - 1) {\n    throw new Error('cannot get child after last child');\n  } else {\n    return this.childAt(childIdx + 1);\n  }\n};\n\nNode.prototype.isTerminal = function() {\n  return false;\n};\n\nNode.prototype.isNonterminal = function() {\n  return false;\n};\n\nNode.prototype.isIteration = function() {\n  return false;\n};\n\nNode.prototype.isOptional = function() {\n  return false;\n};\n\nNode.prototype.toJSON = function() {\n  var r = {};\n  r[this.ctorName] = this.children;\n  return r;\n};\n\n// Terminals\n\nfunction TerminalNode(grammar, value) {\n  var matchLength = value ? value.length : 0;\n  Node.call(this, grammar, '_terminal', matchLength);\n  this.primitiveValue = value;\n}\ninherits(TerminalNode, Node);\n\nTerminalNode.prototype.isTerminal = function() {\n  return true;\n};\n\nTerminalNode.prototype.toJSON = function() {\n  var r = {};\n  r[this.ctorName] = this.primitiveValue;\n  return r;\n};\n\n// Nonterminals\n\nfunction NonterminalNode(grammar, ruleName, children, childOffsets, matchLength) {\n  Node.call(this, grammar, ruleName, matchLength);\n  this.children = children;\n  this.childOffsets = childOffsets;\n}\ninherits(NonterminalNode, Node);\n\nNonterminalNode.prototype.isNonterminal = function() {\n  return true;\n};\n\nNonterminalNode.prototype.isLexical = function() {\n  return common.isLexical(this.ctorName);\n};\n\nNonterminalNode.prototype.isSyntactic = function() {\n  return common.isSyntactic(this.ctorName);\n};\n\n// Iterations\n\nfunction IterationNode(grammar, children, childOffsets, matchLength, isOptional) {\n  Node.call(this, grammar, '_iter', matchLength);\n  this.children = children;\n  this.childOffsets = childOffsets;\n  this.optional = isOptional;\n}\ninherits(IterationNode, Node);\n\nIterationNode.prototype.isIteration = function() {\n  return true;\n};\n\nIterationNode.prototype.isOptional = function() {\n  return this.optional;\n};\n\n// --------------------------------------------------------------------\n// Exports\n// --------------------------------------------------------------------\n\nmodule.exports = {\n  Node: Node,\n  TerminalNode: TerminalNode,\n  NonterminalNode: NonterminalNode,\n  IterationNode: IterationNode\n};\n","// Based on https://github.com/mathiasbynens/unicode-9.0.0.\n// These are just categories that are used in ES5/ES2015.\n// The full list of Unicode categories is here: http://www.fileformat.info/info/unicode/category/index.htm.\nmodule.exports = {\n  // Letters\n  Lu: /[A-Z\\xC0-\\xD6\\xD8-\\xDE\\u0100\\u0102\\u0104\\u0106\\u0108\\u010A\\u010C\\u010E\\u0110\\u0112\\u0114\\u0116\\u0118\\u011A\\u011C\\u011E\\u0120\\u0122\\u0124\\u0126\\u0128\\u012A\\u012C\\u012E\\u0130\\u0132\\u0134\\u0136\\u0139\\u013B\\u013D\\u013F\\u0141\\u0143\\u0145\\u0147\\u014A\\u014C\\u014E\\u0150\\u0152\\u0154\\u0156\\u0158\\u015A\\u015C\\u015E\\u0160\\u0162\\u0164\\u0166\\u0168\\u016A\\u016C\\u016E\\u0170\\u0172\\u0174\\u0176\\u0178\\u0179\\u017B\\u017D\\u0181\\u0182\\u0184\\u0186\\u0187\\u0189-\\u018B\\u018E-\\u0191\\u0193\\u0194\\u0196-\\u0198\\u019C\\u019D\\u019F\\u01A0\\u01A2\\u01A4\\u01A6\\u01A7\\u01A9\\u01AC\\u01AE\\u01AF\\u01B1-\\u01B3\\u01B5\\u01B7\\u01B8\\u01BC\\u01C4\\u01C7\\u01CA\\u01CD\\u01CF\\u01D1\\u01D3\\u01D5\\u01D7\\u01D9\\u01DB\\u01DE\\u01E0\\u01E2\\u01E4\\u01E6\\u01E8\\u01EA\\u01EC\\u01EE\\u01F1\\u01F4\\u01F6-\\u01F8\\u01FA\\u01FC\\u01FE\\u0200\\u0202\\u0204\\u0206\\u0208\\u020A\\u020C\\u020E\\u0210\\u0212\\u0214\\u0216\\u0218\\u021A\\u021C\\u021E\\u0220\\u0222\\u0224\\u0226\\u0228\\u022A\\u022C\\u022E\\u0230\\u0232\\u023A\\u023B\\u023D\\u023E\\u0241\\u0243-\\u0246\\u0248\\u024A\\u024C\\u024E\\u0370\\u0372\\u0376\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E\\u038F\\u0391-\\u03A1\\u03A3-\\u03AB\\u03CF\\u03D2-\\u03D4\\u03D8\\u03DA\\u03DC\\u03DE\\u03E0\\u03E2\\u03E4\\u03E6\\u03E8\\u03EA\\u03EC\\u03EE\\u03F4\\u03F7\\u03F9\\u03FA\\u03FD-\\u042F\\u0460\\u0462\\u0464\\u0466\\u0468\\u046A\\u046C\\u046E\\u0470\\u0472\\u0474\\u0476\\u0478\\u047A\\u047C\\u047E\\u0480\\u048A\\u048C\\u048E\\u0490\\u0492\\u0494\\u0496\\u0498\\u049A\\u049C\\u049E\\u04A0\\u04A2\\u04A4\\u04A6\\u04A8\\u04AA\\u04AC\\u04AE\\u04B0\\u04B2\\u04B4\\u04B6\\u04B8\\u04BA\\u04BC\\u04BE\\u04C0\\u04C1\\u04C3\\u04C5\\u04C7\\u04C9\\u04CB\\u04CD\\u04D0\\u04D2\\u04D4\\u04D6\\u04D8\\u04DA\\u04DC\\u04DE\\u04E0\\u04E2\\u04E4\\u04E6\\u04E8\\u04EA\\u04EC\\u04EE\\u04F0\\u04F2\\u04F4\\u04F6\\u04F8\\u04FA\\u04FC\\u04FE\\u0500\\u0502\\u0504\\u0506\\u0508\\u050A\\u050C\\u050E\\u0510\\u0512\\u0514\\u0516\\u0518\\u051A\\u051C\\u051E\\u0520\\u0522\\u0524\\u0526\\u0528\\u052A\\u052C\\u052E\\u0531-\\u0556\\u10A0-\\u10C5\\u10C7\\u10CD\\u13A0-\\u13F5\\u1E00\\u1E02\\u1E04\\u1E06\\u1E08\\u1E0A\\u1E0C\\u1E0E\\u1E10\\u1E12\\u1E14\\u1E16\\u1E18\\u1E1A\\u1E1C\\u1E1E\\u1E20\\u1E22\\u1E24\\u1E26\\u1E28\\u1E2A\\u1E2C\\u1E2E\\u1E30\\u1E32\\u1E34\\u1E36\\u1E38\\u1E3A\\u1E3C\\u1E3E\\u1E40\\u1E42\\u1E44\\u1E46\\u1E48\\u1E4A\\u1E4C\\u1E4E\\u1E50\\u1E52\\u1E54\\u1E56\\u1E58\\u1E5A\\u1E5C\\u1E5E\\u1E60\\u1E62\\u1E64\\u1E66\\u1E68\\u1E6A\\u1E6C\\u1E6E\\u1E70\\u1E72\\u1E74\\u1E76\\u1E78\\u1E7A\\u1E7C\\u1E7E\\u1E80\\u1E82\\u1E84\\u1E86\\u1E88\\u1E8A\\u1E8C\\u1E8E\\u1E90\\u1E92\\u1E94\\u1E9E\\u1EA0\\u1EA2\\u1EA4\\u1EA6\\u1EA8\\u1EAA\\u1EAC\\u1EAE\\u1EB0\\u1EB2\\u1EB4\\u1EB6\\u1EB8\\u1EBA\\u1EBC\\u1EBE\\u1EC0\\u1EC2\\u1EC4\\u1EC6\\u1EC8\\u1ECA\\u1ECC\\u1ECE\\u1ED0\\u1ED2\\u1ED4\\u1ED6\\u1ED8\\u1EDA\\u1EDC\\u1EDE\\u1EE0\\u1EE2\\u1EE4\\u1EE6\\u1EE8\\u1EEA\\u1EEC\\u1EEE\\u1EF0\\u1EF2\\u1EF4\\u1EF6\\u1EF8\\u1EFA\\u1EFC\\u1EFE\\u1F08-\\u1F0F\\u1F18-\\u1F1D\\u1F28-\\u1F2F\\u1F38-\\u1F3F\\u1F48-\\u1F4D\\u1F59\\u1F5B\\u1F5D\\u1F5F\\u1F68-\\u1F6F\\u1FB8-\\u1FBB\\u1FC8-\\u1FCB\\u1FD8-\\u1FDB\\u1FE8-\\u1FEC\\u1FF8-\\u1FFB\\u2102\\u2107\\u210B-\\u210D\\u2110-\\u2112\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u2130-\\u2133\\u213E\\u213F\\u2145\\u2183\\u2C00-\\u2C2E\\u2C60\\u2C62-\\u2C64\\u2C67\\u2C69\\u2C6B\\u2C6D-\\u2C70\\u2C72\\u2C75\\u2C7E-\\u2C80\\u2C82\\u2C84\\u2C86\\u2C88\\u2C8A\\u2C8C\\u2C8E\\u2C90\\u2C92\\u2C94\\u2C96\\u2C98\\u2C9A\\u2C9C\\u2C9E\\u2CA0\\u2CA2\\u2CA4\\u2CA6\\u2CA8\\u2CAA\\u2CAC\\u2CAE\\u2CB0\\u2CB2\\u2CB4\\u2CB6\\u2CB8\\u2CBA\\u2CBC\\u2CBE\\u2CC0\\u2CC2\\u2CC4\\u2CC6\\u2CC8\\u2CCA\\u2CCC\\u2CCE\\u2CD0\\u2CD2\\u2CD4\\u2CD6\\u2CD8\\u2CDA\\u2CDC\\u2CDE\\u2CE0\\u2CE2\\u2CEB\\u2CED\\u2CF2\\uA640\\uA642\\uA644\\uA646\\uA648\\uA64A\\uA64C\\uA64E\\uA650\\uA652\\uA654\\uA656\\uA658\\uA65A\\uA65C\\uA65E\\uA660\\uA662\\uA664\\uA666\\uA668\\uA66A\\uA66C\\uA680\\uA682\\uA684\\uA686\\uA688\\uA68A\\uA68C\\uA68E\\uA690\\uA692\\uA694\\uA696\\uA698\\uA69A\\uA722\\uA724\\uA726\\uA728\\uA72A\\uA72C\\uA72E\\uA732\\uA734\\uA736\\uA738\\uA73A\\uA73C\\uA73E\\uA740\\uA742\\uA744\\uA746\\uA748\\uA74A\\uA74C\\uA74E\\uA750\\uA752\\uA754\\uA756\\uA758\\uA75A\\uA75C\\uA75E\\uA760\\uA762\\uA764\\uA766\\uA768\\uA76A\\uA76C\\uA76E\\uA779\\uA77B\\uA77D\\uA77E\\uA780\\uA782\\uA784\\uA786\\uA78B\\uA78D\\uA790\\uA792\\uA796\\uA798\\uA79A\\uA79C\\uA79E\\uA7A0\\uA7A2\\uA7A4\\uA7A6\\uA7A8\\uA7AA-\\uA7AE\\uA7B0-\\uA7B4\\uA7B6\\uFF21-\\uFF3A]|\\uD801[\\uDC00-\\uDC27\\uDCB0-\\uDCD3]|\\uD803[\\uDC80-\\uDCB2]|\\uD806[\\uDCA0-\\uDCBF]|\\uD835[\\uDC00-\\uDC19\\uDC34-\\uDC4D\\uDC68-\\uDC81\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB5\\uDCD0-\\uDCE9\\uDD04\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD38\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD6C-\\uDD85\\uDDA0-\\uDDB9\\uDDD4-\\uDDED\\uDE08-\\uDE21\\uDE3C-\\uDE55\\uDE70-\\uDE89\\uDEA8-\\uDEC0\\uDEE2-\\uDEFA\\uDF1C-\\uDF34\\uDF56-\\uDF6E\\uDF90-\\uDFA8\\uDFCA]|\\uD83A[\\uDD00-\\uDD21]/,\n  Ll: /[a-z\\xB5\\xDF-\\xF6\\xF8-\\xFF\\u0101\\u0103\\u0105\\u0107\\u0109\\u010B\\u010D\\u010F\\u0111\\u0113\\u0115\\u0117\\u0119\\u011B\\u011D\\u011F\\u0121\\u0123\\u0125\\u0127\\u0129\\u012B\\u012D\\u012F\\u0131\\u0133\\u0135\\u0137\\u0138\\u013A\\u013C\\u013E\\u0140\\u0142\\u0144\\u0146\\u0148\\u0149\\u014B\\u014D\\u014F\\u0151\\u0153\\u0155\\u0157\\u0159\\u015B\\u015D\\u015F\\u0161\\u0163\\u0165\\u0167\\u0169\\u016B\\u016D\\u016F\\u0171\\u0173\\u0175\\u0177\\u017A\\u017C\\u017E-\\u0180\\u0183\\u0185\\u0188\\u018C\\u018D\\u0192\\u0195\\u0199-\\u019B\\u019E\\u01A1\\u01A3\\u01A5\\u01A8\\u01AA\\u01AB\\u01AD\\u01B0\\u01B4\\u01B6\\u01B9\\u01BA\\u01BD-\\u01BF\\u01C6\\u01C9\\u01CC\\u01CE\\u01D0\\u01D2\\u01D4\\u01D6\\u01D8\\u01DA\\u01DC\\u01DD\\u01DF\\u01E1\\u01E3\\u01E5\\u01E7\\u01E9\\u01EB\\u01ED\\u01EF\\u01F0\\u01F3\\u01F5\\u01F9\\u01FB\\u01FD\\u01FF\\u0201\\u0203\\u0205\\u0207\\u0209\\u020B\\u020D\\u020F\\u0211\\u0213\\u0215\\u0217\\u0219\\u021B\\u021D\\u021F\\u0221\\u0223\\u0225\\u0227\\u0229\\u022B\\u022D\\u022F\\u0231\\u0233-\\u0239\\u023C\\u023F\\u0240\\u0242\\u0247\\u0249\\u024B\\u024D\\u024F-\\u0293\\u0295-\\u02AF\\u0371\\u0373\\u0377\\u037B-\\u037D\\u0390\\u03AC-\\u03CE\\u03D0\\u03D1\\u03D5-\\u03D7\\u03D9\\u03DB\\u03DD\\u03DF\\u03E1\\u03E3\\u03E5\\u03E7\\u03E9\\u03EB\\u03ED\\u03EF-\\u03F3\\u03F5\\u03F8\\u03FB\\u03FC\\u0430-\\u045F\\u0461\\u0463\\u0465\\u0467\\u0469\\u046B\\u046D\\u046F\\u0471\\u0473\\u0475\\u0477\\u0479\\u047B\\u047D\\u047F\\u0481\\u048B\\u048D\\u048F\\u0491\\u0493\\u0495\\u0497\\u0499\\u049B\\u049D\\u049F\\u04A1\\u04A3\\u04A5\\u04A7\\u04A9\\u04AB\\u04AD\\u04AF\\u04B1\\u04B3\\u04B5\\u04B7\\u04B9\\u04BB\\u04BD\\u04BF\\u04C2\\u04C4\\u04C6\\u04C8\\u04CA\\u04CC\\u04CE\\u04CF\\u04D1\\u04D3\\u04D5\\u04D7\\u04D9\\u04DB\\u04DD\\u04DF\\u04E1\\u04E3\\u04E5\\u04E7\\u04E9\\u04EB\\u04ED\\u04EF\\u04F1\\u04F3\\u04F5\\u04F7\\u04F9\\u04FB\\u04FD\\u04FF\\u0501\\u0503\\u0505\\u0507\\u0509\\u050B\\u050D\\u050F\\u0511\\u0513\\u0515\\u0517\\u0519\\u051B\\u051D\\u051F\\u0521\\u0523\\u0525\\u0527\\u0529\\u052B\\u052D\\u052F\\u0561-\\u0587\\u13F8-\\u13FD\\u1C80-\\u1C88\\u1D00-\\u1D2B\\u1D6B-\\u1D77\\u1D79-\\u1D9A\\u1E01\\u1E03\\u1E05\\u1E07\\u1E09\\u1E0B\\u1E0D\\u1E0F\\u1E11\\u1E13\\u1E15\\u1E17\\u1E19\\u1E1B\\u1E1D\\u1E1F\\u1E21\\u1E23\\u1E25\\u1E27\\u1E29\\u1E2B\\u1E2D\\u1E2F\\u1E31\\u1E33\\u1E35\\u1E37\\u1E39\\u1E3B\\u1E3D\\u1E3F\\u1E41\\u1E43\\u1E45\\u1E47\\u1E49\\u1E4B\\u1E4D\\u1E4F\\u1E51\\u1E53\\u1E55\\u1E57\\u1E59\\u1E5B\\u1E5D\\u1E5F\\u1E61\\u1E63\\u1E65\\u1E67\\u1E69\\u1E6B\\u1E6D\\u1E6F\\u1E71\\u1E73\\u1E75\\u1E77\\u1E79\\u1E7B\\u1E7D\\u1E7F\\u1E81\\u1E83\\u1E85\\u1E87\\u1E89\\u1E8B\\u1E8D\\u1E8F\\u1E91\\u1E93\\u1E95-\\u1E9D\\u1E9F\\u1EA1\\u1EA3\\u1EA5\\u1EA7\\u1EA9\\u1EAB\\u1EAD\\u1EAF\\u1EB1\\u1EB3\\u1EB5\\u1EB7\\u1EB9\\u1EBB\\u1EBD\\u1EBF\\u1EC1\\u1EC3\\u1EC5\\u1EC7\\u1EC9\\u1ECB\\u1ECD\\u1ECF\\u1ED1\\u1ED3\\u1ED5\\u1ED7\\u1ED9\\u1EDB\\u1EDD\\u1EDF\\u1EE1\\u1EE3\\u1EE5\\u1EE7\\u1EE9\\u1EEB\\u1EED\\u1EEF\\u1EF1\\u1EF3\\u1EF5\\u1EF7\\u1EF9\\u1EFB\\u1EFD\\u1EFF-\\u1F07\\u1F10-\\u1F15\\u1F20-\\u1F27\\u1F30-\\u1F37\\u1F40-\\u1F45\\u1F50-\\u1F57\\u1F60-\\u1F67\\u1F70-\\u1F7D\\u1F80-\\u1F87\\u1F90-\\u1F97\\u1FA0-\\u1FA7\\u1FB0-\\u1FB4\\u1FB6\\u1FB7\\u1FBE\\u1FC2-\\u1FC4\\u1FC6\\u1FC7\\u1FD0-\\u1FD3\\u1FD6\\u1FD7\\u1FE0-\\u1FE7\\u1FF2-\\u1FF4\\u1FF6\\u1FF7\\u210A\\u210E\\u210F\\u2113\\u212F\\u2134\\u2139\\u213C\\u213D\\u2146-\\u2149\\u214E\\u2184\\u2C30-\\u2C5E\\u2C61\\u2C65\\u2C66\\u2C68\\u2C6A\\u2C6C\\u2C71\\u2C73\\u2C74\\u2C76-\\u2C7B\\u2C81\\u2C83\\u2C85\\u2C87\\u2C89\\u2C8B\\u2C8D\\u2C8F\\u2C91\\u2C93\\u2C95\\u2C97\\u2C99\\u2C9B\\u2C9D\\u2C9F\\u2CA1\\u2CA3\\u2CA5\\u2CA7\\u2CA9\\u2CAB\\u2CAD\\u2CAF\\u2CB1\\u2CB3\\u2CB5\\u2CB7\\u2CB9\\u2CBB\\u2CBD\\u2CBF\\u2CC1\\u2CC3\\u2CC5\\u2CC7\\u2CC9\\u2CCB\\u2CCD\\u2CCF\\u2CD1\\u2CD3\\u2CD5\\u2CD7\\u2CD9\\u2CDB\\u2CDD\\u2CDF\\u2CE1\\u2CE3\\u2CE4\\u2CEC\\u2CEE\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\uA641\\uA643\\uA645\\uA647\\uA649\\uA64B\\uA64D\\uA64F\\uA651\\uA653\\uA655\\uA657\\uA659\\uA65B\\uA65D\\uA65F\\uA661\\uA663\\uA665\\uA667\\uA669\\uA66B\\uA66D\\uA681\\uA683\\uA685\\uA687\\uA689\\uA68B\\uA68D\\uA68F\\uA691\\uA693\\uA695\\uA697\\uA699\\uA69B\\uA723\\uA725\\uA727\\uA729\\uA72B\\uA72D\\uA72F-\\uA731\\uA733\\uA735\\uA737\\uA739\\uA73B\\uA73D\\uA73F\\uA741\\uA743\\uA745\\uA747\\uA749\\uA74B\\uA74D\\uA74F\\uA751\\uA753\\uA755\\uA757\\uA759\\uA75B\\uA75D\\uA75F\\uA761\\uA763\\uA765\\uA767\\uA769\\uA76B\\uA76D\\uA76F\\uA771-\\uA778\\uA77A\\uA77C\\uA77F\\uA781\\uA783\\uA785\\uA787\\uA78C\\uA78E\\uA791\\uA793-\\uA795\\uA797\\uA799\\uA79B\\uA79D\\uA79F\\uA7A1\\uA7A3\\uA7A5\\uA7A7\\uA7A9\\uA7B5\\uA7B7\\uA7FA\\uAB30-\\uAB5A\\uAB60-\\uAB65\\uAB70-\\uABBF\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFF41-\\uFF5A]|\\uD801[\\uDC28-\\uDC4F\\uDCD8-\\uDCFB]|\\uD803[\\uDCC0-\\uDCF2]|\\uD806[\\uDCC0-\\uDCDF]|\\uD835[\\uDC1A-\\uDC33\\uDC4E-\\uDC54\\uDC56-\\uDC67\\uDC82-\\uDC9B\\uDCB6-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDCCF\\uDCEA-\\uDD03\\uDD1E-\\uDD37\\uDD52-\\uDD6B\\uDD86-\\uDD9F\\uDDBA-\\uDDD3\\uDDEE-\\uDE07\\uDE22-\\uDE3B\\uDE56-\\uDE6F\\uDE8A-\\uDEA5\\uDEC2-\\uDEDA\\uDEDC-\\uDEE1\\uDEFC-\\uDF14\\uDF16-\\uDF1B\\uDF36-\\uDF4E\\uDF50-\\uDF55\\uDF70-\\uDF88\\uDF8A-\\uDF8F\\uDFAA-\\uDFC2\\uDFC4-\\uDFC9\\uDFCB]|\\uD83A[\\uDD22-\\uDD43]/,\n  Lt: /[\\u01C5\\u01C8\\u01CB\\u01F2\\u1F88-\\u1F8F\\u1F98-\\u1F9F\\u1FA8-\\u1FAF\\u1FBC\\u1FCC\\u1FFC]/,\n  Lm: /[\\u02B0-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0374\\u037A\\u0559\\u0640\\u06E5\\u06E6\\u07F4\\u07F5\\u07FA\\u081A\\u0824\\u0828\\u0971\\u0E46\\u0EC6\\u10FC\\u17D7\\u1843\\u1AA7\\u1C78-\\u1C7D\\u1D2C-\\u1D6A\\u1D78\\u1D9B-\\u1DBF\\u2071\\u207F\\u2090-\\u209C\\u2C7C\\u2C7D\\u2D6F\\u2E2F\\u3005\\u3031-\\u3035\\u303B\\u309D\\u309E\\u30FC-\\u30FE\\uA015\\uA4F8-\\uA4FD\\uA60C\\uA67F\\uA69C\\uA69D\\uA717-\\uA71F\\uA770\\uA788\\uA7F8\\uA7F9\\uA9CF\\uA9E6\\uAA70\\uAADD\\uAAF3\\uAAF4\\uAB5C-\\uAB5F\\uFF70\\uFF9E\\uFF9F]|\\uD81A[\\uDF40-\\uDF43]|\\uD81B[\\uDF93-\\uDF9F\\uDFE0]/,\n  Lo: /[\\xAA\\xBA\\u01BB\\u01C0-\\u01C3\\u0294\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u063F\\u0641-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u0800-\\u0815\\u0840-\\u0858\\u08A0-\\u08B4\\u08B6-\\u08BD\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0972-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0AF9\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C60\\u0C61\\u0C80\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D54-\\u0D56\\u0D5F-\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E45\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10D0-\\u10FA\\u10FD-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16F1-\\u16F8\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17DC\\u1820-\\u1842\\u1844-\\u1877\\u1880-\\u1884\\u1887-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C77\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u2135-\\u2138\\u2D30-\\u2D67\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u3006\\u303C\\u3041-\\u3096\\u309F\\u30A1-\\u30FA\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FD5\\uA000-\\uA014\\uA016-\\uA48C\\uA4D0-\\uA4F7\\uA500-\\uA60B\\uA610-\\uA61F\\uA62A\\uA62B\\uA66E\\uA6A0-\\uA6E5\\uA78F\\uA7F7\\uA7FB-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9E0-\\uA9E4\\uA9E7-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA6F\\uAA71-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB\\uAADC\\uAAE0-\\uAAEA\\uAAF2\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uABC0-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF66-\\uFF6F\\uFF71-\\uFF9D\\uFFA0-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDF00-\\uDF1F\\uDF30-\\uDF40\\uDF42-\\uDF49\\uDF50-\\uDF75\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF]|\\uD801[\\uDC50-\\uDC9D\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC60-\\uDC76\\uDC80-\\uDC9E\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDD00-\\uDD15\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBE\\uDDBF\\uDE00\\uDE10-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE33\\uDE60-\\uDE7C\\uDE80-\\uDE9C\\uDEC0-\\uDEC7\\uDEC9-\\uDEE4\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF60-\\uDF72\\uDF80-\\uDF91]|\\uD803[\\uDC00-\\uDC48]|\\uD804[\\uDC03-\\uDC37\\uDC83-\\uDCAF\\uDCD0-\\uDCE8\\uDD03-\\uDD26\\uDD50-\\uDD72\\uDD76\\uDD83-\\uDDB2\\uDDC1-\\uDDC4\\uDDDA\\uDDDC\\uDE00-\\uDE11\\uDE13-\\uDE2B\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEDE\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3D\\uDF50\\uDF5D-\\uDF61]|\\uD805[\\uDC00-\\uDC34\\uDC47-\\uDC4A\\uDC80-\\uDCAF\\uDCC4\\uDCC5\\uDCC7\\uDD80-\\uDDAE\\uDDD8-\\uDDDB\\uDE00-\\uDE2F\\uDE44\\uDE80-\\uDEAA\\uDF00-\\uDF19]|\\uD806[\\uDCFF\\uDEC0-\\uDEF8]|\\uD807[\\uDC00-\\uDC08\\uDC0A-\\uDC2E\\uDC40\\uDC72-\\uDC8F]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC80-\\uDD43]|[\\uD80C\\uD81C-\\uD820\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDED0-\\uDEED\\uDF00-\\uDF2F\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDF00-\\uDF44\\uDF50]|\\uD821[\\uDC00-\\uDFEC]|\\uD822[\\uDC00-\\uDEF2]|\\uD82C[\\uDC00\\uDC01]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99]|\\uD83A[\\uDC00-\\uDCC4]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1]|\\uD87E[\\uDC00-\\uDE1D]/,\n\n  // Numbers\n  Nl: /[\\u16EE-\\u16F0\\u2160-\\u2182\\u2185-\\u2188\\u3007\\u3021-\\u3029\\u3038-\\u303A\\uA6E6-\\uA6EF]|\\uD800[\\uDD40-\\uDD74\\uDF41\\uDF4A\\uDFD1-\\uDFD5]|\\uD809[\\uDC00-\\uDC6E]/,\n  Nd: /[0-9\\u0660-\\u0669\\u06F0-\\u06F9\\u07C0-\\u07C9\\u0966-\\u096F\\u09E6-\\u09EF\\u0A66-\\u0A6F\\u0AE6-\\u0AEF\\u0B66-\\u0B6F\\u0BE6-\\u0BEF\\u0C66-\\u0C6F\\u0CE6-\\u0CEF\\u0D66-\\u0D6F\\u0DE6-\\u0DEF\\u0E50-\\u0E59\\u0ED0-\\u0ED9\\u0F20-\\u0F29\\u1040-\\u1049\\u1090-\\u1099\\u17E0-\\u17E9\\u1810-\\u1819\\u1946-\\u194F\\u19D0-\\u19D9\\u1A80-\\u1A89\\u1A90-\\u1A99\\u1B50-\\u1B59\\u1BB0-\\u1BB9\\u1C40-\\u1C49\\u1C50-\\u1C59\\uA620-\\uA629\\uA8D0-\\uA8D9\\uA900-\\uA909\\uA9D0-\\uA9D9\\uA9F0-\\uA9F9\\uAA50-\\uAA59\\uABF0-\\uABF9\\uFF10-\\uFF19]|\\uD801[\\uDCA0-\\uDCA9]|\\uD804[\\uDC66-\\uDC6F\\uDCF0-\\uDCF9\\uDD36-\\uDD3F\\uDDD0-\\uDDD9\\uDEF0-\\uDEF9]|[\\uD805\\uD807][\\uDC50-\\uDC59\\uDCD0-\\uDCD9\\uDE50-\\uDE59\\uDEC0-\\uDEC9\\uDF30-\\uDF39]|\\uD806[\\uDCE0-\\uDCE9]|\\uD81A[\\uDE60-\\uDE69\\uDF50-\\uDF59]|\\uD835[\\uDFCE-\\uDFFF]|\\uD83A[\\uDD50-\\uDD59]/,\n\n  // Marks\n  Mn: /[\\u0300-\\u036F\\u0483-\\u0487\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u0610-\\u061A\\u064B-\\u065F\\u0670\\u06D6-\\u06DC\\u06DF-\\u06E4\\u06E7\\u06E8\\u06EA-\\u06ED\\u0711\\u0730-\\u074A\\u07A6-\\u07B0\\u07EB-\\u07F3\\u0816-\\u0819\\u081B-\\u0823\\u0825-\\u0827\\u0829-\\u082D\\u0859-\\u085B\\u08D4-\\u08E1\\u08E3-\\u0902\\u093A\\u093C\\u0941-\\u0948\\u094D\\u0951-\\u0957\\u0962\\u0963\\u0981\\u09BC\\u09C1-\\u09C4\\u09CD\\u09E2\\u09E3\\u0A01\\u0A02\\u0A3C\\u0A41\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A70\\u0A71\\u0A75\\u0A81\\u0A82\\u0ABC\\u0AC1-\\u0AC5\\u0AC7\\u0AC8\\u0ACD\\u0AE2\\u0AE3\\u0B01\\u0B3C\\u0B3F\\u0B41-\\u0B44\\u0B4D\\u0B56\\u0B62\\u0B63\\u0B82\\u0BC0\\u0BCD\\u0C00\\u0C3E-\\u0C40\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C62\\u0C63\\u0C81\\u0CBC\\u0CBF\\u0CC6\\u0CCC\\u0CCD\\u0CE2\\u0CE3\\u0D01\\u0D41-\\u0D44\\u0D4D\\u0D62\\u0D63\\u0DCA\\u0DD2-\\u0DD4\\u0DD6\\u0E31\\u0E34-\\u0E3A\\u0E47-\\u0E4E\\u0EB1\\u0EB4-\\u0EB9\\u0EBB\\u0EBC\\u0EC8-\\u0ECD\\u0F18\\u0F19\\u0F35\\u0F37\\u0F39\\u0F71-\\u0F7E\\u0F80-\\u0F84\\u0F86\\u0F87\\u0F8D-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u102D-\\u1030\\u1032-\\u1037\\u1039\\u103A\\u103D\\u103E\\u1058\\u1059\\u105E-\\u1060\\u1071-\\u1074\\u1082\\u1085\\u1086\\u108D\\u109D\\u135D-\\u135F\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17B4\\u17B5\\u17B7-\\u17BD\\u17C6\\u17C9-\\u17D3\\u17DD\\u180B-\\u180D\\u1885\\u1886\\u18A9\\u1920-\\u1922\\u1927\\u1928\\u1932\\u1939-\\u193B\\u1A17\\u1A18\\u1A1B\\u1A56\\u1A58-\\u1A5E\\u1A60\\u1A62\\u1A65-\\u1A6C\\u1A73-\\u1A7C\\u1A7F\\u1AB0-\\u1ABD\\u1B00-\\u1B03\\u1B34\\u1B36-\\u1B3A\\u1B3C\\u1B42\\u1B6B-\\u1B73\\u1B80\\u1B81\\u1BA2-\\u1BA5\\u1BA8\\u1BA9\\u1BAB-\\u1BAD\\u1BE6\\u1BE8\\u1BE9\\u1BED\\u1BEF-\\u1BF1\\u1C2C-\\u1C33\\u1C36\\u1C37\\u1CD0-\\u1CD2\\u1CD4-\\u1CE0\\u1CE2-\\u1CE8\\u1CED\\u1CF4\\u1CF8\\u1CF9\\u1DC0-\\u1DF5\\u1DFB-\\u1DFF\\u20D0-\\u20DC\\u20E1\\u20E5-\\u20F0\\u2CEF-\\u2CF1\\u2D7F\\u2DE0-\\u2DFF\\u302A-\\u302D\\u3099\\u309A\\uA66F\\uA674-\\uA67D\\uA69E\\uA69F\\uA6F0\\uA6F1\\uA802\\uA806\\uA80B\\uA825\\uA826\\uA8C4\\uA8C5\\uA8E0-\\uA8F1\\uA926-\\uA92D\\uA947-\\uA951\\uA980-\\uA982\\uA9B3\\uA9B6-\\uA9B9\\uA9BC\\uA9E5\\uAA29-\\uAA2E\\uAA31\\uAA32\\uAA35\\uAA36\\uAA43\\uAA4C\\uAA7C\\uAAB0\\uAAB2-\\uAAB4\\uAAB7\\uAAB8\\uAABE\\uAABF\\uAAC1\\uAAEC\\uAAED\\uAAF6\\uABE5\\uABE8\\uABED\\uFB1E\\uFE00-\\uFE0F\\uFE20-\\uFE2F]|\\uD800[\\uDDFD\\uDEE0\\uDF76-\\uDF7A]|\\uD802[\\uDE01-\\uDE03\\uDE05\\uDE06\\uDE0C-\\uDE0F\\uDE38-\\uDE3A\\uDE3F\\uDEE5\\uDEE6]|\\uD804[\\uDC01\\uDC38-\\uDC46\\uDC7F-\\uDC81\\uDCB3-\\uDCB6\\uDCB9\\uDCBA\\uDD00-\\uDD02\\uDD27-\\uDD2B\\uDD2D-\\uDD34\\uDD73\\uDD80\\uDD81\\uDDB6-\\uDDBE\\uDDCA-\\uDDCC\\uDE2F-\\uDE31\\uDE34\\uDE36\\uDE37\\uDE3E\\uDEDF\\uDEE3-\\uDEEA\\uDF00\\uDF01\\uDF3C\\uDF40\\uDF66-\\uDF6C\\uDF70-\\uDF74]|\\uD805[\\uDC38-\\uDC3F\\uDC42-\\uDC44\\uDC46\\uDCB3-\\uDCB8\\uDCBA\\uDCBF\\uDCC0\\uDCC2\\uDCC3\\uDDB2-\\uDDB5\\uDDBC\\uDDBD\\uDDBF\\uDDC0\\uDDDC\\uDDDD\\uDE33-\\uDE3A\\uDE3D\\uDE3F\\uDE40\\uDEAB\\uDEAD\\uDEB0-\\uDEB5\\uDEB7\\uDF1D-\\uDF1F\\uDF22-\\uDF25\\uDF27-\\uDF2B]|\\uD807[\\uDC30-\\uDC36\\uDC38-\\uDC3D\\uDC3F\\uDC92-\\uDCA7\\uDCAA-\\uDCB0\\uDCB2\\uDCB3\\uDCB5\\uDCB6]|\\uD81A[\\uDEF0-\\uDEF4\\uDF30-\\uDF36]|\\uD81B[\\uDF8F-\\uDF92]|\\uD82F[\\uDC9D\\uDC9E]|\\uD834[\\uDD67-\\uDD69\\uDD7B-\\uDD82\\uDD85-\\uDD8B\\uDDAA-\\uDDAD\\uDE42-\\uDE44]|\\uD836[\\uDE00-\\uDE36\\uDE3B-\\uDE6C\\uDE75\\uDE84\\uDE9B-\\uDE9F\\uDEA1-\\uDEAF]|\\uD838[\\uDC00-\\uDC06\\uDC08-\\uDC18\\uDC1B-\\uDC21\\uDC23\\uDC24\\uDC26-\\uDC2A]|\\uD83A[\\uDCD0-\\uDCD6\\uDD44-\\uDD4A]|\\uDB40[\\uDD00-\\uDDEF]/,\n  Mc: /[\\u0903-\\u0903]|[\\u093E-\\u0940]|[\\u0949-\\u094C]|[\\u0982-\\u0983]|[\\u09BE-\\u09C0]|[\\u09C7-\\u09C8]|[\\u09CB-\\u09CC]|[\\u09D7-\\u09D7]|[\\u0A3E-\\u0A40]|[\\u0A83-\\u0A83]|[\\u0ABE-\\u0AC0]|[\\u0AC9-\\u0AC9]|[\\u0ACB-\\u0ACC]|[\\u0B02-\\u0B03]|[\\u0B3E-\\u0B3E]|[\\u0B40-\\u0B40]|[\\u0B47-\\u0B48]|[\\u0B4B-\\u0B4C]|[\\u0B57-\\u0B57]|[\\u0B83-\\u0B83]|[\\u0BBE-\\u0BBF]|[\\u0BC1-\\u0BC2]|[\\u0BC6-\\u0BC8]|[\\u0BCA-\\u0BCC]|[\\u0BD7-\\u0BD7]|[\\u0C01-\\u0C03]|[\\u0C41-\\u0C44]|[\\u0C82-\\u0C83]|[\\u0CBE-\\u0CBE]|[\\u0CC0-\\u0CC4]|[\\u0CC7-\\u0CC8]|[\\u0CCA-\\u0CCB]|[\\u0CD5-\\u0CD6]|[\\u0D02-\\u0D03]|[\\u0D3E-\\u0D40]|[\\u0D46-\\u0D48]|[\\u0D4A-\\u0D4C]|[\\u0D57-\\u0D57]|[\\u0F3E-\\u0F3F]|[\\u0F7F-\\u0F7F]/,\n\n  // Punctuation, Connector\n  Pc: /[_\\u203F\\u2040\\u2054\\uFE33\\uFE34\\uFE4D-\\uFE4F\\uFF3F]/,\n\n  // Separator, Space\n  Zs: /[ \\xA0\\u1680\\u2000-\\u200A\\u202F\\u205F\\u3000]/,\n\n  // These two are not real Unicode categories, but our useful for Ohm.\n  // L is a combination of all the letter categories.\n  // Ltmo is a combination of Lt, Lm, and Lo.\n  L: /[A-Za-z\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u08A0-\\u08B4\\u08B6-\\u08BD\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0AF9\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C60\\u0C61\\u0C80\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D54-\\u0D56\\u0D5F-\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16F1-\\u16F8\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u1884\\u1887-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1C80-\\u1C88\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2183\\u2184\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005\\u3006\\u3031-\\u3035\\u303B\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FD5\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6E5\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7AE\\uA7B0-\\uA7B7\\uA7F7-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uA9E0-\\uA9E4\\uA9E6-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB65\\uAB70-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDF00-\\uDF1F\\uDF30-\\uDF40\\uDF42-\\uDF49\\uDF50-\\uDF75\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF]|\\uD801[\\uDC00-\\uDC9D\\uDCB0-\\uDCD3\\uDCD8-\\uDCFB\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC60-\\uDC76\\uDC80-\\uDC9E\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDD00-\\uDD15\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBE\\uDDBF\\uDE00\\uDE10-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE33\\uDE60-\\uDE7C\\uDE80-\\uDE9C\\uDEC0-\\uDEC7\\uDEC9-\\uDEE4\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF60-\\uDF72\\uDF80-\\uDF91]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2]|\\uD804[\\uDC03-\\uDC37\\uDC83-\\uDCAF\\uDCD0-\\uDCE8\\uDD03-\\uDD26\\uDD50-\\uDD72\\uDD76\\uDD83-\\uDDB2\\uDDC1-\\uDDC4\\uDDDA\\uDDDC\\uDE00-\\uDE11\\uDE13-\\uDE2B\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEDE\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3D\\uDF50\\uDF5D-\\uDF61]|\\uD805[\\uDC00-\\uDC34\\uDC47-\\uDC4A\\uDC80-\\uDCAF\\uDCC4\\uDCC5\\uDCC7\\uDD80-\\uDDAE\\uDDD8-\\uDDDB\\uDE00-\\uDE2F\\uDE44\\uDE80-\\uDEAA\\uDF00-\\uDF19]|\\uD806[\\uDCA0-\\uDCDF\\uDCFF\\uDEC0-\\uDEF8]|\\uD807[\\uDC00-\\uDC08\\uDC0A-\\uDC2E\\uDC40\\uDC72-\\uDC8F]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC80-\\uDD43]|[\\uD80C\\uD81C-\\uD820\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDED0-\\uDEED\\uDF00-\\uDF2F\\uDF40-\\uDF43\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDF00-\\uDF44\\uDF50\\uDF93-\\uDF9F\\uDFE0]|\\uD821[\\uDC00-\\uDFEC]|\\uD822[\\uDC00-\\uDEF2]|\\uD82C[\\uDC00\\uDC01]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB]|\\uD83A[\\uDC00-\\uDCC4\\uDD00-\\uDD43]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1]|\\uD87E[\\uDC00-\\uDE1D]/,\n  Ltmo: /[\\u01C5\\u01C8\\u01CB\\u01F2\\u1F88-\\u1F8F\\u1F98-\\u1F9F\\u1FA8-\\u1FAF\\u1FBC\\u1FCC\\u1FFC]|[\\u02B0-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0374\\u037A\\u0559\\u0640\\u06E5\\u06E6\\u07F4\\u07F5\\u07FA\\u081A\\u0824\\u0828\\u0971\\u0E46\\u0EC6\\u10FC\\u17D7\\u1843\\u1AA7\\u1C78-\\u1C7D\\u1D2C-\\u1D6A\\u1D78\\u1D9B-\\u1DBF\\u2071\\u207F\\u2090-\\u209C\\u2C7C\\u2C7D\\u2D6F\\u2E2F\\u3005\\u3031-\\u3035\\u303B\\u309D\\u309E\\u30FC-\\u30FE\\uA015\\uA4F8-\\uA4FD\\uA60C\\uA67F\\uA69C\\uA69D\\uA717-\\uA71F\\uA770\\uA788\\uA7F8\\uA7F9\\uA9CF\\uA9E6\\uAA70\\uAADD\\uAAF3\\uAAF4\\uAB5C-\\uAB5F\\uFF70\\uFF9E\\uFF9F]|\\uD81A[\\uDF40-\\uDF43]|\\uD81B[\\uDF93-\\uDF9F\\uDFE0]|[\\xAA\\xBA\\u01BB\\u01C0-\\u01C3\\u0294\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u063F\\u0641-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u0800-\\u0815\\u0840-\\u0858\\u08A0-\\u08B4\\u08B6-\\u08BD\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0972-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0AF9\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C60\\u0C61\\u0C80\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D54-\\u0D56\\u0D5F-\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E45\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10D0-\\u10FA\\u10FD-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16F1-\\u16F8\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17DC\\u1820-\\u1842\\u1844-\\u1877\\u1880-\\u1884\\u1887-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C77\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u2135-\\u2138\\u2D30-\\u2D67\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u3006\\u303C\\u3041-\\u3096\\u309F\\u30A1-\\u30FA\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FD5\\uA000-\\uA014\\uA016-\\uA48C\\uA4D0-\\uA4F7\\uA500-\\uA60B\\uA610-\\uA61F\\uA62A\\uA62B\\uA66E\\uA6A0-\\uA6E5\\uA78F\\uA7F7\\uA7FB-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9E0-\\uA9E4\\uA9E7-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA6F\\uAA71-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB\\uAADC\\uAAE0-\\uAAEA\\uAAF2\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uABC0-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF66-\\uFF6F\\uFF71-\\uFF9D\\uFFA0-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDF00-\\uDF1F\\uDF30-\\uDF40\\uDF42-\\uDF49\\uDF50-\\uDF75\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF]|\\uD801[\\uDC50-\\uDC9D\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC60-\\uDC76\\uDC80-\\uDC9E\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDD00-\\uDD15\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBE\\uDDBF\\uDE00\\uDE10-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE33\\uDE60-\\uDE7C\\uDE80-\\uDE9C\\uDEC0-\\uDEC7\\uDEC9-\\uDEE4\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF60-\\uDF72\\uDF80-\\uDF91]|\\uD803[\\uDC00-\\uDC48]|\\uD804[\\uDC03-\\uDC37\\uDC83-\\uDCAF\\uDCD0-\\uDCE8\\uDD03-\\uDD26\\uDD50-\\uDD72\\uDD76\\uDD83-\\uDDB2\\uDDC1-\\uDDC4\\uDDDA\\uDDDC\\uDE00-\\uDE11\\uDE13-\\uDE2B\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEDE\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3D\\uDF50\\uDF5D-\\uDF61]|\\uD805[\\uDC00-\\uDC34\\uDC47-\\uDC4A\\uDC80-\\uDCAF\\uDCC4\\uDCC5\\uDCC7\\uDD80-\\uDDAE\\uDDD8-\\uDDDB\\uDE00-\\uDE2F\\uDE44\\uDE80-\\uDEAA\\uDF00-\\uDF19]|\\uD806[\\uDCFF\\uDEC0-\\uDEF8]|\\uD807[\\uDC00-\\uDC08\\uDC0A-\\uDC2E\\uDC40\\uDC72-\\uDC8F]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC80-\\uDD43]|[\\uD80C\\uD81C-\\uD820\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDED0-\\uDEED\\uDF00-\\uDF2F\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDF00-\\uDF44\\uDF50]|\\uD821[\\uDC00-\\uDFEC]|\\uD822[\\uDC00-\\uDEF2]|\\uD82C[\\uDC00\\uDC01]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99]|\\uD83A[\\uDC00-\\uDCC4]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1]|\\uD87E[\\uDC00-\\uDE1D]/\n};\n","'use strict';\n\n// --------------------------------------------------------------------\n// Imports\n// --------------------------------------------------------------------\n\nvar common = require('./common');\nvar pexprs = require('./pexprs');\n\n// --------------------------------------------------------------------\n// Operations\n// --------------------------------------------------------------------\n\n/*\n  Return true if we should skip spaces preceding this expression in a syntactic context.\n*/\npexprs.PExpr.prototype.allowsSkippingPrecedingSpace = common.abstract(\n  'allowsSkippingPrecedingSpace'\n);\n\n/*\n  Generally, these are all first-order expressions and (with the exception of Apply)\n  directly read from the input stream.\n*/\npexprs.any.allowsSkippingPrecedingSpace =\npexprs.end.allowsSkippingPrecedingSpace =\npexprs.Apply.prototype.allowsSkippingPrecedingSpace =\npexprs.Terminal.prototype.allowsSkippingPrecedingSpace =\npexprs.Range.prototype.allowsSkippingPrecedingSpace =\npexprs.UnicodeChar.prototype.allowsSkippingPrecedingSpace = function() {\n  return true;\n};\n\n/*\n  Higher-order expressions that don't directly consume input.\n*/\npexprs.Alt.prototype.allowsSkippingPrecedingSpace =\npexprs.Iter.prototype.allowsSkippingPrecedingSpace =\npexprs.Lex.prototype.allowsSkippingPrecedingSpace =\npexprs.Lookahead.prototype.allowsSkippingPrecedingSpace =\npexprs.Not.prototype.allowsSkippingPrecedingSpace =\npexprs.Param.prototype.allowsSkippingPrecedingSpace =\npexprs.Seq.prototype.allowsSkippingPrecedingSpace = function() {\n  return false;\n};\n","'use strict';\n\n// --------------------------------------------------------------------\n// Imports\n// --------------------------------------------------------------------\n\nvar extend = require('util-extend');\n\n// --------------------------------------------------------------------\n// Private stuff\n// --------------------------------------------------------------------\n\nfunction Namespace() {\n}\nNamespace.prototype = Object.create(null);\n\nNamespace.asNamespace = function(objOrNamespace) {\n  if (objOrNamespace instanceof Namespace) {\n    return objOrNamespace;\n  }\n  return Namespace.createNamespace(objOrNamespace);\n};\n\n// Create a new namespace. If `optProps` is specified, all of its properties\n// will be copied to the new namespace.\nNamespace.createNamespace = function(optProps) {\n  return Namespace.extend(Namespace.prototype, optProps);\n};\n\n// Create a new namespace which extends another namespace. If `optProps` is\n// specified, all of its properties will be copied to the new namespace.\nNamespace.extend = function(namespace, optProps) {\n  if (namespace !== Namespace.prototype && !(namespace instanceof Namespace)) {\n    throw new TypeError('not a Namespace object: ' + namespace);\n  }\n  var ns = Object.create(namespace, {\n    constructor: {\n      value: Namespace,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  return extend(ns, optProps);\n};\n\n// TODO: Should this be a regular method?\nNamespace.toString = function(ns) {\n  return Object.prototype.toString.call(ns);\n};\n\n// --------------------------------------------------------------------\n// Exports\n// --------------------------------------------------------------------\n\nmodule.exports = Namespace;\n","'use strict';\n\n// --------------------------------------------------------------------\n// Imports\n// --------------------------------------------------------------------\n\nvar Namespace = require('./Namespace');\n\n// --------------------------------------------------------------------\n// Private stuff\n// --------------------------------------------------------------------\n\nfunction createError(message, optInterval) {\n  var e;\n  if (optInterval) {\n    e = new Error(optInterval.getLineAndColumnMessage() + message);\n    e.shortMessage = message;\n    e.interval = optInterval;\n  } else {\n    e = new Error(message);\n  }\n  return e;\n}\n\n// ----------------- errors about intervals -----------------\n\nfunction intervalSourcesDontMatch() {\n  return createError(\"Interval sources don't match\");\n}\n\n// ----------------- errors about grammars -----------------\n\n// Grammar syntax error\n\nfunction grammarSyntaxError(matchFailure) {\n  var e = new Error();\n  Object.defineProperty(e, 'message', {get: function() { return matchFailure.message; }});\n  Object.defineProperty(e, 'shortMessage', {get: function() {\n    return 'Expected ' + matchFailure.getExpectedText();\n  }});\n  e.interval = matchFailure.getInterval();\n  return e;\n}\n\n// Undeclared grammar\n\nfunction undeclaredGrammar(grammarName, namespace, interval) {\n  var message = namespace ?\n      'Grammar ' + grammarName + ' is not declared in namespace ' + Namespace.toString(namespace) :\n      'Undeclared grammar ' + grammarName;\n  return createError(message, interval);\n}\n\n// Duplicate grammar declaration\n\nfunction duplicateGrammarDeclaration(grammar, namespace) {\n  return createError('Grammar ' + grammar.name + ' is already declared in this namespace');\n}\n\n// ----------------- rules -----------------\n\n// Undeclared rule\n\nfunction undeclaredRule(ruleName, grammarName, optInterval) {\n  return createError(\n      'Rule ' + ruleName + ' is not declared in grammar ' + grammarName,\n      optInterval);\n}\n\n// Cannot override undeclared rule\n\nfunction cannotOverrideUndeclaredRule(ruleName, grammarName, optSource) {\n  return createError(\n      'Cannot override rule ' + ruleName + ' because it is not declared in ' + grammarName,\n      optSource);\n}\n\n// Cannot extend undeclared rule\n\nfunction cannotExtendUndeclaredRule(ruleName, grammarName, optSource) {\n  return createError(\n      'Cannot extend rule ' + ruleName + ' because it is not declared in ' + grammarName,\n      optSource);\n}\n\n// Duplicate rule declaration\n\nfunction duplicateRuleDeclaration(ruleName, grammarName, declGrammarName, optSource) {\n  var message = \"Duplicate declaration for rule '\" + ruleName +\n      \"' in grammar '\" + grammarName + \"'\";\n  if (grammarName !== declGrammarName) {\n    message += \" (originally declared in '\" + declGrammarName + \"')\";\n  }\n  return createError(message, optSource);\n}\n\n// Wrong number of parameters\n\nfunction wrongNumberOfParameters(ruleName, expected, actual, source) {\n  return createError(\n      'Wrong number of parameters for rule ' + ruleName +\n          ' (expected ' + expected + ', got ' + actual + ')',\n      source);\n}\n\n// Wrong number of arguments\n\nfunction wrongNumberOfArguments(ruleName, expected, actual, expr) {\n  return createError(\n      'Wrong number of arguments for rule ' + ruleName +\n          ' (expected ' + expected + ', got ' + actual + ')',\n      expr.source);\n}\n\n// Duplicate parameter names\n\nfunction duplicateParameterNames(ruleName, duplicates, source) {\n  return createError(\n      'Duplicate parameter names in rule ' + ruleName + ': ' + duplicates.join(', '),\n      source);\n}\n\n// Invalid parameter expression\n\nfunction invalidParameter(ruleName, expr) {\n  return createError(\n      'Invalid parameter to rule ' + ruleName + ': ' + expr + ' has arity ' + expr.getArity() +\n         ', but parameter expressions must have arity 1',\n      expr.source);\n}\n\n// Application of syntactic rule from lexical rule\n\nfunction applicationOfSyntacticRuleFromLexicalContext(ruleName, applyExpr) {\n  return createError(\n      'Cannot apply syntactic rule ' + ruleName + ' from here (inside a lexical context)',\n      applyExpr.source);\n}\n\n// Incorrect argument type\n\nfunction incorrectArgumentType(expectedType, expr) {\n  return createError('Incorrect argument type: expected ' + expectedType, expr.source);\n}\n\n// ----------------- Kleene operators -----------------\n\nfunction kleeneExprHasNullableOperand(kleeneExpr) {\n  return createError(\n      'Nullable expression ' + kleeneExpr.expr.source.contents + \" is not allowed inside '\" +\n          kleeneExpr.operator + \"' (possible infinite loop)\",\n      kleeneExpr.expr.source);\n}\n\n// ----------------- arity -----------------\n\nfunction inconsistentArity(ruleName, expected, actual, expr) {\n  return createError(\n      'Rule ' + ruleName + ' involves an alternation which has inconsistent arity ' +\n          '(expected ' + expected + ', got ' + actual + ')',\n      expr.source);\n}\n\n// ----------------- properties -----------------\n\nfunction duplicatePropertyNames(duplicates) {\n  return createError('Object pattern has duplicate property names: ' + duplicates.join(', '));\n}\n\n// ----------------- constructors -----------------\n\nfunction invalidConstructorCall(grammar, ctorName, children) {\n  return createError(\n      'Attempt to invoke constructor ' + ctorName + ' with invalid or unexpected arguments');\n}\n\n// ----------------- convenience -----------------\n\nfunction multipleErrors(errors) {\n  var messages = errors.map(function(e) { return e.message; });\n  return createError(\n      ['Errors:'].concat(messages).join('\\n- '),\n      errors[0].interval);\n}\n\n// ----------------- semantic -----------------\n\nfunction missingSemanticAction(ctorName, name, type, stack) {\n  var stackTrace = stack.slice(0, -1).map(function(info) {\n    var ans = '  ' + info[0].name + ' > ' + info[1];\n    return info.length === 3\n        ? ans + \" for '\" + info[2] + \"'\"\n        : ans;\n  }).join('\\n');\n  stackTrace += '\\n  ' + name + ' > ' + ctorName;\n\n  var where = type + \" '\" + name + \"'\";\n  var message = \"Missing semantic action for '\" + ctorName + \"' in \" + where + '\\n' +\n                'Action stack (most recent call last):\\n' + stackTrace;\n\n  var e = createError(message);\n  e.name = 'missingSemanticAction';\n  return e;\n}\n\n// --------------------------------------------------------------------\n// Exports\n// --------------------------------------------------------------------\n\nmodule.exports = {\n  applicationOfSyntacticRuleFromLexicalContext: applicationOfSyntacticRuleFromLexicalContext,\n  cannotExtendUndeclaredRule: cannotExtendUndeclaredRule,\n  cannotOverrideUndeclaredRule: cannotOverrideUndeclaredRule,\n  duplicateGrammarDeclaration: duplicateGrammarDeclaration,\n  duplicateParameterNames: duplicateParameterNames,\n  duplicatePropertyNames: duplicatePropertyNames,\n  duplicateRuleDeclaration: duplicateRuleDeclaration,\n  inconsistentArity: inconsistentArity,\n  incorrectArgumentType: incorrectArgumentType,\n  intervalSourcesDontMatch: intervalSourcesDontMatch,\n  invalidConstructorCall: invalidConstructorCall,\n  invalidParameter: invalidParameter,\n  grammarSyntaxError: grammarSyntaxError,\n  kleeneExprHasNullableOperand: kleeneExprHasNullableOperand,\n  missingSemanticAction: missingSemanticAction,\n  undeclaredGrammar: undeclaredGrammar,\n  undeclaredRule: undeclaredRule,\n  wrongNumberOfArguments: wrongNumberOfArguments,\n  wrongNumberOfParameters: wrongNumberOfParameters,\n\n  throwErrors: function(errors) {\n    if (errors.length === 1) {\n      throw errors[0];\n    }\n    if (errors.length > 1) {\n      throw multipleErrors(errors);\n    }\n  }\n};\n","'use strict';\n\n// --------------------------------------------------------------------\n// Imports\n// --------------------------------------------------------------------\n\nvar common = require('./common');\n\n// --------------------------------------------------------------------\n// Private stuff\n// --------------------------------------------------------------------\n\n// Given an array of numbers `arr`, return an array of the numbers as strings,\n// right-justified and padded to the same length.\nfunction padNumbersToEqualLength(arr) {\n  var maxLen = 0;\n  var strings = arr.map(function(n) {\n    var str = n.toString();\n    maxLen = Math.max(maxLen, str.length);\n    return str;\n  });\n  return strings.map(function(s) { return common.padLeft(s, maxLen); });\n}\n\n// Produce a new string that would be the result of copying the contents\n// of the string `src` onto `dest` at offset `offest`.\nfunction strcpy(dest, src, offset) {\n  var origDestLen = dest.length;\n  var start = dest.slice(0, offset);\n  var end = dest.slice(offset + src.length);\n  return (start + src + end).substr(0, origDestLen);\n}\n\n// --------------------------------------------------------------------\n// Exports\n// --------------------------------------------------------------------\n\nvar builtInRulesCallbacks = [];\n\n// Since Grammar.BuiltInRules is bootstrapped, most of Ohm can't directly depend it.\n// This function allows modules that do depend on the built-in rules to register a callback\n// that will be called later in the initialization process.\nexports.awaitBuiltInRules = function(cb) {\n  builtInRulesCallbacks.push(cb);\n};\n\nexports.announceBuiltInRules = function(grammar) {\n  builtInRulesCallbacks.forEach(function(cb) {\n    cb(grammar);\n  });\n  builtInRulesCallbacks = null;\n};\n\n// Return an object with the line and column information for the given\n// offset in `str`.\nexports.getLineAndColumn = function(str, offset) {\n  var lineNum = 1;\n  var colNum = 1;\n\n  var currOffset = 0;\n  var lineStartOffset = 0;\n\n  var nextLine = null;\n  var prevLine = null;\n  var prevLineStartOffset = -1;\n\n  while (currOffset < offset) {\n    var c = str.charAt(currOffset++);\n    if (c === '\\n') {\n      lineNum++;\n      colNum = 1;\n      prevLineStartOffset = lineStartOffset;\n      lineStartOffset = currOffset;\n    } else if (c !== '\\r') {\n      colNum++;\n    }\n  }\n\n  // Find the end of the target line.\n  var lineEndOffset = str.indexOf('\\n', lineStartOffset);\n  if (lineEndOffset === -1) {\n    lineEndOffset = str.length;\n  } else {\n    // Get the next line.\n    var nextLineEndOffset = str.indexOf('\\n', lineEndOffset + 1);\n    nextLine = nextLineEndOffset === -1 ? str.slice(lineEndOffset)\n                                        : str.slice(lineEndOffset, nextLineEndOffset);\n    // Strip leading and trailing EOL char(s).\n    nextLine = nextLine.replace(/^\\r?\\n/, '').replace(/\\r$/, '');\n  }\n\n  // Get the previous line.\n  if (prevLineStartOffset >= 0) {\n    prevLine = str.slice(prevLineStartOffset, lineStartOffset)\n                  .replace(/\\r?\\n$/, '');  // Strip trailing EOL char(s).\n  }\n\n  // Get the target line, stripping a trailing carriage return if necessary.\n  var line = str.slice(lineStartOffset, lineEndOffset).replace(/\\r$/, '');\n\n  return {\n    lineNum: lineNum,\n    colNum: colNum,\n    line: line,\n    prevLine: prevLine,\n    nextLine: nextLine\n  };\n};\n\n// Return a nicely-formatted string describing the line and column for the\n// given offset in `str`.\nexports.getLineAndColumnMessage = function(str, offset /* ...ranges */) {\n  var repeatStr = common.repeatStr;\n\n  var lineAndCol = exports.getLineAndColumn(str, offset);\n  var sb = new common.StringBuffer();\n  sb.append('Line ' + lineAndCol.lineNum + ', col ' + lineAndCol.colNum + ':\\n');\n\n  // An array of the previous, current, and next line numbers as strings of equal length.\n  var lineNumbers = padNumbersToEqualLength([\n    lineAndCol.prevLine == null ? 0 : lineAndCol.lineNum - 1,\n    lineAndCol.lineNum,\n    lineAndCol.nextLine == null ? 0 : lineAndCol.lineNum + 1\n  ]);\n\n  // Helper for appending formatting input lines to the buffer.\n  function appendLine(num, content, prefix) {\n    sb.append(prefix + lineNumbers[num] + ' | ' + content + '\\n');\n  }\n\n  // Include the previous line for context if possible.\n  if (lineAndCol.prevLine != null) {\n    appendLine(0, lineAndCol.prevLine, '  ');\n  }\n  // Line that the error occurred on.\n  appendLine(1, lineAndCol.line, '> ');\n\n  // Build up the line that points to the offset and possible indicates one or more ranges.\n  // Start with a blank line, and indicate each range by overlaying a string of `~` chars.\n  var lineLen = lineAndCol.line.length;\n  var indicationLine = repeatStr(' ', lineLen + 1);\n  var ranges = Array.prototype.slice.call(arguments, 2);\n  for (var i = 0; i < ranges.length; ++i) {\n    var startIdx = ranges[i][0];\n    var endIdx = ranges[i][1];\n    common.assert(startIdx >= 0 && startIdx <= endIdx, 'range start must be >= 0 and <= end');\n\n    var lineStartOffset = offset - lineAndCol.colNum + 1;\n    startIdx = Math.max(0, startIdx - lineStartOffset);\n    endIdx = Math.min(endIdx - lineStartOffset, lineLen);\n\n    indicationLine = strcpy(indicationLine, repeatStr('~', endIdx - startIdx), startIdx);\n  }\n  var gutterWidth = 2 + lineNumbers[1].length + 3;\n  sb.append(repeatStr(' ', gutterWidth));\n  indicationLine = strcpy(indicationLine, '^', lineAndCol.colNum - 1);\n  sb.append(indicationLine.replace(/ +$/, '') + '\\n');\n\n  // Include the next line for context if possible.\n  if (lineAndCol.nextLine != null) {\n    appendLine(2, lineAndCol.nextLine, '  ');\n  }\n  return sb.contents();\n};\n","'use strict';\n\n// --------------------------------------------------------------------\n// Imports\n// --------------------------------------------------------------------\n\nvar common = require('./common');\nvar errors = require('./errors');\nvar pexprs = require('./pexprs');\nvar util = require('./util');\n\nvar BuiltInRules;\n\nutil.awaitBuiltInRules(function(g) { BuiltInRules = g; });\n\n// --------------------------------------------------------------------\n// Operations\n// --------------------------------------------------------------------\n\nvar lexifyCount;\n\npexprs.PExpr.prototype.assertAllApplicationsAreValid = function(ruleName, grammar) {\n  lexifyCount = 0;\n  this._assertAllApplicationsAreValid(ruleName, grammar);\n};\n\npexprs.PExpr.prototype._assertAllApplicationsAreValid = common.abstract(\n  '_assertAllApplicationsAreValid'\n);\n\npexprs.any._assertAllApplicationsAreValid =\npexprs.end._assertAllApplicationsAreValid =\npexprs.Terminal.prototype._assertAllApplicationsAreValid =\npexprs.Range.prototype._assertAllApplicationsAreValid =\npexprs.Param.prototype._assertAllApplicationsAreValid =\npexprs.UnicodeChar.prototype._assertAllApplicationsAreValid = function(ruleName, grammar) {\n  // no-op\n};\n\npexprs.Lex.prototype._assertAllApplicationsAreValid = function(ruleName, grammar) {\n  lexifyCount++;\n  this.expr._assertAllApplicationsAreValid(ruleName, grammar);\n  lexifyCount--;\n};\n\npexprs.Alt.prototype._assertAllApplicationsAreValid = function(ruleName, grammar) {\n  for (var idx = 0; idx < this.terms.length; idx++) {\n    this.terms[idx]._assertAllApplicationsAreValid(ruleName, grammar);\n  }\n};\n\npexprs.Seq.prototype._assertAllApplicationsAreValid = function(ruleName, grammar) {\n  for (var idx = 0; idx < this.factors.length; idx++) {\n    this.factors[idx]._assertAllApplicationsAreValid(ruleName, grammar);\n  }\n};\n\npexprs.Iter.prototype._assertAllApplicationsAreValid =\npexprs.Not.prototype._assertAllApplicationsAreValid =\npexprs.Lookahead.prototype._assertAllApplicationsAreValid = function(ruleName, grammar) {\n  this.expr._assertAllApplicationsAreValid(ruleName, grammar);\n};\n\npexprs.Apply.prototype._assertAllApplicationsAreValid = function(ruleName, grammar) {\n  var ruleInfo = grammar.rules[this.ruleName];\n\n  // Make sure that the rule exists...\n  if (!ruleInfo) {\n    throw errors.undeclaredRule(this.ruleName, grammar.name, this.source);\n  }\n\n  // ...and that this application is allowed\n  if (common.isSyntactic(this.ruleName) && (!common.isSyntactic(ruleName) || lexifyCount > 0)) {\n    throw errors.applicationOfSyntacticRuleFromLexicalContext(this.ruleName, this);\n  }\n\n  // ...and that this application has the correct number of arguments\n  var actual = this.args.length;\n  var expected = ruleInfo.formals.length;\n  if (actual !== expected) {\n    throw errors.wrongNumberOfArguments(this.ruleName, expected, actual, this.source);\n  }\n\n  // ...and that all of the argument expressions only have valid applications and have arity 1.\n  var self = this;\n  this.args.forEach(function(arg) {\n    arg._assertAllApplicationsAreValid(ruleName, grammar);\n    if (arg.getArity() !== 1) {\n      throw errors.invalidParameter(self.ruleName, arg);\n    }\n  });\n\n  // Extra checks for \"special\" applications\n\n  // If it's an application of 'caseInsensitive', ensure that the argument is a Terminal.\n  if (BuiltInRules && ruleInfo === BuiltInRules.rules.caseInsensitive) {\n    if (!(this.args[0] instanceof pexprs.Terminal)) {\n      throw errors.incorrectArgumentType('a Terminal (e.g. \\\"abc\\\")', this.args[0]);\n    }\n  }\n};\n","'use strict';\n\n// --------------------------------------------------------------------\n// Imports\n// --------------------------------------------------------------------\n\nvar common = require('./common');\nvar errors = require('./errors');\nvar pexprs = require('./pexprs');\n\n// --------------------------------------------------------------------\n// Operations\n// --------------------------------------------------------------------\n\npexprs.PExpr.prototype.assertChoicesHaveUniformArity = common.abstract(\n  'assertChoicesHaveUniformArity'\n);\n\npexprs.any.assertChoicesHaveUniformArity =\npexprs.end.assertChoicesHaveUniformArity =\npexprs.Terminal.prototype.assertChoicesHaveUniformArity =\npexprs.Range.prototype.assertChoicesHaveUniformArity =\npexprs.Param.prototype.assertChoicesHaveUniformArity =\npexprs.Lex.prototype.assertChoicesHaveUniformArity =\npexprs.UnicodeChar.prototype.assertChoicesHaveUniformArity = function(ruleName) {\n  // no-op\n};\n\npexprs.Alt.prototype.assertChoicesHaveUniformArity = function(ruleName) {\n  if (this.terms.length === 0) {\n    return;\n  }\n  var arity = this.terms[0].getArity();\n  for (var idx = 0; idx < this.terms.length; idx++) {\n    var term = this.terms[idx];\n    term.assertChoicesHaveUniformArity();\n    var otherArity = term.getArity();\n    if (arity !== otherArity) {\n      throw errors.inconsistentArity(ruleName, arity, otherArity, term);\n    }\n  }\n};\n\npexprs.Extend.prototype.assertChoicesHaveUniformArity = function(ruleName) {\n  // Extend is a special case of Alt that's guaranteed to have exactly two\n  // cases: [extensions, origBody].\n  var actualArity = this.terms[0].getArity();\n  var expectedArity = this.terms[1].getArity();\n  if (actualArity !== expectedArity) {\n    throw errors.inconsistentArity(ruleName, expectedArity, actualArity, this.terms[0]);\n  }\n};\n\npexprs.Seq.prototype.assertChoicesHaveUniformArity = function(ruleName) {\n  for (var idx = 0; idx < this.factors.length; idx++) {\n    this.factors[idx].assertChoicesHaveUniformArity(ruleName);\n  }\n};\n\npexprs.Iter.prototype.assertChoicesHaveUniformArity = function(ruleName) {\n  this.expr.assertChoicesHaveUniformArity(ruleName);\n};\n\npexprs.Not.prototype.assertChoicesHaveUniformArity = function(ruleName) {\n  // no-op (not required b/c the nested expr doesn't show up in the CST)\n};\n\npexprs.Lookahead.prototype.assertChoicesHaveUniformArity = function(ruleName) {\n  this.expr.assertChoicesHaveUniformArity(ruleName);\n};\n\npexprs.Apply.prototype.assertChoicesHaveUniformArity = function(ruleName) {\n  // The arities of the parameter expressions is required to be 1 by\n  // `assertAllApplicationsAreValid()`.\n};\n","'use strict';\n\n// --------------------------------------------------------------------\n// Imports\n// --------------------------------------------------------------------\n\nvar common = require('./common');\nvar errors = require('./errors');\nvar pexprs = require('./pexprs');\n\n// --------------------------------------------------------------------\n// Operations\n// --------------------------------------------------------------------\n\npexprs.PExpr.prototype.assertIteratedExprsAreNotNullable = common.abstract(\n  'assertIteratedExprsAreNotNullable'\n);\n\npexprs.any.assertIteratedExprsAreNotNullable =\npexprs.end.assertIteratedExprsAreNotNullable =\npexprs.Terminal.prototype.assertIteratedExprsAreNotNullable =\npexprs.Range.prototype.assertIteratedExprsAreNotNullable =\npexprs.Param.prototype.assertIteratedExprsAreNotNullable =\npexprs.UnicodeChar.prototype.assertIteratedExprsAreNotNullable = function(grammar, ruleName) {\n  // no-op\n};\n\npexprs.Alt.prototype.assertIteratedExprsAreNotNullable = function(grammar, ruleName) {\n  for (var idx = 0; idx < this.terms.length; idx++) {\n    this.terms[idx].assertIteratedExprsAreNotNullable(grammar, ruleName);\n  }\n};\n\npexprs.Seq.prototype.assertIteratedExprsAreNotNullable = function(grammar, ruleName) {\n  for (var idx = 0; idx < this.factors.length; idx++) {\n    this.factors[idx].assertIteratedExprsAreNotNullable(grammar, ruleName);\n  }\n};\n\npexprs.Iter.prototype.assertIteratedExprsAreNotNullable = function(grammar, ruleName) {\n  // Note: this is the implementation of this method for `Star` and `Plus` expressions.\n  // It is overridden for `Opt` below.\n  this.expr.assertIteratedExprsAreNotNullable(grammar, ruleName);\n  if (this.expr.isNullable(grammar)) {\n    throw errors.kleeneExprHasNullableOperand(this, ruleName);\n  }\n};\n\npexprs.Opt.prototype.assertIteratedExprsAreNotNullable =\npexprs.Not.prototype.assertIteratedExprsAreNotNullable =\npexprs.Lookahead.prototype.assertIteratedExprsAreNotNullable =\npexprs.Lex.prototype.assertIteratedExprsAreNotNullable = function(grammar, ruleName) {\n  this.expr.assertIteratedExprsAreNotNullable(grammar, ruleName);\n};\n\npexprs.Apply.prototype.assertIteratedExprsAreNotNullable = function(grammar, ruleName) {\n  this.args.forEach(function(arg) {\n    arg.assertIteratedExprsAreNotNullable(grammar, ruleName);\n  });\n};\n","'use strict';\n\n// --------------------------------------------------------------------\n// Imports\n// --------------------------------------------------------------------\n\nvar common = require('./common');\nvar nodes = require('./nodes');\nvar pexprs = require('./pexprs');\n\n// --------------------------------------------------------------------\n// Operations\n// --------------------------------------------------------------------\n\npexprs.PExpr.prototype.check = common.abstract('check');\n\npexprs.any.check = function(grammar, vals) {\n  return vals.length >= 1;\n};\n\npexprs.end.check = function(grammar, vals) {\n  return vals[0] instanceof nodes.Node &&\n         vals[0].isTerminal() &&\n         vals[0].primitiveValue === undefined;\n};\n\npexprs.Terminal.prototype.check = function(grammar, vals) {\n  return vals[0] instanceof nodes.Node &&\n         vals[0].isTerminal() &&\n         vals[0].primitiveValue === this.obj;\n};\n\npexprs.Range.prototype.check = function(grammar, vals) {\n  return vals[0] instanceof nodes.Node &&\n         vals[0].isTerminal() &&\n         typeof vals[0].primitiveValue === typeof this.from;\n};\n\npexprs.Param.prototype.check = function(grammar, vals) {\n  return vals.length >= 1;\n};\n\npexprs.Alt.prototype.check = function(grammar, vals) {\n  for (var i = 0; i < this.terms.length; i++) {\n    var term = this.terms[i];\n    if (term.check(grammar, vals)) {\n      return true;\n    }\n  }\n  return false;\n};\n\npexprs.Seq.prototype.check = function(grammar, vals) {\n  var pos = 0;\n  for (var i = 0; i < this.factors.length; i++) {\n    var factor = this.factors[i];\n    if (factor.check(grammar, vals.slice(pos))) {\n      pos += factor.getArity();\n    } else {\n      return false;\n    }\n  }\n  return true;\n};\n\npexprs.Iter.prototype.check = function(grammar, vals) {\n  var arity = this.getArity();\n  var columns = vals.slice(0, arity);\n  if (columns.length !== arity) {\n    return false;\n  }\n  var rowCount = columns[0].length;\n  var i;\n  for (i = 1; i < arity; i++) {\n    if (columns[i].length !== rowCount) {\n      return false;\n    }\n  }\n\n  for (i = 0; i < rowCount; i++) {\n    var row = [];\n    for (var j = 0; j < arity; j++) {\n      row.push(columns[j][i]);\n    }\n    if (!this.expr.check(grammar, row)) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\npexprs.Not.prototype.check = function(grammar, vals) {\n  return true;\n};\n\npexprs.Lookahead.prototype.check =\npexprs.Lex.prototype.check = function(grammar, vals) {\n  return this.expr.check(grammar, vals);\n};\n\npexprs.Apply.prototype.check = function(grammar, vals) {\n  if (!(vals[0] instanceof nodes.Node &&\n        vals[0].grammar === grammar &&\n        vals[0].ctorName === this.ruleName)) {\n    return false;\n  }\n\n  // TODO: think about *not* doing the following checks, i.e., trusting that the rule\n  // was correctly constructed.\n  var ruleNode = vals[0];\n  var body = grammar.rules[this.ruleName].body;\n  return body.check(grammar, ruleNode.children) && ruleNode.numChildren() === body.getArity();\n};\n\npexprs.UnicodeChar.prototype.check = function(grammar, vals) {\n  return vals[0] instanceof nodes.Node &&\n         vals[0].isTerminal() &&\n         typeof vals[0].primitiveValue === 'string';\n};\n","'use strict';\n\n// --------------------------------------------------------------------\n// Imports\n// --------------------------------------------------------------------\n\nvar assert = require('./common').assert;\nvar errors = require('./errors');\nvar util = require('./util');\n\n// --------------------------------------------------------------------\n// Private stuff\n// --------------------------------------------------------------------\n\nfunction Interval(sourceString, startIdx, endIdx) {\n  this.sourceString = sourceString;\n  this.startIdx = startIdx;\n  this.endIdx = endIdx;\n}\n\nInterval.coverage = function(/* interval1, interval2, ... */) {\n  var sourceString = arguments[0].sourceString;\n  var startIdx = arguments[0].startIdx;\n  var endIdx = arguments[0].endIdx;\n  for (var idx = 1; idx < arguments.length; idx++) {\n    var interval = arguments[idx];\n    if (interval.sourceString !== sourceString) {\n      throw errors.intervalSourcesDontMatch();\n    } else {\n      startIdx = Math.min(startIdx, arguments[idx].startIdx);\n      endIdx = Math.max(endIdx, arguments[idx].endIdx);\n    }\n  }\n  return new Interval(sourceString, startIdx, endIdx);\n};\n\nInterval.prototype = {\n  coverageWith: function(/* interval1, interval2, ... */) {\n    var intervals = Array.prototype.slice.call(arguments);\n    intervals.push(this);\n    return Interval.coverage.apply(undefined, intervals);\n  },\n\n  collapsedLeft: function() {\n    return new Interval(this.sourceString, this.startIdx, this.startIdx);\n  },\n\n  collapsedRight: function() {\n    return new Interval(this.sourceString, this.endIdx, this.endIdx);\n  },\n\n  getLineAndColumnMessage: function() {\n    var range = [this.startIdx, this.endIdx];\n    return util.getLineAndColumnMessage(this.sourceString, this.startIdx, range);\n  },\n\n  // Returns an array of 0, 1, or 2 intervals that represents the result of the\n  // interval difference operation.\n  minus: function(that) {\n    if (this.sourceString !== that.sourceString) {\n      throw errors.intervalSourcesDontMatch();\n    } else if (this.startIdx === that.startIdx && this.endIdx === that.endIdx) {\n      // `this` and `that` are the same interval!\n      return [\n      ];\n    } else if (this.startIdx < that.startIdx && that.endIdx < this.endIdx) {\n      // `that` splits `this` into two intervals\n      return [\n        new Interval(this.sourceString, this.startIdx, that.startIdx),\n        new Interval(this.sourceString, that.endIdx, this.endIdx)\n      ];\n    } else if (this.startIdx < that.endIdx && that.endIdx < this.endIdx) {\n      // `that` contains a prefix of `this`\n      return [\n        new Interval(this.sourceString, that.endIdx, this.endIdx)\n      ];\n    } else if (this.startIdx < that.startIdx && that.startIdx < this.endIdx) {\n      // `that` contains a suffix of `this`\n      return [\n        new Interval(this.sourceString, this.startIdx, that.startIdx)\n      ];\n    } else {\n      // `that` and `this` do not overlap\n      return [\n        this\n      ];\n    }\n  },\n\n  // Returns a new Interval that has the same extent as this one, but which is relative\n  // to `that`, an Interval that fully covers this one.\n  relativeTo: function(that) {\n    if (this.sourceString !== that.sourceString) {\n      throw errors.intervalSourcesDontMatch();\n    }\n    assert(this.startIdx >= that.startIdx && this.endIdx <= that.endIdx,\n           'other interval does not cover this one');\n    return new Interval(this.sourceString,\n                        this.startIdx - that.startIdx,\n                        this.endIdx - that.startIdx);\n  },\n\n  // Returns a new Interval which contains the same contents as this one,\n  // but with whitespace trimmed from both ends. (This only makes sense when\n  // the input stream is a string.)\n  trimmed: function() {\n    var contents = this.contents;\n    var startIdx = this.startIdx + contents.match(/^\\s*/)[0].length;\n    var endIdx = this.endIdx - contents.match(/\\s*$/)[0].length;\n    return new Interval(this.sourceString, startIdx, endIdx);\n  },\n\n  subInterval: function(offset, len) {\n    var newStartIdx = this.startIdx + offset;\n    return new Interval(this.sourceString, newStartIdx, newStartIdx + len);\n  }\n};\n\nObject.defineProperties(Interval.prototype, {\n  contents: {\n    get: function() {\n      if (this._contents === undefined) {\n        this._contents = this.sourceString.slice(this.startIdx, this.endIdx);\n      }\n      return this._contents;\n    },\n    enumerable: true\n  },\n  length: {\n    get: function() { return this.endIdx - this.startIdx; },\n    enumerable: true\n  }\n});\n\n// --------------------------------------------------------------------\n// Exports\n// --------------------------------------------------------------------\n\nmodule.exports = Interval;\n\n","'use strict';\n\n// --------------------------------------------------------------------\n// Imports\n// --------------------------------------------------------------------\n\nvar Interval = require('./Interval');\nvar common = require('./common');\n\n// --------------------------------------------------------------------\n// Private stuff\n// --------------------------------------------------------------------\n\n// Unicode characters that are used in the `toString` output.\nvar BALLOT_X = '\\u2717';\nvar CHECK_MARK = '\\u2713';\nvar DOT_OPERATOR = '\\u22C5';\nvar RIGHTWARDS_DOUBLE_ARROW = '\\u21D2';\nvar SYMBOL_FOR_HORIZONTAL_TABULATION = '\\u2409';\nvar SYMBOL_FOR_LINE_FEED = '\\u240A';\nvar SYMBOL_FOR_CARRIAGE_RETURN = '\\u240D';\n\nvar Flags = {\n  succeeded: 1 << 0,\n  isRootNode: 1 << 1,\n  isImplicitSpaces: 1 << 2,\n  isMemoized: 1 << 3,\n  isHeadOfLeftRecursion: 1 << 4,\n  terminatesLR: 1 << 5\n};\n\nfunction spaces(n) {\n  return common.repeat(' ', n).join('');\n}\n\n// Return a string representation of a portion of `input` at offset `pos`.\n// The result will contain exactly `len` characters.\nfunction getInputExcerpt(input, pos, len) {\n  var excerpt = asEscapedString(input.slice(pos, pos + len));\n\n  // Pad the output if necessary.\n  if (excerpt.length < len) {\n    return excerpt + common.repeat(' ', len - excerpt.length).join('');\n  }\n  return excerpt;\n}\n\nfunction asEscapedString(obj) {\n  if (typeof obj === 'string') {\n    // Replace non-printable characters with visible symbols.\n    return obj\n        .replace(/ /g, DOT_OPERATOR)\n        .replace(/\\t/g, SYMBOL_FOR_HORIZONTAL_TABULATION)\n        .replace(/\\n/g, SYMBOL_FOR_LINE_FEED)\n        .replace(/\\r/g, SYMBOL_FOR_CARRIAGE_RETURN);\n  }\n  return String(obj);\n}\n\n// ----------------- Trace -----------------\n\nfunction Trace(input, pos1, pos2, expr, succeeded, bindings, optChildren) {\n  this.input = input;\n  this.pos = this.pos1 = pos1;\n  this.pos2 = pos2;\n  this.source = new Interval(input, pos1, pos2);\n  this.expr = expr;\n  this.bindings = bindings;\n  this.children = optChildren || [];\n  this.terminatingLREntry = null;\n\n  this._flags = succeeded ? Flags.succeeded : 0;\n}\n\n// A value that can be returned from visitor functions to indicate that a\n// node should not be recursed into.\nTrace.prototype.SKIP = {};\n\nObject.defineProperty(Trace.prototype, 'displayString', {\n  get: function() { return this.expr.toDisplayString(); }\n});\n\n// For convenience, create a getter and setter for the boolean flags in `Flags`.\nObject.keys(Flags).forEach(function(name) {\n  var mask = Flags[name];\n  Object.defineProperty(Trace.prototype, name, {\n    get: function() {\n      return (this._flags & mask) !== 0;\n    },\n    set: function(val) {\n      if (val) {\n        this._flags |= mask;\n      } else {\n        this._flags &= ~mask;\n      }\n    }\n  });\n});\n\nTrace.prototype.clone = function() {\n  return this.cloneWithExpr(this.expr);\n};\n\nTrace.prototype.cloneWithExpr = function(expr) {\n  var ans = new Trace(\n      this.input, this.pos, this.pos2, expr, this.succeeded, this.bindings, this.children);\n\n  ans.isHeadOfLeftRecursion = this.isHeadOfLeftRecursion;\n  ans.isImplicitSpaces = this.isImplicitSpaces;\n  ans.isMemoized = this.isMemoized;\n  ans.isRootNode = this.isRootNode;\n  ans.terminatesLR = this.terminatesLR;\n  ans.terminatingLREntry = this.terminatingLREntry;\n  return ans;\n};\n\n// Record the trace information for the terminating condition of the LR loop.\nTrace.prototype.recordLRTermination = function(ruleBodyTrace, value) {\n  this.terminatingLREntry =\n      new Trace(this.input, this.pos, this.pos2, this.expr, false, [value], [ruleBodyTrace]);\n  this.terminatingLREntry.terminatesLR = true;\n};\n\n// Recursively traverse this trace node and all its descendents, calling a visitor function\n// for each node that is visited. If `vistorObjOrFn` is an object, then its 'enter' property\n// is a function to call before visiting the children of a node, and its 'exit' property is\n// a function to call afterwards. If `visitorObjOrFn` is a function, it represents the 'enter'\n// function.\n//\n// The functions are called with three arguments: the Trace node, its parent Trace, and a number\n// representing the depth of the node in the tree. (The root node has depth 0.) `optThisArg`, if\n// specified, is the value to use for `this` when executing the visitor functions.\nTrace.prototype.walk = function(visitorObjOrFn, optThisArg) {\n  var visitor = visitorObjOrFn;\n  if (typeof visitor === 'function') {\n    visitor = {enter: visitor};\n  }\n\n  function _walk(node, parent, depth) {\n    var recurse = true;\n    if (visitor.enter) {\n      if (visitor.enter.call(optThisArg, node, parent, depth) === Trace.prototype.SKIP) {\n        recurse = false;\n      }\n    }\n    if (recurse) {\n      node.children.forEach(function(child) {\n        _walk(child, node, depth + 1);\n      });\n      if (visitor.exit) {\n        visitor.exit.call(optThisArg, node, parent, depth);\n      }\n    }\n  }\n  if (this.isRootNode) {\n    // Don't visit the root node itself, only its children.\n    this.children.forEach(function(c) { _walk(c, null, 0); });\n  } else {\n    _walk(this, null, 0);\n  }\n};\n\n// Return a string representation of the trace.\n// Sample:\n//     12⋅+⋅2⋅*⋅3 ✓ exp ⇒  \"12\"\n//     12⋅+⋅2⋅*⋅3   ✓ addExp (LR) ⇒  \"12\"\n//     12⋅+⋅2⋅*⋅3       ✗ addExp_plus\nTrace.prototype.toString = function() {\n  var sb = new common.StringBuffer();\n  this.walk(function(node, parent, depth) {\n    if (!node) {\n      return this.SKIP;\n    }\n    var ctorName = node.expr.constructor.name;\n    // Don't print anything for Alt nodes.\n    if (ctorName === 'Alt') {\n      return;  // eslint-disable-line consistent-return\n    }\n    sb.append(getInputExcerpt(node.input, node.pos, 10) + spaces(depth * 2 + 1));\n    sb.append((node.succeeded ? CHECK_MARK : BALLOT_X) + ' ' + node.displayString);\n    if (node.isHeadOfLeftRecursion) {\n      sb.append(' (LR)');\n    }\n    if (node.succeeded) {\n      var contents = asEscapedString(node.source.contents);\n      sb.append(' ' + RIGHTWARDS_DOUBLE_ARROW + '  ');\n      sb.append(typeof contents === 'string' ? '\"' + contents + '\"' : contents);\n    }\n    sb.append('\\n');\n  }.bind(this));\n  return sb.contents();\n};\n\n// --------------------------------------------------------------------\n// Exports\n// --------------------------------------------------------------------\n\nmodule.exports = Trace;\n","'use strict';\n\n// --------------------------------------------------------------------\n// Imports\n// --------------------------------------------------------------------\n\nvar Trace = require('./Trace');\nvar common = require('./common');\nvar nodes = require('./nodes');\nvar pexprs = require('./pexprs');\n\nvar TerminalNode = nodes.TerminalNode;\nvar NonterminalNode = nodes.NonterminalNode;\nvar IterationNode = nodes.IterationNode;\n\n// --------------------------------------------------------------------\n// Operations\n// --------------------------------------------------------------------\n\n/*\n  Evaluate the expression and return `true` if it succeeds, `false` otherwise. This method should\n  only be called directly by `State.prototype.eval(expr)`, which also updates the data structures\n  that are used for tracing. (Making those updates in a method of `State` enables the trace-specific\n  data structures to be \"secrets\" of that class, which is good for modularity.)\n\n  The contract of this method is as follows:\n  * When the return value is `true`,\n    - the state object will have `expr.getArity()` more bindings than it did before the call.\n  * When the return value is `false`,\n    - the state object may have more bindings than it did before the call, and\n    - its input stream's position may be anywhere.\n\n  Note that `State.prototype.eval(expr)`, unlike this method, guarantees that neither the state\n  object's bindings nor its input stream's position will change if the expression fails to match.\n*/\npexprs.PExpr.prototype.eval = common.abstract('eval');  // function(state) { ... }\n\npexprs.any.eval = function(state) {\n  var inputStream = state.inputStream;\n  var origPos = inputStream.pos;\n  var ch = inputStream.next();\n  if (ch) {\n    state.pushBinding(new TerminalNode(state.grammar, ch), origPos);\n    return true;\n  } else {\n    state.processFailure(origPos, this);\n    return false;\n  }\n};\n\npexprs.end.eval = function(state) {\n  var inputStream = state.inputStream;\n  var origPos = inputStream.pos;\n  if (inputStream.atEnd()) {\n    state.pushBinding(new TerminalNode(state.grammar, undefined), origPos);\n    return true;\n  } else {\n    state.processFailure(origPos, this);\n    return false;\n  }\n};\n\npexprs.Terminal.prototype.eval = function(state) {\n  var inputStream = state.inputStream;\n  var origPos = inputStream.pos;\n  if (!inputStream.matchString(this.obj)) {\n    state.processFailure(origPos, this);\n    return false;\n  } else {\n    state.pushBinding(new TerminalNode(state.grammar, this.obj), origPos);\n    return true;\n  }\n};\n\npexprs.Range.prototype.eval = function(state) {\n  var inputStream = state.inputStream;\n  var origPos = inputStream.pos;\n  var ch = inputStream.next();\n  if (ch && this.from <= ch && ch <= this.to) {\n    state.pushBinding(new TerminalNode(state.grammar, ch), origPos);\n    return true;\n  } else {\n    state.processFailure(origPos, this);\n    return false;\n  }\n};\n\npexprs.Param.prototype.eval = function(state) {\n  return state.eval(state.currentApplication().args[this.index]);\n};\n\npexprs.Lex.prototype.eval = function(state) {\n  state.enterLexifiedContext();\n  var ans = state.eval(this.expr);\n  state.exitLexifiedContext();\n  return ans;\n};\n\npexprs.Alt.prototype.eval = function(state) {\n  for (var idx = 0; idx < this.terms.length; idx++) {\n    if (state.eval(this.terms[idx])) {\n      return true;\n    }\n  }\n  return false;\n};\n\npexprs.Seq.prototype.eval = function(state) {\n  for (var idx = 0; idx < this.factors.length; idx++) {\n    var factor = this.factors[idx];\n    if (!state.eval(factor)) {\n      return false;\n    }\n  }\n  return true;\n};\n\npexprs.Iter.prototype.eval = function(state) {\n  var inputStream = state.inputStream;\n  var origPos = inputStream.pos;\n  var arity = this.getArity();\n  var cols = [];\n  var colOffsets = [];\n  while (cols.length < arity) {\n    cols.push([]);\n    colOffsets.push([]);\n  }\n\n  var numMatches = 0;\n  var idx;\n  while (numMatches < this.maxNumMatches && state.eval(this.expr)) {\n    numMatches++;\n    var row = state._bindings.splice(state._bindings.length - arity, arity);\n    var rowOffsets = state._bindingOffsets.splice(state._bindingOffsets.length - arity, arity);\n    for (idx = 0; idx < row.length; idx++) {\n      cols[idx].push(row[idx]);\n      colOffsets[idx].push(rowOffsets[idx]);\n    }\n  }\n  if (numMatches < this.minNumMatches) {\n    return false;\n  }\n  var offset = state.posToOffset(origPos);\n  var matchLength = 0;\n  if (numMatches > 0) {\n    var lastCol = cols[arity - 1];\n    var lastColOffsets = colOffsets[arity - 1];\n\n    var endOffset =\n        lastColOffsets[lastColOffsets.length - 1] + lastCol[lastCol.length - 1].matchLength;\n    offset = colOffsets[0][0];\n    matchLength = endOffset - offset;\n  }\n  var isOptional = this instanceof pexprs.Opt;\n  for (idx = 0; idx < cols.length; idx++) {\n    state._bindings.push(\n        new IterationNode(state.grammar, cols[idx], colOffsets[idx], matchLength, isOptional));\n    state._bindingOffsets.push(offset);\n  }\n  return true;\n};\n\npexprs.Not.prototype.eval = function(state) {\n  /*\n    TODO:\n    - Right now we're just throwing away all of the failures that happen inside a `not`, and\n      recording `this` as a failed expression.\n    - Double negation should be equivalent to lookahead, but that's not the case right now wrt\n      failures. E.g., ~~'foo' produces a failure for ~~'foo', but maybe it should produce\n      a failure for 'foo' instead.\n  */\n\n  var inputStream = state.inputStream;\n  var origPos = inputStream.pos;\n  state.pushFailuresInfo();\n\n  var ans = state.eval(this.expr);\n\n  state.popFailuresInfo();\n  if (ans) {\n    state.processFailure(origPos, this);\n    return false;\n  }\n\n  inputStream.pos = origPos;\n  return true;\n};\n\npexprs.Lookahead.prototype.eval = function(state) {\n  var inputStream = state.inputStream;\n  var origPos = inputStream.pos;\n  if (state.eval(this.expr)) {\n    inputStream.pos = origPos;\n    return true;\n  } else {\n    return false;\n  }\n};\n\npexprs.Apply.prototype.eval = function(state) {\n  var caller = state.currentApplication();\n  var actuals = caller ? caller.args : [];\n  var app = this.substituteParams(actuals);\n\n  var posInfo = state.getCurrentPosInfo();\n  if (posInfo.isActive(app)) {\n    // This rule is already active at this position, i.e., it is left-recursive.\n    return app.handleCycle(state);\n  }\n\n  var memoKey = app.toMemoKey();\n  var memoRec = posInfo.memo[memoKey];\n\n  if (memoRec && posInfo.shouldUseMemoizedResult(memoRec)) {\n    if (state.hasNecessaryInfo(memoRec)) {\n      return state.useMemoizedResult(state.inputStream.pos, memoRec);\n    }\n    delete posInfo.memo[memoKey];\n  }\n  return app.reallyEval(state);\n};\n\npexprs.Apply.prototype.handleCycle = function(state) {\n  var posInfo = state.getCurrentPosInfo();\n  var currentLeftRecursion = posInfo.currentLeftRecursion;\n  var memoKey = this.toMemoKey();\n  var memoRec = posInfo.memo[memoKey];\n\n  if (currentLeftRecursion && currentLeftRecursion.headApplication.toMemoKey() === memoKey) {\n    // We already know about this left recursion, but it's possible there are \"involved\n    // applications\" that we don't already know about, so...\n    memoRec.updateInvolvedApplicationMemoKeys();\n  } else if (!memoRec) {\n    // New left recursion detected! Memoize a failure to try to get a seed parse.\n    memoRec = posInfo.memoize(\n        memoKey,\n        {matchLength: 0, examinedLength: 0, value: false, rightmostFailureOffset: -1});\n    posInfo.startLeftRecursion(this, memoRec);\n  }\n  return state.useMemoizedResult(state.inputStream.pos, memoRec);\n};\n\npexprs.Apply.prototype.reallyEval = function(state) {\n  var inputStream = state.inputStream;\n  var origPos = inputStream.pos;\n  var origPosInfo = state.getCurrentPosInfo();\n  var ruleInfo = state.grammar.rules[this.ruleName];\n  var body = ruleInfo.body;\n  var description = ruleInfo.description;\n\n  state.enterApplication(origPosInfo, this);\n\n  if (description) {\n    state.pushFailuresInfo();\n  }\n\n  // Reset the input stream's examinedLength property so that we can track\n  // the examined length of this particular application.\n  var origInputStreamExaminedLength = inputStream.examinedLength;\n  inputStream.examinedLength = 0;\n\n  var value = this.evalOnce(body, state);\n  var currentLR = origPosInfo.currentLeftRecursion;\n  var memoKey = this.toMemoKey();\n  var isHeadOfLeftRecursion = currentLR && currentLR.headApplication.toMemoKey() === memoKey;\n  var memoRec;\n\n  if (isHeadOfLeftRecursion) {\n    value = this.growSeedResult(body, state, origPos, currentLR, value);\n    origPosInfo.endLeftRecursion();\n    memoRec = currentLR;\n    memoRec.examinedLength = inputStream.examinedLength - origPos;\n    memoRec.rightmostFailureOffset = state._getRightmostFailureOffset();\n    origPosInfo.memoize(memoKey, memoRec);  // updates origPosInfo's maxExaminedLength\n  } else if (!currentLR || !currentLR.isInvolved(memoKey)) {\n    // This application is not involved in left recursion, so it's ok to memoize it.\n    memoRec = origPosInfo.memoize(memoKey, {\n      matchLength: inputStream.pos - origPos,\n      examinedLength: inputStream.examinedLength - origPos,\n      value: value,\n      failuresAtRightmostPosition: state.cloneRecordedFailures(),\n      rightmostFailureOffset: state._getRightmostFailureOffset()\n    });\n  }\n  var succeeded = !!value;\n\n  if (description) {\n    state.popFailuresInfo();\n    if (!succeeded) {\n      state.processFailure(origPos, this);\n    }\n    if (memoRec) {\n      memoRec.failuresAtRightmostPosition = state.cloneRecordedFailures();\n    }\n  }\n\n  // Record trace information in the memo table, so that it is available if the memoized result\n  // is used later.\n  if (state.isTracing() && memoRec) {\n    var entry = state.getTraceEntry(origPos, this, succeeded, succeeded ? [value] : []);\n    if (isHeadOfLeftRecursion) {\n      common.assert(entry.terminatingLREntry != null || !succeeded);\n      entry.isHeadOfLeftRecursion = true;\n    }\n    memoRec.traceEntry = entry;\n  }\n\n  // Fix the input stream's examinedLength -- it should be the maximum examined length\n  // across all applications, not just this one.\n  inputStream.examinedLength = Math.max(inputStream.examinedLength, origInputStreamExaminedLength);\n\n  state.exitApplication(origPosInfo, value);\n\n  return succeeded;\n};\n\npexprs.Apply.prototype.evalOnce = function(expr, state) {\n  var inputStream = state.inputStream;\n  var origPos = inputStream.pos;\n\n  if (state.eval(expr)) {\n    var arity = expr.getArity();\n    var bindings = state._bindings.splice(state._bindings.length - arity, arity);\n    var offsets = state._bindingOffsets.splice(state._bindingOffsets.length - arity, arity);\n    return new NonterminalNode(\n        state.grammar, this.ruleName, bindings, offsets, inputStream.pos - origPos);\n  } else {\n    return false;\n  }\n};\n\npexprs.Apply.prototype.growSeedResult = function(body, state, origPos, lrMemoRec, newValue) {\n  if (!newValue) {\n    return false;\n  }\n\n  var inputStream = state.inputStream;\n\n  while (true) {\n    lrMemoRec.matchLength = inputStream.pos - origPos;\n    lrMemoRec.value = newValue;\n    lrMemoRec.failuresAtRightmostPosition = state.cloneRecordedFailures();\n\n    if (state.isTracing()) {\n      // Before evaluating the body again, add a trace node for this application to the memo entry.\n      // Its only child is a copy of the trace node from `newValue`, which will always be the last\n      // element in `state.trace`.\n      var seedTrace = state.trace[state.trace.length - 1];\n      lrMemoRec.traceEntry = new Trace(\n          state.input, origPos, inputStream.pos, this, true, [newValue], [seedTrace.clone()]);\n    }\n    inputStream.pos = origPos;\n    newValue = this.evalOnce(body, state);\n    if (inputStream.pos - origPos <= lrMemoRec.matchLength) {\n      break;\n    }\n    if (state.isTracing()) {\n      state.trace.splice(-2, 1);  // Drop the trace for the old seed.\n    }\n  }\n  if (state.isTracing()) {\n    // The last entry is for an unused result -- pop it and save it in the \"real\" entry.\n    lrMemoRec.traceEntry.recordLRTermination(state.trace.pop(), newValue);\n  }\n  inputStream.pos = origPos + lrMemoRec.matchLength;\n  return lrMemoRec.value;\n};\n\npexprs.UnicodeChar.prototype.eval = function(state) {\n  var inputStream = state.inputStream;\n  var origPos = inputStream.pos;\n  var ch = inputStream.next();\n  if (ch && this.pattern.test(ch)) {\n    state.pushBinding(new TerminalNode(state.grammar, ch), origPos);\n    return true;\n  } else {\n    state.processFailure(origPos, this);\n    return false;\n  }\n};\n","'use strict';\n\n// --------------------------------------------------------------------\n// Imports\n// --------------------------------------------------------------------\n\nvar common = require('./common');\nvar pexprs = require('./pexprs');\n\n// --------------------------------------------------------------------\n// Operations\n// --------------------------------------------------------------------\n\npexprs.PExpr.prototype.getArity = common.abstract('getArity');\n\npexprs.any.getArity =\npexprs.end.getArity =\npexprs.Terminal.prototype.getArity =\npexprs.Range.prototype.getArity =\npexprs.Param.prototype.getArity =\npexprs.Apply.prototype.getArity =\npexprs.UnicodeChar.prototype.getArity = function() {\n  return 1;\n};\n\npexprs.Alt.prototype.getArity = function() {\n  // This is ok b/c all terms must have the same arity -- this property is\n  // checked by the Grammar constructor.\n  return this.terms.length === 0 ? 0 : this.terms[0].getArity();\n};\n\npexprs.Seq.prototype.getArity = function() {\n  var arity = 0;\n  for (var idx = 0; idx < this.factors.length; idx++) {\n    arity += this.factors[idx].getArity();\n  }\n  return arity;\n};\n\npexprs.Iter.prototype.getArity = function() {\n  return this.expr.getArity();\n};\n\npexprs.Not.prototype.getArity = function() {\n  return 0;\n};\n\npexprs.Lookahead.prototype.getArity =\npexprs.Lex.prototype.getArity = function() {\n  return this.expr.getArity();\n};\n","'use strict';\n\n// --------------------------------------------------------------------\n// Imports\n// --------------------------------------------------------------------\n\nvar common = require('./common');\nvar pexprs = require('./pexprs');\n\n// --------------------------------------------------------------------\n// Helpers\n// --------------------------------------------------------------------\n\nfunction flatten(listOfLists) {\n  return Array.prototype.concat.apply([], listOfLists);\n}\n\n// --------------------------------------------------------------------\n// Operations\n// --------------------------------------------------------------------\n\npexprs.PExpr.prototype.generateExample = common.abstract('generateExample');\n\nfunction categorizeExamples(examples) {\n  // A list of rules that the system needs examples of, in order to generate an example\n  //   for the current rule\n  var examplesNeeded = examples.filter(function(example) {\n    return example.hasOwnProperty('examplesNeeded');\n  })\n  .map(function(example) { return example.examplesNeeded; });\n\n  examplesNeeded = flatten(examplesNeeded);\n\n  var uniqueExamplesNeeded = {};\n  for (var i = 0; i < examplesNeeded.length; i++) {\n    var currentExampleNeeded = examplesNeeded[i];\n    uniqueExamplesNeeded[currentExampleNeeded] = true;\n  }\n  examplesNeeded = Object.keys(uniqueExamplesNeeded);\n\n  // A list of successfully generated examples\n  var successfulExamples = examples.filter(function(example) {\n    return example.hasOwnProperty('value');\n  })\n  .map(function(item) { return item.value; });\n\n  // This flag returns true if the system cannot generate the rule it is currently\n  //   attempting to generate, regardless of whether or not it has the examples it needs.\n  //   Currently, this is only used in overriding generators to prevent the system from\n  //   generating examples for certain rules (e.g. 'ident').\n  var needHelp = examples.some(function(item) { return item.needHelp; });\n\n  return {\n    examplesNeeded: examplesNeeded,\n    successfulExamples: successfulExamples,\n    needHelp: needHelp\n  };\n}\n\npexprs.any.generateExample = function(grammar, examples, inSyntacticContext, actuals) {\n  return {value: String.fromCharCode(Math.floor(Math.random() * 255))};\n};\n\n// Assumes that terminal's object is always a string\npexprs.Terminal.prototype.generateExample = function(grammar, examples, inSyntacticContext) {\n  return {value: this.obj};\n};\n\npexprs.Range.prototype.generateExample = function(grammar, examples, inSyntacticContext) {\n  var rangeSize = this.to.charCodeAt(0) - this.from.charCodeAt(0);\n  return {value: String.fromCharCode(\n    this.from.charCodeAt(0) + Math.floor(rangeSize * Math.random())\n  )};\n};\n\npexprs.Param.prototype.generateExample = function(grammar, examples, inSyntacticContext, actuals) {\n  return actuals[this.index].generateExample(grammar, examples, inSyntacticContext, actuals);\n};\n\npexprs.Alt.prototype.generateExample = function(grammar, examples, inSyntacticContext, actuals) {\n  // items -> termExamples\n  var termExamples = this.terms.map(function(term) {\n    return term.generateExample(grammar, examples, inSyntacticContext, actuals);\n  });\n\n  var categorizedExamples = categorizeExamples(termExamples);\n\n  var examplesNeeded = categorizedExamples.examplesNeeded;\n  var successfulExamples = categorizedExamples.successfulExamples;\n  var needHelp = categorizedExamples.needHelp;\n\n  var ans = {};\n\n  // Alt can contain both an example and a request for examples\n  if (successfulExamples.length > 0) {\n    var i = Math.floor(Math.random() * successfulExamples.length);\n    ans.value = successfulExamples[i];\n  }\n  if (examplesNeeded.length > 0) {\n    ans.examplesNeeded = examplesNeeded;\n  }\n  ans.needHelp = needHelp;\n\n  return ans;\n};\n\npexprs.Seq.prototype.generateExample = function(grammar, examples, inSyntacticContext, actuals) {\n  var factorExamples = this.factors.map(function(factor) {\n    return factor.generateExample(grammar, examples, inSyntacticContext, actuals);\n  });\n  var categorizedExamples = categorizeExamples(factorExamples);\n\n  var examplesNeeded = categorizedExamples.examplesNeeded;\n  var successfulExamples = categorizedExamples.successfulExamples;\n  var needHelp = categorizedExamples.needHelp;\n\n  var ans = {};\n\n  // In a Seq, all pieces must succeed in order to have a successful example.\n  if (examplesNeeded.length > 0 || needHelp) {\n    ans.examplesNeeded = examplesNeeded;\n    ans.needHelp = needHelp;\n  } else {\n    ans.value = successfulExamples.join(inSyntacticContext ? ' ' : '');\n  }\n\n  return ans;\n};\n\npexprs.Iter.prototype.generateExample = function(grammar, examples, inSyntacticContext, actuals) {\n  var rangeTimes = Math.min(this.maxNumMatches - this.minNumMatches, 3);\n  var numTimes = Math.floor(Math.random() * (rangeTimes + 1) + this.minNumMatches);\n  var items = [];\n\n  for (var i = 0; i < numTimes; i++) {\n    items.push(this.expr.generateExample(grammar, examples, inSyntacticContext, actuals));\n  }\n\n  var categorizedExamples = categorizeExamples(items);\n\n  var examplesNeeded = categorizedExamples.examplesNeeded;\n  var successfulExamples = categorizedExamples.successfulExamples;\n\n  var ans = {};\n\n  // It's always either one or the other.\n  // TODO: instead of ' ', call 'spaces.generateExample()'\n  ans.value = successfulExamples.join(inSyntacticContext ? ' ' : '');\n  if (examplesNeeded.length > 0) {\n    ans.examplesNeeded = examplesNeeded;\n  }\n\n  return ans;\n};\n\n// Right now, 'Not' and 'Lookahead' generate nothing and assume that whatever follows will\n//   work according to the encoded constraints.\npexprs.Not.prototype.generateExample = function(grammar, examples, inSyntacticContext) {\n  return {value: ''};\n};\n\npexprs.Lookahead.prototype.generateExample = function(grammar, examples, inSyntacticContext) {\n  return {value: ''};\n};\n\npexprs.Lex.prototype.generateExample = function(grammar, examples, inSyntacticContext, actuals) {\n  return this.expr.generateExample(grammar, examples, false, actuals);\n};\n\npexprs.Apply.prototype.generateExample = function(grammar, examples, inSyntacticContext, actuals) {\n  var ans = {};\n\n  var ruleName = this.substituteParams(actuals).toString();\n\n  if (!examples.hasOwnProperty(ruleName)) {\n    ans.examplesNeeded = [ruleName];\n  } else {\n    var relevantExamples = examples[ruleName];\n    var i = Math.floor(Math.random() * relevantExamples.length);\n    ans.value = relevantExamples[i];\n  }\n\n  return ans;\n};\n\npexprs.UnicodeChar.prototype.generateExample = function(\n    grammar, examples, inSyntacticContext, actuals) {\n  var char;\n  switch (this.category) {\n    case 'Lu': char = 'Á'; break;\n    case 'Ll': char = 'ŏ'; break;\n    case 'Lt': char = 'ǅ'; break;\n    case 'Lm': char = 'ˮ'; break;\n    case 'Lo': char = 'ƻ'; break;\n\n    case 'Nl': char = 'ↂ'; break;\n    case 'Nd': char = '½'; break;\n\n    case 'Mn': char = '\\u0487'; break;\n    case 'Mc': char = 'ि'; break;\n\n    case 'Pc': char = '⁀'; break;\n\n    case 'Zs': char = '\\u2001'; break;\n\n    case 'L': char = 'Á'; break;\n    case 'Ltmo': char = 'ǅ'; break;\n  }\n  return {value: char}; // 💩\n};\n","'use strict';\n\n// --------------------------------------------------------------------\n// Imports\n// --------------------------------------------------------------------\n\nvar common = require('./common');\nvar pexprs = require('./pexprs');\n\n// --------------------------------------------------------------------\n// Private stuff\n// --------------------------------------------------------------------\n\nfunction getMetaInfo(expr, grammarInterval) {\n  var metaInfo = {};\n  if (expr.source && grammarInterval) {\n    var adjusted = expr.source.relativeTo(grammarInterval);\n    metaInfo.sourceInterval = [adjusted.startIdx, adjusted.endIdx];\n  }\n  return metaInfo;\n}\n\n// --------------------------------------------------------------------\n// Operations\n// --------------------------------------------------------------------\n\npexprs.PExpr.prototype.outputRecipe = common.abstract('outputRecipe');\n\npexprs.any.outputRecipe = function(formals, grammarInterval) {\n  return ['any', getMetaInfo(this, grammarInterval)];\n};\n\npexprs.end.outputRecipe = function(formals, grammarInterval) {\n  return ['end', getMetaInfo(this, grammarInterval)];\n};\n\npexprs.Terminal.prototype.outputRecipe = function(formals, grammarInterval) {\n  return [\n    'terminal',\n    getMetaInfo(this, grammarInterval),\n    this.obj\n  ];\n};\n\npexprs.Range.prototype.outputRecipe = function(formals, grammarInterval) {\n  return [\n    'range',\n    getMetaInfo(this, grammarInterval),\n    this.from,\n    this.to\n  ];\n};\n\npexprs.Param.prototype.outputRecipe = function(formals, grammarInterval) {\n  return [\n    'param',\n    getMetaInfo(this, grammarInterval),\n    this.index\n  ];\n};\n\npexprs.Alt.prototype.outputRecipe = function(formals, grammarInterval) {\n  return [\n    'alt',\n    getMetaInfo(this, grammarInterval)\n  ].concat(this.terms.map(function(term) {\n    return term.outputRecipe(formals, grammarInterval);\n  }));\n};\n\npexprs.Extend.prototype.outputRecipe = function(formals, grammarInterval) {\n  var extension = this.terms[0]; // [extension, orginal]\n  return extension.outputRecipe(formals, grammarInterval);\n};\n\npexprs.Seq.prototype.outputRecipe = function(formals, grammarInterval) {\n  return [\n    'seq',\n    getMetaInfo(this, grammarInterval)\n  ].concat(this.factors.map(function(factor) {\n    return factor.outputRecipe(formals, grammarInterval);\n  }));\n};\n\npexprs.Star.prototype.outputRecipe =\npexprs.Plus.prototype.outputRecipe =\npexprs.Opt.prototype.outputRecipe =\npexprs.Not.prototype.outputRecipe =\npexprs.Lookahead.prototype.outputRecipe =\npexprs.Lex.prototype.outputRecipe = function(formals, grammarInterval) {\n  return [\n    this.constructor.name.toLowerCase(),\n    getMetaInfo(this, grammarInterval),\n    this.expr.outputRecipe(formals, grammarInterval)\n  ];\n};\n\npexprs.Apply.prototype.outputRecipe = function(formals, grammarInterval) {\n  return [\n    'app',\n    getMetaInfo(this, grammarInterval),\n    this.ruleName,\n    this.args.map(function(arg) {\n      return arg.outputRecipe(formals, grammarInterval);\n    })\n  ];\n};\n\npexprs.UnicodeChar.prototype.outputRecipe = function(formals, grammarInterval) {\n  return [\n    'unicodeChar',\n    getMetaInfo(this, grammarInterval),\n    this.category\n  ];\n};\n","'use strict';\n\n// --------------------------------------------------------------------\n// Imports\n// --------------------------------------------------------------------\n\nvar common = require('./common');\nvar pexprs = require('./pexprs');\n\n// --------------------------------------------------------------------\n// Operations\n// --------------------------------------------------------------------\n\n/*\n  Called at grammar creation time to rewrite a rule body, replacing each reference to a formal\n  parameter with a `Param` node. Returns a PExpr -- either a new one, or the original one if\n  it was modified in place.\n*/\npexprs.PExpr.prototype.introduceParams = common.abstract('introduceParams');\n\npexprs.any.introduceParams =\npexprs.end.introduceParams =\npexprs.Terminal.prototype.introduceParams =\npexprs.Range.prototype.introduceParams =\npexprs.Param.prototype.introduceParams =\npexprs.UnicodeChar.prototype.introduceParams = function(formals) {\n  return this;\n};\n\npexprs.Alt.prototype.introduceParams = function(formals) {\n  this.terms.forEach(function(term, idx, terms) {\n    terms[idx] = term.introduceParams(formals);\n  });\n  return this;\n};\n\npexprs.Seq.prototype.introduceParams = function(formals) {\n  this.factors.forEach(function(factor, idx, factors) {\n    factors[idx] = factor.introduceParams(formals);\n  });\n  return this;\n};\n\npexprs.Iter.prototype.introduceParams =\npexprs.Not.prototype.introduceParams =\npexprs.Lookahead.prototype.introduceParams =\npexprs.Lex.prototype.introduceParams = function(formals) {\n  this.expr = this.expr.introduceParams(formals);\n  return this;\n};\n\npexprs.Apply.prototype.introduceParams = function(formals) {\n  var index = formals.indexOf(this.ruleName);\n  if (index >= 0) {\n    if (this.args.length > 0) {\n      // TODO: Should this be supported? See issue #64.\n      throw new Error('Parameterized rules cannot be passed as arguments to another rule.');\n    }\n    return new pexprs.Param(index);\n  } else {\n    this.args.forEach(function(arg, idx, args) {\n      args[idx] = arg.introduceParams(formals);\n    });\n    return this;\n  }\n};\n","'use strict';\n\n// --------------------------------------------------------------------\n// Imports\n// --------------------------------------------------------------------\n\nvar common = require('./common');\nvar pexprs = require('./pexprs');\n\n// --------------------------------------------------------------------\n// Operations\n// --------------------------------------------------------------------\n\n// Returns `true` if this parsing expression may accept without consuming any input.\npexprs.PExpr.prototype.isNullable = function(grammar) {\n  return this._isNullable(grammar, Object.create(null));\n};\n\npexprs.PExpr.prototype._isNullable = common.abstract('_isNullable');\n\npexprs.any._isNullable =\npexprs.Range.prototype._isNullable =\npexprs.Param.prototype._isNullable =\npexprs.Plus.prototype._isNullable =\npexprs.UnicodeChar.prototype._isNullable = function(grammar, memo) {\n  return false;\n};\n\npexprs.end._isNullable = function(grammar, memo) {\n  return true;\n};\n\npexprs.Terminal.prototype._isNullable = function(grammar, memo) {\n  if (typeof this.obj === 'string') {\n    // This is an over-simplification: it's only correct if the input is a string. If it's an array\n    // or an object, then the empty string parsing expression is not nullable.\n    return this.obj === '';\n  } else {\n    return false;\n  }\n};\n\npexprs.Alt.prototype._isNullable = function(grammar, memo) {\n  return this.terms.length === 0 ||\n      this.terms.some(function(term) { return term._isNullable(grammar, memo); });\n};\n\npexprs.Seq.prototype._isNullable = function(grammar, memo) {\n  return this.factors.every(function(factor) { return factor._isNullable(grammar, memo); });\n};\n\npexprs.Star.prototype._isNullable =\npexprs.Opt.prototype._isNullable =\npexprs.Not.prototype._isNullable =\npexprs.Lookahead.prototype._isNullable = function(grammar, memo) {\n  return true;\n};\n\npexprs.Lex.prototype._isNullable = function(grammar, memo) {\n  return this.expr._isNullable(grammar, memo);\n};\n\npexprs.Apply.prototype._isNullable = function(grammar, memo) {\n  var key = this.toMemoKey();\n  if (!Object.prototype.hasOwnProperty.call(memo, key)) {\n    var body = grammar.rules[this.ruleName].body;\n    var inlined = body.substituteParams(this.args);\n    memo[key] = false;  // Prevent infinite recursion for recursive rules.\n    memo[key] = inlined._isNullable(grammar, memo);\n  }\n  return memo[key];\n};\n","'use strict';\n\n// --------------------------------------------------------------------\n// Imports\n// --------------------------------------------------------------------\n\nvar common = require('./common');\nvar pexprs = require('./pexprs');\n\n// --------------------------------------------------------------------\n// Operations\n// --------------------------------------------------------------------\n\n/*\n  Returns a PExpr that results from recursively replacing every formal parameter (i.e., instance\n  of `Param`) inside this PExpr with its actual value from `actuals` (an Array).\n\n  The receiver must not be modified; a new PExpr must be returned if any replacement is necessary.\n*/\n// function(actuals) { ... }\npexprs.PExpr.prototype.substituteParams = common.abstract('substituteParams');\n\npexprs.any.substituteParams =\npexprs.end.substituteParams =\npexprs.Terminal.prototype.substituteParams =\npexprs.Range.prototype.substituteParams =\npexprs.UnicodeChar.prototype.substituteParams = function(actuals) {\n  return this;\n};\n\npexprs.Param.prototype.substituteParams = function(actuals) {\n  return actuals[this.index];\n};\n\npexprs.Alt.prototype.substituteParams = function(actuals) {\n  return new pexprs.Alt(\n      this.terms.map(function(term) { return term.substituteParams(actuals); }));\n};\n\npexprs.Seq.prototype.substituteParams = function(actuals) {\n  return new pexprs.Seq(\n      this.factors.map(function(factor) { return factor.substituteParams(actuals); }));\n};\n\npexprs.Iter.prototype.substituteParams =\npexprs.Not.prototype.substituteParams =\npexprs.Lookahead.prototype.substituteParams =\npexprs.Lex.prototype.substituteParams = function(actuals) {\n  return new this.constructor(this.expr.substituteParams(actuals));\n};\n\npexprs.Apply.prototype.substituteParams = function(actuals) {\n  if (this.args.length === 0) {\n    // Avoid making a copy of this application, as an optimization\n    return this;\n  } else {\n    var args = this.args.map(function(arg) { return arg.substituteParams(actuals); });\n    return new pexprs.Apply(this.ruleName, args);\n  }\n};\n","'use strict';\n\n// --------------------------------------------------------------------\n// Imports\n// --------------------------------------------------------------------\n\nvar common = require('./common');\nvar pexprs = require('./pexprs');\n\n// --------------------------------------------------------------------\n// Operations\n// --------------------------------------------------------------------\n\n// Returns a string representing the PExpr, for use as a UI label, etc.\npexprs.PExpr.prototype.toDisplayString = common.abstract('toDisplayString');\n\npexprs.Alt.prototype.toDisplayString =\npexprs.Seq.prototype.toDisplayString = function() {\n  if (this.source) {\n    return this.source.trimmed().contents;\n  }\n  return '[' + this.constructor.name + ']';\n};\n\npexprs.any.toDisplayString =\npexprs.end.toDisplayString =\npexprs.Iter.prototype.toDisplayString =\npexprs.Not.prototype.toDisplayString =\npexprs.Lookahead.prototype.toDisplayString =\npexprs.Lex.prototype.toDisplayString =\npexprs.Terminal.prototype.toDisplayString =\npexprs.Range.prototype.toDisplayString =\npexprs.Param.prototype.toDisplayString = function() {\n  return this.toString();\n};\n\npexprs.Apply.prototype.toDisplayString = function() {\n  if (this.args.length > 0) {\n    var ps = this.args.map(function(arg) { return arg.toDisplayString(); });\n    return this.ruleName + '<' + ps.join(',') + '>';\n  } else {\n    return this.ruleName;\n  }\n};\n\npexprs.UnicodeChar.prototype.toDisplayString = function() {\n  return 'Unicode [' + this.category + '] character';\n};\n","'use strict';\n\n// --------------------------------------------------------------------\n// Imports\n// --------------------------------------------------------------------\n\nvar common = require('./common');\nvar pexprs = require('./pexprs');\n\nvar copyWithoutDuplicates = common.copyWithoutDuplicates;\n\n// --------------------------------------------------------------------\n// Private stuff\n// --------------------------------------------------------------------\n\nfunction isRestrictedJSIdentifier(str) {\n  return /^[a-zA-Z_$][0-9a-zA-Z_$]*$/.test(str);\n}\n\nfunction resolveDuplicatedNames(argumentNameList) {\n  // `count` is used to record the number of times each argument name occurs in the list,\n  // this is useful for checking duplicated argument name. It maps argument names to ints.\n  var count = Object.create(null);\n  argumentNameList.forEach(function(argName) {\n    count[argName] = (count[argName] || 0) + 1;\n  });\n\n  // Append subscripts ('_1', '_2', ...) to duplicate argument names.\n  Object.keys(count).forEach(function(dupArgName) {\n    if (count[dupArgName] <= 1) {\n      return;\n    }\n\n    // This name shows up more than once, so add subscripts.\n    var subscript = 1;\n    argumentNameList.forEach(function(argName, idx) {\n      if (argName === dupArgName) {\n        argumentNameList[idx] = argName + '_' + subscript++;\n      }\n    });\n  });\n}\n\n// --------------------------------------------------------------------\n// Operations\n// --------------------------------------------------------------------\n\n/*\n  Returns a list of strings that will be used as the default argument names for its receiver\n  (a pexpr) in a semantic action. This is used exclusively by the Semantics Editor.\n\n  `firstArgIndex` is the 1-based index of the first argument name that will be generated for this\n  pexpr. It enables us to name arguments positionally, e.g., if the second argument is a\n  non-alphanumeric terminal like \"+\", it will be named '$2'.\n\n  `noDupCheck` is true if the caller of `toArgumentNameList` is not a top level caller. It enables\n  us to avoid nested duplication subscripts appending, e.g., '_1_1', '_1_2', by only checking\n  duplicates at the top level.\n\n  Here is a more elaborate example that illustrates how this method works:\n  `(a \"+\" b).toArgumentNameList(1)` evaluates to `['a', '$2', 'b']` with the following recursive\n  calls:\n\n    (a).toArgumentNameList(1) -> ['a'],\n    (\"+\").toArgumentNameList(2) -> ['$2'],\n    (b).toArgumentNameList(3) -> ['b']\n\n  Notes:\n  * This method must only be called on well-formed expressions, e.g., the receiver must\n    not have any Alt sub-expressions with inconsistent arities.\n  * e.getArity() === e.toArgumentNameList(1).length\n*/\n// function(firstArgIndex, noDupCheck) { ... }\npexprs.PExpr.prototype.toArgumentNameList = common.abstract('toArgumentNameList');\n\npexprs.any.toArgumentNameList = function(firstArgIndex, noDupCheck) {\n  return ['any'];\n};\n\npexprs.end.toArgumentNameList = function(firstArgIndex, noDupCheck) {\n  return ['end'];\n};\n\npexprs.Terminal.prototype.toArgumentNameList = function(firstArgIndex, noDupCheck) {\n  if (typeof this.obj === 'string' && /^[_a-zA-Z0-9]+$/.test(this.obj)) {\n    // If this terminal is a valid suffix for a JS identifier, just prepend it with '_'\n    return ['_' + this.obj];\n  } else {\n    // Otherwise, name it positionally.\n    return ['$' + firstArgIndex];\n  }\n};\n\npexprs.Range.prototype.toArgumentNameList = function(firstArgIndex, noDupCheck) {\n  var argName = this.from + '_to_' + this.to;\n  // If the `argName` is not valid then try to prepend a `_`.\n  if (!isRestrictedJSIdentifier(argName)) {\n    argName = '_' + argName;\n  }\n  // If the `argName` still not valid after prepending a `_`, then name it positionally.\n  if (!isRestrictedJSIdentifier(argName)) {\n    argName = '$' + firstArgIndex;\n  }\n  return [argName];\n};\n\npexprs.Alt.prototype.toArgumentNameList = function(firstArgIndex, noDupCheck) {\n  // `termArgNameLists` is an array of arrays where each row is the\n  // argument name list that corresponds to a term in this alternation.\n  var termArgNameLists = this.terms.map(function(term) {\n    return term.toArgumentNameList(firstArgIndex, true);\n  });\n\n  var argumentNameList = [];\n  var numArgs = termArgNameLists[0].length;\n  for (var colIdx = 0; colIdx < numArgs; colIdx++) {\n    var col = [];\n    for (var rowIdx = 0; rowIdx < this.terms.length; rowIdx++) {\n      col.push(termArgNameLists[rowIdx][colIdx]);\n    }\n    var uniqueNames = copyWithoutDuplicates(col);\n    argumentNameList.push(uniqueNames.join('_or_'));\n  }\n\n  if (!noDupCheck) {\n    resolveDuplicatedNames(argumentNameList);\n  }\n  return argumentNameList;\n};\n\npexprs.Seq.prototype.toArgumentNameList = function(firstArgIndex, noDupCheck) {\n  // Generate the argument name list, without worrying about duplicates.\n  var argumentNameList = [];\n  this.factors.forEach(function(factor) {\n    var factorArgumentNameList = factor.toArgumentNameList(firstArgIndex, true);\n    argumentNameList = argumentNameList.concat(factorArgumentNameList);\n\n    // Shift the firstArgIndex to take this factor's argument names into account.\n    firstArgIndex += factorArgumentNameList.length;\n  });\n  if (!noDupCheck) {\n    resolveDuplicatedNames(argumentNameList);\n  }\n  return argumentNameList;\n};\n\npexprs.Iter.prototype.toArgumentNameList = function(firstArgIndex, noDupCheck) {\n  var argumentNameList = this.expr.toArgumentNameList(firstArgIndex, noDupCheck)\n    .map(function(exprArgumentString) {\n      return exprArgumentString[exprArgumentString.length - 1] === 's' ?\n          exprArgumentString + 'es' :\n          exprArgumentString + 's';\n    });\n  if (!noDupCheck) {\n    resolveDuplicatedNames(argumentNameList);\n  }\n  return argumentNameList;\n};\n\npexprs.Opt.prototype.toArgumentNameList = function(firstArgIndex, noDupCheck) {\n  return this.expr.toArgumentNameList(firstArgIndex, noDupCheck).map(function(argName) {\n    return 'opt' + argName[0].toUpperCase() + argName.slice(1);\n  });\n};\n\npexprs.Not.prototype.toArgumentNameList = function(firstArgIndex, noDupCheck) {\n  return [];\n};\n\npexprs.Lookahead.prototype.toArgumentNameList =\npexprs.Lex.prototype.toArgumentNameList = function(firstArgIndex, noDupCheck) {\n  return this.expr.toArgumentNameList(firstArgIndex, noDupCheck);\n};\n\npexprs.Apply.prototype.toArgumentNameList = function(firstArgIndex, noDupCheck) {\n  return [this.ruleName];\n};\n\npexprs.UnicodeChar.prototype.toArgumentNameList = function(firstArgIndex, noDupCheck) {\n  return ['$' + firstArgIndex];\n};\n\npexprs.Param.prototype.toArgumentNameList = function(firstArgIndex, noDupCheck) {\n  return ['param' + this.index];\n};\n\n// \"Value pexprs\" (Value, Str, Arr, Obj) are going away soon, so we don't worry about them here.\n","'use strict';\n\n// --------------------------------------------------------------------\n// Imports\n// --------------------------------------------------------------------\n\nvar Failure = require('./Failure');\nvar common = require('./common');\nvar pexprs = require('./pexprs');\n\n// --------------------------------------------------------------------\n// Operations\n// --------------------------------------------------------------------\n\npexprs.PExpr.prototype.toFailure = common.abstract('toFailure');\n\npexprs.any.toFailure = function(grammar) {\n  return new Failure(this, 'any object', 'description');\n};\n\npexprs.end.toFailure = function(grammar) {\n  return new Failure(this, 'end of input', 'description');\n};\n\npexprs.Terminal.prototype.toFailure = function(grammar) {\n  return new Failure(this, this.obj, 'string');\n};\n\npexprs.Range.prototype.toFailure = function(grammar) {\n  // TODO: come up with something better\n  return new Failure(this, JSON.stringify(this.from) + '..' + JSON.stringify(this.to), 'code');\n};\n\npexprs.Not.prototype.toFailure = function(grammar) {\n  var description = this.expr === pexprs.any ?\n      'nothing' :\n      'not ' + this.expr.toFailure(grammar);\n  return new Failure(this, description, 'description');\n};\n\npexprs.Lookahead.prototype.toFailure = function(grammar) {\n  return this.expr.toFailure(grammar);\n};\n\npexprs.Apply.prototype.toFailure = function(grammar) {\n  var description = grammar.rules[this.ruleName].description;\n  if (!description) {\n    var article = (/^[aeiouAEIOU]/.test(this.ruleName) ? 'an' : 'a');\n    description = article + ' ' + this.ruleName;\n  }\n  return new Failure(this, description, 'description');\n};\n\npexprs.UnicodeChar.prototype.toFailure = function(grammar) {\n  return new Failure(this, 'a Unicode [' + this.category + '] character', 'description');\n};\n\npexprs.Alt.prototype.toFailure = function(grammar) {\n  var fs = this.terms.map(function(t) { return t.toFailure(); });\n  var description = '(' + fs.join(' or ') + ')';\n  return new Failure(this, description, 'description');\n};\n\npexprs.Seq.prototype.toFailure = function(grammar) {\n  var fs = this.factors.map(function(f) { return f.toFailure(); });\n  var description = '(' + fs.join(' ') + ')';\n  return new Failure(this, description, 'description');\n};\n\npexprs.Iter.prototype.toFailure = function(grammar) {\n  var description = '(' + this.expr.toFailure() + this.operator + ')';\n  return new Failure(this, description, 'description');\n};\n","'use strict';\n\n// --------------------------------------------------------------------\n// Imports\n// --------------------------------------------------------------------\n\nvar common = require('./common');\nvar pexprs = require('./pexprs');\n\n// --------------------------------------------------------------------\n// Operations\n// --------------------------------------------------------------------\n\n/*\n  e1.toString() === e2.toString() ==> e1 and e2 are semantically equivalent.\n  Note that this is not an iff (<==>): e.g.,\n  (~\"b\" \"a\").toString() !== (\"a\").toString(), even though\n  ~\"b\" \"a\" and \"a\" are interchangeable in any grammar,\n  both in terms of the languages they accept and their arities.\n*/\npexprs.PExpr.prototype.toString = common.abstract('toString');\n\npexprs.any.toString = function() {\n  return 'any';\n};\n\npexprs.end.toString = function() {\n  return 'end';\n};\n\npexprs.Terminal.prototype.toString = function() {\n  return JSON.stringify(this.obj);\n};\n\npexprs.Range.prototype.toString = function() {\n  return JSON.stringify(this.from) + '..' + JSON.stringify(this.to);\n};\n\npexprs.Param.prototype.toString = function() {\n  return '$' + this.index;\n};\n\npexprs.Lex.prototype.toString = function() {\n  return '#(' + this.expr.toString() + ')';\n};\n\npexprs.Alt.prototype.toString = function() {\n  return this.terms.length === 1 ?\n    this.terms[0].toString() :\n    '(' + this.terms.map(function(term) { return term.toString(); }).join(' | ') + ')';\n};\n\npexprs.Seq.prototype.toString = function() {\n  return this.factors.length === 1 ?\n    this.factors[0].toString() :\n    '(' + this.factors.map(function(factor) { return factor.toString(); }).join(' ') + ')';\n};\n\npexprs.Iter.prototype.toString = function() {\n  return this.expr + this.operator;\n};\n\npexprs.Not.prototype.toString = function() {\n  return '~' + this.expr;\n};\n\npexprs.Lookahead.prototype.toString = function() {\n  return '&' + this.expr;\n};\n\npexprs.Apply.prototype.toString = function() {\n  if (this.args.length > 0) {\n    var ps = this.args.map(function(arg) { return arg.toString(); });\n    return this.ruleName + '<' + ps.join(',') + '>';\n  } else {\n    return this.ruleName;\n  }\n};\n\npexprs.UnicodeChar.prototype.toString = function() {\n  return '\\\\p{' + this.category + '}';\n};\n","'use strict';\n\n// --------------------------------------------------------------------\n// Imports\n// --------------------------------------------------------------------\n\nvar UnicodeCategories = require('../third_party/UnicodeCategories');\nvar common = require('./common');\nvar inherits = require('inherits');\n\n// --------------------------------------------------------------------\n// Private stuff\n// --------------------------------------------------------------------\n\n// General stuff\n\nfunction PExpr() {\n  throw new Error(\"PExpr cannot be instantiated -- it's abstract\");\n}\n\n// Set the `source` property to the interval containing the source for this expression.\nPExpr.prototype.withSource = function(interval) {\n  if (interval) {\n    this.source = interval.trimmed();\n  }\n  return this;\n};\n\n// Any\n\nvar any = Object.create(PExpr.prototype);\n\n// End\n\nvar end = Object.create(PExpr.prototype);\n\n// Terminals\n\nfunction Terminal(obj) {\n  this.obj = obj;\n}\ninherits(Terminal, PExpr);\n\n// Ranges\n\nfunction Range(from, to) {\n  this.from = from;\n  this.to = to;\n}\ninherits(Range, PExpr);\n\n// Parameters\n\nfunction Param(index) {\n  this.index = index;\n}\ninherits(Param, PExpr);\n\n// Alternation\n\nfunction Alt(terms) {\n  this.terms = terms;\n}\ninherits(Alt, PExpr);\n\n// Extend is an implementation detail of rule extension\n\nfunction Extend(superGrammar, name, body) {\n  this.superGrammar = superGrammar;\n  this.name = name;\n  this.body = body;\n  var origBody = superGrammar.rules[name].body;\n  this.terms = [body, origBody];\n}\ninherits(Extend, Alt);\n\n// Sequences\n\nfunction Seq(factors) {\n  this.factors = factors;\n}\ninherits(Seq, PExpr);\n\n// Iterators and optionals\n\nfunction Iter(expr) {\n  this.expr = expr;\n}\ninherits(Iter, PExpr);\n\nfunction Star(expr) {\n  this.expr = expr;\n}\ninherits(Star, Iter);\n\nfunction Plus(expr) {\n  this.expr = expr;\n}\ninherits(Plus, Iter);\n\nfunction Opt(expr) {\n  this.expr = expr;\n}\ninherits(Opt, Iter);\n\nStar.prototype.operator = '*';\nPlus.prototype.operator = '+';\nOpt.prototype.operator = '?';\n\nStar.prototype.minNumMatches = 0;\nPlus.prototype.minNumMatches = 1;\nOpt.prototype.minNumMatches = 0;\n\nStar.prototype.maxNumMatches = Number.POSITIVE_INFINITY;\nPlus.prototype.maxNumMatches = Number.POSITIVE_INFINITY;\nOpt.prototype.maxNumMatches = 1;\n\n// Predicates\n\nfunction Not(expr) {\n  this.expr = expr;\n}\ninherits(Not, PExpr);\n\nfunction Lookahead(expr) {\n  this.expr = expr;\n}\ninherits(Lookahead, PExpr);\n\n// \"Lexification\"\n\nfunction Lex(expr) {\n  this.expr = expr;\n}\ninherits(Lex, PExpr);\n\n// Rule application\n\nfunction Apply(ruleName, optArgs) {\n  this.ruleName = ruleName;\n  this.args = optArgs || [];\n}\ninherits(Apply, PExpr);\n\nApply.prototype.isSyntactic = function() {\n  return common.isSyntactic(this.ruleName);\n};\n\n// This method just caches the result of `this.toString()` in a non-enumerable property.\nApply.prototype.toMemoKey = function() {\n  if (!this._memoKey) {\n    Object.defineProperty(this, '_memoKey', {value: this.toString()});\n  }\n  return this._memoKey;\n};\n\n// Unicode character\n\nfunction UnicodeChar(category) {\n  this.category = category;\n  this.pattern = UnicodeCategories[category];\n}\ninherits(UnicodeChar, PExpr);\n\n// --------------------------------------------------------------------\n// Exports\n// --------------------------------------------------------------------\n\nexports.PExpr = PExpr;\nexports.any = any;\nexports.end = end;\nexports.Terminal = Terminal;\nexports.Range = Range;\nexports.Param = Param;\nexports.Alt = Alt;\nexports.Extend = Extend;\nexports.Seq = Seq;\nexports.Iter = Iter;\nexports.Star = Star;\nexports.Plus = Plus;\nexports.Opt = Opt;\nexports.Not = Not;\nexports.Lookahead = Lookahead;\nexports.Lex = Lex;\nexports.Apply = Apply;\nexports.UnicodeChar = UnicodeChar;\n\n// --------------------------------------------------------------------\n// Extensions\n// --------------------------------------------------------------------\n\nrequire('./pexprs-allowsSkippingPrecedingSpace');\nrequire('./pexprs-assertAllApplicationsAreValid');\nrequire('./pexprs-assertChoicesHaveUniformArity');\nrequire('./pexprs-assertIteratedExprsAreNotNullable');\nrequire('./pexprs-check');\nrequire('./pexprs-eval');\nrequire('./pexprs-getArity');\nrequire('./pexprs-generateExample');\nrequire('./pexprs-outputRecipe');\nrequire('./pexprs-introduceParams');\nrequire('./pexprs-isNullable');\nrequire('./pexprs-substituteParams');\nrequire('./pexprs-toDisplayString');\nrequire('./pexprs-toArgumentNameList');\nrequire('./pexprs-toFailure');\nrequire('./pexprs-toString');\n","'use strict';\n\n// --------------------------------------------------------------------\n// Imports\n// --------------------------------------------------------------------\n\nvar Failure = require('./Failure');\nvar TerminalNode = require('./nodes').TerminalNode;\nvar assert = require('./common').assert;\nvar inherits = require('inherits');\nvar pexprs = require('./pexprs');\n\nfunction CaseInsensitiveTerminal(param) {\n  this.obj = param;\n}\ninherits(CaseInsensitiveTerminal, pexprs.PExpr);\n\nCaseInsensitiveTerminal.prototype = {\n  _getString: function(state) {\n    var terminal = state.currentApplication().args[this.obj.index];\n    assert(terminal instanceof pexprs.Terminal, 'expected a Terminal expression');\n    return terminal.obj;\n  },\n\n  // Implementation of the PExpr API\n\n  allowsSkippingPrecedingSpace: function() {\n    return true;\n  },\n\n  eval: function(state) {\n    var inputStream = state.inputStream;\n    var origPos = inputStream.pos;\n    var matchStr = this._getString(state);\n    if (!inputStream.matchString(matchStr, true)) {\n      state.processFailure(origPos, this);\n      return false;\n    } else {\n      state.pushBinding(new TerminalNode(state.grammar, matchStr), origPos);\n      return true;\n    }\n  },\n\n  generateExample: function(grammar, examples, inSyntacticContext, actuals) {\n    // Start with a example generated from the Terminal...\n    var str = this.obj.generateExample(grammar, examples, inSyntacticContext, actuals).value;\n\n    // ...and randomly switch characters to uppercase/lowercase.\n    var value = '';\n    for (var i = 0; i < str.length; ++i) {\n      value += Math.random() < 0.5 ? str[i].toLocaleLowerCase() : str[i].toLocaleUpperCase();\n    }\n    return {value: value};\n  },\n\n  getArity: function() {\n    return 1;\n  },\n\n  substituteParams: function(actuals) {\n    return new CaseInsensitiveTerminal(this.obj.substituteParams(actuals));\n  },\n\n  toDisplayString: function() {\n    return this.obj.toDisplayString() + ' (case-insensitive)';\n  },\n\n  toFailure: function() {\n    return new Failure(this, this.obj.toFailure() + ' (case-insensitive)', 'description');\n  },\n\n  _isNullable: function(grammar, memo) {\n    return this.obj._isNullable(grammar, memo);\n  }\n};\n\nmodule.exports = CaseInsensitiveTerminal;\n","'use strict';\n\n// --------------------------------------------------------------------\n// Imports\n// --------------------------------------------------------------------\n\nvar Interval = require('./Interval');\n\n// --------------------------------------------------------------------\n// Private stuff\n// --------------------------------------------------------------------\n\nfunction InputStream(source) {\n  this.source = source;\n  this.pos = 0;\n  this.examinedLength = 0;\n}\n\nInputStream.prototype = {\n  atEnd: function() {\n    var ans = this.pos === this.source.length;\n    this.examinedLength = Math.max(this.examinedLength, this.pos + 1);\n    return ans;\n  },\n\n  next: function() {\n    var ans = this.source[this.pos++];\n    this.examinedLength = Math.max(this.examinedLength, this.pos);\n    return ans;\n  },\n\n  matchString: function(s, optIgnoreCase) {\n    var idx;\n    if (optIgnoreCase) {\n      /*\n        Case-insensitive comparison is a tricky business. Some notable gotchas include the\n        \"Turkish I\" problem (http://www.i18nguy.com/unicode/turkish-i18n.html) and the fact\n        that the German Esszet (ß) turns into \"SS\" in upper case.\n\n        This is intended to be a locale-invariant comparison, which means it may not obey\n        locale-specific expectations (e.g. \"i\" => \"İ\").\n       */\n      for (idx = 0; idx < s.length; idx++) {\n        var actual = this.next();\n        var expected = s[idx];\n        if (actual == null || actual.toUpperCase() !== expected.toUpperCase()) {\n          return false;\n        }\n      }\n      return true;\n    }\n    // Default is case-sensitive comparison.\n    for (idx = 0; idx < s.length; idx++) {\n      if (this.next() !== s[idx]) { return false; }\n    }\n    return true;\n  },\n\n  sourceSlice: function(startIdx, endIdx) {\n    return this.source.slice(startIdx, endIdx);\n  },\n\n  interval: function(startIdx, optEndIdx) {\n    return new Interval(this.source, startIdx, optEndIdx ? optEndIdx : this.pos);\n  }\n};\n\n// --------------------------------------------------------------------\n// Exports\n// --------------------------------------------------------------------\n\nmodule.exports = InputStream;\n","'use strict';\n\n// --------------------------------------------------------------------\n// Imports\n// --------------------------------------------------------------------\n\nvar common = require('./common');\nvar util = require('./util');\nvar Interval = require('./Interval');\n\n// --------------------------------------------------------------------\n// Private stuff\n// --------------------------------------------------------------------\n\nfunction MatchResult(\n    matcher,\n    input,\n    startExpr,\n    cst,\n    cstOffset,\n    rightmostFailurePosition,\n    optRecordedFailures) {\n\n  this.matcher = matcher;\n  this.input = input;\n  this.startExpr = startExpr;\n  this._cst = cst;\n  this._cstOffset = cstOffset;\n  this._rightmostFailurePosition = rightmostFailurePosition;\n  this._rightmostFailures = optRecordedFailures;\n\n  if (this.failed()) {\n    common.defineLazyProperty(this, 'message', function() {\n      var detail = 'Expected ' + this.getExpectedText();\n      return util.getLineAndColumnMessage(this.input, this.getRightmostFailurePosition()) + detail;\n    });\n    common.defineLazyProperty(this, 'shortMessage', function() {\n      var detail = 'expected ' + this.getExpectedText();\n      var errorInfo = util.getLineAndColumn(this.input, this.getRightmostFailurePosition());\n      return 'Line ' + errorInfo.lineNum + ', col ' + errorInfo.colNum + ': ' + detail;\n    });\n  }\n}\n\nMatchResult.prototype.succeeded = function() {\n  return !!this._cst;\n};\n\nMatchResult.prototype.failed = function() {\n  return !this.succeeded();\n};\n\nMatchResult.prototype.getRightmostFailurePosition = function() {\n  return this._rightmostFailurePosition;\n};\n\nMatchResult.prototype.getRightmostFailures = function() {\n  if (!this._rightmostFailures) {\n    this.matcher.setInput(this.input);\n    var matchResultWithFailures =\n        this.matcher._match(this.startExpr, false, this.getRightmostFailurePosition());\n    this._rightmostFailures = matchResultWithFailures.getRightmostFailures();\n  }\n  return this._rightmostFailures;\n};\n\nMatchResult.prototype.toString = function() {\n  return this.succeeded() ?\n      '[match succeeded]' :\n      '[match failed at position ' + this.getRightmostFailurePosition() + ']';\n};\n\n// Return a string summarizing the expected contents of the input stream when\n// the match failure occurred.\nMatchResult.prototype.getExpectedText = function() {\n  if (this.succeeded()) {\n    throw new Error('cannot get expected text of a successful MatchResult');\n  }\n\n  var sb = new common.StringBuffer();\n  var failures = this.getRightmostFailures();\n\n  // Filter out the fluffy failures to make the default error messages more useful\n  failures = failures.filter(function(failure) {\n    return !failure.isFluffy();\n  });\n\n  for (var idx = 0; idx < failures.length; idx++) {\n    if (idx > 0) {\n      if (idx === failures.length - 1) {\n        sb.append(failures.length > 2 ? ', or ' : ' or ');\n      } else {\n        sb.append(', ');\n      }\n    }\n    sb.append(failures[idx].toString());\n  }\n  return sb.contents();\n};\n\nMatchResult.prototype.getInterval = function() {\n  var pos = this.getRightmostFailurePosition();\n  return new Interval(this.input, pos, pos);\n};\n\n// --------------------------------------------------------------------\n// Exports\n// --------------------------------------------------------------------\n\nmodule.exports = MatchResult;\n","'use strict';\n\n// --------------------------------------------------------------------\n// Private stuff\n// --------------------------------------------------------------------\n\nfunction PosInfo() {\n  this.applicationMemoKeyStack = [];  // active applications at this position\n  this.memo = {};\n  this.maxExaminedLength = 0;\n  this.maxRightmostFailureOffset = -1;\n  this.currentLeftRecursion = undefined;\n}\n\nPosInfo.prototype = {\n  isActive: function(application) {\n    return this.applicationMemoKeyStack.indexOf(application.toMemoKey()) >= 0;\n  },\n\n  enter: function(application) {\n    this.applicationMemoKeyStack.push(application.toMemoKey());\n  },\n\n  exit: function() {\n    this.applicationMemoKeyStack.pop();\n  },\n\n  startLeftRecursion: function(headApplication, memoRec) {\n    memoRec.isLeftRecursion = true;\n    memoRec.headApplication = headApplication;\n    memoRec.nextLeftRecursion = this.currentLeftRecursion;\n    this.currentLeftRecursion = memoRec;\n\n    var applicationMemoKeyStack = this.applicationMemoKeyStack;\n    var indexOfFirstInvolvedRule = applicationMemoKeyStack.indexOf(headApplication.toMemoKey()) + 1;\n    var involvedApplicationMemoKeys = applicationMemoKeyStack.slice(indexOfFirstInvolvedRule);\n\n    memoRec.isInvolved = function(applicationMemoKey) {\n      return involvedApplicationMemoKeys.indexOf(applicationMemoKey) >= 0;\n    };\n\n    memoRec.updateInvolvedApplicationMemoKeys = function() {\n      for (var idx = indexOfFirstInvolvedRule; idx < applicationMemoKeyStack.length; idx++) {\n        var applicationMemoKey = applicationMemoKeyStack[idx];\n        if (!this.isInvolved(applicationMemoKey)) {\n          involvedApplicationMemoKeys.push(applicationMemoKey);\n        }\n      }\n    };\n  },\n\n  endLeftRecursion: function() {\n    this.currentLeftRecursion = this.currentLeftRecursion.nextLeftRecursion;\n  },\n\n  // Note: this method doesn't get called for the \"head\" of a left recursion -- for LR heads,\n  // the memoized result (which starts out being a failure) is always used.\n  shouldUseMemoizedResult: function(memoRec) {\n    if (!memoRec.isLeftRecursion) {\n      return true;\n    }\n    var applicationMemoKeyStack = this.applicationMemoKeyStack;\n    for (var idx = 0; idx < applicationMemoKeyStack.length; idx++) {\n      var applicationMemoKey = applicationMemoKeyStack[idx];\n      if (memoRec.isInvolved(applicationMemoKey)) {\n        return false;\n      }\n    }\n    return true;\n  },\n\n  memoize: function(memoKey, memoRec) {\n    this.memo[memoKey] = memoRec;\n    this.maxExaminedLength = Math.max(this.maxExaminedLength, memoRec.examinedLength);\n    this.maxRightmostFailureOffset =\n        Math.max(this.maxRightmostFailureOffset, memoRec.rightmostFailureOffset);\n    return memoRec;\n  },\n\n  clearObsoleteEntries: function(pos, invalidatedIdx) {\n    if (pos + this.maxExaminedLength <= invalidatedIdx) {\n      // Optimization: none of the rule applications that were memoized here examined the\n      // interval of the input that changed, so nothing has to be invalidated.\n      return;\n    }\n\n    var memo = this.memo;\n    this.maxExaminedLength = 0;\n    this.maxRightmostFailureOffset = -1;\n    var self = this;\n    Object.keys(memo).forEach(function(k) {\n      var memoRec = memo[k];\n      if (pos + memoRec.examinedLength > invalidatedIdx) {\n        delete memo[k];\n      } else {\n        self.maxExaminedLength = Math.max(self.maxExaminedLength, memoRec.examinedLength);\n        self.maxRightmostFailureOffset =\n            Math.max(self.maxRightmostFailureOffset, memoRec.rightmostFailureOffset);\n      }\n    });\n  }\n};\n\n// --------------------------------------------------------------------\n// Exports\n// --------------------------------------------------------------------\n\nmodule.exports = PosInfo;\n","'use strict';\n\n// --------------------------------------------------------------------\n// Imports\n// --------------------------------------------------------------------\n\nvar InputStream = require('./InputStream');\nvar MatchResult = require('./MatchResult');\nvar PosInfo = require('./PosInfo');\nvar Trace = require('./Trace');\nvar pexprs = require('./pexprs');\n\n// --------------------------------------------------------------------\n// Private stuff\n// --------------------------------------------------------------------\n\nvar applySpaces = new pexprs.Apply('spaces');\n\nfunction MatchState(matcher, startExpr, optPositionToRecordFailures) {\n  this.matcher = matcher;\n  this.startExpr = startExpr;\n\n  this.grammar = matcher.grammar;\n  this.input = matcher.input;\n  this.inputStream = new InputStream(matcher.input);\n  this.memoTable = matcher.memoTable;\n\n  this._bindings = [];\n  this._bindingOffsets = [];\n  this._applicationStack = [];\n  this._posStack = [0];\n  this.inLexifiedContextStack = [false];\n\n  this.rightmostFailurePosition = -1;\n  this._rightmostFailurePositionStack = [];\n  this._recordedFailuresStack = [];\n\n  if (optPositionToRecordFailures !== undefined) {\n    this.positionToRecordFailures = optPositionToRecordFailures;\n    this.recordedFailures = Object.create(null);\n  }\n}\n\nMatchState.prototype = {\n  posToOffset: function(pos) {\n    return pos - this._posStack[this._posStack.length - 1];\n  },\n\n  enterApplication: function(posInfo, app) {\n    this._posStack.push(this.inputStream.pos);\n    this._applicationStack.push(app);\n    this.inLexifiedContextStack.push(false);\n    posInfo.enter(app);\n    this._rightmostFailurePositionStack.push(this.rightmostFailurePosition);\n    this.rightmostFailurePosition = -1;\n  },\n\n  exitApplication: function(posInfo, optNode) {\n    var origPos = this._posStack.pop();\n    this._applicationStack.pop();\n    this.inLexifiedContextStack.pop();\n    posInfo.exit();\n\n    this.rightmostFailurePosition = Math.max(\n        this.rightmostFailurePosition,\n        this._rightmostFailurePositionStack.pop());\n\n    if (optNode) {\n      this.pushBinding(optNode, origPos);\n    }\n  },\n\n  enterLexifiedContext: function() {\n    this.inLexifiedContextStack.push(true);\n  },\n\n  exitLexifiedContext: function() {\n    this.inLexifiedContextStack.pop();\n  },\n\n  currentApplication: function() {\n    return this._applicationStack[this._applicationStack.length - 1];\n  },\n\n  inSyntacticContext: function() {\n    if (typeof this.inputStream.source !== 'string') {\n      return false;\n    }\n    var currentApplication = this.currentApplication();\n    if (currentApplication) {\n      return currentApplication.isSyntactic() && !this.inLexifiedContext();\n    } else {\n      // The top-level context is syntactic if the start application is.\n      return this.startExpr.factors[0].isSyntactic();\n    }\n  },\n\n  inLexifiedContext: function() {\n    return this.inLexifiedContextStack[this.inLexifiedContextStack.length - 1];\n  },\n\n  skipSpaces: function() {\n    this.pushFailuresInfo();\n    this.eval(applySpaces);\n    this.popBinding();\n    this.popFailuresInfo();\n    return this.inputStream.pos;\n  },\n\n  skipSpacesIfInSyntacticContext: function() {\n    return this.inSyntacticContext() ?\n        this.skipSpaces() :\n        this.inputStream.pos;\n  },\n\n  maybeSkipSpacesBefore: function(expr) {\n    if (expr instanceof pexprs.Apply && expr.isSyntactic()) {\n      return this.skipSpaces();\n    } else if (expr.allowsSkippingPrecedingSpace() && expr !== applySpaces) {\n      return this.skipSpacesIfInSyntacticContext();\n    } else {\n      return this.inputStream.pos;\n    }\n  },\n\n  pushBinding: function(node, origPos) {\n    this._bindings.push(node);\n    this._bindingOffsets.push(this.posToOffset(origPos));\n  },\n\n  popBinding: function() {\n    this._bindings.pop();\n    this._bindingOffsets.pop();\n  },\n\n  numBindings: function() {\n    return this._bindings.length;\n  },\n\n  truncateBindings: function(newLength) {\n    // Yes, this is this really faster than setting the `length` property (tested with\n    // bin/es5bench on Node v6.1.0).\n    while (this._bindings.length > newLength) {\n      this.popBinding();\n    }\n  },\n\n  getCurrentPosInfo: function() {\n    return this.getPosInfo(this.inputStream.pos);\n  },\n\n  getPosInfo: function(pos) {\n    var posInfo = this.memoTable[pos];\n    if (!posInfo) {\n      posInfo = this.memoTable[pos] = new PosInfo();\n    }\n    return posInfo;\n  },\n\n  processFailure: function(pos, expr) {\n    this.rightmostFailurePosition = Math.max(this.rightmostFailurePosition, pos);\n\n    if (this.recordedFailures && pos === this.positionToRecordFailures) {\n      var app = this.currentApplication();\n      if (app) {\n        // Substitute parameters with the actual pexprs that were passed to\n        // the current rule.\n        expr = expr.substituteParams(app.args);\n      } else {\n        // This branch is only reached for the \"end-check\" that is\n        // performed after the top-level application. In that case,\n        // expr === pexprs.end so there is no need to substitute\n        // parameters.\n      }\n\n      this.recordFailure(expr.toFailure(this.grammar), false);\n    }\n  },\n\n  recordFailure: function(failure, shouldCloneIfNew) {\n    var key = failure.toKey();\n    if (!this.recordedFailures[key]) {\n      this.recordedFailures[key] = shouldCloneIfNew ? failure.clone() : failure;\n    } else if (this.recordedFailures[key].isFluffy() && !failure.isFluffy()) {\n      this.recordedFailures[key].clearFluffy();\n    }\n  },\n\n  recordFailures: function(failures, shouldCloneIfNew) {\n    var self = this;\n    Object.keys(failures).forEach(function(key) {\n      self.recordFailure(failures[key], shouldCloneIfNew);\n    });\n  },\n\n  cloneRecordedFailures: function() {\n    if (!this.recordedFailures) {\n      return undefined;\n    }\n\n    var ans = Object.create(null);\n    var self = this;\n    Object.keys(this.recordedFailures).forEach(function(key) {\n      ans[key] = self.recordedFailures[key].clone();\n    });\n    return ans;\n  },\n\n  getRightmostFailurePosition: function() {\n    return this.rightmostFailurePosition;\n  },\n\n  _getRightmostFailureOffset: function() {\n    return this.rightmostFailurePosition >= 0 ?\n        this.posToOffset(this.rightmostFailurePosition) :\n        -1;\n  },\n\n  // Returns the memoized trace entry for `expr` at `pos`, if one exists, `null` otherwise.\n  getMemoizedTraceEntry: function(pos, expr) {\n    var posInfo = this.memoTable[pos];\n    if (posInfo && expr.ruleName) {\n      var memoRec = posInfo.memo[expr.toMemoKey()];\n      if (memoRec && memoRec.traceEntry) {\n        var entry = memoRec.traceEntry.cloneWithExpr(expr);\n        entry.isMemoized = true;\n        return entry;\n      }\n    }\n    return null;\n  },\n\n  // Returns a new trace entry, with the currently active trace array as its children.\n  getTraceEntry: function(pos, expr, succeeded, bindings) {\n    if (expr instanceof pexprs.Apply) {\n      var app = this.currentApplication();\n      var actuals = app ? app.args : [];\n      expr = expr.substituteParams(actuals);\n    }\n    return this.getMemoizedTraceEntry(pos, expr) ||\n           new Trace(this.input, pos, this.inputStream.pos, expr, succeeded, bindings, this.trace);\n  },\n\n  isTracing: function() {\n    return !!this.trace;\n  },\n\n  hasNecessaryInfo: function(memoRec) {\n    if (this.trace && !memoRec.traceEntry) {\n      return false;\n    }\n\n    if (this.recordedFailures &&\n        this.inputStream.pos + memoRec.rightmostFailureOffset === this.positionToRecordFailures) {\n      return !!memoRec.failuresAtRightmostPosition;\n    }\n\n    return true;\n  },\n\n\n  useMemoizedResult: function(origPos, memoRec) {\n    if (this.trace) {\n      this.trace.push(memoRec.traceEntry);\n    }\n\n    var memoRecRightmostFailurePosition = this.inputStream.pos + memoRec.rightmostFailureOffset;\n    this.rightmostFailurePosition =\n        Math.max(this.rightmostFailurePosition, memoRecRightmostFailurePosition);\n    if (this.recordedFailures &&\n        this.positionToRecordFailures === memoRecRightmostFailurePosition &&\n        memoRec.failuresAtRightmostPosition) {\n      this.recordFailures(memoRec.failuresAtRightmostPosition, true);\n    }\n\n    this.inputStream.examinedLength =\n        Math.max(this.inputStream.examinedLength, memoRec.examinedLength + origPos);\n\n    if (memoRec.value) {\n      this.inputStream.pos += memoRec.matchLength;\n      this.pushBinding(memoRec.value, origPos);\n      return true;\n    }\n    return false;\n  },\n\n  // Evaluate `expr` and return `true` if it succeeded, `false` otherwise. On success, `bindings`\n  // will have `expr.getArity()` more elements than before, and the input stream's position may\n  // have increased. On failure, `bindings` and position will be unchanged.\n  eval: function(expr) {\n    var inputStream = this.inputStream;\n    var origNumBindings = this._bindings.length;\n\n    var origRecordedFailures;\n    if (this.recordedFailures) {\n      origRecordedFailures = this.recordedFailures;\n      this.recordedFailures = Object.create(null);\n    }\n\n    var origPos = inputStream.pos;\n    var memoPos = this.maybeSkipSpacesBefore(expr);\n\n    var origTrace;\n    if (this.trace) {\n      origTrace = this.trace;\n      this.trace = [];\n    }\n\n    // Do the actual evaluation.\n    var ans = expr.eval(this);\n\n    if (this.trace) {\n      var bindings = this._bindings.slice(origNumBindings);\n      var traceEntry = this.getTraceEntry(memoPos, expr, ans, bindings);\n      traceEntry.isImplicitSpaces = expr === applySpaces;\n      traceEntry.isRootNode = expr === this.startExpr;\n      origTrace.push(traceEntry);\n      this.trace = origTrace;\n    }\n\n    if (ans) {\n      if (this.recordedFailures && inputStream.pos === this.positionToRecordFailures) {\n        var self = this;\n        Object.keys(this.recordedFailures).forEach(function(key) {\n          self.recordedFailures[key].makeFluffy();\n        });\n      }\n    } else {\n      // Reset the position and the bindings.\n      inputStream.pos = origPos;\n      this.truncateBindings(origNumBindings);\n    }\n\n    if (this.recordedFailures) {\n      this.recordFailures(origRecordedFailures, false);\n    }\n\n    return ans;\n  },\n\n  getMatchResult: function() {\n    this.eval(this.startExpr);\n    var rightmostFailures;\n    if (this.recordedFailures) {\n      var self = this;\n      rightmostFailures = Object.keys(this.recordedFailures).map(function(key) {\n        return self.recordedFailures[key];\n      });\n    }\n    return new MatchResult(\n        this.matcher,\n        this.input,\n        this.startExpr,\n        this._bindings[0],\n        this._bindingOffsets[0],\n        this.rightmostFailurePosition,\n        rightmostFailures);\n  },\n\n  getTrace: function() {\n    this.trace = [];\n    var matchResult = this.getMatchResult();\n\n    // The trace node for the start rule is always the last entry. If it is a syntactic rule,\n    // the first entry is for an application of 'spaces'.\n    // TODO(pdubroy): Clean this up by introducing a special `Match<startAppl>` rule, which will\n    // ensure that there is always a single root trace node.\n    var rootTrace = this.trace[this.trace.length - 1];\n    rootTrace.result = matchResult;\n    return rootTrace;\n  },\n\n  pushFailuresInfo: function() {\n    this._rightmostFailurePositionStack.push(this.rightmostFailurePosition);\n    this._recordedFailuresStack.push(this.recordedFailures);\n  },\n\n  popFailuresInfo: function() {\n    this.rightmostFailurePosition = this._rightmostFailurePositionStack.pop();\n    this.recordedFailures = this._recordedFailuresStack.pop();\n  }\n};\n\n// --------------------------------------------------------------------\n// Exports\n// --------------------------------------------------------------------\n\nmodule.exports = MatchState;\n","'use strict';\n\n// --------------------------------------------------------------------\n// Imports\n// --------------------------------------------------------------------\n\nvar MatchState = require('./MatchState');\n\nvar pexprs = require('./pexprs');\n\n// --------------------------------------------------------------------\n// Private stuff\n// --------------------------------------------------------------------\n\nfunction Matcher(grammar) {\n  this.grammar = grammar;\n  this.memoTable = [];\n  this.input = '';\n}\n\nMatcher.prototype.getInput = function() {\n  return this.input;\n};\n\nMatcher.prototype.setInput = function(str) {\n  if (this.input !== str) {\n    this.replaceInputRange(0, this.input.length, str);\n  }\n  return this;\n};\n\nMatcher.prototype.replaceInputRange = function(startIdx, endIdx, str) {\n  var currentInput = this.input;\n  if (startIdx < 0 || startIdx > currentInput.length ||\n      endIdx < 0 || endIdx > currentInput.length ||\n      startIdx > endIdx) {\n    throw new Error('Invalid indices: ' + startIdx + ' and ' + endIdx);\n  }\n\n  // update input\n  this.input = currentInput.slice(0, startIdx) + str + currentInput.slice(endIdx);\n\n  // update memo table (similar to the above)\n  var restOfMemoTable = this.memoTable.slice(endIdx);\n  this.memoTable.length = startIdx;\n  for (var idx = 0; idx < str.length; idx++) {\n    this.memoTable.push(undefined);\n  }\n  restOfMemoTable.forEach(\n      function(posInfo) { this.memoTable.push(posInfo); },\n      this);\n\n  // Invalidate memoRecs\n  for (var pos = 0; pos < startIdx; pos++) {\n    var posInfo = this.memoTable[pos];\n    if (posInfo) {\n      posInfo.clearObsoleteEntries(pos, startIdx);\n    }\n  }\n\n  return this;\n};\n\nMatcher.prototype.match = function(optStartApplicationStr) {\n  return this._match(this._getStartExpr(optStartApplicationStr), false);\n};\n\nMatcher.prototype.trace = function(optStartApplicationStr) {\n  return this._match(this._getStartExpr(optStartApplicationStr), true);\n};\n\nMatcher.prototype._match = function(startExpr, tracing, optPositionToRecordFailures) {\n  var state = new MatchState(this, startExpr, optPositionToRecordFailures);\n  return tracing ? state.getTrace() : state.getMatchResult();\n};\n\n/*\n  Returns the starting expression for this Matcher's associated grammar. If `optStartApplicationStr`\n  is specified, it is a string expressing a rule application in the grammar. If not specified, the\n  grammar's default start rule will be used.\n*/\nMatcher.prototype._getStartExpr = function(optStartApplicationStr) {\n  var applicationStr = optStartApplicationStr || this.grammar.defaultStartRule;\n  if (!applicationStr) {\n    throw new Error('Missing start rule argument -- the grammar has no default start rule.');\n  }\n\n  var startApp = this.grammar.parseApplication(applicationStr);\n  return new pexprs.Seq([startApp, pexprs.end]);\n};\n\n// --------------------------------------------------------------------\n// Exports\n// --------------------------------------------------------------------\n\nmodule.exports = Matcher;\n","\"use strict\";\n\nmodule.exports = function () {\n\tif (typeof globalThis !== \"object\") return false;\n\tif (!globalThis) return false;\n\treturn globalThis.Array === Array;\n};\n","var naiveFallback = function () {\n\tif (typeof self === \"object\" && self) return self;\n\tif (typeof window === \"object\" && window) return window;\n\tthrow new Error(\"Unable to resolve global `this`\");\n};\n\nmodule.exports = (function () {\n\tif (this) return this;\n\n\t// Unexpected strict mode (may happen if e.g. bundled into ESM module)\n\n\t// Thanks @mathiasbynens -> https://mathiasbynens.be/notes/globalthis\n\t// In all ES5+ engines global object inherits from Object.prototype\n\t// (if you approached one that doesn't please report)\n\ttry {\n\t\tObject.defineProperty(Object.prototype, \"__global__\", {\n\t\t\tget: function () { return this; },\n\t\t\tconfigurable: true\n\t\t});\n\t} catch (error) {\n\t\t// Unfortunate case of Object.prototype being sealed (via preventExtensions, seal or freeze)\n\t\treturn naiveFallback();\n\t}\n\ttry {\n\t\t// Safari case (window.__global__ is resolved with global context, but __global__ does not)\n\t\tif (!__global__) return naiveFallback();\n\t\treturn __global__;\n\t} finally {\n\t\tdelete Object.prototype.__global__;\n\t}\n})();\n","\"use strict\";\n\nmodule.exports = require(\"./is-implemented\")() ? globalThis : require(\"./implementation\");\n","\"use strict\";\n\nvar global     = require(\"ext/global-this\")\n  , validTypes = { object: true, symbol: true };\n\nmodule.exports = function () {\n\tvar Symbol = global.Symbol;\n\tvar symbol;\n\tif (typeof Symbol !== \"function\") return false;\n\tsymbol = Symbol(\"test symbol\");\n\ttry { String(symbol); }\n\tcatch (e) { return false; }\n\n\t// Return 'true' also for polyfills\n\tif (!validTypes[typeof Symbol.iterator]) return false;\n\tif (!validTypes[typeof Symbol.toPrimitive]) return false;\n\tif (!validTypes[typeof Symbol.toStringTag]) return false;\n\n\treturn true;\n};\n","\"use strict\";\n\n// ES3 safe\nvar _undefined = void 0;\n\nmodule.exports = function (value) { return value !== _undefined && value !== null; };\n","\"use strict\";\n\nvar isValue = require(\"../value/is\");\n\n// prettier-ignore\nvar possibleTypes = { \"object\": true, \"function\": true, \"undefined\": true /* document.all */ };\n\nmodule.exports = function (value) {\n\tif (!isValue(value)) return false;\n\treturn hasOwnProperty.call(possibleTypes, typeof value);\n};\n","\"use strict\";\n\nvar isObject = require(\"../object/is\");\n\nmodule.exports = function (value) {\n\tif (!isObject(value)) return false;\n\ttry {\n\t\tif (!value.constructor) return false;\n\t\treturn value.constructor.prototype === value;\n\t} catch (error) {\n\t\treturn false;\n\t}\n};\n","\"use strict\";\n\nvar isPrototype = require(\"../prototype/is\");\n\nmodule.exports = function (value) {\n\tif (typeof value !== \"function\") return false;\n\n\tif (!hasOwnProperty.call(value, \"length\")) return false;\n\n\ttry {\n\t\tif (typeof value.length !== \"number\") return false;\n\t\tif (typeof value.call !== \"function\") return false;\n\t\tif (typeof value.apply !== \"function\") return false;\n\t} catch (error) {\n\t\treturn false;\n\t}\n\n\treturn !isPrototype(value);\n};\n","\"use strict\";\n\nvar isFunction = require(\"../function/is\");\n\nvar classRe = /^\\s*class[\\s{/}]/, functionToString = Function.prototype.toString;\n\nmodule.exports = function (value) {\n\tif (!isFunction(value)) return false;\n\tif (classRe.test(functionToString.call(value))) return false;\n\treturn true;\n};\n","\"use strict\";\n\nmodule.exports = function () {\n\tvar assign = Object.assign, obj;\n\tif (typeof assign !== \"function\") return false;\n\tobj = { foo: \"raz\" };\n\tassign(obj, { bar: \"dwa\" }, { trzy: \"trzy\" });\n\treturn obj.foo + obj.bar + obj.trzy === \"razdwatrzy\";\n};\n","\"use strict\";\n\nmodule.exports = function () {\n\ttry {\n\t\tObject.keys(\"primitive\");\n\t\treturn true;\n\t} catch (e) {\n\t\treturn false;\n\t}\n};\n","\"use strict\";\n\n// eslint-disable-next-line no-empty-function\nmodule.exports = function () {};\n","\"use strict\";\n\nvar _undefined = require(\"../function/noop\")(); // Support ES3 engines\n\nmodule.exports = function (val) { return val !== _undefined && val !== null; };\n","\"use strict\";\n\nvar isValue = require(\"../is-value\");\n\nvar keys = Object.keys;\n\nmodule.exports = function (object) { return keys(isValue(object) ? Object(object) : object); };\n","\"use strict\";\n\nmodule.exports = require(\"./is-implemented\")() ? Object.keys : require(\"./shim\");\n","\"use strict\";\n\nvar isValue = require(\"./is-value\");\n\nmodule.exports = function (value) {\n\tif (!isValue(value)) throw new TypeError(\"Cannot use null or undefined\");\n\treturn value;\n};\n","\"use strict\";\n\nvar keys  = require(\"../keys\")\n  , value = require(\"../valid-value\")\n  , max   = Math.max;\n\nmodule.exports = function (dest, src/*, …srcn*/) {\n\tvar error, i, length = max(arguments.length, 2), assign;\n\tdest = Object(value(dest));\n\tassign = function (key) {\n\t\ttry {\n\t\t\tdest[key] = src[key];\n\t\t} catch (e) {\n\t\t\tif (!error) error = e;\n\t\t}\n\t};\n\tfor (i = 1; i < length; ++i) {\n\t\tsrc = arguments[i];\n\t\tkeys(src).forEach(assign);\n\t}\n\tif (error !== undefined) throw error;\n\treturn dest;\n};\n","\"use strict\";\n\nmodule.exports = require(\"./is-implemented\")() ? Object.assign : require(\"./shim\");\n","\"use strict\";\n\nvar isValue = require(\"./is-value\");\n\nvar forEach = Array.prototype.forEach, create = Object.create;\n\nvar process = function (src, obj) {\n\tvar key;\n\tfor (key in src) obj[key] = src[key];\n};\n\n// eslint-disable-next-line no-unused-vars\nmodule.exports = function (opts1/*, …options*/) {\n\tvar result = create(null);\n\tforEach.call(arguments, function (options) {\n\t\tif (!isValue(options)) return;\n\t\tprocess(Object(options), result);\n\t});\n\treturn result;\n};\n","\"use strict\";\n\nvar str = \"razdwatrzy\";\n\nmodule.exports = function () {\n\tif (typeof str.contains !== \"function\") return false;\n\treturn str.contains(\"dwa\") === true && str.contains(\"foo\") === false;\n};\n","\"use strict\";\n\nvar indexOf = String.prototype.indexOf;\n\nmodule.exports = function (searchString/*, position*/) {\n\treturn indexOf.call(this, searchString, arguments[1]) > -1;\n};\n","\"use strict\";\n\nmodule.exports = require(\"./is-implemented\")() ? String.prototype.contains : require(\"./shim\");\n","\"use strict\";\n\nvar isValue         = require(\"type/value/is\")\n  , isPlainFunction = require(\"type/plain-function/is\")\n  , assign          = require(\"es5-ext/object/assign\")\n  , normalizeOpts   = require(\"es5-ext/object/normalize-options\")\n  , contains        = require(\"es5-ext/string/#/contains\");\n\nvar d = (module.exports = function (dscr, value/*, options*/) {\n\tvar c, e, w, options, desc;\n\tif (arguments.length < 2 || typeof dscr !== \"string\") {\n\t\toptions = value;\n\t\tvalue = dscr;\n\t\tdscr = null;\n\t} else {\n\t\toptions = arguments[2];\n\t}\n\tif (isValue(dscr)) {\n\t\tc = contains.call(dscr, \"c\");\n\t\te = contains.call(dscr, \"e\");\n\t\tw = contains.call(dscr, \"w\");\n\t} else {\n\t\tc = w = true;\n\t\te = false;\n\t}\n\n\tdesc = { value: value, configurable: c, enumerable: e, writable: w };\n\treturn !options ? desc : assign(normalizeOpts(options), desc);\n});\n\nd.gs = function (dscr, get, set/*, options*/) {\n\tvar c, e, options, desc;\n\tif (typeof dscr !== \"string\") {\n\t\toptions = set;\n\t\tset = get;\n\t\tget = dscr;\n\t\tdscr = null;\n\t} else {\n\t\toptions = arguments[3];\n\t}\n\tif (!isValue(get)) {\n\t\tget = undefined;\n\t} else if (!isPlainFunction(get)) {\n\t\toptions = get;\n\t\tget = set = undefined;\n\t} else if (!isValue(set)) {\n\t\tset = undefined;\n\t} else if (!isPlainFunction(set)) {\n\t\toptions = set;\n\t\tset = undefined;\n\t}\n\tif (isValue(dscr)) {\n\t\tc = contains.call(dscr, \"c\");\n\t\te = contains.call(dscr, \"e\");\n\t} else {\n\t\tc = true;\n\t\te = false;\n\t}\n\n\tdesc = { get: get, set: set, configurable: c, enumerable: e };\n\treturn !options ? desc : assign(normalizeOpts(options), desc);\n};\n","\"use strict\";\n\nmodule.exports = function (value) {\n\tif (!value) return false;\n\tif (typeof value === \"symbol\") return true;\n\tif (!value.constructor) return false;\n\tif (value.constructor.name !== \"Symbol\") return false;\n\treturn value[value.constructor.toStringTag] === \"Symbol\";\n};\n","\"use strict\";\n\nvar isSymbol = require(\"./is-symbol\");\n\nmodule.exports = function (value) {\n\tif (!isSymbol(value)) throw new TypeError(value + \" is not a symbol\");\n\treturn value;\n};\n","\"use strict\";\n\nvar d = require(\"d\");\n\nvar create = Object.create, defineProperty = Object.defineProperty, objPrototype = Object.prototype;\n\nvar created = create(null);\nmodule.exports = function (desc) {\n\tvar postfix = 0, name, ie11BugWorkaround;\n\twhile (created[desc + (postfix || \"\")]) ++postfix;\n\tdesc += postfix || \"\";\n\tcreated[desc] = true;\n\tname = \"@@\" + desc;\n\tdefineProperty(\n\t\tobjPrototype,\n\t\tname,\n\t\td.gs(null, function (value) {\n\t\t\t// For IE11 issue see:\n\t\t\t// https://connect.microsoft.com/IE/feedbackdetail/view/1928508/\n\t\t\t//    ie11-broken-getters-on-dom-objects\n\t\t\t// https://github.com/medikoo/es6-symbol/issues/12\n\t\t\tif (ie11BugWorkaround) return;\n\t\t\tie11BugWorkaround = true;\n\t\t\tdefineProperty(this, name, d(value));\n\t\t\tie11BugWorkaround = false;\n\t\t})\n\t);\n\treturn name;\n};\n","\"use strict\";\n\nvar d            = require(\"d\")\n  , NativeSymbol = require(\"ext/global-this\").Symbol;\n\nmodule.exports = function (SymbolPolyfill) {\n\treturn Object.defineProperties(SymbolPolyfill, {\n\t\t// To ensure proper interoperability with other native functions (e.g. Array.from)\n\t\t// fallback to eventual native implementation of given symbol\n\t\thasInstance: d(\n\t\t\t\"\", (NativeSymbol && NativeSymbol.hasInstance) || SymbolPolyfill(\"hasInstance\")\n\t\t),\n\t\tisConcatSpreadable: d(\n\t\t\t\"\",\n\t\t\t(NativeSymbol && NativeSymbol.isConcatSpreadable) ||\n\t\t\t\tSymbolPolyfill(\"isConcatSpreadable\")\n\t\t),\n\t\titerator: d(\"\", (NativeSymbol && NativeSymbol.iterator) || SymbolPolyfill(\"iterator\")),\n\t\tmatch: d(\"\", (NativeSymbol && NativeSymbol.match) || SymbolPolyfill(\"match\")),\n\t\treplace: d(\"\", (NativeSymbol && NativeSymbol.replace) || SymbolPolyfill(\"replace\")),\n\t\tsearch: d(\"\", (NativeSymbol && NativeSymbol.search) || SymbolPolyfill(\"search\")),\n\t\tspecies: d(\"\", (NativeSymbol && NativeSymbol.species) || SymbolPolyfill(\"species\")),\n\t\tsplit: d(\"\", (NativeSymbol && NativeSymbol.split) || SymbolPolyfill(\"split\")),\n\t\ttoPrimitive: d(\n\t\t\t\"\", (NativeSymbol && NativeSymbol.toPrimitive) || SymbolPolyfill(\"toPrimitive\")\n\t\t),\n\t\ttoStringTag: d(\n\t\t\t\"\", (NativeSymbol && NativeSymbol.toStringTag) || SymbolPolyfill(\"toStringTag\")\n\t\t),\n\t\tunscopables: d(\n\t\t\t\"\", (NativeSymbol && NativeSymbol.unscopables) || SymbolPolyfill(\"unscopables\")\n\t\t)\n\t});\n};\n","\"use strict\";\n\nvar d              = require(\"d\")\n  , validateSymbol = require(\"../../../validate-symbol\");\n\nvar registry = Object.create(null);\n\nmodule.exports = function (SymbolPolyfill) {\n\treturn Object.defineProperties(SymbolPolyfill, {\n\t\tfor: d(function (key) {\n\t\t\tif (registry[key]) return registry[key];\n\t\t\treturn (registry[key] = SymbolPolyfill(String(key)));\n\t\t}),\n\t\tkeyFor: d(function (symbol) {\n\t\t\tvar key;\n\t\t\tvalidateSymbol(symbol);\n\t\t\tfor (key in registry) {\n\t\t\t\tif (registry[key] === symbol) return key;\n\t\t\t}\n\t\t\treturn undefined;\n\t\t})\n\t});\n};\n","// ES2015 Symbol polyfill for environments that do not (or partially) support it\n\n\"use strict\";\n\nvar d                    = require(\"d\")\n  , validateSymbol       = require(\"./validate-symbol\")\n  , NativeSymbol         = require(\"ext/global-this\").Symbol\n  , generateName         = require(\"./lib/private/generate-name\")\n  , setupStandardSymbols = require(\"./lib/private/setup/standard-symbols\")\n  , setupSymbolRegistry  = require(\"./lib/private/setup/symbol-registry\");\n\nvar create = Object.create\n  , defineProperties = Object.defineProperties\n  , defineProperty = Object.defineProperty;\n\nvar SymbolPolyfill, HiddenSymbol, isNativeSafe;\n\nif (typeof NativeSymbol === \"function\") {\n\ttry {\n\t\tString(NativeSymbol());\n\t\tisNativeSafe = true;\n\t} catch (ignore) {}\n} else {\n\tNativeSymbol = null;\n}\n\n// Internal constructor (not one exposed) for creating Symbol instances.\n// This one is used to ensure that `someSymbol instanceof Symbol` always return false\nHiddenSymbol = function Symbol(description) {\n\tif (this instanceof HiddenSymbol) throw new TypeError(\"Symbol is not a constructor\");\n\treturn SymbolPolyfill(description);\n};\n\n// Exposed `Symbol` constructor\n// (returns instances of HiddenSymbol)\nmodule.exports = SymbolPolyfill = function Symbol(description) {\n\tvar symbol;\n\tif (this instanceof Symbol) throw new TypeError(\"Symbol is not a constructor\");\n\tif (isNativeSafe) return NativeSymbol(description);\n\tsymbol = create(HiddenSymbol.prototype);\n\tdescription = description === undefined ? \"\" : String(description);\n\treturn defineProperties(symbol, {\n\t\t__description__: d(\"\", description),\n\t\t__name__: d(\"\", generateName(description))\n\t});\n};\n\nsetupStandardSymbols(SymbolPolyfill);\nsetupSymbolRegistry(SymbolPolyfill);\n\n// Internal tweaks for real symbol producer\ndefineProperties(HiddenSymbol.prototype, {\n\tconstructor: d(SymbolPolyfill),\n\ttoString: d(\"\", function () { return this.__name__; })\n});\n\n// Proper implementation of methods exposed on Symbol.prototype\n// They won't be accessible on produced symbol instances as they derive from HiddenSymbol.prototype\ndefineProperties(SymbolPolyfill.prototype, {\n\ttoString: d(function () { return \"Symbol (\" + validateSymbol(this).__description__ + \")\"; }),\n\tvalueOf: d(function () { return validateSymbol(this); })\n});\ndefineProperty(\n\tSymbolPolyfill.prototype,\n\tSymbolPolyfill.toPrimitive,\n\td(\"\", function () {\n\t\tvar symbol = validateSymbol(this);\n\t\tif (typeof symbol === \"symbol\") return symbol;\n\t\treturn symbol.toString();\n\t})\n);\ndefineProperty(SymbolPolyfill.prototype, SymbolPolyfill.toStringTag, d(\"c\", \"Symbol\"));\n\n// Proper implementaton of toPrimitive and toStringTag for returned symbol instances\ndefineProperty(\n\tHiddenSymbol.prototype, SymbolPolyfill.toStringTag,\n\td(\"c\", SymbolPolyfill.prototype[SymbolPolyfill.toStringTag])\n);\n\n// Note: It's important to define `toPrimitive` as last one, as some implementations\n// implement `toPrimitive` natively without implementing `toStringTag` (or other specified symbols)\n// And that may invoke error in definition flow:\n// See: https://github.com/medikoo/es6-symbol/issues/13#issuecomment-164146149\ndefineProperty(\n\tHiddenSymbol.prototype, SymbolPolyfill.toPrimitive,\n\td(\"c\", SymbolPolyfill.prototype[SymbolPolyfill.toPrimitive])\n);\n","\"use strict\";\n\nmodule.exports = require(\"./is-implemented\")()\n\t? require(\"ext/global-this\").Symbol\n\t: require(\"./polyfill\");\n","var ohm = require('..');\nmodule.exports = ohm.makeRecipe([\"grammar\",{\"source\":\"OperationsAndAttributes {\\n\\n  AttributeSignature =\\n    name\\n\\n  OperationSignature =\\n    name Formals?\\n\\n  Formals\\n    = \\\"(\\\" ListOf<name, \\\",\\\"> \\\")\\\"\\n\\n  name  (a name)\\n    = nameFirst nameRest*\\n\\n  nameFirst\\n    = \\\"_\\\"\\n    | letter\\n\\n  nameRest\\n    = \\\"_\\\"\\n    | alnum\\n\\n}\"},\"OperationsAndAttributes\",null,\"AttributeSignature\",{\"AttributeSignature\":[\"define\",{\"sourceInterval\":[29,58]},null,[],[\"app\",{\"sourceInterval\":[54,58]},\"name\",[]]],\"OperationSignature\":[\"define\",{\"sourceInterval\":[62,100]},null,[],[\"seq\",{\"sourceInterval\":[87,100]},[\"app\",{\"sourceInterval\":[87,91]},\"name\",[]],[\"opt\",{\"sourceInterval\":[92,100]},[\"app\",{\"sourceInterval\":[92,99]},\"Formals\",[]]]]],\"Formals\":[\"define\",{\"sourceInterval\":[104,143]},null,[],[\"seq\",{\"sourceInterval\":[118,143]},[\"terminal\",{\"sourceInterval\":[118,121]},\"(\"],[\"app\",{\"sourceInterval\":[122,139]},\"ListOf\",[[\"app\",{\"sourceInterval\":[129,133]},\"name\",[]],[\"terminal\",{\"sourceInterval\":[135,138]},\",\"]]],[\"terminal\",{\"sourceInterval\":[140,143]},\")\"]]],\"name\":[\"define\",{\"sourceInterval\":[147,187]},\"a name\",[],[\"seq\",{\"sourceInterval\":[168,187]},[\"app\",{\"sourceInterval\":[168,177]},\"nameFirst\",[]],[\"star\",{\"sourceInterval\":[178,187]},[\"app\",{\"sourceInterval\":[178,186]},\"nameRest\",[]]]]],\"nameFirst\":[\"define\",{\"sourceInterval\":[191,223]},null,[],[\"alt\",{\"sourceInterval\":[207,223]},[\"terminal\",{\"sourceInterval\":[207,210]},\"_\"],[\"app\",{\"sourceInterval\":[217,223]},\"letter\",[]]]],\"nameRest\":[\"define\",{\"sourceInterval\":[227,257]},null,[],[\"alt\",{\"sourceInterval\":[242,257]},[\"terminal\",{\"sourceInterval\":[242,245]},\"_\"],[\"app\",{\"sourceInterval\":[252,257]},\"alnum\",[]]]]}]);\n","'use strict';\n\n// --------------------------------------------------------------------\n// Imports\n// --------------------------------------------------------------------\n\nvar Symbol = require('es6-symbol');  // eslint-disable-line no-undef\nvar inherits = require('inherits');\n\nvar InputStream = require('./InputStream');\nvar IterationNode = require('./nodes').IterationNode;\nvar MatchResult = require('./MatchResult');\nvar common = require('./common');\nvar errors = require('./errors');\nvar util = require('./util');\n\n// --------------------------------------------------------------------\n// Private stuff\n// --------------------------------------------------------------------\n\nvar globalActionStack = [];\nvar prototypeGrammar;\nvar prototypeGrammarSemantics;\n\n// JSON is not a valid subset of JavaScript because there are two possible line terminators,\n// U+2028 (line separator) and U+2029 (paragraph separator) that are allowed in JSON strings\n// but not in JavaScript strings.\n// jsonToJS() properly encodes those two characters in JSON so that it can seamlessly be\n// inserted into JavaScript code (plus the encoded version is still valid JSON)\nfunction jsonToJS(str) {\n  var output = str.replace(/[\\u2028\\u2029]/g, function(char, pos, str) {\n    var hex = char.codePointAt(0).toString(16);\n    return '\\\\u' + '0000'.slice(hex.length) + hex;\n  });\n  return output;\n}\n\n// ----------------- Wrappers -----------------\n\n// Wrappers decorate CST nodes with all of the functionality (i.e., operations and attributes)\n// provided by a Semantics (see below). `Wrapper` is the abstract superclass of all wrappers. A\n// `Wrapper` must have `_node` and `_semantics` instance variables, which refer to the CST node and\n// Semantics (resp.) for which it was created, and a `_childWrappers` instance variable which is\n// used to cache the wrapper instances that are created for its child nodes. Setting these instance\n// variables is the responsibility of the constructor of each Semantics-specific subclass of\n// `Wrapper`.\nfunction Wrapper() {}\n\nWrapper.prototype.toString = function() {\n  return '[semantics wrapper for ' + this._node.grammar.name + ']';\n};\n\n// This is used by ohm editor to display a node wrapper appropriately.\nWrapper.prototype.toJSON = function() {\n  return this.toString();\n};\n\nWrapper.prototype._forgetMemoizedResultFor = function(attributeName) {\n  // Remove the memoized attribute from the cstNode and all its children.\n  delete this._node[this._semantics.attributeKeys[attributeName]];\n  this.children.forEach(function(child) {\n    child._forgetMemoizedResultFor(attributeName);\n  });\n};\n\n// Returns the wrapper of the specified child node. Child wrappers are created lazily and cached in\n// the parent wrapper's `_childWrappers` instance variable.\nWrapper.prototype.child = function(idx) {\n  if (!(0 <= idx && idx < this._node.numChildren())) {\n    // TODO: Consider throwing an exception here.\n    return undefined;\n  }\n  var childWrapper = this._childWrappers[idx];\n  if (!childWrapper) {\n    var childNode = this._node.childAt(idx);\n    var offset = this._node.childOffsets[idx];\n\n    var source = this._baseInterval.subInterval(offset, childNode.matchLength);\n    var base = childNode.isNonterminal() ? source : this._baseInterval;\n    childWrapper = this._childWrappers[idx] = this._semantics.wrap(childNode, source, base);\n  }\n  return childWrapper;\n};\n\n// Returns an array containing the wrappers of all of the children of the node associated with this\n// wrapper.\nWrapper.prototype._children = function() {\n  // Force the creation of all child wrappers\n  for (var idx = 0; idx < this._node.numChildren(); idx++) {\n    this.child(idx);\n  }\n  return this._childWrappers;\n};\n\n// Returns `true` if the CST node associated with this wrapper corresponds to an iteration\n// expression, i.e., a Kleene-*, Kleene-+, or an optional. Returns `false` otherwise.\nWrapper.prototype.isIteration = function() {\n  return this._node.isIteration();\n};\n\n// Returns `true` if the CST node associated with this wrapper is a terminal node, `false`\n// otherwise.\nWrapper.prototype.isTerminal = function() {\n  return this._node.isTerminal();\n};\n\n// Returns `true` if the CST node associated with this wrapper is a nonterminal node, `false`\n// otherwise.\nWrapper.prototype.isNonterminal = function() {\n  return this._node.isNonterminal();\n};\n\n// Returns `true` if the CST node associated with this wrapper is a nonterminal node\n// corresponding to a syntactic rule, `false` otherwise.\nWrapper.prototype.isSyntactic = function() {\n  return this.isNonterminal() && this._node.isSyntactic();\n};\n\n// Returns `true` if the CST node associated with this wrapper is a nonterminal node\n// corresponding to a lexical rule, `false` otherwise.\nWrapper.prototype.isLexical = function() {\n  return this.isNonterminal() && this._node.isLexical();\n};\n\n// Returns `true` if the CST node associated with this wrapper is an iterator node\n// having either one or no child (? operator), `false` otherwise.\n// Otherwise, throws an exception.\nWrapper.prototype.isOptional = function() {\n  return this._node.isOptional();\n};\n\n// Create a new _iter wrapper in the same semantics as this wrapper.\nWrapper.prototype.iteration = function(optChildWrappers) {\n  var childWrappers = optChildWrappers || [];\n\n  var childNodes = childWrappers.map(function(c) { return c._node; });\n  var iter = new IterationNode(this._node.grammar, childNodes, [], -1, false);\n\n  var wrapper = this._semantics.wrap(iter, null, null);\n  wrapper._childWrappers = childWrappers;\n  return wrapper;\n};\n\nObject.defineProperties(Wrapper.prototype, {\n  // Returns an array containing the children of this CST node.\n  children: {get: function() { return this._children(); }},\n\n  // Returns the name of grammar rule that created this CST node.\n  ctorName: {get: function() { return this._node.ctorName; }},\n\n  // TODO: Remove this eventually (deprecated in v0.12).\n  interval: {get: function() {\n    throw new Error('The `interval` property is deprecated -- use `source` instead');\n  }},\n\n  // Returns the number of children of this CST node.\n  numChildren: {get: function() { return this._node.numChildren(); }},\n\n  // Returns the primitive value of this CST node, if it's a terminal node. Otherwise,\n  // throws an exception.\n  primitiveValue: {\n    get: function() {\n      if (this.isTerminal()) {\n        return this._node.primitiveValue;\n      }\n      throw new TypeError(\n          \"tried to access the 'primitiveValue' attribute of a non-terminal CST node\");\n    }\n  },\n\n  // Returns the contents of the input stream consumed by this CST node.\n  sourceString: {get: function() { return this.source.contents; }}\n});\n\n// ----------------- Semantics -----------------\n\n// A Semantics is a container for a family of Operations and Attributes for a given grammar.\n// Semantics enable modularity (different clients of a grammar can create their set of operations\n// and attributes in isolation) and extensibility even when operations and attributes are mutually-\n// recursive. This constructor should not be called directly except from\n// `Semantics.createSemantics`. The normal ways to create a Semantics, given a grammar 'g', are\n// `g.createSemantics()` and `g.extendSemantics(parentSemantics)`.\nfunction Semantics(grammar, superSemantics) {\n  var self = this;\n  this.grammar = grammar;\n  this.checkedActionDicts = false;\n\n  // Constructor for wrapper instances, which are passed as the arguments to the semantic actions\n  // of an operation or attribute. Operations and attributes require double dispatch: the semantic\n  // action is chosen based on both the node's type and the semantics. Wrappers ensure that\n  // the `execute` method is called with the correct (most specific) semantics object as an\n  // argument.\n  this.Wrapper = function(node, sourceInterval, baseInterval) {\n    self.checkActionDictsIfHaventAlready();\n    this._semantics = self;\n    this._node = node;\n    this.source = sourceInterval;\n\n    // The interval that the childOffsets of `node` are relative to. It should be the source\n    // of the closest Nonterminal node.\n    this._baseInterval = baseInterval;\n\n    if (node.isNonterminal()) {\n      common.assert(sourceInterval === baseInterval);\n    }\n\n    this._childWrappers = [];\n  };\n\n  this.super = superSemantics;\n  if (superSemantics) {\n    if (!(grammar.equals(this.super.grammar) || grammar._inheritsFrom(this.super.grammar))) {\n      throw new Error(\n          \"Cannot extend a semantics for grammar '\" + this.super.grammar.name +\n          \"' for use with grammar '\" + grammar.name + \"' (not a sub-grammar)\");\n    }\n    inherits(this.Wrapper, this.super.Wrapper);\n    this.operations = Object.create(this.super.operations);\n    this.attributes = Object.create(this.super.attributes);\n    this.attributeKeys = Object.create(null);\n\n    // Assign unique symbols for each of the attributes inherited from the super-semantics so that\n    // they are memoized independently.\n    for (var attributeName in this.attributes) {\n      this.attributeKeys[attributeName] = Symbol();\n    }\n  } else {\n    inherits(this.Wrapper, Wrapper);\n    this.operations = Object.create(null);\n    this.attributes = Object.create(null);\n    this.attributeKeys = Object.create(null);\n  }\n}\n\nSemantics.prototype.toString = function() {\n  return '[semantics for ' + this.grammar.name + ']';\n};\n\nSemantics.prototype.checkActionDictsIfHaventAlready = function() {\n  if (!this.checkedActionDicts) {\n    this.checkActionDicts();\n    this.checkedActionDicts = true;\n  }\n};\n\n// Checks that the action dictionaries for all operations and attributes in this semantics,\n// including the ones that were inherited from the super-semantics, agree with the grammar.\n// Throws an exception if one or more of them doesn't.\nSemantics.prototype.checkActionDicts = function() {\n  var name;\n  for (name in this.operations) {\n    this.operations[name].checkActionDict(this.grammar);\n  }\n  for (name in this.attributes) {\n    this.attributes[name].checkActionDict(this.grammar);\n  }\n};\n\nSemantics.prototype.toRecipe = function(semanticsOnly) {\n  function hasSuperSemantics(s) {\n    return s.super !== Semantics.BuiltInSemantics._getSemantics();\n  }\n\n  var str = '(function(g) {\\n';\n  if (hasSuperSemantics(this)) {\n    str += '  var semantics = ' + this.super.toRecipe(true) + '(g';\n\n    var superSemanticsGrammar = this.super.grammar;\n    var relatedGrammar = this.grammar;\n    while (relatedGrammar !== superSemanticsGrammar) {\n      str += '.superGrammar';\n      relatedGrammar = relatedGrammar.superGrammar;\n    }\n\n    str += ');\\n';\n    str += '  return g.extendSemantics(semantics)';\n  } else {\n    str += '  return g.createSemantics()';\n  }\n  ['Operation', 'Attribute'].forEach(function(type) {\n    var semanticOperations = this[type.toLowerCase() + 's'];\n    Object.keys(semanticOperations).forEach(function(name) {\n      var signature = name;\n      if (semanticOperations[name].formals.length > 0) {\n        signature += '(' + semanticOperations[name].formals.join(', ') + ')';\n      }\n\n      var method;\n      if (hasSuperSemantics(this) && this.super[type.toLowerCase() + 's'][name]) {\n        method = 'extend' + type;\n      } else {\n        method = 'add' + type;\n      }\n      str += '\\n    .' + method + '(' + JSON.stringify(signature) + ', {';\n\n      var actions = semanticOperations[name].actionDict;\n      var srcArray = [];\n      Object.keys(actions).forEach(function(actionName) {\n        if (semanticOperations[name].builtInDefault !== actions[actionName]) {\n          srcArray.push('\\n      ' + JSON.stringify(actionName) + ': ' +\n            actions[actionName].toString());\n        }\n      });\n      str += srcArray.join(',');\n\n      str += '\\n    })';\n    }, this);\n  }, this);\n  str += ';\\n  })';\n\n  if (!semanticsOnly) {\n    str =\n      '(function() {\\n' +\n      '  var grammar = this.fromRecipe(' + jsonToJS(this.grammar.toRecipe()) + ');\\n' +\n      '  var semantics = ' + str + '(grammar);\\n' +\n      '  return semantics;\\n' +\n      '});\\n';\n  }\n\n  return str;\n};\n\nfunction parseSignature(signature, type) {\n  if (!prototypeGrammar) {\n    // The Operations and Attributes grammar won't be available while Ohm is loading,\n    // but we can get away the following simplification b/c none of the operations\n    // that are used while loading take arguments.\n    common.assert(signature.indexOf('(') === -1);\n    return {\n      name: signature,\n      formals: []\n    };\n  }\n\n  var r = prototypeGrammar.match(\n      signature,\n      type === 'operation' ? 'OperationSignature' : 'AttributeSignature');\n  if (r.failed()) {\n    throw new Error(r.message);\n  }\n\n  return prototypeGrammarSemantics(r).parse();\n}\n\nfunction newDefaultAction(type, name, doIt) {\n  return function(children) {\n    var self = this;\n    var thisThing = this._semantics.operations[name] || this._semantics.attributes[name];\n    var args = thisThing.formals.map(function(formal) {\n      return self.args[formal];\n    });\n\n    if (this.isIteration()) {\n      // This CST node corresponds to an iteration expression in the grammar (*, +, or ?). The\n      // default behavior is to map this operation or attribute over all of its child nodes.\n      return children.map(function(child) { return doIt.apply(child, args); });\n    }\n\n    // This CST node corresponds to a non-terminal in the grammar (e.g., AddExpr). The fact that\n    // we got here means that this action dictionary doesn't have an action for this particular\n    // non-terminal or a generic `_nonterminal` action.\n    if (children.length === 1) {\n      // As a convenience, if this node only has one child, we just return the result of\n      // applying this operation / attribute to the child node.\n      return doIt.apply(children[0], args);\n    } else {\n      // Otherwise, we throw an exception to let the programmer know that we don't know what\n      // to do with this node.\n      throw errors.missingSemanticAction(this.ctorName, name, type, globalActionStack);\n    }\n  };\n}\n\nSemantics.prototype.addOperationOrAttribute = function(type, signature, actionDict) {\n  var typePlural = type + 's';\n\n  var parsedNameAndFormalArgs = parseSignature(signature, type);\n  var name = parsedNameAndFormalArgs.name;\n  var formals = parsedNameAndFormalArgs.formals;\n\n  // TODO: check that there are no duplicate formal arguments\n\n  this.assertNewName(name, type);\n\n  // Create the action dictionary for this operation / attribute that contains a `_default` action\n  // which defines the default behavior of iteration, terminal, and non-terminal nodes...\n  var builtInDefault = newDefaultAction(type, name, doIt);\n  var realActionDict = {_default: builtInDefault};\n  // ... and add in the actions supplied by the programmer, which may override some or all of the\n  // default ones.\n  Object.keys(actionDict).forEach(function(name) {\n    realActionDict[name] = actionDict[name];\n  });\n\n  var entry = type === 'operation' ?\n      new Operation(name, formals, realActionDict, builtInDefault) :\n      new Attribute(name, realActionDict, builtInDefault);\n\n  // The following check is not strictly necessary (it will happen later anyway) but it's better to\n  // catch errors early.\n  entry.checkActionDict(this.grammar);\n\n  this[typePlural][name] = entry;\n\n  function doIt() {\n    // Dispatch to most specific version of this operation / attribute -- it may have been\n    // overridden by a sub-semantics.\n    var thisThing = this._semantics[typePlural][name];\n\n    // Check that the caller passed the correct number of arguments.\n    if (arguments.length !== thisThing.formals.length) {\n      throw new Error(\n          'Invalid number of arguments passed to ' + name + ' ' + type + ' (expected ' +\n          thisThing.formals.length + ', got ' + arguments.length + ')');\n    }\n\n    // Create an \"arguments object\" from the arguments that were passed to this\n    // operation / attribute.\n    var args = Object.create(null);\n    for (var idx = 0; idx < arguments.length; idx++) {\n      var formal = thisThing.formals[idx];\n      args[formal] = arguments[idx];\n    }\n\n    var oldArgs = this.args;\n    this.args = args;\n    var ans = thisThing.execute(this._semantics, this);\n    this.args = oldArgs;\n    return ans;\n  }\n\n  if (type === 'operation') {\n    this.Wrapper.prototype[name] = doIt;\n    this.Wrapper.prototype[name].toString = function() {\n      return '[' + name + ' operation]';\n    };\n  } else {\n    Object.defineProperty(this.Wrapper.prototype, name, {\n      get: doIt,\n      configurable: true  // So the property can be deleted.\n    });\n    this.attributeKeys[name] = Symbol();\n  }\n};\n\nSemantics.prototype.extendOperationOrAttribute = function(type, name, actionDict) {\n  var typePlural = type + 's';\n\n  // Make sure that `name` really is just a name, i.e., that it doesn't also contain formals.\n  parseSignature(name, 'attribute');\n\n  if (!(this.super && name in this.super[typePlural])) {\n    throw new Error('Cannot extend ' + type + \" '\" + name +\n        \"': did not inherit an \" + type + ' with that name');\n  }\n  if (Object.prototype.hasOwnProperty.call(this[typePlural], name)) {\n    throw new Error('Cannot extend ' + type + \" '\" + name + \"' again\");\n  }\n\n  // Create a new operation / attribute whose actionDict delegates to the super operation /\n  // attribute's actionDict, and which has all the keys from `inheritedActionDict`.\n  var inheritedFormals = this[typePlural][name].formals;\n  var inheritedActionDict = this[typePlural][name].actionDict;\n  var newActionDict = Object.create(inheritedActionDict);\n  Object.keys(actionDict).forEach(function(name) {\n    newActionDict[name] = actionDict[name];\n  });\n\n  this[typePlural][name] = type === 'operation' ?\n      new Operation(name, inheritedFormals, newActionDict) :\n      new Attribute(name, newActionDict);\n\n  // The following check is not strictly necessary (it will happen later anyway) but it's better to\n  // catch errors early.\n  this[typePlural][name].checkActionDict(this.grammar);\n};\n\nSemantics.prototype.assertNewName = function(name, type) {\n  if (Wrapper.prototype.hasOwnProperty(name)) {\n    throw new Error(\n        'Cannot add ' + type + \" '\" + name + \"': that's a reserved name\");\n  }\n  if (name in this.operations) {\n    throw new Error(\n        'Cannot add ' + type + \" '\" + name + \"': an operation with that name already exists\");\n  }\n  if (name in this.attributes) {\n    throw new Error(\n        'Cannot add ' + type + \" '\" + name + \"': an attribute with that name already exists\");\n  }\n};\n\n// Returns a wrapper for the given CST `node` in this semantics.\n// If `node` is already a wrapper, returns `node` itself.  // TODO: why is this needed?\nSemantics.prototype.wrap = function(node, source, optBaseInterval) {\n  var baseInterval = optBaseInterval || source;\n  return node instanceof this.Wrapper ? node : new this.Wrapper(node, source, baseInterval);\n};\n\n// Creates a new Semantics instance for `grammar`, inheriting operations and attributes from\n// `optSuperSemantics`, if it is specified. Returns a function that acts as a proxy for the new\n// Semantics instance. When that function is invoked with a CST node as an argument, it returns\n// a wrapper for that node which gives access to the operations and attributes provided by this\n// semantics.\nSemantics.createSemantics = function(grammar, optSuperSemantics) {\n  var s = new Semantics(\n      grammar,\n      optSuperSemantics !== undefined ?\n          optSuperSemantics :\n          Semantics.BuiltInSemantics._getSemantics());\n\n  // To enable clients to invoke a semantics like a function, return a function that acts as a proxy\n  // for `s`, which is the real `Semantics` instance.\n  var proxy = function ASemantics(matchResult) {\n    if (!(matchResult instanceof MatchResult)) {\n      throw new TypeError(\n          'Semantics expected a MatchResult, but got ' + common.unexpectedObjToString(matchResult));\n    }\n    if (matchResult.failed()) {\n      throw new TypeError('cannot apply Semantics to ' + matchResult.toString());\n    }\n\n    var cst = matchResult._cst;\n    if (cst.grammar !== grammar) {\n      throw new Error(\n          \"Cannot use a MatchResult from grammar '\" + cst.grammar.name +\n          \"' with a semantics for '\" + grammar.name + \"'\");\n    }\n    var inputStream = new InputStream(matchResult.input);\n    return s.wrap(cst, inputStream.interval(matchResult._cstOffset, matchResult.input.length));\n  };\n\n  // Forward public methods from the proxy to the semantics instance.\n  proxy.addOperation = function(signature, actionDict) {\n    s.addOperationOrAttribute('operation', signature, actionDict);\n    return proxy;\n  };\n  proxy.extendOperation = function(name, actionDict) {\n    s.extendOperationOrAttribute('operation', name, actionDict);\n    return proxy;\n  };\n  proxy.addAttribute = function(name, actionDict) {\n    s.addOperationOrAttribute('attribute', name, actionDict);\n    return proxy;\n  };\n  proxy.extendAttribute = function(name, actionDict) {\n    s.extendOperationOrAttribute('attribute', name, actionDict);\n    return proxy;\n  };\n  proxy._getActionDict = function(operationOrAttributeName) {\n    var action = s.operations[operationOrAttributeName] || s.attributes[operationOrAttributeName];\n    if (!action) {\n      throw new Error('\"' + operationOrAttributeName + '\" is not a valid operation or attribute ' +\n        'name in this semantics for \"' + grammar.name + '\"');\n    }\n    return action.actionDict;\n  };\n  proxy._remove = function(operationOrAttributeName) {\n    var semantic;\n    if (operationOrAttributeName in s.operations) {\n      semantic = s.operations[operationOrAttributeName];\n      delete s.operations[operationOrAttributeName];\n    } else if (operationOrAttributeName in s.attributes) {\n      semantic = s.attributes[operationOrAttributeName];\n      delete s.attributes[operationOrAttributeName];\n    }\n    delete s.Wrapper.prototype[operationOrAttributeName];\n    return semantic;\n  };\n  proxy.getOperationNames = function() {\n    return Object.keys(s.operations);\n  };\n  proxy.getAttributeNames = function() {\n    return Object.keys(s.attributes);\n  };\n  proxy.getGrammar = function() {\n    return s.grammar;\n  };\n  proxy.toRecipe = function(semanticsOnly) {\n    return s.toRecipe(semanticsOnly);\n  };\n\n  // Make the proxy's toString() work.\n  proxy.toString = s.toString.bind(s);\n\n  // Returns the semantics for the proxy.\n  proxy._getSemantics = function() {\n    return s;\n  };\n\n  return proxy;\n};\n\n// ----------------- Operation -----------------\n\n// An Operation represents a function to be applied to a concrete syntax tree (CST) -- it's very\n// similar to a Visitor (http://en.wikipedia.org/wiki/Visitor_pattern). An operation is executed by\n// recursively walking the CST, and at each node, invoking the matching semantic action from\n// `actionDict`. See `Operation.prototype.execute` for details of how a CST node's matching semantic\n// action is found.\nfunction Operation(name, formals, actionDict, builtInDefault) {\n  this.name = name;\n  this.formals = formals;\n  this.actionDict = actionDict;\n  this.builtInDefault = builtInDefault;\n}\n\nOperation.prototype.typeName = 'operation';\n\nOperation.prototype.checkActionDict = function(grammar) {\n  grammar._checkTopDownActionDict(this.typeName, this.name, this.actionDict);\n};\n\n// Execute this operation on the CST node associated with `nodeWrapper` in the context of the given\n// Semantics instance.\nOperation.prototype.execute = function(semantics, nodeWrapper) {\n  try {\n    // Look for a semantic action whose name matches the node's constructor name, which is either\n    // the name of a rule in the grammar, or '_terminal' (for a terminal node), or '_iter' (for an\n    // iteration node). In the latter case, the action function receives a single argument, which\n    // is an array containing all of the children of the CST node.\n    var ctorName = nodeWrapper._node.ctorName;\n    var actionFn = this.actionDict[ctorName];\n    var ans;\n    if (actionFn) {\n      globalActionStack.push([this, ctorName]);\n      ans = this.doAction(semantics, nodeWrapper, actionFn, nodeWrapper.isIteration());\n      return ans;\n    }\n\n    // The action dictionary does not contain a semantic action for this specific type of node.\n    // If this is a nonterminal node and the programmer has provided a `_nonterminal` semantic\n    // action, we invoke it:\n    if (nodeWrapper.isNonterminal()) {\n      actionFn = this.actionDict._nonterminal;\n      if (actionFn) {\n        globalActionStack.push([this, '_nonterminal', ctorName]);\n        ans = this.doAction(semantics, nodeWrapper, actionFn, true);\n        return ans;\n      }\n    }\n\n    // Otherwise, we invoke the '_default' semantic action.\n    globalActionStack.push([this, 'default action', ctorName]);\n    ans = this.doAction(semantics, nodeWrapper, this.actionDict._default, true);\n    return ans;\n  } finally {\n    globalActionStack.pop();\n  }\n};\n\n// Invoke `actionFn` on the CST node that corresponds to `nodeWrapper`, in the context of\n// `semantics`. If `optPassChildrenAsArray` is truthy, `actionFn` will be called with a single\n// argument, which is an array of wrappers. Otherwise, the number of arguments to `actionFn` will\n// be equal to the number of children in the CST node.\nOperation.prototype.doAction = function(semantics, nodeWrapper, actionFn, optPassChildrenAsArray) {\n  return optPassChildrenAsArray ?\n      actionFn.call(nodeWrapper, nodeWrapper._children()) :\n      actionFn.apply(nodeWrapper, nodeWrapper._children());\n};\n\n// ----------------- Attribute -----------------\n\n// Attributes are Operations whose results are memoized. This means that, for any given semantics,\n// the semantic action for a CST node will be invoked no more than once.\nfunction Attribute(name, actionDict, builtInDefault) {\n  this.name = name;\n  this.formals = [];\n  this.actionDict = actionDict;\n  this.builtInDefault = builtInDefault;\n}\ninherits(Attribute, Operation);\n\nAttribute.prototype.typeName = 'attribute';\n\nAttribute.prototype.execute = function(semantics, nodeWrapper) {\n  var node = nodeWrapper._node;\n  var key = semantics.attributeKeys[this.name];\n  if (!node.hasOwnProperty(key)) {\n    // The following is a super-send -- isn't JS beautiful? :/\n    node[key] = Operation.prototype.execute.call(this, semantics, nodeWrapper);\n  }\n  return node[key];\n};\n\n// ----------------- Deferred initialization -----------------\n\nutil.awaitBuiltInRules(function(builtInRules) {\n  var operationsAndAttributesGrammar = require('../dist/operations-and-attributes');\n  initBuiltInSemantics(builtInRules);\n  initPrototypeParser(operationsAndAttributesGrammar);  // requires BuiltInSemantics\n});\n\nfunction initBuiltInSemantics(builtInRules) {\n  var actions = {\n    empty: function() {\n      return this.iteration();\n    },\n    nonEmpty: function(first, _, rest) {\n      return this.iteration([first].concat(rest.children));\n    }\n  };\n\n  Semantics.BuiltInSemantics = Semantics\n      .createSemantics(builtInRules, null)\n      .addOperation('asIteration', {\n        emptyListOf: actions.empty,\n        nonemptyListOf: actions.nonEmpty,\n        EmptyListOf: actions.empty,\n        NonemptyListOf: actions.nonEmpty\n      });\n}\n\nfunction initPrototypeParser(grammar) {\n  prototypeGrammarSemantics = grammar.createSemantics().addOperation('parse', {\n    AttributeSignature: function(name) {\n      return {\n        name: name.parse(),\n        formals: []\n      };\n    },\n    OperationSignature: function(name, optFormals) {\n      return {\n        name: name.parse(),\n        formals: optFormals.parse()[0] || []\n      };\n    },\n    Formals: function(oparen, fs, cparen) {\n      return fs.asIteration().parse();\n    },\n    name: function(first, rest) {\n      return this.sourceString;\n    }\n  });\n  prototypeGrammar = grammar;\n};\n\n// --------------------------------------------------------------------\n// Exports\n// --------------------------------------------------------------------\n\nmodule.exports = Semantics;\n","'use strict';\n\n// --------------------------------------------------------------------\n// Imports\n// --------------------------------------------------------------------\n\nvar CaseInsensitiveTerminal = require('./CaseInsensitiveTerminal');\nvar Matcher = require('./Matcher');\nvar Semantics = require('./Semantics');\nvar common = require('./common');\nvar errors = require('./errors');\nvar pexprs = require('./pexprs');\n\n// --------------------------------------------------------------------\n// Private stuff\n// --------------------------------------------------------------------\n\nfunction getSortedRuleValues(grammar) {\n  return Object.keys(grammar.rules).sort().map(function(name) { return grammar.rules[name]; });\n}\n\nfunction Grammar(\n    name,\n    superGrammar,\n    rules,\n    optDefaultStartRule) {\n  this.name = name;\n  this.superGrammar = superGrammar;\n  this.rules = rules;\n  if (optDefaultStartRule) {\n    if (!(optDefaultStartRule in rules)) {\n      throw new Error(\"Invalid start rule: '\" + optDefaultStartRule +\n                      \"' is not a rule in grammar '\" + name + \"'\");\n    }\n    this.defaultStartRule = optDefaultStartRule;\n  }\n}\n\nvar ohmGrammar;\nvar buildGrammar;\n\n// This method is called from main.js once Ohm has loaded.\nGrammar.initApplicationParser = function(grammar, builderFn) {\n  ohmGrammar = grammar;\n  buildGrammar = builderFn;\n};\n\nGrammar.prototype = {\n  matcher: function() {\n    return new Matcher(this);\n  },\n\n  // Return true if the grammar is a built-in grammar, otherwise false.\n  // NOTE: This might give an unexpected result if called before BuiltInRules is defined!\n  isBuiltIn: function() {\n    return this === Grammar.ProtoBuiltInRules || this === Grammar.BuiltInRules;\n  },\n\n  equals: function(g) {\n    if (this === g) {\n      return true;\n    }\n    // Do the cheapest comparisons first.\n    if (g == null ||\n        this.name !== g.name ||\n        this.defaultStartRule !== g.defaultStartRule ||\n        !(this.superGrammar === g.superGrammar || this.superGrammar.equals(g.superGrammar))) {\n      return false;\n    }\n    var myRules = getSortedRuleValues(this);\n    var otherRules = getSortedRuleValues(g);\n    return myRules.length === otherRules.length && myRules.every(function(rule, i) {\n      return rule.description === otherRules[i].description &&\n             rule.formals.join(',') === otherRules[i].formals.join(',') &&\n             rule.body.toString() === otherRules[i].body.toString();\n    });\n  },\n\n  match: function(input, optStartApplication) {\n    var m = this.matcher();\n    m.replaceInputRange(0, 0, input);\n    return m.match(optStartApplication);\n  },\n\n  trace: function(input, optStartApplication) {\n    var m = this.matcher();\n    m.replaceInputRange(0, 0, input);\n    return m.trace(optStartApplication);\n  },\n\n  semantics: function() {\n    // TODO: Remove this eventually! Deprecated in v0.12.\n    throw new Error('semantics() is deprecated -- use createSemantics() instead.');\n  },\n\n  createSemantics: function() {\n    return Semantics.createSemantics(this);\n  },\n\n  extendSemantics: function(superSemantics) {\n    return Semantics.createSemantics(this, superSemantics._getSemantics());\n  },\n\n  // Check that every key in `actionDict` corresponds to a semantic action, and that it maps to\n  // a function of the correct arity. If not, throw an exception.\n  _checkTopDownActionDict: function(what, name, actionDict) {\n    function isSpecialAction(a) {\n      return a === '_iter' || a === '_terminal' || a === '_nonterminal' || a === '_default';\n    }\n\n    var problems = [];\n    for (var k in actionDict) {\n      var v = actionDict[k];\n      if (!isSpecialAction(k) && !(k in this.rules)) {\n        problems.push(\"'\" + k + \"' is not a valid semantic action for '\" + this.name + \"'\");\n      } else if (typeof v !== 'function') {\n        problems.push(\n            \"'\" + k + \"' must be a function in an action dictionary for '\" + this.name + \"'\");\n      } else {\n        var actual = v.length;\n        var expected = this._topDownActionArity(k);\n        if (actual !== expected) {\n          problems.push(\n              \"Semantic action '\" + k + \"' has the wrong arity: \" +\n              'expected ' + expected + ', got ' + actual);\n        }\n      }\n    }\n    if (problems.length > 0) {\n      var prettyProblems = problems.map(function(problem) { return '- ' + problem; });\n      var error = new Error(\n          \"Found errors in the action dictionary of the '\" + name + \"' \" + what + ':\\n' +\n          prettyProblems.join('\\n'));\n      error.problems = problems;\n      throw error;\n    }\n  },\n\n  // Return the expected arity for a semantic action named `actionName`, which\n  // is either a rule name or a special action name like '_nonterminal'.\n  _topDownActionArity: function(actionName) {\n    if (actionName === '_iter' || actionName === '_nonterminal' || actionName === '_default') {\n      return 1;\n    } else if (actionName === '_terminal') {\n      return 0;\n    }\n    return this.rules[actionName].body.getArity();\n  },\n\n  _inheritsFrom: function(grammar) {\n    var g = this.superGrammar;\n    while (g) {\n      if (g.equals(grammar, true)) {\n        return true;\n      }\n      g = g.superGrammar;\n    }\n    return false;\n  },\n\n  toRecipe: function(optVarName) {\n    var metaInfo = {};\n    // Include the grammar source if it is available.\n    if (this.source) {\n      metaInfo.source = this.source.contents;\n    }\n\n    var superGrammar = null;\n    if (this.superGrammar && !this.superGrammar.isBuiltIn()) {\n      superGrammar = JSON.parse(this.superGrammar.toRecipe());\n    }\n\n    var startRule = null;\n    if (this.defaultStartRule) {\n      startRule = this.defaultStartRule;\n    }\n\n    var rules = {};\n    var self = this;\n    Object.keys(this.rules).forEach(function(ruleName) {\n      var ruleInfo = self.rules[ruleName];\n      var body = ruleInfo.body;\n      var isDefinition = !self.superGrammar || !self.superGrammar.rules[ruleName];\n\n      var operation;\n      if (isDefinition) {\n        operation = 'define';\n      } else {\n        operation = body instanceof pexprs.Extend ? 'extend' : 'override';\n      }\n\n      var metaInfo = {};\n      if (ruleInfo.source && self.source) {\n        var adjusted = ruleInfo.source.relativeTo(self.source);\n        metaInfo.sourceInterval = [adjusted.startIdx, adjusted.endIdx];\n      }\n\n      var description = isDefinition ? ruleInfo.description : null;\n      var bodyRecipe = body.outputRecipe(ruleInfo.formals, self.source);\n\n      rules[ruleName] = [\n        operation, // \"define\"/\"extend\"/\"override\"\n        metaInfo,\n        description,\n        ruleInfo.formals,\n        bodyRecipe\n      ];\n    });\n\n    return JSON.stringify([\n      'grammar',\n      metaInfo,\n      this.name,\n      superGrammar,\n      startRule,\n      rules\n    ]);\n  },\n\n  // TODO: Come up with better names for these methods.\n  // TODO: Write the analog of these methods for inherited attributes.\n  toOperationActionDictionaryTemplate: function() {\n    return this._toOperationOrAttributeActionDictionaryTemplate();\n  },\n  toAttributeActionDictionaryTemplate: function() {\n    return this._toOperationOrAttributeActionDictionaryTemplate();\n  },\n\n  _toOperationOrAttributeActionDictionaryTemplate: function() {\n    // TODO: add the super-grammar's templates at the right place, e.g., a case for AddExpr_plus\n    // should appear next to other cases of AddExpr.\n\n    var sb = new common.StringBuffer();\n    sb.append('{');\n\n    var first = true;\n    for (var ruleName in this.rules) {\n      var body = this.rules[ruleName].body;\n      if (first) {\n        first = false;\n      } else {\n        sb.append(',');\n      }\n      sb.append('\\n');\n      sb.append('  ');\n      this.addSemanticActionTemplate(ruleName, body, sb);\n    }\n\n    sb.append('\\n}');\n    return sb.contents();\n  },\n\n  addSemanticActionTemplate: function(ruleName, body, sb) {\n    sb.append(ruleName);\n    sb.append(': function(');\n    var arity = this._topDownActionArity(ruleName);\n    sb.append(common.repeat('_', arity).join(', '));\n    sb.append(') {\\n');\n    sb.append('  }');\n  },\n\n  // Parse a string which expresses a rule application in this grammar, and return the\n  // resulting Apply node.\n  parseApplication: function(str) {\n    var app;\n    if (str.indexOf('<') === -1) {\n      // simple application\n      app = new pexprs.Apply(str);\n    } else {\n      // parameterized application\n      var cst = ohmGrammar.match(str, 'Base_application');\n      app = buildGrammar(cst, {});\n    }\n\n    // Ensure that the application is valid.\n    if (!(app.ruleName in this.rules)) {\n      throw errors.undeclaredRule(app.ruleName, this.name);\n    }\n    var formals = this.rules[app.ruleName].formals;\n    if (formals.length !== app.args.length) {\n      var source = this.rules[app.ruleName].source;\n      throw errors.wrongNumberOfParameters(app.ruleName, formals.length, app.args.length, source);\n    }\n    return app;\n  }\n};\n\n// The following grammar contains a few rules that couldn't be written  in \"userland\".\n// At the bottom of src/main.js, we create a sub-grammar of this grammar that's called\n// `BuiltInRules`. That grammar contains several convenience rules, e.g., `letter` and\n// `digit`, and is implicitly the super-grammar of any grammar whose super-grammar\n// isn't specified.\nGrammar.ProtoBuiltInRules = new Grammar(\n  'ProtoBuiltInRules',  // name\n  undefined,  // supergrammar\n  {\n    any: {\n      body: pexprs.any,\n      formals: [],\n      description: 'any character',\n      primitive: true\n    },\n    end: {\n      body: pexprs.end,\n      formals: [],\n      description: 'end of input',\n      primitive: true\n    },\n\n    caseInsensitive: {\n      body: new CaseInsensitiveTerminal(new pexprs.Param(0)),\n      formals: ['str'],\n      primitive: true\n    },\n    lower: {\n      body: new pexprs.UnicodeChar('Ll'),\n      formals: [],\n      description: 'a lowercase letter',\n      primitive: true\n    },\n    upper: {\n      body: new pexprs.UnicodeChar('Lu'),\n      formals: [],\n      description: 'an uppercase letter',\n      primitive: true\n    },\n    // The union of Lt (titlecase), Lm (modifier), and Lo (other), i.e. any letter not in Ll or Lu.\n    unicodeLtmo: {\n      body: new pexprs.UnicodeChar('Ltmo'),\n      formals: [],\n      description: 'a Unicode character in Lt, Lm, or Lo',\n      primitive: true\n    },\n\n    // These rules are not truly primitive (they could be written in userland) but are defined\n    // here for bootstrapping purposes.\n    spaces: {\n      body: new pexprs.Star(new pexprs.Apply('space')),\n      formals: []\n    },\n    space: {\n      body: new pexprs.Range('\\x00', ' '),\n      formals: [],\n      description: 'a space'\n    }\n  }\n);\n\n// --------------------------------------------------------------------\n// Exports\n// --------------------------------------------------------------------\n\nmodule.exports = Grammar;\n","'use strict';\n\n// --------------------------------------------------------------------\n// Imports\n// --------------------------------------------------------------------\n\nvar Grammar = require('./Grammar');\nvar InputStream = require('./InputStream');\nvar common = require('./common');\nvar errors = require('./errors');\nvar pexprs = require('./pexprs');\n\n// --------------------------------------------------------------------\n// Private Stuff\n// --------------------------------------------------------------------\n\n// Constructors\n\nfunction GrammarDecl(name) {\n  this.name = name;\n}\n\n// Helpers\n\nGrammarDecl.prototype.sourceInterval = function(startIdx, endIdx) {\n  return this.source.subInterval(startIdx, endIdx - startIdx);\n};\n\nGrammarDecl.prototype.ensureSuperGrammar = function() {\n  if (!this.superGrammar) {\n    this.withSuperGrammar(\n        // TODO: The conditional expression below is an ugly hack. It's kind of ok because\n        // I doubt anyone will ever try to declare a grammar called `BuiltInRules`. Still,\n        // we should try to find a better way to do this.\n        this.name === 'BuiltInRules' ?\n            Grammar.ProtoBuiltInRules :\n            Grammar.BuiltInRules);\n  }\n  return this.superGrammar;\n};\n\nGrammarDecl.prototype.installOverriddenOrExtendedRule = function(name, formals, body, source) {\n  var duplicateParameterNames = common.getDuplicates(formals);\n  if (duplicateParameterNames.length > 0) {\n    throw errors.duplicateParameterNames(name, duplicateParameterNames, source);\n  }\n  var ruleInfo = this.ensureSuperGrammar().rules[name];\n  var expectedFormals = ruleInfo.formals;\n  var expectedNumFormals = expectedFormals ? expectedFormals.length : 0;\n  if (formals.length !== expectedNumFormals) {\n    throw errors.wrongNumberOfParameters(name, expectedNumFormals, formals.length, source);\n  }\n  return this.install(name, formals, body, ruleInfo.description, source);\n};\n\nGrammarDecl.prototype.install = function(name, formals, body, description, source) {\n  this.rules[name] = {\n    body: body.introduceParams(formals),\n    formals: formals,\n    description: description,\n    source: source\n  };\n  return this;\n};\n\n// Stuff that you should only do once\n\nGrammarDecl.prototype.withSuperGrammar = function(superGrammar) {\n  if (this.superGrammar) {\n    throw new Error('the super grammar of a GrammarDecl cannot be set more than once');\n  }\n  this.superGrammar = superGrammar;\n  this.rules = Object.create(superGrammar.rules);\n\n  // Grammars with an explicit supergrammar inherit a default start rule.\n  if (!superGrammar.isBuiltIn()) {\n    this.defaultStartRule = superGrammar.defaultStartRule;\n  }\n  return this;\n};\n\nGrammarDecl.prototype.withDefaultStartRule = function(ruleName) {\n  this.defaultStartRule = ruleName;\n  return this;\n};\n\nGrammarDecl.prototype.withSource = function(source) {\n  this.source = new InputStream(source).interval(0, source.length);\n  return this;\n};\n\n// Creates a Grammar instance, and if it passes the sanity checks, returns it.\nGrammarDecl.prototype.build = function() {\n  var grammar = new Grammar(\n      this.name,\n      this.ensureSuperGrammar(),\n      this.rules,\n      this.defaultStartRule);\n\n  // TODO: change the pexpr.prototype.assert... methods to make them add\n  // exceptions to an array that's provided as an arg. Then we'll be able to\n  // show more than one error of the same type at a time.\n  // TODO: include the offending pexpr in the errors, that way we can show\n  // the part of the source that caused it.\n  var grammarErrors = [];\n  var grammarHasInvalidApplications = false;\n  Object.keys(grammar.rules).forEach(function(ruleName) {\n    var body = grammar.rules[ruleName].body;\n    try {\n      body.assertChoicesHaveUniformArity(ruleName);\n    } catch (e) {\n      grammarErrors.push(e);\n    }\n    try {\n      body.assertAllApplicationsAreValid(ruleName, grammar);\n    } catch (e) {\n      grammarErrors.push(e);\n      grammarHasInvalidApplications = true;\n    }\n  });\n  if (!grammarHasInvalidApplications) {\n    // The following check can only be done if the grammar has no invalid applications.\n    Object.keys(grammar.rules).forEach(function(ruleName) {\n      var body = grammar.rules[ruleName].body;\n      try {\n        body.assertIteratedExprsAreNotNullable(grammar, ruleName);\n      } catch (e) {\n        grammarErrors.push(e);\n      }\n    });\n  }\n  if (grammarErrors.length > 0) {\n    errors.throwErrors(grammarErrors);\n  }\n  if (this.source) {\n    grammar.source = this.source;\n  }\n\n  return grammar;\n};\n\n// Rule declarations\n\nGrammarDecl.prototype.define = function(name, formals, body, description, source) {\n  this.ensureSuperGrammar();\n  if (this.superGrammar.rules[name]) {\n    throw errors.duplicateRuleDeclaration(name, this.name, this.superGrammar.name, source);\n  } else if (this.rules[name]) {\n    throw errors.duplicateRuleDeclaration(name, this.name, this.name, source);\n  }\n  var duplicateParameterNames = common.getDuplicates(formals);\n  if (duplicateParameterNames.length > 0) {\n    throw errors.duplicateParameterNames(name, duplicateParameterNames, source);\n  }\n  return this.install(name, formals, body, description, source);\n};\n\nGrammarDecl.prototype.override = function(name, formals, body, descIgnored, source) {\n  var ruleInfo = this.ensureSuperGrammar().rules[name];\n  if (!ruleInfo) {\n    throw errors.cannotOverrideUndeclaredRule(name, this.superGrammar.name, source);\n  }\n  this.installOverriddenOrExtendedRule(name, formals, body, source);\n  return this;\n};\n\nGrammarDecl.prototype.extend = function(name, formals, fragment, descIgnored, source) {\n  var ruleInfo = this.ensureSuperGrammar().rules[name];\n  if (!ruleInfo) {\n    throw errors.cannotExtendUndeclaredRule(name, this.superGrammar.name, source);\n  }\n  var body = new pexprs.Extend(this.superGrammar, name, fragment);\n  body.source = fragment.source;\n  this.installOverriddenOrExtendedRule(name, formals, body, source);\n  return this;\n};\n\n// --------------------------------------------------------------------\n// Exports\n// --------------------------------------------------------------------\n\nmodule.exports = GrammarDecl;\n","'use strict';\n\n// --------------------------------------------------------------------\n// Imports\n// --------------------------------------------------------------------\n\nvar GrammarDecl = require('./GrammarDecl');\nvar pexprs = require('./pexprs');\n\n// --------------------------------------------------------------------\n// Private stuff\n// --------------------------------------------------------------------\n\nfunction Builder() {}\n\nBuilder.prototype = {\n  currentDecl: null,\n\n  newGrammar: function(name) {\n    return new GrammarDecl(name);\n  },\n\n  grammar: function(metaInfo, name, superGrammar, defaultStartRule, rules) {\n    var gDecl = new GrammarDecl(name);\n    if (superGrammar) {\n      gDecl.withSuperGrammar(this.fromRecipe(superGrammar));\n    }\n    if (defaultStartRule) {\n      gDecl.withDefaultStartRule(defaultStartRule);\n    }\n    if (metaInfo && metaInfo.source) {\n      gDecl.withSource(metaInfo.source);\n    }\n\n    var self = this;\n    this.currentDecl = gDecl;\n    Object.keys(rules).forEach(function(ruleName) {\n      var ruleRecipe = rules[ruleName];\n\n      var action = ruleRecipe[0]; // define/extend/override\n      var metaInfo = ruleRecipe[1];\n      var description = ruleRecipe[2];\n      var formals = ruleRecipe[3];\n      var body = self.fromRecipe(ruleRecipe[4]);\n\n      var source;\n      if (gDecl.source && metaInfo && metaInfo.sourceInterval) {\n        source = gDecl.source.subInterval(\n            metaInfo.sourceInterval[0],\n            metaInfo.sourceInterval[1] - metaInfo.sourceInterval[0]);\n      }\n      gDecl[action](ruleName, formals, body, description, source);\n    });\n    this.currentDecl = null;\n    return gDecl.build();\n  },\n\n  terminal: function(x) {\n    return new pexprs.Terminal(x);\n  },\n\n  range: function(from, to) {\n    return new pexprs.Range(from, to);\n  },\n\n  param: function(index) {\n    return new pexprs.Param(index);\n  },\n\n  alt: function(/* term1, term1, ... */) {\n    var terms = [];\n    for (var idx = 0; idx < arguments.length; idx++) {\n      var arg = arguments[idx];\n      if (!(arg instanceof pexprs.PExpr)) {\n        arg = this.fromRecipe(arg);\n      }\n      if (arg instanceof pexprs.Alt) {\n        terms = terms.concat(arg.terms);\n      } else {\n        terms.push(arg);\n      }\n    }\n    return terms.length === 1 ? terms[0] : new pexprs.Alt(terms);\n  },\n\n  seq: function(/* factor1, factor2, ... */) {\n    var factors = [];\n    for (var idx = 0; idx < arguments.length; idx++) {\n      var arg = arguments[idx];\n      if (!(arg instanceof pexprs.PExpr)) {\n        arg = this.fromRecipe(arg);\n      }\n      if (arg instanceof pexprs.Seq) {\n        factors = factors.concat(arg.factors);\n      } else {\n        factors.push(arg);\n      }\n    }\n    return factors.length === 1 ? factors[0] : new pexprs.Seq(factors);\n  },\n\n  star: function(expr) {\n    if (!(expr instanceof pexprs.PExpr)) {\n      expr = this.fromRecipe(expr);\n    }\n    return new pexprs.Star(expr);\n  },\n\n  plus: function(expr) {\n    if (!(expr instanceof pexprs.PExpr)) {\n      expr = this.fromRecipe(expr);\n    }\n    return new pexprs.Plus(expr);\n  },\n\n  opt: function(expr) {\n    if (!(expr instanceof pexprs.PExpr)) {\n      expr = this.fromRecipe(expr);\n    }\n    return new pexprs.Opt(expr);\n  },\n\n  not: function(expr) {\n    if (!(expr instanceof pexprs.PExpr)) {\n      expr = this.fromRecipe(expr);\n    }\n    return new pexprs.Not(expr);\n  },\n\n  la: function(expr) {\n    // TODO: temporary to still be able to read old recipes\n    return this.lookahead(expr);\n  },\n\n  lookahead: function(expr) {\n    if (!(expr instanceof pexprs.PExpr)) {\n      expr = this.fromRecipe(expr);\n    }\n    return new pexprs.Lookahead(expr);\n  },\n\n  lex: function(expr) {\n    if (!(expr instanceof pexprs.PExpr)) {\n      expr = this.fromRecipe(expr);\n    }\n    return new pexprs.Lex(expr);\n  },\n\n  app: function(ruleName, optParams) {\n    if (optParams && optParams.length > 0) {\n      optParams = optParams.map(function(param) {\n        return param instanceof pexprs.PExpr ? param :\n          this.fromRecipe(param);\n      }, this);\n    }\n    return new pexprs.Apply(ruleName, optParams);\n  },\n\n  fromRecipe: function(recipe) {\n    // the meta-info of 'grammar' is proccessed in Builder.grammar\n    var result = this[recipe[0]].apply(this,\n      recipe[0] === 'grammar' ? recipe.slice(1) : recipe.slice(2));\n\n    var metaInfo = recipe[1];\n    if (metaInfo) {\n      if (metaInfo.sourceInterval && this.currentDecl) {\n        result.withSource(\n          this.currentDecl.sourceInterval.apply(this.currentDecl, metaInfo.sourceInterval)\n        );\n      }\n    }\n    return result;\n  }\n};\n\n// --------------------------------------------------------------------\n// Exports\n// --------------------------------------------------------------------\n\nmodule.exports = Builder;\n","module.exports={_from:\"ohm-js@^0.14.0\",_id:\"ohm-js@0.14.0\",_inBundle:!1,_integrity:\"sha512-Iuiapfkaf0ZdvuJo9thtE57BT93uNOSIb3/DtwuBNBJiiT28ALzTg++w3HoAXWbQBYPem9Bd8BaNJcDYoABWUA==\",_location:\"/ohm-js\",_phantomChildren:{},_requested:{type:\"range\",registry:!0,raw:\"ohm-js@^0.14.0\",name:\"ohm-js\",escapedName:\"ohm-js\",rawSpec:\"^0.14.0\",saveSpec:null,fetchSpec:\"^0.14.0\"},_requiredBy:[\"#DEV:/\",\"#USER\"],_resolved:\"https://registry.npmjs.org/ohm-js/-/ohm-js-0.14.0.tgz\",_shasum:\"ef5dbe33d493407916f8c4c12115161872c2bc0d\",_spec:\"ohm-js@^0.14.0\",_where:\"/Users/Maschine/Sites/welle\",author:{name:\"Alex Warth\",email:\"alexwarth@gmail.com\",url:\"http://tinlizzie.org/~awarth\"},bin:{\"ohm-js\":\"src/ohm-cmd.js\"},bugs:{url:\"https://github.com/harc/ohm/issues\"},bundleDependencies:!1,contributors:[{name:\"Patrick Dubroy\",email:\"pdubroy@gmail.com\"},{name:\"Meixian Li\",email:\"lmeixian@gmail.com\"},{name:\"Marko Röder\",email:\"m.roeder@photon-software.de\"},{name:\"Tony Garnock-Jones\",email:\"tonygarnockjones@gmail.com\"},{name:\"Saketh Kasibatla\",email:\"sake.kasi@gmail.com\"},{name:\"Lionel Landwerlin\",email:\"llandwerlin@gmail.com\"},{name:\"Jason Merrill\",email:\"jwmerrill@gmail.com\"},{name:\"Yoshiki Ohshima\",email:\"Yoshiki.Ohshima@acm.org\"},{name:\"Ray Toal\",email:\"rtoal@lmu.edu\"},{name:\"Jonathan Edwards\",email:\"JonathanMEdwards@gmail.com\"},{name:\"Neil Jewers\",email:\"njjewers@uwaterloo.ca\"},{name:\"sfinnie\",email:\"scott.finnie@gmail.com\"},{name:\"Arthur Carabott\",email:\"arthurc@gmail.com\"},{name:\"Daniel Tomlinson\",email:\"DanielTomlinson@me.com\"},{name:\"Justin Chase\",email:\"justin.m.chase@gmail.com\"},{name:\"Leslie Ying\",email:\"acetophore@users.noreply.github.com\"},{name:\"Luca Guzzon\",email:\"luca.guzzon@gmail.com\"},{name:\"Mike Niebling\",email:\"(none)\",url:\"none\"},{name:\"Milan Lajtoš\",email:\"milan.lajtos@me.com\"},{name:\"Stephan Seidt\",email:\"stephan.seidt@gmail.com\"},{name:\"acslk\",email:\"d_vd415@hotmail.com\"},{name:\"codeZeilen\",email:\"codeZeilen@users.noreply.github.com\"},{name:\"owch\",email:\"bowenrainyday@gmail.com\"}],dependencies:{\"es6-symbol\":\"^3.1.0\",inherits:\"^2.0.3\",\"is-buffer\":\"^1.1.4\",\"util-extend\":\"^1.0.3\"},deprecated:!1,description:\"An object-oriented language for parsing and pattern matching\",devDependencies:{\"@types/tape\":\"^4.2.29\",browserify:\"^13.1.1\",eslint:\"~3.13.1\",\"eslint-config-google\":\"~0.7.1\",\"eslint-plugin-camelcase-ohm\":\"~0.2.1\",\"eslint-plugin-no-extension-in-require\":\"~0.2.0\",\"eslint-plugin-tape\":\"~1.1.0\",husky:\"^0.14.3\",jsdom:\"^9.9.1\",json:\"^9.0.4\",markscript:\"^0.5.0\",\"node-static\":\"^0.7.9\",nodemon:\"^1.11.0\",\"tap-spec\":\"^4.1.1\",tape:\"^4.6.3\",\"tape-catch\":\"^1.0.6\",\"ts-node\":\"^2.1.0\",typescript:\"2.2.1\",\"uglify-js\":\"^2.7.5\",\"walk-sync\":\"^0.3.1\",watchify:\"^3.8.0\"},engines:{node:\">=0.12.1\"},homepage:\"https://ohmlang.github.io/\",keywords:[\"parser\",\"compiler\",\"pattern matching\",\"pattern-matching\",\"ometa\",\"ometa/js\",\"ometa-js\",\"ometajs\",\"rapid\",\"prototyping\"],license:\"MIT\",main:\"src/main.js\",name:\"ohm-js\",repository:{type:\"git\",url:\"git+https://github.com/harc/ohm.git\"},scripts:{bootstrap:\"bash bin/bootstrap --test || (echo 'Bootstrap failed.' && mv -v dist/ohm-grammar.js.old dist/ohm-grammar.js && mv -v dist/built-in-rules.js.old dist/built-in-rules.js && mv -v dist/operations-and-attributes.js.old dist/operations-and-attributes.js)\",build:\"node bin/build-debug.js && uglifyjs dist/ohm.js > dist/ohm.min.js\",\"build-debug\":\"bash bin/build-debug.sh\",\"ci-test\":\"npm run lint && npm test && ts-node test/test-typings.ts\",clean:\"rm -f dist/ohm.js dist/ohm.min.js\",\"deploy-gh-pages\":\"bin/deploy-gh-pages.sh\",lint:\"eslint .\",postinstall:\"node bin/dev-setup.js\",prebootstrap:\"bash bin/prebootstrap\",\"prebuild-debug\":\"bash bin/update-env.sh\",precommit:\"npm run prepublishOnly\",prepublishOnly:\"npm run lint && npm run build && npm run bootstrap\",pretest:\"bash bin/update-env.sh\",test:\"tape 'test/**/*.js' | tap-spec\",\"test-watch\":\"bash bin/test-watch\",\"unsafe-bootstrap\":\"bash bin/bootstrap\",visualizer:\"bash bin/ohm-visualizer\",watch:\"bash bin/watch.sh\"},types:\"index.d.ts\",version:\"0.14.0\"};","/* global browserifyGlobalOhmVersion */\n\n'use strict';\n\n// When running under Node, read the version from package.json. For the browser,\n// use a special global variable defined in the build process (see bin/build-debug.js).\nmodule.exports = typeof browserifyGlobalOhmVersion === 'string'\n    ? browserifyGlobalOhmVersion\n    : require('../package.json').version;\n","/*!\n * Determine if an object is a Buffer\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n\n// The _isBuffer check is for Safari 5-7 support, because it's missing\n// Object.prototype.constructor. Remove this eventually\nmodule.exports = function (obj) {\n  return obj != null && (isBuffer(obj) || isSlowBuffer(obj) || !!obj._isBuffer)\n}\n\nfunction isBuffer (obj) {\n  return !!obj.constructor && typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\n}\n\n// For Node v0.10 support. Remove this eventually.\nfunction isSlowBuffer (obj) {\n  return typeof obj.readFloatLE === 'function' && typeof obj.slice === 'function' && isBuffer(obj.slice(0, 0))\n}\n","'use strict';\n\n// --------------------------------------------------------------------\n// Imports\n// --------------------------------------------------------------------\n\nvar assert = require('../src/common').assert;\n\n// --------------------------------------------------------------------\n// Private stuff\n// --------------------------------------------------------------------\n\n// Helpers\n\nfunction getProp(name, thing, fn) {\n  return fn(thing[name]);\n}\n\nfunction mapProp(name, thing, fn) {\n  return thing[name].map(fn);\n}\n\n// Returns a function that will walk a single property of a node.\n// `descriptor` is a string indicating the property name, optionally ending\n// with '[]' (e.g., 'children[]').\nfunction getPropWalkFn(descriptor) {\n  var parts = descriptor.split(/ ?\\[\\]/);\n  if (parts.length === 2) {\n    return mapProp.bind(null, parts[0]);\n  }\n  return getProp.bind(null, descriptor);\n}\n\nfunction getProps(walkFns, thing, fn) {\n  return walkFns.map(function(walkFn) {\n    return walkFn(thing, fn);\n  });\n}\n\nfunction getWalkFn(shape) {\n  if (typeof shape === 'string') {\n    return getProps.bind(null, [getPropWalkFn(shape)]);\n  } else if (Array.isArray(shape)) {\n    return getProps.bind(null, shape.map(getPropWalkFn));\n  } else {\n    assert(typeof shape === 'function', 'Expected a string, Array, or function');\n    assert(shape.length === 2, 'Expected a function of arity 2, got ' + shape.length);\n    return shape;\n  }\n}\n\nfunction isRestrictedIdentifier(str) {\n  return /^[a-zA-Z_][0-9a-zA-Z_]*$/.test(str);\n}\n\nfunction trim(s) {\n  return s.trim();\n}\n\nfunction parseSignature(sig) {\n  var parts = sig.split(/[()]/).map(trim);\n  if (parts.length === 3 && parts[2] === '') {\n    var name = parts[0];\n    var params = [];\n    if (parts[1].length > 0) {\n      params = parts[1].split(',').map(trim);\n    }\n    if (isRestrictedIdentifier(name) && params.every(isRestrictedIdentifier)) {\n      return {name: name, formals: params};\n    }\n  }\n  throw new Error('Invalid operation signature: ' + sig);\n}\n\n/*\n  A VisitorFamily contains a set of recursive operations that are defined over some kind of\n  tree structure. The `config` parameter specifies how to walk the tree:\n  - 'getTag' is function which, given a node in the tree, returns the node's 'tag' (type)\n  - 'shapes' an object that maps from a tag to a value that describes how to recursively\n    evaluate the operation for nodes of that type. The value can be:\n    * a string indicating the property name that holds that node's only child\n    * an Array of property names (or an empty array indicating a leaf type), or\n    * a function taking two arguments (node, fn), and returning an Array which is the result\n      of apply `fn` to each of the node's children.\n */\nfunction VisitorFamily(config) {\n  this._shapes = config.shapes;\n  this._getTag = config.getTag;\n\n  this.Adapter = function(thing, family) {\n    this._adaptee = thing;\n    this._family = family;\n  };\n  this.Adapter.prototype.valueOf = function() {\n    throw new Error('heeey!');\n  };\n  this.operations = {};\n\n  this._arities = Object.create(null);\n  this._getChildren = Object.create(null);\n\n  var self = this;\n  Object.keys(this._shapes).forEach(function(k) {\n    var shape = self._shapes[k];\n    self._getChildren[k] = getWalkFn(shape);\n\n    // A function means the arity isn't fixed, so don't put an entry in the arity map.\n    if (typeof shape !== 'function') {\n      self._arities[k] = Array.isArray(shape) ? shape.length : 1;\n    }\n  });\n  this._wrap = function(thing) { return new self.Adapter(thing, self); };\n}\n\nVisitorFamily.prototype.wrap = function(thing) {\n  return this._wrap(thing);\n};\n\nVisitorFamily.prototype._checkActionDict = function(dict) {\n  var self = this;\n  Object.keys(dict).forEach(function(k) {\n    assert(k in self._getChildren, \"Unrecognized action name '\" + k + \"'\");\n    var action = dict[k];\n    assert(typeof action === 'function', \"Key '\" + k + \"': expected function, got \" + action);\n    if (k in self._arities) {\n      var expected = self._arities[k];\n      var actual = dict[k].length;\n      assert(actual === expected,\n             \"Action '\" + k + \"' has the wrong arity: expected \" + expected + ', got ' + actual);\n    }\n  });\n};\n\nVisitorFamily.prototype.addOperation = function(signature, actions) {\n  var sig = parseSignature(signature);\n  var name = sig.name;\n  this._checkActionDict(actions);\n  this.operations[name] = {\n    name: name,\n    formals: sig.formals,\n    actions: actions\n  };\n\n  var family = this;\n  this.Adapter.prototype[name] = function() {\n    var tag = family._getTag(this._adaptee);\n    assert(tag in family._getChildren, \"getTag returned unrecognized tag '\" + tag + \"'\");\n    assert(tag in actions, \"No action for '\" + tag + \"' in operation '\" + name + \"'\");\n\n    // Create an \"arguments object\" from the arguments that were passed to this\n    // operation / attribute.\n    var args = Object.create(null);\n    for (var i = 0; i < arguments.length; i++) {\n      args[sig.formals[i]] = arguments[i];\n    }\n\n    var oldArgs = this.args;\n    this.args = args;\n    var ans = actions[tag].apply(this, family._getChildren[tag](this._adaptee, family._wrap));\n    this.args = oldArgs;\n    return ans;\n  };\n  return this;\n};\n\n// --------------------------------------------------------------------\n// Exports\n// --------------------------------------------------------------------\n\nmodule.exports = VisitorFamily;\n","'use strict';\n\n// --------------------------------------------------------------------\n// Imports\n// --------------------------------------------------------------------\n\nvar pexprs = require('../src/pexprs');\nvar MatchResult = require('../src/MatchResult');\nvar Grammar = require('../src/Grammar');\nvar extend = require('util-extend');\n\n// --------------------------------------------------------------------\n// Operations\n// --------------------------------------------------------------------\n\nvar defaultOperation = {\n  _terminal: function() {\n    return this.primitiveValue;\n  },\n\n  _nonterminal: function(children) {\n    var ctorName = this._node.ctorName;\n    var mapping = this.args.mapping;\n\n    // without customization\n    if (!mapping.hasOwnProperty(ctorName)) {\n      // intermediate node\n      if (this._node instanceof pexprs.Alt || this._node instanceof pexprs.Apply) {\n        return children[0].toAST(mapping);\n      }\n\n      // lexical rule\n      if (this.isLexical()) {\n        return this.sourceString;\n      }\n\n      // singular node (e.g. only surrounded by literals or lookaheads)\n      var realChildren = children.filter(function(child) {\n        return !child.isTerminal();\n      });\n      if (realChildren.length === 1) {\n        return realChildren[0].toAST(mapping);\n      }\n\n      // rest: terms with multiple children\n    }\n\n    // direct forward\n    if (typeof mapping[ctorName] === 'number') {\n      return children[mapping[ctorName]].toAST(mapping);\n    }\n\n    // named/mapped children or unnamed children ('0', '1', '2', ...)\n    var propMap = mapping[ctorName] || children;\n    var node = {\n      type: ctorName\n    };\n    for (var prop in propMap) {\n      var mappedProp = mapping[ctorName] && mapping[ctorName][prop];\n      if (typeof mappedProp === 'number') {\n        // direct forward\n        node[prop] = children[mappedProp].toAST(mapping);\n      } else if ((typeof mappedProp === 'string') || (typeof mappedProp === 'boolean') ||\n          (mappedProp === null)) {\n        // primitive value\n        node[prop] = mappedProp;\n      } else if ((typeof mappedProp === 'object') && (mappedProp instanceof Number)) {\n        // primitive number (must be unboxed)\n        node[prop] = Number(mappedProp);\n      } else if (typeof mappedProp === 'function') {\n        // computed value\n        node[prop] = mappedProp.call(this, children);\n      } else if (mappedProp === undefined) {\n        if (children[prop] && !children[prop].isTerminal()) {\n          node[prop] = children[prop].toAST(mapping);\n        } else {\n          // delete predefined 'type' properties, like 'type', if explicitely removed\n          delete node[prop];\n        }\n      }\n    }\n    return node;\n  },\n\n  _iter: function(children) {\n    if (this._node.isOptional()) {\n      if (this.numChildren === 0) {\n        return null;\n      } else {\n        return children[0].toAST(this.args.mapping);\n      }\n    }\n\n    return children.map(function(child) {\n      return child.toAST(this.args.mapping);\n    }, this);\n  },\n\n  NonemptyListOf: function(first, sep, rest) {\n    return [first.toAST(this.args.mapping)].concat(rest.toAST(this.args.mapping));\n  },\n\n  EmptyListOf: function() {\n    return [];\n  }\n};\n\n// Returns a plain JavaScript object that includes an abstract syntax tree (AST)\n// for the given match result `res` containg a concrete syntax tree (CST) and grammar.\n// The optional `mapping` parameter can be used to customize how the nodes of the CST\n// are mapped to the AST (see /doc/extras.md#toastmatchresult-mapping).\nfunction toAST(res, mapping) {\n  if (!(res instanceof MatchResult) || res.failed()) {\n    throw new Error('toAST() expects a succesfull MatchResult as first parameter');\n  }\n\n  mapping = extend({}, mapping);\n  var operation = extend({}, defaultOperation);\n  for (var termName in mapping) {\n    if (typeof mapping[termName] === 'function') {\n      operation[termName] = mapping[termName];\n      delete mapping[termName];\n    }\n  }\n  var g = res._cst.grammar;\n  var s = g.createSemantics().addOperation('toAST(mapping)', operation);\n  return s(res).toAST(mapping);\n}\n\n// Returns a semantics containg the toAST(mapping) operation for the given grammar g.\nfunction semanticsForToAST(g) {\n  if (!(g instanceof Grammar)) {\n    throw new Error('semanticsToAST() expects a Grammar as parameter');\n  }\n\n  return g.createSemantics().addOperation('toAST(mapping)', defaultOperation);\n}\n\nmodule.exports = {\n  helper: toAST,\n  semantics: semanticsForToAST\n};\n","'use strict';\n\nmodule.exports = {\n  VisitorFamily: require('./VisitorFamily'),\n  semanticsForToAST: require('./semantics-toAST').semantics,\n  toAST: require('./semantics-toAST').helper\n};\n","var ohm = require('..');\nmodule.exports = ohm.makeRecipe([\"grammar\",{\"source\":\"BuiltInRules {\\n\\n  alnum  (an alpha-numeric character)\\n    = letter\\n    | digit\\n\\n  letter  (a letter)\\n    = lower\\n    | upper\\n    | unicodeLtmo\\n\\n  digit  (a digit)\\n    = \\\"0\\\"..\\\"9\\\"\\n\\n  hexDigit  (a hexadecimal digit)\\n    = digit\\n    | \\\"a\\\"..\\\"f\\\"\\n    | \\\"A\\\"..\\\"F\\\"\\n\\n  ListOf<elem, sep>\\n    = NonemptyListOf<elem, sep>\\n    | EmptyListOf<elem, sep>\\n\\n  NonemptyListOf<elem, sep>\\n    = elem (sep elem)*\\n\\n  EmptyListOf<elem, sep>\\n    = /* nothing */\\n\\n  listOf<elem, sep>\\n    = nonemptyListOf<elem, sep>\\n    | emptyListOf<elem, sep>\\n\\n  nonemptyListOf<elem, sep>\\n    = elem (sep elem)*\\n\\n  emptyListOf<elem, sep>\\n    = /* nothing */\\n\\n}\"},\"BuiltInRules\",null,null,{\"alnum\":[\"define\",{\"sourceInterval\":[18,78]},\"an alpha-numeric character\",[],[\"alt\",{\"sourceInterval\":[60,78]},[\"app\",{\"sourceInterval\":[60,66]},\"letter\",[]],[\"app\",{\"sourceInterval\":[73,78]},\"digit\",[]]]],\"letter\":[\"define\",{\"sourceInterval\":[82,142]},\"a letter\",[],[\"alt\",{\"sourceInterval\":[107,142]},[\"app\",{\"sourceInterval\":[107,112]},\"lower\",[]],[\"app\",{\"sourceInterval\":[119,124]},\"upper\",[]],[\"app\",{\"sourceInterval\":[131,142]},\"unicodeLtmo\",[]]]],\"digit\":[\"define\",{\"sourceInterval\":[146,177]},\"a digit\",[],[\"range\",{\"sourceInterval\":[169,177]},\"0\",\"9\"]],\"hexDigit\":[\"define\",{\"sourceInterval\":[181,254]},\"a hexadecimal digit\",[],[\"alt\",{\"sourceInterval\":[219,254]},[\"app\",{\"sourceInterval\":[219,224]},\"digit\",[]],[\"range\",{\"sourceInterval\":[231,239]},\"a\",\"f\"],[\"range\",{\"sourceInterval\":[246,254]},\"A\",\"F\"]]],\"ListOf\":[\"define\",{\"sourceInterval\":[258,336]},null,[\"elem\",\"sep\"],[\"alt\",{\"sourceInterval\":[282,336]},[\"app\",{\"sourceInterval\":[282,307]},\"NonemptyListOf\",[[\"param\",{},0],[\"param\",{},1]]],[\"app\",{\"sourceInterval\":[314,336]},\"EmptyListOf\",[[\"param\",{},0],[\"param\",{},1]]]]],\"NonemptyListOf\":[\"define\",{\"sourceInterval\":[340,388]},null,[\"elem\",\"sep\"],[\"seq\",{\"sourceInterval\":[372,388]},[\"param\",{},0],[\"star\",{\"sourceInterval\":[377,388]},[\"seq\",{\"sourceInterval\":[378,386]},[\"param\",{},1],[\"param\",{},0]]]]],\"EmptyListOf\":[\"define\",{\"sourceInterval\":[392,434]},null,[\"elem\",\"sep\"],[\"seq\",{\"sourceInterval\":[438,438]}]],\"listOf\":[\"define\",{\"sourceInterval\":[438,516]},null,[\"elem\",\"sep\"],[\"alt\",{\"sourceInterval\":[462,516]},[\"app\",{\"sourceInterval\":[462,487]},\"nonemptyListOf\",[[\"param\",{},0],[\"param\",{},1]]],[\"app\",{\"sourceInterval\":[494,516]},\"emptyListOf\",[[\"param\",{},0],[\"param\",{},1]]]]],\"nonemptyListOf\":[\"define\",{\"sourceInterval\":[520,568]},null,[\"elem\",\"sep\"],[\"seq\",{\"sourceInterval\":[552,568]},[\"param\",{},0],[\"star\",{\"sourceInterval\":[557,568]},[\"seq\",{\"sourceInterval\":[558,566]},[\"param\",{},1],[\"param\",{},0]]]]],\"emptyListOf\":[\"define\",{\"sourceInterval\":[572,614]},null,[\"elem\",\"sep\"],[\"seq\",{\"sourceInterval\":[616,616]}]]}]);\n","var ohm = require('..');\nmodule.exports = ohm.makeRecipe([\"grammar\",{\"source\":\"Ohm {\\n\\n  Grammars\\n    = Grammar*\\n\\n  Grammar\\n    = ident SuperGrammar? \\\"{\\\" Rule* \\\"}\\\"\\n\\n  SuperGrammar\\n    = \\\"<:\\\" ident\\n\\n  Rule\\n    = ident Formals? ruleDescr? \\\"=\\\"  RuleBody  -- define\\n    | ident Formals?            \\\":=\\\" RuleBody  -- override\\n    | ident Formals?            \\\"+=\\\" RuleBody  -- extend\\n\\n  RuleBody\\n    = \\\"|\\\"? NonemptyListOf<TopLevelTerm, \\\"|\\\">\\n\\n  TopLevelTerm\\n    = Seq caseName  -- inline\\n    | Seq\\n\\n  Formals\\n    = \\\"<\\\" ListOf<ident, \\\",\\\"> \\\">\\\"\\n\\n  Params\\n    = \\\"<\\\" ListOf<Seq, \\\",\\\"> \\\">\\\"\\n\\n  Alt\\n    = NonemptyListOf<Seq, \\\"|\\\">\\n\\n  Seq\\n    = Iter*\\n\\n  Iter\\n    = Pred \\\"*\\\"  -- star\\n    | Pred \\\"+\\\"  -- plus\\n    | Pred \\\"?\\\"  -- opt\\n    | Pred\\n\\n  Pred\\n    = \\\"~\\\" Lex  -- not\\n    | \\\"&\\\" Lex  -- lookahead\\n    | Lex\\n\\n  Lex\\n    = \\\"#\\\" Base  -- lex\\n    | Base\\n\\n  Base\\n    = ident Params? ~(ruleDescr? \\\"=\\\" | \\\":=\\\" | \\\"+=\\\")  -- application\\n    | oneCharTerminal \\\"..\\\" oneCharTerminal           -- range\\n    | terminal                                       -- terminal\\n    | \\\"(\\\" Alt \\\")\\\"                                    -- paren\\n\\n  ruleDescr  (a rule description)\\n    = \\\"(\\\" ruleDescrText \\\")\\\"\\n\\n  ruleDescrText\\n    = (~\\\")\\\" any)*\\n\\n  caseName\\n    = \\\"--\\\" (~\\\"\\\\n\\\" space)* name (~\\\"\\\\n\\\" space)* (\\\"\\\\n\\\" | &\\\"}\\\")\\n\\n  name  (a name)\\n    = nameFirst nameRest*\\n\\n  nameFirst\\n    = \\\"_\\\"\\n    | letter\\n\\n  nameRest\\n    = \\\"_\\\"\\n    | alnum\\n\\n  ident  (an identifier)\\n    = name\\n\\n  terminal\\n    = \\\"\\\\\\\"\\\" terminalChar* \\\"\\\\\\\"\\\"\\n\\n  oneCharTerminal\\n    = \\\"\\\\\\\"\\\" terminalChar \\\"\\\\\\\"\\\"\\n\\n  terminalChar\\n    = escapeChar\\n    | ~\\\"\\\\\\\\\\\" ~\\\"\\\\\\\"\\\" ~\\\"\\\\n\\\" any\\n\\n  escapeChar  (an escape sequence)\\n    = \\\"\\\\\\\\\\\\\\\\\\\"                                     -- backslash\\n    | \\\"\\\\\\\\\\\\\\\"\\\"                                     -- doubleQuote\\n    | \\\"\\\\\\\\\\\\'\\\"                                     -- singleQuote\\n    | \\\"\\\\\\\\b\\\"                                      -- backspace\\n    | \\\"\\\\\\\\n\\\"                                      -- lineFeed\\n    | \\\"\\\\\\\\r\\\"                                      -- carriageReturn\\n    | \\\"\\\\\\\\t\\\"                                      -- tab\\n    | \\\"\\\\\\\\u\\\" hexDigit hexDigit hexDigit hexDigit  -- unicodeEscape\\n    | \\\"\\\\\\\\x\\\" hexDigit hexDigit                    -- hexEscape\\n\\n  space\\n   += comment\\n\\n  comment\\n    = \\\"//\\\" (~\\\"\\\\n\\\" any)* \\\"\\\\n\\\"  -- singleLine\\n    | \\\"/*\\\" (~\\\"*/\\\" any)* \\\"*/\\\"  -- multiLine\\n\\n  tokens = token*\\n\\n  token = caseName | comment | ident | operator | punctuation | terminal | any\\n\\n  operator = \\\"<:\\\" | \\\"=\\\" | \\\":=\\\" | \\\"+=\\\" | \\\"*\\\" | \\\"+\\\" | \\\"?\\\" | \\\"~\\\" | \\\"&\\\"\\n\\n  punctuation = \\\"<\\\" | \\\">\\\" | \\\",\\\" | \\\"--\\\"\\n}\"},\"Ohm\",null,\"Grammars\",{\"Grammars\":[\"define\",{\"sourceInterval\":[9,32]},null,[],[\"star\",{\"sourceInterval\":[24,32]},[\"app\",{\"sourceInterval\":[24,31]},\"Grammar\",[]]]],\"Grammar\":[\"define\",{\"sourceInterval\":[36,83]},null,[],[\"seq\",{\"sourceInterval\":[50,83]},[\"app\",{\"sourceInterval\":[50,55]},\"ident\",[]],[\"opt\",{\"sourceInterval\":[56,69]},[\"app\",{\"sourceInterval\":[56,68]},\"SuperGrammar\",[]]],[\"terminal\",{\"sourceInterval\":[70,73]},\"{\"],[\"star\",{\"sourceInterval\":[74,79]},[\"app\",{\"sourceInterval\":[74,78]},\"Rule\",[]]],[\"terminal\",{\"sourceInterval\":[80,83]},\"}\"]]],\"SuperGrammar\":[\"define\",{\"sourceInterval\":[87,116]},null,[],[\"seq\",{\"sourceInterval\":[106,116]},[\"terminal\",{\"sourceInterval\":[106,110]},\"<:\"],[\"app\",{\"sourceInterval\":[111,116]},\"ident\",[]]]],\"Rule_define\":[\"define\",{\"sourceInterval\":[131,181]},null,[],[\"seq\",{\"sourceInterval\":[131,170]},[\"app\",{\"sourceInterval\":[131,136]},\"ident\",[]],[\"opt\",{\"sourceInterval\":[137,145]},[\"app\",{\"sourceInterval\":[137,144]},\"Formals\",[]]],[\"opt\",{\"sourceInterval\":[146,156]},[\"app\",{\"sourceInterval\":[146,155]},\"ruleDescr\",[]]],[\"terminal\",{\"sourceInterval\":[157,160]},\"=\"],[\"app\",{\"sourceInterval\":[162,170]},\"RuleBody\",[]]]],\"Rule_override\":[\"define\",{\"sourceInterval\":[188,240]},null,[],[\"seq\",{\"sourceInterval\":[188,227]},[\"app\",{\"sourceInterval\":[188,193]},\"ident\",[]],[\"opt\",{\"sourceInterval\":[194,202]},[\"app\",{\"sourceInterval\":[194,201]},\"Formals\",[]]],[\"terminal\",{\"sourceInterval\":[214,218]},\":=\"],[\"app\",{\"sourceInterval\":[219,227]},\"RuleBody\",[]]]],\"Rule_extend\":[\"define\",{\"sourceInterval\":[247,297]},null,[],[\"seq\",{\"sourceInterval\":[247,286]},[\"app\",{\"sourceInterval\":[247,252]},\"ident\",[]],[\"opt\",{\"sourceInterval\":[253,261]},[\"app\",{\"sourceInterval\":[253,260]},\"Formals\",[]]],[\"terminal\",{\"sourceInterval\":[273,277]},\"+=\"],[\"app\",{\"sourceInterval\":[278,286]},\"RuleBody\",[]]]],\"Rule\":[\"define\",{\"sourceInterval\":[120,297]},null,[],[\"alt\",{\"sourceInterval\":[131,297]},[\"app\",{\"sourceInterval\":[131,170]},\"Rule_define\",[]],[\"app\",{\"sourceInterval\":[188,227]},\"Rule_override\",[]],[\"app\",{\"sourceInterval\":[247,286]},\"Rule_extend\",[]]]],\"RuleBody\":[\"define\",{\"sourceInterval\":[301,354]},null,[],[\"seq\",{\"sourceInterval\":[316,354]},[\"opt\",{\"sourceInterval\":[316,320]},[\"terminal\",{\"sourceInterval\":[316,319]},\"|\"]],[\"app\",{\"sourceInterval\":[321,354]},\"NonemptyListOf\",[[\"app\",{\"sourceInterval\":[336,348]},\"TopLevelTerm\",[]],[\"terminal\",{\"sourceInterval\":[350,353]},\"|\"]]]]],\"TopLevelTerm_inline\":[\"define\",{\"sourceInterval\":[377,400]},null,[],[\"seq\",{\"sourceInterval\":[377,389]},[\"app\",{\"sourceInterval\":[377,380]},\"Seq\",[]],[\"app\",{\"sourceInterval\":[381,389]},\"caseName\",[]]]],\"TopLevelTerm\":[\"define\",{\"sourceInterval\":[358,410]},null,[],[\"alt\",{\"sourceInterval\":[377,410]},[\"app\",{\"sourceInterval\":[377,389]},\"TopLevelTerm_inline\",[]],[\"app\",{\"sourceInterval\":[407,410]},\"Seq\",[]]]],\"Formals\":[\"define\",{\"sourceInterval\":[414,454]},null,[],[\"seq\",{\"sourceInterval\":[428,454]},[\"terminal\",{\"sourceInterval\":[428,431]},\"<\"],[\"app\",{\"sourceInterval\":[432,450]},\"ListOf\",[[\"app\",{\"sourceInterval\":[439,444]},\"ident\",[]],[\"terminal\",{\"sourceInterval\":[446,449]},\",\"]]],[\"terminal\",{\"sourceInterval\":[451,454]},\">\"]]],\"Params\":[\"define\",{\"sourceInterval\":[458,495]},null,[],[\"seq\",{\"sourceInterval\":[471,495]},[\"terminal\",{\"sourceInterval\":[471,474]},\"<\"],[\"app\",{\"sourceInterval\":[475,491]},\"ListOf\",[[\"app\",{\"sourceInterval\":[482,485]},\"Seq\",[]],[\"terminal\",{\"sourceInterval\":[487,490]},\",\"]]],[\"terminal\",{\"sourceInterval\":[492,495]},\">\"]]],\"Alt\":[\"define\",{\"sourceInterval\":[499,533]},null,[],[\"app\",{\"sourceInterval\":[509,533]},\"NonemptyListOf\",[[\"app\",{\"sourceInterval\":[524,527]},\"Seq\",[]],[\"terminal\",{\"sourceInterval\":[529,532]},\"|\"]]]],\"Seq\":[\"define\",{\"sourceInterval\":[537,552]},null,[],[\"star\",{\"sourceInterval\":[547,552]},[\"app\",{\"sourceInterval\":[547,551]},\"Iter\",[]]]],\"Iter_star\":[\"define\",{\"sourceInterval\":[567,584]},null,[],[\"seq\",{\"sourceInterval\":[567,575]},[\"app\",{\"sourceInterval\":[567,571]},\"Pred\",[]],[\"terminal\",{\"sourceInterval\":[572,575]},\"*\"]]],\"Iter_plus\":[\"define\",{\"sourceInterval\":[591,608]},null,[],[\"seq\",{\"sourceInterval\":[591,599]},[\"app\",{\"sourceInterval\":[591,595]},\"Pred\",[]],[\"terminal\",{\"sourceInterval\":[596,599]},\"+\"]]],\"Iter_opt\":[\"define\",{\"sourceInterval\":[615,631]},null,[],[\"seq\",{\"sourceInterval\":[615,623]},[\"app\",{\"sourceInterval\":[615,619]},\"Pred\",[]],[\"terminal\",{\"sourceInterval\":[620,623]},\"?\"]]],\"Iter\":[\"define\",{\"sourceInterval\":[556,642]},null,[],[\"alt\",{\"sourceInterval\":[567,642]},[\"app\",{\"sourceInterval\":[567,575]},\"Iter_star\",[]],[\"app\",{\"sourceInterval\":[591,599]},\"Iter_plus\",[]],[\"app\",{\"sourceInterval\":[615,623]},\"Iter_opt\",[]],[\"app\",{\"sourceInterval\":[638,642]},\"Pred\",[]]]],\"Pred_not\":[\"define\",{\"sourceInterval\":[657,672]},null,[],[\"seq\",{\"sourceInterval\":[657,664]},[\"terminal\",{\"sourceInterval\":[657,660]},\"~\"],[\"app\",{\"sourceInterval\":[661,664]},\"Lex\",[]]]],\"Pred_lookahead\":[\"define\",{\"sourceInterval\":[679,700]},null,[],[\"seq\",{\"sourceInterval\":[679,686]},[\"terminal\",{\"sourceInterval\":[679,682]},\"&\"],[\"app\",{\"sourceInterval\":[683,686]},\"Lex\",[]]]],\"Pred\":[\"define\",{\"sourceInterval\":[646,710]},null,[],[\"alt\",{\"sourceInterval\":[657,710]},[\"app\",{\"sourceInterval\":[657,664]},\"Pred_not\",[]],[\"app\",{\"sourceInterval\":[679,686]},\"Pred_lookahead\",[]],[\"app\",{\"sourceInterval\":[707,710]},\"Lex\",[]]]],\"Lex_lex\":[\"define\",{\"sourceInterval\":[724,740]},null,[],[\"seq\",{\"sourceInterval\":[724,732]},[\"terminal\",{\"sourceInterval\":[724,727]},\"#\"],[\"app\",{\"sourceInterval\":[728,732]},\"Base\",[]]]],\"Lex\":[\"define\",{\"sourceInterval\":[714,751]},null,[],[\"alt\",{\"sourceInterval\":[724,751]},[\"app\",{\"sourceInterval\":[724,732]},\"Lex_lex\",[]],[\"app\",{\"sourceInterval\":[747,751]},\"Base\",[]]]],\"Base_application\":[\"define\",{\"sourceInterval\":[766,827]},null,[],[\"seq\",{\"sourceInterval\":[766,811]},[\"app\",{\"sourceInterval\":[766,771]},\"ident\",[]],[\"opt\",{\"sourceInterval\":[772,779]},[\"app\",{\"sourceInterval\":[772,778]},\"Params\",[]]],[\"not\",{\"sourceInterval\":[780,811]},[\"alt\",{\"sourceInterval\":[782,810]},[\"seq\",{\"sourceInterval\":[782,796]},[\"opt\",{\"sourceInterval\":[782,792]},[\"app\",{\"sourceInterval\":[782,791]},\"ruleDescr\",[]]],[\"terminal\",{\"sourceInterval\":[793,796]},\"=\"]],[\"terminal\",{\"sourceInterval\":[799,803]},\":=\"],[\"terminal\",{\"sourceInterval\":[806,810]},\"+=\"]]]]],\"Base_range\":[\"define\",{\"sourceInterval\":[834,889]},null,[],[\"seq\",{\"sourceInterval\":[834,870]},[\"app\",{\"sourceInterval\":[834,849]},\"oneCharTerminal\",[]],[\"terminal\",{\"sourceInterval\":[850,854]},\"..\"],[\"app\",{\"sourceInterval\":[855,870]},\"oneCharTerminal\",[]]]],\"Base_terminal\":[\"define\",{\"sourceInterval\":[896,954]},null,[],[\"app\",{\"sourceInterval\":[896,904]},\"terminal\",[]]],\"Base_paren\":[\"define\",{\"sourceInterval\":[961,1016]},null,[],[\"seq\",{\"sourceInterval\":[961,972]},[\"terminal\",{\"sourceInterval\":[961,964]},\"(\"],[\"app\",{\"sourceInterval\":[965,968]},\"Alt\",[]],[\"terminal\",{\"sourceInterval\":[969,972]},\")\"]]],\"Base\":[\"define\",{\"sourceInterval\":[755,1016]},null,[],[\"alt\",{\"sourceInterval\":[766,1016]},[\"app\",{\"sourceInterval\":[766,811]},\"Base_application\",[]],[\"app\",{\"sourceInterval\":[834,870]},\"Base_range\",[]],[\"app\",{\"sourceInterval\":[896,904]},\"Base_terminal\",[]],[\"app\",{\"sourceInterval\":[961,972]},\"Base_paren\",[]]]],\"ruleDescr\":[\"define\",{\"sourceInterval\":[1020,1079]},\"a rule description\",[],[\"seq\",{\"sourceInterval\":[1058,1079]},[\"terminal\",{\"sourceInterval\":[1058,1061]},\"(\"],[\"app\",{\"sourceInterval\":[1062,1075]},\"ruleDescrText\",[]],[\"terminal\",{\"sourceInterval\":[1076,1079]},\")\"]]],\"ruleDescrText\":[\"define\",{\"sourceInterval\":[1083,1114]},null,[],[\"star\",{\"sourceInterval\":[1103,1114]},[\"seq\",{\"sourceInterval\":[1104,1112]},[\"not\",{\"sourceInterval\":[1104,1108]},[\"terminal\",{\"sourceInterval\":[1105,1108]},\")\"]],[\"app\",{\"sourceInterval\":[1109,1112]},\"any\",[]]]]],\"caseName\":[\"define\",{\"sourceInterval\":[1118,1186]},null,[],[\"seq\",{\"sourceInterval\":[1133,1186]},[\"terminal\",{\"sourceInterval\":[1133,1137]},\"--\"],[\"star\",{\"sourceInterval\":[1138,1152]},[\"seq\",{\"sourceInterval\":[1139,1150]},[\"not\",{\"sourceInterval\":[1139,1144]},[\"terminal\",{\"sourceInterval\":[1140,1144]},\"\\n\"]],[\"app\",{\"sourceInterval\":[1145,1150]},\"space\",[]]]],[\"app\",{\"sourceInterval\":[1153,1157]},\"name\",[]],[\"star\",{\"sourceInterval\":[1158,1172]},[\"seq\",{\"sourceInterval\":[1159,1170]},[\"not\",{\"sourceInterval\":[1159,1164]},[\"terminal\",{\"sourceInterval\":[1160,1164]},\"\\n\"]],[\"app\",{\"sourceInterval\":[1165,1170]},\"space\",[]]]],[\"alt\",{\"sourceInterval\":[1174,1185]},[\"terminal\",{\"sourceInterval\":[1174,1178]},\"\\n\"],[\"lookahead\",{\"sourceInterval\":[1181,1185]},[\"terminal\",{\"sourceInterval\":[1182,1185]},\"}\"]]]]],\"name\":[\"define\",{\"sourceInterval\":[1190,1230]},\"a name\",[],[\"seq\",{\"sourceInterval\":[1211,1230]},[\"app\",{\"sourceInterval\":[1211,1220]},\"nameFirst\",[]],[\"star\",{\"sourceInterval\":[1221,1230]},[\"app\",{\"sourceInterval\":[1221,1229]},\"nameRest\",[]]]]],\"nameFirst\":[\"define\",{\"sourceInterval\":[1234,1266]},null,[],[\"alt\",{\"sourceInterval\":[1250,1266]},[\"terminal\",{\"sourceInterval\":[1250,1253]},\"_\"],[\"app\",{\"sourceInterval\":[1260,1266]},\"letter\",[]]]],\"nameRest\":[\"define\",{\"sourceInterval\":[1270,1300]},null,[],[\"alt\",{\"sourceInterval\":[1285,1300]},[\"terminal\",{\"sourceInterval\":[1285,1288]},\"_\"],[\"app\",{\"sourceInterval\":[1295,1300]},\"alnum\",[]]]],\"ident\":[\"define\",{\"sourceInterval\":[1304,1337]},\"an identifier\",[],[\"app\",{\"sourceInterval\":[1333,1337]},\"name\",[]]],\"terminal\":[\"define\",{\"sourceInterval\":[1341,1379]},null,[],[\"seq\",{\"sourceInterval\":[1356,1379]},[\"terminal\",{\"sourceInterval\":[1356,1360]},\"\\\"\"],[\"star\",{\"sourceInterval\":[1361,1374]},[\"app\",{\"sourceInterval\":[1361,1373]},\"terminalChar\",[]]],[\"terminal\",{\"sourceInterval\":[1375,1379]},\"\\\"\"]]],\"oneCharTerminal\":[\"define\",{\"sourceInterval\":[1383,1427]},null,[],[\"seq\",{\"sourceInterval\":[1405,1427]},[\"terminal\",{\"sourceInterval\":[1405,1409]},\"\\\"\"],[\"app\",{\"sourceInterval\":[1410,1422]},\"terminalChar\",[]],[\"terminal\",{\"sourceInterval\":[1423,1427]},\"\\\"\"]]],\"terminalChar\":[\"define\",{\"sourceInterval\":[1431,1488]},null,[],[\"alt\",{\"sourceInterval\":[1450,1488]},[\"app\",{\"sourceInterval\":[1450,1460]},\"escapeChar\",[]],[\"seq\",{\"sourceInterval\":[1467,1488]},[\"not\",{\"sourceInterval\":[1467,1472]},[\"terminal\",{\"sourceInterval\":[1468,1472]},\"\\\\\"]],[\"not\",{\"sourceInterval\":[1473,1478]},[\"terminal\",{\"sourceInterval\":[1474,1478]},\"\\\"\"]],[\"not\",{\"sourceInterval\":[1479,1484]},[\"terminal\",{\"sourceInterval\":[1480,1484]},\"\\n\"]],[\"app\",{\"sourceInterval\":[1485,1488]},\"any\",[]]]]],\"escapeChar_backslash\":[\"define\",{\"sourceInterval\":[1531,1586]},null,[],[\"terminal\",{\"sourceInterval\":[1531,1537]},\"\\\\\\\\\"]],\"escapeChar_doubleQuote\":[\"define\",{\"sourceInterval\":[1593,1650]},null,[],[\"terminal\",{\"sourceInterval\":[1593,1599]},\"\\\\\\\"\"]],\"escapeChar_singleQuote\":[\"define\",{\"sourceInterval\":[1657,1714]},null,[],[\"terminal\",{\"sourceInterval\":[1657,1663]},\"\\\\'\"]],\"escapeChar_backspace\":[\"define\",{\"sourceInterval\":[1721,1776]},null,[],[\"terminal\",{\"sourceInterval\":[1721,1726]},\"\\\\b\"]],\"escapeChar_lineFeed\":[\"define\",{\"sourceInterval\":[1783,1837]},null,[],[\"terminal\",{\"sourceInterval\":[1783,1788]},\"\\\\n\"]],\"escapeChar_carriageReturn\":[\"define\",{\"sourceInterval\":[1844,1904]},null,[],[\"terminal\",{\"sourceInterval\":[1844,1849]},\"\\\\r\"]],\"escapeChar_tab\":[\"define\",{\"sourceInterval\":[1911,1960]},null,[],[\"terminal\",{\"sourceInterval\":[1911,1916]},\"\\\\t\"]],\"escapeChar_unicodeEscape\":[\"define\",{\"sourceInterval\":[1967,2026]},null,[],[\"seq\",{\"sourceInterval\":[1967,2008]},[\"terminal\",{\"sourceInterval\":[1967,1972]},\"\\\\u\"],[\"app\",{\"sourceInterval\":[1973,1981]},\"hexDigit\",[]],[\"app\",{\"sourceInterval\":[1982,1990]},\"hexDigit\",[]],[\"app\",{\"sourceInterval\":[1991,1999]},\"hexDigit\",[]],[\"app\",{\"sourceInterval\":[2000,2008]},\"hexDigit\",[]]]],\"escapeChar_hexEscape\":[\"define\",{\"sourceInterval\":[2033,2088]},null,[],[\"seq\",{\"sourceInterval\":[2033,2056]},[\"terminal\",{\"sourceInterval\":[2033,2038]},\"\\\\x\"],[\"app\",{\"sourceInterval\":[2039,2047]},\"hexDigit\",[]],[\"app\",{\"sourceInterval\":[2048,2056]},\"hexDigit\",[]]]],\"escapeChar\":[\"define\",{\"sourceInterval\":[1492,2088]},\"an escape sequence\",[],[\"alt\",{\"sourceInterval\":[1531,2088]},[\"app\",{\"sourceInterval\":[1531,1537]},\"escapeChar_backslash\",[]],[\"app\",{\"sourceInterval\":[1593,1599]},\"escapeChar_doubleQuote\",[]],[\"app\",{\"sourceInterval\":[1657,1663]},\"escapeChar_singleQuote\",[]],[\"app\",{\"sourceInterval\":[1721,1726]},\"escapeChar_backspace\",[]],[\"app\",{\"sourceInterval\":[1783,1788]},\"escapeChar_lineFeed\",[]],[\"app\",{\"sourceInterval\":[1844,1849]},\"escapeChar_carriageReturn\",[]],[\"app\",{\"sourceInterval\":[1911,1916]},\"escapeChar_tab\",[]],[\"app\",{\"sourceInterval\":[1967,2008]},\"escapeChar_unicodeEscape\",[]],[\"app\",{\"sourceInterval\":[2033,2056]},\"escapeChar_hexEscape\",[]]]],\"space\":[\"extend\",{\"sourceInterval\":[2092,2111]},null,[],[\"app\",{\"sourceInterval\":[2104,2111]},\"comment\",[]]],\"comment_singleLine\":[\"define\",{\"sourceInterval\":[2129,2166]},null,[],[\"seq\",{\"sourceInterval\":[2129,2151]},[\"terminal\",{\"sourceInterval\":[2129,2133]},\"//\"],[\"star\",{\"sourceInterval\":[2134,2146]},[\"seq\",{\"sourceInterval\":[2135,2144]},[\"not\",{\"sourceInterval\":[2135,2140]},[\"terminal\",{\"sourceInterval\":[2136,2140]},\"\\n\"]],[\"app\",{\"sourceInterval\":[2141,2144]},\"any\",[]]]],[\"terminal\",{\"sourceInterval\":[2147,2151]},\"\\n\"]]],\"comment_multiLine\":[\"define\",{\"sourceInterval\":[2173,2209]},null,[],[\"seq\",{\"sourceInterval\":[2173,2195]},[\"terminal\",{\"sourceInterval\":[2173,2177]},\"/*\"],[\"star\",{\"sourceInterval\":[2178,2190]},[\"seq\",{\"sourceInterval\":[2179,2188]},[\"not\",{\"sourceInterval\":[2179,2184]},[\"terminal\",{\"sourceInterval\":[2180,2184]},\"*/\"]],[\"app\",{\"sourceInterval\":[2185,2188]},\"any\",[]]]],[\"terminal\",{\"sourceInterval\":[2191,2195]},\"*/\"]]],\"comment\":[\"define\",{\"sourceInterval\":[2115,2209]},null,[],[\"alt\",{\"sourceInterval\":[2129,2209]},[\"app\",{\"sourceInterval\":[2129,2151]},\"comment_singleLine\",[]],[\"app\",{\"sourceInterval\":[2173,2195]},\"comment_multiLine\",[]]]],\"tokens\":[\"define\",{\"sourceInterval\":[2213,2228]},null,[],[\"star\",{\"sourceInterval\":[2222,2228]},[\"app\",{\"sourceInterval\":[2222,2227]},\"token\",[]]]],\"token\":[\"define\",{\"sourceInterval\":[2232,2308]},null,[],[\"alt\",{\"sourceInterval\":[2240,2308]},[\"app\",{\"sourceInterval\":[2240,2248]},\"caseName\",[]],[\"app\",{\"sourceInterval\":[2251,2258]},\"comment\",[]],[\"app\",{\"sourceInterval\":[2261,2266]},\"ident\",[]],[\"app\",{\"sourceInterval\":[2269,2277]},\"operator\",[]],[\"app\",{\"sourceInterval\":[2280,2291]},\"punctuation\",[]],[\"app\",{\"sourceInterval\":[2294,2302]},\"terminal\",[]],[\"app\",{\"sourceInterval\":[2305,2308]},\"any\",[]]]],\"operator\":[\"define\",{\"sourceInterval\":[2312,2377]},null,[],[\"alt\",{\"sourceInterval\":[2323,2377]},[\"terminal\",{\"sourceInterval\":[2323,2327]},\"<:\"],[\"terminal\",{\"sourceInterval\":[2330,2333]},\"=\"],[\"terminal\",{\"sourceInterval\":[2336,2340]},\":=\"],[\"terminal\",{\"sourceInterval\":[2343,2347]},\"+=\"],[\"terminal\",{\"sourceInterval\":[2350,2353]},\"*\"],[\"terminal\",{\"sourceInterval\":[2356,2359]},\"+\"],[\"terminal\",{\"sourceInterval\":[2362,2365]},\"?\"],[\"terminal\",{\"sourceInterval\":[2368,2371]},\"~\"],[\"terminal\",{\"sourceInterval\":[2374,2377]},\"&\"]]],\"punctuation\":[\"define\",{\"sourceInterval\":[2381,2417]},null,[],[\"alt\",{\"sourceInterval\":[2395,2417]},[\"terminal\",{\"sourceInterval\":[2395,2398]},\"<\"],[\"terminal\",{\"sourceInterval\":[2401,2404]},\">\"],[\"terminal\",{\"sourceInterval\":[2407,2410]},\",\"],[\"terminal\",{\"sourceInterval\":[2413,2417]},\"--\"]]]}]);\n","/* global document, XMLHttpRequest */\n\n'use strict';\n\n// --------------------------------------------------------------------\n// Imports\n// --------------------------------------------------------------------\n\nvar Builder = require('./Builder');\nvar Grammar = require('./Grammar');\nvar Namespace = require('./Namespace');\nvar common = require('./common');\nvar errors = require('./errors');\nvar pexprs = require('./pexprs');\nvar util = require('./util');\nvar version = require('./version');\n\nvar isBuffer = require('is-buffer');\n\n// --------------------------------------------------------------------\n// Private stuff\n// --------------------------------------------------------------------\n\n// The metagrammar, i.e. the grammar for Ohm grammars. Initialized at the\n// bottom of this file because loading the grammar requires Ohm itself.\nvar ohmGrammar;\n\n// An object which makes it possible to stub out the document API for testing.\nvar documentInterface = {\n  querySelector: function(sel) { return document.querySelector(sel); },\n  querySelectorAll: function(sel) { return document.querySelectorAll(sel); }\n};\n\n// Check if `obj` is a DOM element.\nfunction isElement(obj) {\n  return !!(obj && obj.nodeType === 1);\n}\n\nfunction isUndefined(obj) {\n  return obj === void 0;  // eslint-disable-line no-void\n}\n\nvar MAX_ARRAY_INDEX = Math.pow(2, 53) - 1;\n\nfunction isArrayLike(obj) {\n  if (obj == null) {\n    return false;\n  }\n  var length = obj.length;\n  return typeof length === 'number' && length >= 0 && length <= MAX_ARRAY_INDEX;\n}\n\n// TODO: just use the jQuery thing\nfunction load(url) {\n  var req = new XMLHttpRequest();\n  req.open('GET', url, false);\n  try {\n    req.send();\n    if (req.status === 0 || req.status === 200) {\n      return req.responseText;\n    }\n  } catch (e) {}\n  throw new Error('unable to load url ' + url);\n}\n\n// Returns a Grammar instance (i.e., an object with a `match` method) for\n// `tree`, which is the concrete syntax tree of a user-written grammar.\n// The grammar will be assigned into `namespace` under the name of the grammar\n// as specified in the source.\nfunction buildGrammar(match, namespace, optOhmGrammarForTesting) {\n  var builder = new Builder();\n  var decl;\n  var currentRuleName;\n  var currentRuleFormals;\n  var overriding = false;\n  var metaGrammar = optOhmGrammarForTesting || ohmGrammar;\n\n  // A visitor that produces a Grammar instance from the CST.\n  var helpers = metaGrammar.createSemantics().addOperation('visit', {\n    Grammar: function(n, s, open, rs, close) {\n      var grammarName = n.visit();\n      decl = builder.newGrammar(grammarName, namespace);\n      s.visit();\n      rs.visit();\n      var g = decl.build();\n      g.source = this.source.trimmed();\n      if (grammarName in namespace) {\n        throw errors.duplicateGrammarDeclaration(g, namespace);\n      }\n      namespace[grammarName] = g;\n      return g;\n    },\n\n    SuperGrammar: function(_, n) {\n      var superGrammarName = n.visit();\n      if (superGrammarName === 'null') {\n        decl.withSuperGrammar(null);\n      } else {\n        if (!namespace || !(superGrammarName in namespace)) {\n          throw errors.undeclaredGrammar(superGrammarName, namespace, n.source);\n        }\n        decl.withSuperGrammar(namespace[superGrammarName]);\n      }\n    },\n\n    Rule_define: function(n, fs, d, _, b) {\n      currentRuleName = n.visit();\n      currentRuleFormals = fs.visit()[0] || [];\n      // If there is no default start rule yet, set it now. This must be done before visiting\n      // the body, because it might contain an inline rule definition.\n      if (!decl.defaultStartRule && decl.ensureSuperGrammar() !== Grammar.ProtoBuiltInRules) {\n        decl.withDefaultStartRule(currentRuleName);\n      }\n      var body = b.visit();\n      var description = d.visit()[0];\n      var source = this.source.trimmed();\n      return decl.define(currentRuleName, currentRuleFormals, body, description, source);\n    },\n    Rule_override: function(n, fs, _, b) {\n      currentRuleName = n.visit();\n      currentRuleFormals = fs.visit()[0] || [];\n      overriding = true;\n      var body = b.visit();\n      var source = this.source.trimmed();\n      var ans = decl.override(currentRuleName, currentRuleFormals, body, null, source);\n      overriding = false;\n      return ans;\n    },\n    Rule_extend: function(n, fs, _, b) {\n      currentRuleName = n.visit();\n      currentRuleFormals = fs.visit()[0] || [];\n      var body = b.visit();\n      var source = this.source.trimmed();\n      var ans = decl.extend(currentRuleName, currentRuleFormals, body, null, source);\n      return ans;\n    },\n    RuleBody: function(_, terms) {\n      var args = terms.visit();\n      return builder.alt.apply(builder, args).withSource(this.source);\n    },\n\n    Formals: function(opointy, fs, cpointy) {\n      return fs.visit();\n    },\n\n    Params: function(opointy, ps, cpointy) {\n      return ps.visit();\n    },\n\n    Alt: function(seqs) {\n      var args = seqs.visit();\n      return builder.alt.apply(builder, args).withSource(this.source);\n    },\n\n    TopLevelTerm_inline: function(b, n) {\n      var inlineRuleName = currentRuleName + '_' + n.visit();\n      var body = b.visit();\n      var source = this.source.trimmed();\n      var isNewRuleDeclaration =\n          !(decl.superGrammar && decl.superGrammar.rules[inlineRuleName]);\n      if (overriding && !isNewRuleDeclaration) {\n        decl.override(inlineRuleName, currentRuleFormals, body, null, source);\n      } else {\n        decl.define(inlineRuleName, currentRuleFormals, body, null, source);\n      }\n      var params = currentRuleFormals.map(function(formal) { return builder.app(formal); });\n      return builder.app(inlineRuleName, params).withSource(body.source);\n    },\n\n    Seq: function(expr) {\n      return builder.seq.apply(builder, expr.visit()).withSource(this.source);\n    },\n\n    Iter_star: function(x, _) {\n      return builder.star(x.visit()).withSource(this.source);\n    },\n    Iter_plus: function(x, _) {\n      return builder.plus(x.visit()).withSource(this.source);\n    },\n    Iter_opt: function(x, _) {\n      return builder.opt(x.visit()).withSource(this.source);\n    },\n\n    Pred_not: function(_, x) {\n      return builder.not(x.visit()).withSource(this.source);\n    },\n    Pred_lookahead: function(_, x) {\n      return builder.lookahead(x.visit()).withSource(this.source);\n    },\n\n    Lex_lex: function(_, x) {\n      return builder.lex(x.visit()).withSource(this.source);\n    },\n\n    Base_application: function(rule, ps) {\n      return builder.app(rule.visit(), ps.visit()[0] || []).withSource(this.source);\n    },\n    Base_range: function(from, _, to) {\n      return builder.range(from.visit(), to.visit()).withSource(this.source);\n    },\n    Base_terminal: function(expr) {\n      return builder.terminal(expr.visit()).withSource(this.source);\n    },\n    Base_paren: function(open, x, close) {\n      return x.visit();\n    },\n\n    ruleDescr: function(open, t, close) {\n      return t.visit();\n    },\n    ruleDescrText: function(_) {\n      return this.sourceString.trim();\n    },\n\n    caseName: function(_, space1, n, space2, end) {\n      return n.visit();\n    },\n\n    name: function(first, rest) {\n      return this.sourceString;\n    },\n    nameFirst: function(expr) {},\n    nameRest: function(expr) {},\n\n    terminal: function(open, cs, close) {\n      return cs.visit().join('');\n    },\n\n    oneCharTerminal: function(open, c, close) {\n      return c.visit();\n    },\n\n    terminalChar: function(_) {\n      return common.unescapeChar(this.sourceString);\n    },\n\n    escapeChar: function(_) {\n      return this.sourceString;\n    },\n\n    NonemptyListOf: function(x, _, xs) {\n      return [x.visit()].concat(xs.visit());\n    },\n    EmptyListOf: function() {\n      return [];\n    },\n\n    _terminal: function() {\n      return this.primitiveValue;\n    }\n  });\n  return helpers(match).visit();\n}\n\nfunction compileAndLoad(source, namespace) {\n  var m = ohmGrammar.match(source, 'Grammars');\n  if (m.failed()) {\n    throw errors.grammarSyntaxError(m);\n  }\n  return buildGrammar(m, namespace);\n}\n\n// Return the contents of a script element, fetching it via XHR if necessary.\nfunction getScriptElementContents(el) {\n  if (!isElement(el)) {\n    throw new TypeError('Expected a DOM Node, got ' + common.unexpectedObjToString(el));\n  }\n  if (el.type !== 'text/ohm-js') {\n    throw new Error('Expected a script tag with type=\"text/ohm-js\", got ' + el);\n  }\n  return el.getAttribute('src') ? load(el.getAttribute('src')) : el.innerHTML;\n}\n\nfunction grammar(source, optNamespace) {\n  var ns = grammars(source, optNamespace);\n\n  // Ensure that the source contained no more than one grammar definition.\n  var grammarNames = Object.keys(ns);\n  if (grammarNames.length === 0) {\n    throw new Error('Missing grammar definition');\n  } else if (grammarNames.length > 1) {\n    var secondGrammar = ns[grammarNames[1]];\n    var interval = secondGrammar.source;\n    throw new Error(\n        util.getLineAndColumnMessage(interval.sourceString, interval.startIdx) +\n        'Found more than one grammar definition -- use ohm.grammars() instead.');\n  }\n  return ns[grammarNames[0]];  // Return the one and only grammar.\n}\n\nfunction grammars(source, optNamespace) {\n  var ns = Namespace.extend(Namespace.asNamespace(optNamespace));\n  if (typeof source !== 'string') {\n    // For convenience, detect Node.js Buffer objects and automatically call toString().\n    if (isBuffer(source)) {\n      source = source.toString();\n    } else {\n      throw new TypeError(\n          'Expected string as first argument, got ' + common.unexpectedObjToString(source));\n    }\n  }\n  compileAndLoad(source, ns);\n  return ns;\n}\n\nfunction grammarFromScriptElement(optNode) {\n  var node = optNode;\n  if (isUndefined(node)) {\n    var nodeList = documentInterface.querySelectorAll('script[type=\"text/ohm-js\"]');\n    if (nodeList.length !== 1) {\n      throw new Error(\n          'Expected exactly one script tag with type=\"text/ohm-js\", found ' + nodeList.length);\n    }\n    node = nodeList[0];\n  }\n  return grammar(getScriptElementContents(node));\n}\n\nfunction grammarsFromScriptElements(optNodeOrNodeList) {\n  // Simple case: the argument is a DOM node.\n  if (isElement(optNodeOrNodeList)) {\n    return grammars(optNodeOrNodeList);\n  }\n  // Otherwise, it must be either undefined or a NodeList.\n  var nodeList = optNodeOrNodeList;\n  if (isUndefined(nodeList)) {\n    // Find all script elements with type=\"text/ohm-js\".\n    nodeList = documentInterface.querySelectorAll('script[type=\"text/ohm-js\"]');\n  } else if (typeof nodeList === 'string' || (!isElement(nodeList) && !isArrayLike(nodeList))) {\n    throw new TypeError('Expected a Node, NodeList, or Array, but got ' + nodeList);\n  }\n  var ns = Namespace.createNamespace();\n  for (var i = 0; i < nodeList.length; ++i) {\n    // Copy the new grammars into `ns` to keep the namespace flat.\n    common.extend(ns, grammars(getScriptElementContents(nodeList[i]), ns));\n  }\n  return ns;\n}\n\nfunction makeRecipe(recipe) {\n  if (typeof recipe === 'function') {\n    return recipe.call(new Builder());\n  } else {\n    if (typeof recipe === 'string') {\n      // stringified JSON recipe\n      recipe = JSON.parse(recipe);\n    }\n    return (new Builder()).fromRecipe(recipe);\n  }\n}\n\n// --------------------------------------------------------------------\n// Exports\n// --------------------------------------------------------------------\n\n// Stuff that users should know about\nmodule.exports = {\n  createNamespace: Namespace.createNamespace,\n  grammar: grammar,\n  grammars: grammars,\n  grammarFromScriptElement: grammarFromScriptElement,\n  grammarsFromScriptElements: grammarsFromScriptElements,\n  makeRecipe: makeRecipe,\n  ohmGrammar: null,  // Initialized below, after Grammar.BuiltInRules.\n  pexprs: pexprs,\n  util: util,\n  extras: require('../extras'),\n  version: version\n};\n\n// Stuff for testing, etc.\nmodule.exports._buildGrammar = buildGrammar;\nmodule.exports._setDocumentInterfaceForTesting = function(doc) { documentInterface = doc; };\n\n// Late initialization for stuff that is bootstrapped.\n\nGrammar.BuiltInRules = require('../dist/built-in-rules');\nutil.announceBuiltInRules(Grammar.BuiltInRules);\n\nmodule.exports.ohmGrammar = ohmGrammar = require('../dist/ohm-grammar');\nGrammar.initApplicationParser(ohmGrammar, buildGrammar);\n","// WELLE - grammar and semantic\n// =============================================================\n\n// libraries\nimport grammarText from \"/html/ohm/grammar2021\";\nimport ohm from \"ohm-js\";\n\n// variables\nconst livecode = ohm.grammar(grammarText); // taken from grammar.js\nconst semantics = livecode.createSemantics();\n\n// SEMANTICS FOR OHM.JS LANGUAGE:\nsemantics.addOperation(\"eval\", {\n    Commands_questionEvent: (_, phrases) => {\n        phrases = phrasesToArray(phrases);\n        let event = \"questionEvent\";\n        // if (phrases.length>1) event = 'playMultiEvent'\n        return {\n            event: event,\n            phrases: phrases,\n        };\n    },\n\n    Commands_playMultiEvent: (_, phrases) => {\n        phrases = phrasesToArray(phrases);\n        // is the same event like plainStartEvent, just with > at the beginning\n        let event = \"plainStartEvent\";\n        return {\n            event: event,\n            phrases: phrases,\n        };\n    },\n    Commands_stopMultiEvent: (_, phrases) => {\n        phrases = phrasesToArray(phrases);\n        let event = \"stopEvent\";\n        // if (phrases.length > 1) event = 'stopMultiEvent'\n        return {\n            event: event,\n            phrases: phrases,\n        };\n    },\n    Commands_savePartEvent: (_, phrase) => {\n        phrase = phrase.sourceString;\n        let event = \"savePartEvent\";\n        return {\n            event: event,\n            phrase: phrase,\n        };\n    },\n    Commands_deleteEvent: (_, phrases) => {\n        phrases = phrasesToArray(phrases);\n        let event = \"deleteEvent\";\n        return {\n            event: event,\n            phrases: phrases,\n        };\n    },\n    Commands_deleteWordEvent: (_, phrase) => {\n        phrase = phrase.sourceString;\n        let event = \"deleteWordEvent\";\n        return {\n            event: event,\n            phrase: phrase,\n        };\n    },\n    Commands_saveEvent: (_, phrase) => {\n        phrase = phrase.sourceString;\n        let event = \"saveEvent\";\n        return {\n            event: event,\n            phrase: phrase,\n        };\n    },\n    Commands_joinEvent: (_, phrase) => {\n        phrase = phrase.sourceString;\n        let event = \"joinEvent\";\n        return {\n            event: event,\n            phrase: phrase,\n        };\n    },\n    Commands_restartEvent: (_, phrase) => {\n        phrase = phrase.sourceString;\n        let event = \"restartEvent\";\n        return {\n            event: event,\n            phrase: phrase,\n        };\n    },\n    Commands_storeEvent: (_, phrase) => {\n        phrase = phrase.sourceString;\n        let event = \"storeEvent\";\n        return {\n            event: event,\n            phrase: phrase,\n        };\n    },\n    Commands_loadEvent: (_, phrase) => {\n        phrase = phrase.sourceString;\n        let event = \"loadEvent\";\n        return {\n            event: event,\n            phrase: phrase,\n        };\n    },\n    Commands_uploadEvent: (_, phrase) => {\n        phrase = phrase.sourceString;\n        let event = \"uploadEvent\";\n        return {\n            event: event,\n            phrase: phrase,\n        };\n    },\n    Commands_recordEvent: (_, phrase) => {\n        phrase = phrase.sourceString;\n        let event = \"recordEvent\";\n        return {\n            event: event,\n            phrase: phrase,\n        };\n    },\n    Commands_muteEvent: (_) => {\n        let event = \"muteAllEvent\";\n        return {\n            event: event,\n        };\n    },\n    Commands_unmuteEvent: (_) => {\n        let event = \"unmuteAllEvent\";\n        return {\n            event: event,\n        };\n    },\n    Commands_playAllEvent: (_) => {\n        let event = \"playAllEvent\";\n        return {\n            event: event,\n        };\n    },\n    Commands_stopAllEvent: (_) => {\n        let event = \"stopAllEvent\";\n        return {\n            event: event,\n        };\n    },\n    Commands_deleteAllEvent: (_) => {\n        let event = \"deleteAllEvent\";\n        return {\n            event: event,\n        };\n    },\n\n    Assignments_copyPattern: (source, _, phrases) => {\n        source = source.sourceString;\n        phrases = phrasesToArray(phrases);\n        let event = \"copyPattern\";\n        return {\n            event: event,\n            source: source,\n            phrases: phrases,\n        };\n    },\n\n    Assignments_assignPattern: (phrases, volume, pattern, random) => {\n        volume = volume.eval();\n        // console.log(\"semantics - assignPattern, randomSourceString: \", random.sourceString);\n        if (random.sourceString == \"\") random = null;\n        else {\n            random = random.sourceString.replace(\"&\", \"\"); // '%2'\n            random = parseInt(random);\n        }\n        let patternString = pattern.sourceString;\n        phrases = phrasesToArray(phrases);\n        pattern = pattern.eval();\n        let event = \"assignPattern\";\n        if (phrases.length > 1) event = \"assignPattern\";\n        return {\n            event: event,\n            phrases: phrases,\n            pattern: pattern,\n            patternString: patternString,\n            volume: volume,\n            random: random,\n        };\n    },\n\n    Assignments_setBPM: (_, bpm, factor) => {\n        bpm = bpm.sourceString;\n        factor = factor.sourceString;\n        let event = \"setBPM\";\n        return {\n            event: event,\n            bpm: bpm,\n            factor: factor,\n        };\n    },\n    Assignments_setVolume: (phrases, volume) => {\n        volume = volume.eval();\n        phrases = phrasesToArray(phrases);\n        let event = \"setVolume\";\n        return {\n            event: event,\n            phrases: phrases,\n            volume: volume,\n        };\n    },\n    Assignments_plainStartEvent: (phrases, random) => {\n        if (random.sourceString == \"\") random = null;\n        else {\n            random = random.sourceString.replace(\"&\", \"\"); // '%2'\n            random = parseInt(random);\n        }\n        phrases = phrasesToArray(phrases);\n        let event = \"plainStartEvent\";\n        return {\n            event: event,\n            phrases: phrases,\n            random: random,\n        };\n    },\n    Assignments_emptyEvent: (_) => {\n        let event = \"emptyEvent\";\n        return {\n            event: event,\n        };\n    },\n\n    // HELPER\n    // ======================================\n\n    Pattern: function (pattern) {\n        // here the incoming pattern gets evaluated\n        pattern = pattern.asIteration().eval();\n        // console.log('new at Pattern all incoming: ', pattern)\n        var newPattern = [];\n        for (let i = 0; i < pattern.length; i++) {\n            if (Array.isArray(pattern[i])) {\n                for (let j = 0; j < pattern[i].length; j++) {\n                    newPattern.push(pattern[i][j]);\n                }\n            } else {\n                newPattern.push(pattern[i]);\n            }\n        }\n        //console.log('new at Pattern all: ', newPattern)\n        return newPattern;\n    },\n\n    // Nested Events in Grammar:\n    // EventPattern =  | Event | NestedEvent\n    // NestedEvents = \"(\" NonemptyListOf<Events, \"\"> \")\" intPos?\n\n    // NestedEvents: function (_, pattern, __, int) {\n    //     pattern = pattern.asIteration().eval();\n    //     var newPattern = [];\n    //     int = int.eval();\n    //     if (int.length != 0) {\n    //         // if muliplier, then repeat to push each entry to newPattern\n    //         for (let i = 0; i < int; i++) {\n    //             for (let j = 0; j < pattern.length; j++) {\n    //                 newPattern.push(pattern[j]);\n    //             }\n    //         }\n    //     } else {\n    //         newPattern = pattern;\n    //     }\n    //     //console.log('NestedEvents, pattern + newPattern + int: ', pattern, newPattern, int);\n    //     return newPattern;\n    // },\n\n    Events: function (event) {\n        return event.eval();\n    },\n    Events_soundNote: function (_, note) {\n        if (note.sourceString != \"\") {\n            return parseInt(note.sourceString);\n        } else {\n            return 0;\n        }\n    },\n    Events_soundPause: function (_) {\n        return null;\n    },\n    floatPos: function (float) {\n        float = parseFloat(float.sourceString);\n        return float;\n    },\n    intPos: function (int) {\n        int = parseInt(int.sourceString);\n        return int;\n    },\n});\n\n// ============================================================================= //\n\n// Helper function for semantics.addOperation\nfunction phrasesToArray(phrases) {\n    // convert multiple instruments from String to Array\n    phrases = phrases.sourceString;\n    let phrasesArray = [];\n    if (phrases == \"\") {\n        phrasesArray = [];\n    } else {\n        phrases = phrases.split(\" \");\n        for (var i = 0; i < phrases.length; i++) {\n            if (phrases[i] != \"\") {\n                phrasesArray.push(phrases[i]);\n            }\n        }\n    }\n    return phrasesArray;\n}\n\nexport { livecode, semantics };\n","/*\n\nWebMidi v2.5.2\n\nWebMidi.js helps you tame the Web MIDI API. Send and receive MIDI messages with ease. Control instruments with user-friendly functions (playNote, sendPitchBend, etc.). React to MIDI input with simple event listeners (noteon, pitchbend, controlchange, etc.).\nhttps://github.com/djipco/webmidi\n\n\nThe MIT License (MIT)\n\nCopyright (c) 2015-2019, Jean-Philippe Côté\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and\nassociated documentation files (the \"Software\"), to deal in the Software without restriction,\nincluding without limitation the rights to use, copy, modify, merge, publish, distribute,\nsublicense, and/or sell copies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial\nportions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT\nNOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES\nOR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n*/\n\n\n!function(scope){\"use strict\";function WebMidi(){if(WebMidi.prototype._singleton)throw new Error(\"WebMidi is a singleton, it cannot be instantiated directly.\");(WebMidi.prototype._singleton=this)._inputs=[],this._outputs=[],this._userHandlers={},this._stateChangeQueue=[],this._processingStateChange=!1,this._midiInterfaceEvents=[\"connected\",\"disconnected\"],this._nrpnBuffer=[[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]],this._nrpnEventsEnabled=!0,this._nrpnTypes=[\"entry\",\"increment\",\"decrement\"],this._notes=[\"C\",\"C#\",\"D\",\"D#\",\"E\",\"F\",\"F#\",\"G\",\"G#\",\"A\",\"A#\",\"B\"],this._semitones={C:0,D:2,E:4,F:5,G:7,A:9,B:11},Object.defineProperties(this,{MIDI_SYSTEM_MESSAGES:{value:{sysex:240,timecode:241,songposition:242,songselect:243,tuningrequest:246,sysexend:247,clock:248,start:250,continue:251,stop:252,activesensing:254,reset:255,midimessage:0,unknownsystemmessage:-1},writable:!1,enumerable:!0,configurable:!1},MIDI_CHANNEL_MESSAGES:{value:{noteoff:8,noteon:9,keyaftertouch:10,controlchange:11,channelmode:11,nrpn:11,programchange:12,channelaftertouch:13,pitchbend:14},writable:!1,enumerable:!0,configurable:!1},MIDI_REGISTERED_PARAMETER:{value:{pitchbendrange:[0,0],channelfinetuning:[0,1],channelcoarsetuning:[0,2],tuningprogram:[0,3],tuningbank:[0,4],modulationrange:[0,5],azimuthangle:[61,0],elevationangle:[61,1],gain:[61,2],distanceratio:[61,3],maximumdistance:[61,4],maximumdistancegain:[61,5],referencedistanceratio:[61,6],panspreadangle:[61,7],rollangle:[61,8]},writable:!1,enumerable:!0,configurable:!1},MIDI_CONTROL_CHANGE_MESSAGES:{value:{bankselectcoarse:0,modulationwheelcoarse:1,breathcontrollercoarse:2,footcontrollercoarse:4,portamentotimecoarse:5,dataentrycoarse:6,volumecoarse:7,balancecoarse:8,pancoarse:10,expressioncoarse:11,effectcontrol1coarse:12,effectcontrol2coarse:13,generalpurposeslider1:16,generalpurposeslider2:17,generalpurposeslider3:18,generalpurposeslider4:19,bankselectfine:32,modulationwheelfine:33,breathcontrollerfine:34,footcontrollerfine:36,portamentotimefine:37,dataentryfine:38,volumefine:39,balancefine:40,panfine:42,expressionfine:43,effectcontrol1fine:44,effectcontrol2fine:45,holdpedal:64,portamento:65,sustenutopedal:66,softpedal:67,legatopedal:68,hold2pedal:69,soundvariation:70,resonance:71,soundreleasetime:72,soundattacktime:73,brightness:74,soundcontrol6:75,soundcontrol7:76,soundcontrol8:77,soundcontrol9:78,soundcontrol10:79,generalpurposebutton1:80,generalpurposebutton2:81,generalpurposebutton3:82,generalpurposebutton4:83,reverblevel:91,tremololevel:92,choruslevel:93,celestelevel:94,phaserlevel:95,databuttonincrement:96,databuttondecrement:97,nonregisteredparametercoarse:98,nonregisteredparameterfine:99,registeredparametercoarse:100,registeredparameterfine:101},writable:!1,enumerable:!0,configurable:!1},MIDI_NRPN_MESSAGES:{value:{entrymsb:6,entrylsb:38,increment:96,decrement:97,paramlsb:98,parammsb:99,nullactiveparameter:127},writable:!1,enumerable:!0,configurable:!1},MIDI_CHANNEL_MODE_MESSAGES:{value:{allsoundoff:120,resetallcontrollers:121,localcontrol:122,allnotesoff:123,omnimodeoff:124,omnimodeon:125,monomodeon:126,polymodeon:127},writable:!1,enumerable:!0,configurable:!1},octaveOffset:{value:0,writable:!0,enumerable:!0,configurable:!1}}),Object.defineProperties(this,{supported:{enumerable:!0,get:function(){return\"requestMIDIAccess\"in navigator}},enabled:{enumerable:!0,get:function(){return void 0!==this.interface}.bind(this)},inputs:{enumerable:!0,get:function(){return this._inputs}.bind(this)},outputs:{enumerable:!0,get:function(){return this._outputs}.bind(this)},sysexEnabled:{enumerable:!0,get:function(){return!(!this.interface||!this.interface.sysexEnabled)}.bind(this)},nrpnEventsEnabled:{enumerable:!0,get:function(){return!!this._nrpnEventsEnabled}.bind(this),set:function(enabled){return this._nrpnEventsEnabled=enabled,this._nrpnEventsEnabled}},nrpnTypes:{enumerable:!0,get:function(){return this._nrpnTypes}.bind(this)},time:{enumerable:!0,get:function(){return performance.now()}}})}var wm=new WebMidi;function Input(midiInput){var that=this;this._userHandlers={channel:{},system:{}},this._midiInput=midiInput,Object.defineProperties(this,{connection:{enumerable:!0,get:function(){return that._midiInput.connection}},id:{enumerable:!0,get:function(){return that._midiInput.id}},manufacturer:{enumerable:!0,get:function(){return that._midiInput.manufacturer}},name:{enumerable:!0,get:function(){return that._midiInput.name}},state:{enumerable:!0,get:function(){return that._midiInput.state}},type:{enumerable:!0,get:function(){return that._midiInput.type}}}),this._initializeUserHandlers(),this._midiInput.onmidimessage=this._onMidiMessage.bind(this)}function Output(midiOutput){var that=this;this._midiOutput=midiOutput,Object.defineProperties(this,{connection:{enumerable:!0,get:function(){return that._midiOutput.connection}},id:{enumerable:!0,get:function(){return that._midiOutput.id}},manufacturer:{enumerable:!0,get:function(){return that._midiOutput.manufacturer}},name:{enumerable:!0,get:function(){return that._midiOutput.name}},state:{enumerable:!0,get:function(){return that._midiOutput.state}},type:{enumerable:!0,get:function(){return that._midiOutput.type}}})}WebMidi.prototype.enable=function(callback,sysex){this.enabled||(this.supported?navigator.requestMIDIAccess({sysex:sysex}).then(function(midiAccess){var promiseTimeout,events=[],promises=[];this.interface=midiAccess,this._resetInterfaceUserHandlers(),this.interface.onstatechange=function(e){events.push(e)};for(var inputs=midiAccess.inputs.values(),input=inputs.next();input&&!input.done;input=inputs.next())promises.push(input.value.open());for(var outputs=midiAccess.outputs.values(),output=outputs.next();output&&!output.done;output=outputs.next())promises.push(output.value.open());function onPortsOpen(){clearTimeout(promiseTimeout),this._updateInputsAndOutputs(),this.interface.onstatechange=this._onInterfaceStateChange.bind(this),\"function\"==typeof callback&&callback.call(this),events.forEach(function(event){this._onInterfaceStateChange(event)}.bind(this))}promiseTimeout=setTimeout(onPortsOpen.bind(this),200),Promise&&Promise.all(promises).catch(function(err){}).then(onPortsOpen.bind(this))}.bind(this),function(err){\"function\"==typeof callback&&callback.call(this,err)}.bind(this)):\"function\"==typeof callback&&callback(new Error(\"The Web MIDI API is not supported by your browser.\")))},WebMidi.prototype.disable=function(){if(!this.supported)throw new Error(\"The Web MIDI API is not supported by your browser.\");this.enabled&&(this.removeListener(),this.inputs.forEach(function(input){input.removeListener()})),this.interface&&(this.interface.onstatechange=void 0),this.interface=void 0,this._inputs=[],this._outputs=[],this._nrpnEventsEnabled=!0,this._resetInterfaceUserHandlers()},WebMidi.prototype.addListener=function(type,listener){if(!this.enabled)throw new Error(\"WebMidi must be enabled before adding event listeners.\");if(\"function\"!=typeof listener)throw new TypeError(\"The 'listener' parameter must be a function.\");if(!(0<=this._midiInterfaceEvents.indexOf(type)))throw new TypeError(\"The specified event type is not supported.\");return this._userHandlers[type].push(listener),this},WebMidi.prototype.hasListener=function(type,listener){if(!this.enabled)throw new Error(\"WebMidi must be enabled before checking event listeners.\");if(\"function\"!=typeof listener)throw new TypeError(\"The 'listener' parameter must be a function.\");if(!(0<=this._midiInterfaceEvents.indexOf(type)))throw new TypeError(\"The specified event type is not supported.\");for(var o=0;o<this._userHandlers[type].length;o++)if(this._userHandlers[type][o]===listener)return!0;return!1},WebMidi.prototype.removeListener=function(type,listener){if(!this.enabled)throw new Error(\"WebMidi must be enabled before removing event listeners.\");if(void 0!==listener&&\"function\"!=typeof listener)throw new TypeError(\"The 'listener' parameter must be a function.\");if(0<=this._midiInterfaceEvents.indexOf(type))if(listener)for(var o=0;o<this._userHandlers[type].length;o++)this._userHandlers[type][o]===listener&&this._userHandlers[type].splice(o,1);else this._userHandlers[type]=[];else{if(void 0!==type)throw new TypeError(\"The specified event type is not supported.\");this._resetInterfaceUserHandlers()}return this},WebMidi.prototype.toMIDIChannels=function(channel){var channels;if(\"all\"===channel||void 0===channel)channels=[\"all\"];else{if(\"none\"===channel)return channels=[];channels=Array.isArray(channel)?channel:[channel]}return-1<channels.indexOf(\"all\")&&(channels=[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16]),channels.map(function(ch){return parseInt(ch)}).filter(function(ch){return 1<=ch&&ch<=16})},WebMidi.prototype.getInputById=function(id){if(!this.enabled)throw new Error(\"WebMidi is not enabled.\");id=String(id);for(var i=0;i<this.inputs.length;i++)if(this.inputs[i].id===id)return this.inputs[i];return!1},WebMidi.prototype.getOutputById=function(id){if(!this.enabled)throw new Error(\"WebMidi is not enabled.\");id=String(id);for(var i=0;i<this.outputs.length;i++)if(this.outputs[i].id===id)return this.outputs[i];return!1},WebMidi.prototype.getInputByName=function(name){if(!this.enabled)throw new Error(\"WebMidi is not enabled.\");for(var i=0;i<this.inputs.length;i++)if(~this.inputs[i].name.indexOf(name))return this.inputs[i];return!1},WebMidi.prototype.getOctave=function(number){if(null!=number&&0<=number&&number<=127)return Math.floor(Math.floor(number)/12-1)+Math.floor(wm.octaveOffset)},WebMidi.prototype.getOutputByName=function(name){if(!this.enabled)throw new Error(\"WebMidi is not enabled.\");for(var i=0;i<this.outputs.length;i++)if(~this.outputs[i].name.indexOf(name))return this.outputs[i];return!1},WebMidi.prototype.guessNoteNumber=function(input){var output=!1;if(input&&input.toFixed&&0<=input&&input<=127?output=Math.round(input):0<=parseInt(input)&&parseInt(input)<=127?output=parseInt(input):(\"string\"==typeof input||input instanceof String)&&(output=this.noteNameToNumber(input)),!1===output)throw new Error(\"Invalid input value (\"+input+\").\");return output},WebMidi.prototype.noteNameToNumber=function(name){\"string\"!=typeof name&&(name=\"\");var matches=name.match(/([CDEFGAB])(#{0,2}|b{0,2})(-?\\d+)/i);if(!matches)throw new RangeError(\"Invalid note name.\");var semitones=wm._semitones[matches[1].toUpperCase()],result=12*(parseInt(matches[3])+1-Math.floor(wm.octaveOffset))+semitones;if(-1<matches[2].toLowerCase().indexOf(\"b\")?result-=matches[2].length:-1<matches[2].toLowerCase().indexOf(\"#\")&&(result+=matches[2].length),result<0||127<result)throw new RangeError(\"Invalid note name or note outside valid range.\");return result},WebMidi.prototype._updateInputsAndOutputs=function(){this._updateInputs(),this._updateOutputs()},WebMidi.prototype._updateInputs=function(){for(var i=0;i<this._inputs.length;i++){for(var remove=!0,updated=this.interface.inputs.values(),input=updated.next();input&&!input.done;input=updated.next())if(this._inputs[i]._midiInput===input.value){remove=!1;break}remove&&this._inputs.splice(i,1)}this.interface&&this.interface.inputs.forEach(function(nInput){for(var add=!0,j=0;j<this._inputs.length;j++)this._inputs[j]._midiInput===nInput&&(add=!1);add&&this._inputs.push(new Input(nInput))}.bind(this))},WebMidi.prototype._updateOutputs=function(){for(var i=0;i<this._outputs.length;i++){for(var remove=!0,updated=this.interface.outputs.values(),output=updated.next();output&&!output.done;output=updated.next())if(this._outputs[i]._midiOutput===output.value){remove=!1;break}remove&&this._outputs.splice(i,1)}this.interface&&this.interface.outputs.forEach(function(nOutput){for(var add=!0,j=0;j<this._outputs.length;j++)this._outputs[j]._midiOutput===nOutput&&(add=!1);add&&this._outputs.push(new Output(nOutput))}.bind(this))},WebMidi.prototype._onInterfaceStateChange=function(e){this._updateInputsAndOutputs();var event={timestamp:e.timeStamp,type:e.port.state};this.interface&&\"connected\"===e.port.state?\"output\"===e.port.type?event.port=this.getOutputById(e.port.id):\"input\"===e.port.type&&(event.port=this.getInputById(e.port.id)):event.port={connection:\"closed\",id:e.port.id,manufacturer:e.port.manufacturer,name:e.port.name,state:e.port.state,type:e.port.type},this._userHandlers[e.port.state].forEach(function(handler){handler(event)})},WebMidi.prototype._resetInterfaceUserHandlers=function(){for(var i=0;i<this._midiInterfaceEvents.length;i++)this._userHandlers[this._midiInterfaceEvents[i]]=[]},Input.prototype.on=Input.prototype.addListener=function(type,channel,listener){var that=this;if(void 0===channel&&(channel=\"all\"),Array.isArray(channel)||(channel=[channel]),channel.forEach(function(item){if(\"all\"!==item&&!(1<=item&&item<=16))throw new RangeError(\"The 'channel' parameter is invalid.\")}),\"function\"!=typeof listener)throw new TypeError(\"The 'listener' parameter must be a function.\");if(void 0!==wm.MIDI_SYSTEM_MESSAGES[type])this._userHandlers.system[type]||(this._userHandlers.system[type]=[]),this._userHandlers.system[type].push(listener);else{if(void 0===wm.MIDI_CHANNEL_MESSAGES[type])throw new TypeError(\"The specified event type is not supported.\");if(-1<channel.indexOf(\"all\")){channel=[];for(var j=1;j<=16;j++)channel.push(j)}this._userHandlers.channel[type]||(this._userHandlers.channel[type]=[]),channel.forEach(function(ch){that._userHandlers.channel[type][ch]||(that._userHandlers.channel[type][ch]=[]),that._userHandlers.channel[type][ch].push(listener)})}return this},Input.prototype.hasListener=function(type,channel,listener){var that=this;if(\"function\"!=typeof listener)throw new TypeError(\"The 'listener' parameter must be a function.\");if(void 0===channel&&(channel=\"all\"),channel.constructor!==Array&&(channel=[channel]),void 0!==wm.MIDI_SYSTEM_MESSAGES[type]){for(var o=0;o<this._userHandlers.system[type].length;o++)if(this._userHandlers.system[type][o]===listener)return!0}else if(void 0!==wm.MIDI_CHANNEL_MESSAGES[type]){if(-1<channel.indexOf(\"all\")){channel=[];for(var j=1;j<=16;j++)channel.push(j)}return!!this._userHandlers.channel[type]&&channel.every(function(chNum){var listeners=that._userHandlers.channel[type][chNum];return listeners&&-1<listeners.indexOf(listener)})}return!1},Input.prototype.removeListener=function(type,channel,listener){var that=this;if(void 0!==listener&&\"function\"!=typeof listener)throw new TypeError(\"The 'listener' parameter must be a function.\");if(void 0===channel&&(channel=\"all\"),channel.constructor!==Array&&(channel=[channel]),void 0!==wm.MIDI_SYSTEM_MESSAGES[type])if(void 0===listener)this._userHandlers.system[type]=[];else for(var o=0;o<this._userHandlers.system[type].length;o++)this._userHandlers.system[type][o]===listener&&this._userHandlers.system[type].splice(o,1);else if(void 0!==wm.MIDI_CHANNEL_MESSAGES[type]){if(-1<channel.indexOf(\"all\")){channel=[];for(var j=1;j<=16;j++)channel.push(j)}if(!this._userHandlers.channel[type])return this;channel.forEach(function(chNum){var listeners=that._userHandlers.channel[type][chNum];if(listeners)if(void 0===listener)that._userHandlers.channel[type][chNum]=[];else for(var l=0;l<listeners.length;l++)listeners[l]===listener&&listeners.splice(l,1)})}else{if(void 0!==type)throw new TypeError(\"The specified event type is not supported.\");this._initializeUserHandlers()}return this},Input.prototype._initializeUserHandlers=function(){for(var prop1 in wm.MIDI_CHANNEL_MESSAGES)Object.prototype.hasOwnProperty.call(wm.MIDI_CHANNEL_MESSAGES,prop1)&&(this._userHandlers.channel[prop1]={});for(var prop2 in wm.MIDI_SYSTEM_MESSAGES)Object.prototype.hasOwnProperty.call(wm.MIDI_SYSTEM_MESSAGES,prop2)&&(this._userHandlers.system[prop2]=[])},Input.prototype._onMidiMessage=function(e){if(0<this._userHandlers.system.midimessage.length){var event={target:this,data:e.data,timestamp:e.timeStamp,type:\"midimessage\"};this._userHandlers.system.midimessage.forEach(function(callback){callback(event)})}e.data[0]<240?(this._parseChannelEvent(e),this._parseNrpnEvent(e)):e.data[0]<=255&&this._parseSystemEvent(e)},Input.prototype._parseNrpnEvent=function(e){var data1,data2,command=e.data[0]>>4,channelBufferIndex=15&e.data[0],channel=1+channelBufferIndex;if(1<e.data.length&&(data1=e.data[1],data2=2<e.data.length?e.data[2]:void 0),wm.nrpnEventsEnabled&&command===wm.MIDI_CHANNEL_MESSAGES.controlchange&&(data1>=wm.MIDI_NRPN_MESSAGES.increment&&data1<=wm.MIDI_NRPN_MESSAGES.parammsb||data1===wm.MIDI_NRPN_MESSAGES.entrymsb||data1===wm.MIDI_NRPN_MESSAGES.entrylsb)){var ccEvent={target:this,type:\"controlchange\",data:e.data,timestamp:e.timeStamp,channel:channel,controller:{number:data1,name:this.getCcNameByNumber(data1)},value:data2};if(ccEvent.controller.number===wm.MIDI_NRPN_MESSAGES.parammsb&&ccEvent.value!=wm.MIDI_NRPN_MESSAGES.nullactiveparameter)wm._nrpnBuffer[channelBufferIndex]=[],wm._nrpnBuffer[channelBufferIndex][0]=ccEvent;else if(1===wm._nrpnBuffer[channelBufferIndex].length&&ccEvent.controller.number===wm.MIDI_NRPN_MESSAGES.paramlsb)wm._nrpnBuffer[channelBufferIndex].push(ccEvent);else if(2!==wm._nrpnBuffer[channelBufferIndex].length||ccEvent.controller.number!==wm.MIDI_NRPN_MESSAGES.increment&&ccEvent.controller.number!==wm.MIDI_NRPN_MESSAGES.decrement&&ccEvent.controller.number!==wm.MIDI_NRPN_MESSAGES.entrymsb)if(3===wm._nrpnBuffer[channelBufferIndex].length&&wm._nrpnBuffer[channelBufferIndex][2].number===wm.MIDI_NRPN_MESSAGES.entrymsb&&ccEvent.controller.number===wm.MIDI_NRPN_MESSAGES.entrylsb)wm._nrpnBuffer[channelBufferIndex].push(ccEvent);else if(3<=wm._nrpnBuffer[channelBufferIndex].length&&wm._nrpnBuffer[channelBufferIndex].length<=4&&ccEvent.controller.number===wm.MIDI_NRPN_MESSAGES.parammsb&&ccEvent.value===wm.MIDI_NRPN_MESSAGES.nullactiveparameter)wm._nrpnBuffer[channelBufferIndex].push(ccEvent);else if(4<=wm._nrpnBuffer[channelBufferIndex].length&&wm._nrpnBuffer[channelBufferIndex].length<=5&&ccEvent.controller.number===wm.MIDI_NRPN_MESSAGES.paramlsb&&ccEvent.value===wm.MIDI_NRPN_MESSAGES.nullactiveparameter){wm._nrpnBuffer[channelBufferIndex].push(ccEvent);var rawData=[];wm._nrpnBuffer[channelBufferIndex].forEach(function(ev){rawData.push(ev.data)});var nrpnNumber=wm._nrpnBuffer[channelBufferIndex][0].value<<7|wm._nrpnBuffer[channelBufferIndex][1].value,nrpnValue=wm._nrpnBuffer[channelBufferIndex][2].value;6===wm._nrpnBuffer[channelBufferIndex].length&&(nrpnValue=wm._nrpnBuffer[channelBufferIndex][2].value<<7|wm._nrpnBuffer[channelBufferIndex][3].value);var nrpnControllerType=\"\";switch(wm._nrpnBuffer[channelBufferIndex][2].controller.number){case wm.MIDI_NRPN_MESSAGES.entrymsb:nrpnControllerType=wm._nrpnTypes[0];break;case wm.MIDI_NRPN_MESSAGES.increment:nrpnControllerType=wm._nrpnTypes[1];break;case wm.MIDI_NRPN_MESSAGES.decrement:nrpnControllerType=wm._nrpnTypes[2];break;default:throw new Error(\"The NPRN type was unidentifiable.\")}var nrpnEvent={timestamp:ccEvent.timestamp,channel:ccEvent.channel,type:\"nrpn\",data:rawData,controller:{number:nrpnNumber,type:nrpnControllerType,name:\"Non-Registered Parameter \"+nrpnNumber},value:nrpnValue};wm._nrpnBuffer[channelBufferIndex]=[],this._userHandlers.channel[nrpnEvent.type]&&this._userHandlers.channel[nrpnEvent.type][nrpnEvent.channel]&&this._userHandlers.channel[nrpnEvent.type][nrpnEvent.channel].forEach(function(callback){callback(nrpnEvent)})}else wm._nrpnBuffer[channelBufferIndex]=[];else wm._nrpnBuffer[channelBufferIndex].push(ccEvent)}},Input.prototype._parseChannelEvent=function(e){var data1,data2,command=e.data[0]>>4,channel=1+(15&e.data[0]);1<e.data.length&&(data1=e.data[1],data2=2<e.data.length?e.data[2]:void 0);var event={target:this,data:e.data,timestamp:e.timeStamp,channel:channel};command===wm.MIDI_CHANNEL_MESSAGES.noteoff||command===wm.MIDI_CHANNEL_MESSAGES.noteon&&0===data2?(event.type=\"noteoff\",event.note={number:data1,name:wm._notes[data1%12],octave:wm.getOctave(data1)},event.velocity=data2/127,event.rawVelocity=data2):command===wm.MIDI_CHANNEL_MESSAGES.noteon?(event.type=\"noteon\",event.note={number:data1,name:wm._notes[data1%12],octave:wm.getOctave(data1)},event.velocity=data2/127,event.rawVelocity=data2):command===wm.MIDI_CHANNEL_MESSAGES.keyaftertouch?(event.type=\"keyaftertouch\",event.note={number:data1,name:wm._notes[data1%12],octave:wm.getOctave(data1)},event.value=data2/127):command===wm.MIDI_CHANNEL_MESSAGES.controlchange&&0<=data1&&data1<=119?(event.type=\"controlchange\",event.controller={number:data1,name:this.getCcNameByNumber(data1)},event.value=data2):command===wm.MIDI_CHANNEL_MESSAGES.channelmode&&120<=data1&&data1<=127?(event.type=\"channelmode\",event.controller={number:data1,name:this.getChannelModeByNumber(data1)},event.value=data2):command===wm.MIDI_CHANNEL_MESSAGES.programchange?(event.type=\"programchange\",event.value=data1):command===wm.MIDI_CHANNEL_MESSAGES.channelaftertouch?(event.type=\"channelaftertouch\",event.value=data1/127):command===wm.MIDI_CHANNEL_MESSAGES.pitchbend?(event.type=\"pitchbend\",event.value=((data2<<7)+data1-8192)/8192):event.type=\"unknownchannelmessage\",this._userHandlers.channel[event.type]&&this._userHandlers.channel[event.type][channel]&&this._userHandlers.channel[event.type][channel].forEach(function(callback){callback(event)})},Input.prototype.getCcNameByNumber=function(number){if(!(0<=(number=Math.floor(number))&&number<=119))throw new RangeError(\"The control change number must be between 0 and 119.\");for(var cc in wm.MIDI_CONTROL_CHANGE_MESSAGES)if(Object.prototype.hasOwnProperty.call(wm.MIDI_CONTROL_CHANGE_MESSAGES,cc)&&number===wm.MIDI_CONTROL_CHANGE_MESSAGES[cc])return cc},Input.prototype.getChannelModeByNumber=function(number){if(!(120<=(number=Math.floor(number))&&status<=127))throw new RangeError(\"The control change number must be between 120 and 127.\");for(var cm in wm.MIDI_CHANNEL_MODE_MESSAGES)if(Object.prototype.hasOwnProperty.call(wm.MIDI_CHANNEL_MODE_MESSAGES,cm)&&number===wm.MIDI_CHANNEL_MODE_MESSAGES[cm])return cm},Input.prototype._parseSystemEvent=function(e){var command=e.data[0],event={target:this,data:e.data,timestamp:e.timeStamp};command===wm.MIDI_SYSTEM_MESSAGES.sysex?event.type=\"sysex\":command===wm.MIDI_SYSTEM_MESSAGES.timecode?event.type=\"timecode\":command===wm.MIDI_SYSTEM_MESSAGES.songposition?event.type=\"songposition\":command===wm.MIDI_SYSTEM_MESSAGES.songselect?(event.type=\"songselect\",event.song=e.data[1]):command===wm.MIDI_SYSTEM_MESSAGES.tuningrequest?event.type=\"tuningrequest\":command===wm.MIDI_SYSTEM_MESSAGES.clock?event.type=\"clock\":command===wm.MIDI_SYSTEM_MESSAGES.start?event.type=\"start\":command===wm.MIDI_SYSTEM_MESSAGES.continue?event.type=\"continue\":command===wm.MIDI_SYSTEM_MESSAGES.stop?event.type=\"stop\":command===wm.MIDI_SYSTEM_MESSAGES.activesensing?event.type=\"activesensing\":command===wm.MIDI_SYSTEM_MESSAGES.reset?event.type=\"reset\":event.type=\"unknownsystemmessage\",this._userHandlers.system[event.type]&&this._userHandlers.system[event.type].forEach(function(callback){callback(event)})},Output.prototype.send=function(status,data,timestamp){if(!(128<=status&&status<=255))throw new RangeError(\"The status byte must be an integer between 128 (0x80) and 255 (0xFF).\");void 0===data&&(data=[]),Array.isArray(data)||(data=[data]);var message=[];return data.forEach(function(item){var parsed=Math.floor(item);if(!(0<=parsed&&parsed<=255))throw new RangeError(\"Data bytes must be integers between 0 (0x00) and 255 (0xFF).\");message.push(parsed)}),this._midiOutput.send([status].concat(message),parseFloat(timestamp)||0),this},Output.prototype.sendSysex=function(manufacturer,data,options){if(!wm.sysexEnabled)throw new Error(\"Sysex message support must first be activated.\");return options=options||{},manufacturer=[].concat(manufacturer),data.forEach(function(item){if(item<0||127<item)throw new RangeError(\"The data bytes of a sysex message must be integers between 0 (0x00) and 127 (0x7F).\")}),data=manufacturer.concat(data,wm.MIDI_SYSTEM_MESSAGES.sysexend),this.send(wm.MIDI_SYSTEM_MESSAGES.sysex,data,this._parseTimeParameter(options.time)),this},Output.prototype.sendTimecodeQuarterFrame=function(value,options){return options=options||{},this.send(wm.MIDI_SYSTEM_MESSAGES.timecode,value,this._parseTimeParameter(options.time)),this},Output.prototype.sendSongPosition=function(value,options){options=options||{};var msb=(value=Math.floor(value)||0)>>7&127,lsb=127&value;return this.send(wm.MIDI_SYSTEM_MESSAGES.songposition,[msb,lsb],this._parseTimeParameter(options.time)),this},Output.prototype.sendSongSelect=function(value,options){if(options=options||{},!(0<=(value=Math.floor(value))&&value<=127))throw new RangeError(\"The song number must be between 0 and 127.\");return this.send(wm.MIDI_SYSTEM_MESSAGES.songselect,[value],this._parseTimeParameter(options.time)),this},Output.prototype.sendTuningRequest=function(options){return options=options||{},this.send(wm.MIDI_SYSTEM_MESSAGES.tuningrequest,void 0,this._parseTimeParameter(options.time)),this},Output.prototype.sendClock=function(options){return options=options||{},this.send(wm.MIDI_SYSTEM_MESSAGES.clock,void 0,this._parseTimeParameter(options.time)),this},Output.prototype.sendStart=function(options){return options=options||{},this.send(wm.MIDI_SYSTEM_MESSAGES.start,void 0,this._parseTimeParameter(options.time)),this},Output.prototype.sendContinue=function(options){return options=options||{},this.send(wm.MIDI_SYSTEM_MESSAGES.continue,void 0,this._parseTimeParameter(options.time)),this},Output.prototype.sendStop=function(options){return options=options||{},this.send(wm.MIDI_SYSTEM_MESSAGES.stop,void 0,this._parseTimeParameter(options.time)),this},Output.prototype.sendActiveSensing=function(options){return options=options||{},this.send(wm.MIDI_SYSTEM_MESSAGES.activesensing,[],this._parseTimeParameter(options.time)),this},Output.prototype.sendReset=function(options){return options=options||{},this.send(wm.MIDI_SYSTEM_MESSAGES.reset,void 0,this._parseTimeParameter(options.time)),this},Output.prototype.stopNote=function(note,channel,options){if(\"all\"===note)return this.sendChannelMode(\"allnotesoff\",0,channel,options);var nVelocity=64;return(options=options||{}).rawVelocity?!isNaN(options.velocity)&&0<=options.velocity&&options.velocity<=127&&(nVelocity=options.velocity):!isNaN(options.velocity)&&0<=options.velocity&&options.velocity<=1&&(nVelocity=127*options.velocity),this._convertNoteToArray(note).forEach(function(item){wm.toMIDIChannels(channel).forEach(function(ch){this.send((wm.MIDI_CHANNEL_MESSAGES.noteoff<<4)+(ch-1),[item,Math.round(nVelocity)],this._parseTimeParameter(options.time))}.bind(this))}.bind(this)),this},Output.prototype.playNote=function(note,channel,options){var time,nVelocity=64;if((options=options||{}).rawVelocity?!isNaN(options.velocity)&&0<=options.velocity&&options.velocity<=127&&(nVelocity=options.velocity):!isNaN(options.velocity)&&0<=options.velocity&&options.velocity<=1&&(nVelocity=127*options.velocity),time=this._parseTimeParameter(options.time),this._convertNoteToArray(note).forEach(function(item){wm.toMIDIChannels(channel).forEach(function(ch){this.send((wm.MIDI_CHANNEL_MESSAGES.noteon<<4)+(ch-1),[item,Math.round(nVelocity)],time)}.bind(this))}.bind(this)),!isNaN(options.duration)){options.duration<=0&&(options.duration=0);var nRelease=64;options.rawVelocity?!isNaN(options.release)&&0<=options.release&&options.release<=127&&(nRelease=options.release):!isNaN(options.release)&&0<=options.release&&options.release<=1&&(nRelease=127*options.release),this._convertNoteToArray(note).forEach(function(item){wm.toMIDIChannels(channel).forEach(function(ch){this.send((wm.MIDI_CHANNEL_MESSAGES.noteoff<<4)+(ch-1),[item,Math.round(nRelease)],(time||wm.time)+options.duration)}.bind(this))}.bind(this))}return this},Output.prototype.sendKeyAftertouch=function(note,channel,pressure,options){var that=this;if(options=options||{},channel<1||16<channel)throw new RangeError(\"The channel must be between 1 and 16.\");(isNaN(pressure)||pressure<0||1<pressure)&&(pressure=.5);var nPressure=Math.round(127*pressure);return this._convertNoteToArray(note).forEach(function(item){wm.toMIDIChannels(channel).forEach(function(ch){that.send((wm.MIDI_CHANNEL_MESSAGES.keyaftertouch<<4)+(ch-1),[item,nPressure],that._parseTimeParameter(options.time))})}),this},Output.prototype.sendControlChange=function(controller,value,channel,options){if(options=options||{},\"string\"==typeof controller){if(void 0===(controller=wm.MIDI_CONTROL_CHANGE_MESSAGES[controller]))throw new TypeError(\"Invalid controller name.\")}else if(!(0<=(controller=Math.floor(controller))&&controller<=119))throw new RangeError(\"Controller numbers must be between 0 and 119.\");if(!(0<=(value=Math.floor(value)||0)&&value<=127))throw new RangeError(\"Controller value must be between 0 and 127.\");return wm.toMIDIChannels(channel).forEach(function(ch){this.send((wm.MIDI_CHANNEL_MESSAGES.controlchange<<4)+(ch-1),[controller,value],this._parseTimeParameter(options.time))}.bind(this)),this},Output.prototype._selectRegisteredParameter=function(parameter,channel,time){var that=this;if(parameter[0]=Math.floor(parameter[0]),!(0<=parameter[0]&&parameter[0]<=127))throw new RangeError(\"The control65 value must be between 0 and 127\");if(parameter[1]=Math.floor(parameter[1]),!(0<=parameter[1]&&parameter[1]<=127))throw new RangeError(\"The control64 value must be between 0 and 127\");return wm.toMIDIChannels(channel).forEach(function(){that.sendControlChange(101,parameter[0],channel,{time:time}),that.sendControlChange(100,parameter[1],channel,{time:time})}),this},Output.prototype._selectNonRegisteredParameter=function(parameter,channel,time){var that=this;if(parameter[0]=Math.floor(parameter[0]),!(0<=parameter[0]&&parameter[0]<=127))throw new RangeError(\"The control63 value must be between 0 and 127\");if(parameter[1]=Math.floor(parameter[1]),!(0<=parameter[1]&&parameter[1]<=127))throw new RangeError(\"The control62 value must be between 0 and 127\");return wm.toMIDIChannels(channel).forEach(function(){that.sendControlChange(99,parameter[0],channel,{time:time}),that.sendControlChange(98,parameter[1],channel,{time:time})}),this},Output.prototype._setCurrentRegisteredParameter=function(data,channel,time){var that=this;if((data=[].concat(data))[0]=Math.floor(data[0]),!(0<=data[0]&&data[0]<=127))throw new RangeError(\"The msb value must be between 0 and 127\");return wm.toMIDIChannels(channel).forEach(function(){that.sendControlChange(6,data[0],channel,{time:time})}),data[1]=Math.floor(data[1]),0<=data[1]&&data[1]<=127&&wm.toMIDIChannels(channel).forEach(function(){that.sendControlChange(38,data[1],channel,{time:time})}),this},Output.prototype._deselectRegisteredParameter=function(channel,time){var that=this;return wm.toMIDIChannels(channel).forEach(function(){that.sendControlChange(101,127,channel,{time:time}),that.sendControlChange(100,127,channel,{time:time})}),this},Output.prototype.setRegisteredParameter=function(parameter,data,channel,options){var that=this;if(options=options||{},!Array.isArray(parameter)){if(!wm.MIDI_REGISTERED_PARAMETER[parameter])throw new Error(\"The specified parameter is not available.\");parameter=wm.MIDI_REGISTERED_PARAMETER[parameter]}return wm.toMIDIChannels(channel).forEach(function(){that._selectRegisteredParameter(parameter,channel,options.time),that._setCurrentRegisteredParameter(data,channel,options.time),that._deselectRegisteredParameter(channel,options.time)}),this},Output.prototype.setNonRegisteredParameter=function(parameter,data,channel,options){var that=this;if(options=options||{},!(0<=parameter[0]&&parameter[0]<=127&&0<=parameter[1]&&parameter[1]<=127))throw new Error(\"Position 0 and 1 of the 2-position parameter array must both be between 0 and 127.\");return data=[].concat(data),wm.toMIDIChannels(channel).forEach(function(){that._selectNonRegisteredParameter(parameter,channel,options.time),that._setCurrentRegisteredParameter(data,channel,options.time),that._deselectRegisteredParameter(channel,options.time)}),this},Output.prototype.incrementRegisteredParameter=function(parameter,channel,options){var that=this;if(options=options||{},!Array.isArray(parameter)){if(!wm.MIDI_REGISTERED_PARAMETER[parameter])throw new Error(\"The specified parameter is not available.\");parameter=wm.MIDI_REGISTERED_PARAMETER[parameter]}return wm.toMIDIChannels(channel).forEach(function(){that._selectRegisteredParameter(parameter,channel,options.time),that.sendControlChange(96,0,channel,{time:options.time}),that._deselectRegisteredParameter(channel,options.time)}),this},Output.prototype.decrementRegisteredParameter=function(parameter,channel,options){if(options=options||{},!Array.isArray(parameter)){if(!wm.MIDI_REGISTERED_PARAMETER[parameter])throw new TypeError(\"The specified parameter is not available.\");parameter=wm.MIDI_REGISTERED_PARAMETER[parameter]}return wm.toMIDIChannels(channel).forEach(function(){this._selectRegisteredParameter(parameter,channel,options.time),this.sendControlChange(97,0,channel,{time:options.time}),this._deselectRegisteredParameter(channel,options.time)}.bind(this)),this},Output.prototype.setPitchBendRange=function(semitones,cents,channel,options){var that=this;if(options=options||{},!(0<=(semitones=Math.floor(semitones)||0)&&semitones<=127))throw new RangeError(\"The semitones value must be between 0 and 127\");if(!(0<=(cents=Math.floor(cents)||0)&&cents<=127))throw new RangeError(\"The cents value must be between 0 and 127\");return wm.toMIDIChannels(channel).forEach(function(){that.setRegisteredParameter(\"pitchbendrange\",[semitones,cents],channel,{time:options.time})}),this},Output.prototype.setModulationRange=function(semitones,cents,channel,options){var that=this;if(options=options||{},!(0<=(semitones=Math.floor(semitones)||0)&&semitones<=127))throw new RangeError(\"The semitones value must be between 0 and 127\");if(!(0<=(cents=Math.floor(cents)||0)&&cents<=127))throw new RangeError(\"The cents value must be between 0 and 127\");return wm.toMIDIChannels(channel).forEach(function(){that.setRegisteredParameter(\"modulationrange\",[semitones,cents],channel,{time:options.time})}),this},Output.prototype.setMasterTuning=function(value,channel,options){var that=this;if(options=options||{},(value=parseFloat(value)||0)<=-65||64<=value)throw new RangeError(\"The value must be a decimal number larger than -65 and smaller than 64.\");var coarse=Math.floor(value)+64,fine=value-Math.floor(value),msb=(fine=Math.round((fine+1)/2*16383))>>7&127,lsb=127&fine;return wm.toMIDIChannels(channel).forEach(function(){that.setRegisteredParameter(\"channelcoarsetuning\",coarse,channel,{time:options.time}),that.setRegisteredParameter(\"channelfinetuning\",[msb,lsb],channel,{time:options.time})}),this},Output.prototype.setTuningProgram=function(value,channel,options){var that=this;if(options=options||{},!(0<=(value=Math.floor(value))&&value<=127))throw new RangeError(\"The program value must be between 0 and 127\");return wm.toMIDIChannels(channel).forEach(function(){that.setRegisteredParameter(\"tuningprogram\",value,channel,{time:options.time})}),this},Output.prototype.setTuningBank=function(value,channel,options){var that=this;if(options=options||{},!(0<=(value=Math.floor(value)||0)&&value<=127))throw new RangeError(\"The bank value must be between 0 and 127\");return wm.toMIDIChannels(channel).forEach(function(){that.setRegisteredParameter(\"tuningbank\",value,channel,{time:options.time})}),this},Output.prototype.sendChannelMode=function(command,value,channel,options){if(options=options||{},\"string\"==typeof command){if(!(command=wm.MIDI_CHANNEL_MODE_MESSAGES[command]))throw new TypeError(\"Invalid channel mode message name.\")}else if(!(120<=(command=Math.floor(command))&&command<=127))throw new RangeError(\"Channel mode numerical identifiers must be between 120 and 127.\");if((value=Math.floor(value)||0)<0||127<value)throw new RangeError(\"Value must be an integer between 0 and 127.\");return wm.toMIDIChannels(channel).forEach(function(ch){this.send((wm.MIDI_CHANNEL_MESSAGES.channelmode<<4)+(ch-1),[command,value],this._parseTimeParameter(options.time))}.bind(this)),this},Output.prototype.sendProgramChange=function(program,channel,options){var that=this;if(options=options||{},program=Math.floor(program),isNaN(program)||program<0||127<program)throw new RangeError(\"Program numbers must be between 0 and 127.\");return wm.toMIDIChannels(channel).forEach(function(ch){that.send((wm.MIDI_CHANNEL_MESSAGES.programchange<<4)+(ch-1),[program],that._parseTimeParameter(options.time))}),this},Output.prototype.sendChannelAftertouch=function(pressure,channel,options){var that=this;options=options||{},pressure=parseFloat(pressure),(isNaN(pressure)||pressure<0||1<pressure)&&(pressure=.5);var nPressure=Math.round(127*pressure);return wm.toMIDIChannels(channel).forEach(function(ch){that.send((wm.MIDI_CHANNEL_MESSAGES.channelaftertouch<<4)+(ch-1),[nPressure],that._parseTimeParameter(options.time))}),this},Output.prototype.sendPitchBend=function(bend,channel,options){var that=this;if(options=options||{},isNaN(bend)||bend<-1||1<bend)throw new RangeError(\"Pitch bend value must be between -1 and 1.\");var nLevel=Math.round((bend+1)/2*16383),msb=nLevel>>7&127,lsb=127&nLevel;return wm.toMIDIChannels(channel).forEach(function(ch){that.send((wm.MIDI_CHANNEL_MESSAGES.pitchbend<<4)+(ch-1),[lsb,msb],that._parseTimeParameter(options.time))}),this},Output.prototype._parseTimeParameter=function(time){var value,parsed=parseFloat(time);return\"string\"==typeof time&&\"+\"===time.substring(0,1)?parsed&&0<parsed&&(value=wm.time+parsed):parsed>wm.time&&(value=parsed),value},Output.prototype._convertNoteToArray=function(note){var notes=[];return Array.isArray(note)||(note=[note]),note.forEach(function(item){notes.push(wm.guessNoteNumber(item))}),notes},\"function\"==typeof define&&\"object\"==typeof define.amd?define([],function(){return wm}):\"undefined\"!=typeof module&&module.exports?module.exports=wm:scope.WebMidi||(scope.WebMidi=wm)}(this);","import * as Tone from \"tone\";\nimport WebMidi from \"webmidi\";\nimport { App } from \"/index\";\n\n// INSTRUMENT CLASS\n// ===================================================================\n// main logic for all instrument related stuff. is cleaning the main code immensively\n\nclass Instrument {\n    // global class variables\n    static audioOutput = new Tone.Gain(0.9); // master output for Tone -> Speaker\n    static masterGain = new Tone.Gain(0.9);\n\n    constructor(message) {\n        // construct Instrument\n        this.name = message.name;\n        // console.log(`make instrument ${this.name}`);\n        // this.sampleUrl = message.sample.file[0][1];\n        this.buffer = message.buffer;\n        this.synth = new Tone.Sampler({\n            urls: {\n                C3: this.buffer,\n            },\n            onload: () => {\n                // this.synth.triggerAttackRelease([\"C1\"], 0.5);\n                // console.log(`sampler  loaded`);\n            },\n        });\n        this.sequence = [null, null, null, null, null, null, null, null];\n        this.patternRaw = \"\";\n        this.pattern = \"\";\n        this.rand = 0;\n        this.volume = 0.6;\n        this.chan = message.chan + 1;\n        this.envSettings = {\n            attack: 0.01,\n            decay: 0.31,\n            sustain: 0.99,\n            release: 2.86,\n        }; // attk, dec, sus, rel\n        this.samplerEnvSettings = {\n            attack: 0.01,\n            decay: 0.3,\n            sustain: 0.71,\n            release: 0.8,\n        }; // attk, dec, sus, rel\n        this.eqSettings = {\n            high: 0,\n            highFrequency: 5000,\n            mid: 0,\n            lowFrequency: 400,\n            low: 0,\n        };\n        this.mute = false;\n        this.baseNote = 48;\n        this.beatCounter = 0;\n        this.randomized = false;\n        this.active = false;\n\n        this.gain = new Tone.Gain(1).connect(Instrument.masterGain);\n        this.ampEnv = new Tone.AmplitudeEnvelope(this.envSettings);\n        this.ampEnv.connect(this.gain);\n        this.setVolume(this.volume);\n\n        this.synth.connect(this.ampEnv);\n        this.synth.attack = 0.01;\n        this.synth.sustain = 1;\n        this.synth.release = 2.5;\n    }\n\n    // HELPER\n    // =========================================\n\n    updateSequence(pattern, patternRaw) {\n        console.log(`incoming updateSequence pattern:`, pattern);\n        this.patternRaw = patternRaw || \"\";\n        this.pattern = pattern;\n        const midiPattern = this.#translatePatternToMidi(this.pattern);\n        // console.log(`finished midiPattern: ${midiPattern}`);\n        const repeatedArray = [].concat(...new Array(8).fill(midiPattern));\n        const slicedArray = repeatedArray.slice(0, 8);\n\n        for (let i = 0; i < 8; i++) {\n            this.sequence[i] = slicedArray[i];\n        }\n        // console.log(\n        //     `finished midiPattern: ${midiPattern},\n        //     slice: ${slicedArray}\n        //     sequence: ${this.sequence}\n        //     patternRaw: ${patternRaw}\n        //     `\n        // );\n    }\n\n    // translate pattern [0, 1, 2, -4] to midi pattern ['C1', 'A2']. based on basenote/ transpose\n    #translatePatternToMidi = (pattern) => {\n        let midiPattern = [];\n        for (let i = 0; i < pattern.length; i++) {\n            let note = pattern[i];\n            // if note is a rest, push as 'null', else calculate midi notes\n            if (note == null) midiPattern.push(note);\n            else {\n                // console.log(\"changed note\", note);\n                note = note + this.baseNote;\n\n                // console.log(\"changed note+baseNote\", note);\n                // // transpose note\n                // if (this.#transpose < 0) note -= this.#transpose;\n                // if (this.#transpose > 0) note += this.#transpose;\n                // // console.log(\"transpose\", this.#transpose);\n                // // console.log(\"note after transpose: \", note);\n                // set notes from pattern note\n                note = Tone.Frequency(note, \"midi\").toNote();\n                // console.log(\"changed note+baseNote to Freq\", note);\n                midiPattern.push(note);\n            }\n        }\n        return midiPattern;\n    };\n\n    random(random) {\n        this.rand = random;\n        console.log(`set random to ${random}`);\n    }\n\n    updateRandomizer() {\n        if (this.rand != 0) {\n            // console.log(\n            //     `update Randomizer for ${this.name}. beatCounter: ${this.beatCounter}, rand: ${this.rand}`\n            // );\n            // if counter bigger than rand, then reset\n            if (this.beatCounter > this.rand) this.beatCounter = 0;\n            // if counter hits rand, than randomize once\n            if (this.beatCounter == this.rand) {\n                if (!this.randomized) {\n                    // console.log(`condition true rand`);\n                    const sequenceRand = this.#createRandomPattern(this.sequence);\n                    for (let i = 0; i < 8; i++) {\n                        this.sequence[i] = sequenceRand[i];\n                    }\n                    // console.log(`Randomized for ${this.name}, new: ${this.sequence}`);\n                    this.randomized = true;\n                    this.beatCounter = 0;\n                    return true;\n                }\n            } else this.randomized = false;\n        }\n    }\n\n    #createRandomPattern(sequence) {\n        // console.log(`randomizer input ${sequence}`);\n        let pattern = [];\n        for (let i = 0; i < 8; i++) {\n            pattern.push(sequence[i]);\n        }\n        for (var i = 8 - 1; i >= 0; i--) {\n            let randomIndex = Math.floor(Math.random() * (i + 1));\n            let itemAtIndex = pattern[randomIndex];\n            pattern[randomIndex] = pattern[i];\n            pattern[i] = itemAtIndex;\n        }\n        // console.log(\"pattern randomized: \", pattern);\n        return pattern;\n    }\n\n    getVolume() {\n        return this.volume;\n    }\n    setVolume(volume) {\n        if (volume > 1) volume = 1;\n        this.volume = volume;\n        this.gain.gain.rampTo(this.volume, 0.01);\n    }\n\n    getSequence() {\n        return [...this.sequence];\n    }\n    setSequence(sequence, patternRaw) {\n        this.sequence = [...sequence];\n        this.patternRaw = patternRaw;\n    }\n\n    setEnvSettings(object) {\n        this.envSettings = object;\n    }\n    getEnvSettings() {\n        return this.envSettings;\n    }\n\n    getRand() {\n        return this.rand;\n    }\n    setRand(value) {\n        this.rand = value;\n    }\n    getPattern() {\n        return this.pattern;\n    }\n    getPatternRaw() {\n        return this.patternRaw;\n    }\n\n    // mute describes the checkbox value, if the instrument is playing or not\n    getMute() {\n        return this.mute;\n    }\n    setMute(value) {\n        this.mute = value;\n    }\n\n    // activate describes if the instrument is shown on the page\n    activate() {\n        this.active = true;\n    }\n    deactivate() {\n        this.active = false;\n    }\n    getStatus() {\n        return this.active;\n    }\n\n    // get isPlaying() {\n    //     return this.isPlaying;\n    // }\n    // set isPlaying(state) {\n    //     this.isPlaying = state;\n    // }\n\n    // getRawPattern() {\n    //     return this.#rawPattern;\n    // }\n    // setPattern(pattern, rawPattern) {\n    //     this.#rawPattern = rawPattern || \"\";\n    //     this.#pattern = pattern;\n    //     this.#midiPattern = this.#translatePatternToMidi(this.#pattern);\n    //     if (this.isPlaying) this.#sequence.stop();\n    //     this.#ticks = 0;\n    //     this.#initSequence();\n    //     this.start();\n    //     this.isPlaying = true;\n    // }\n    // getVolume() {\n    //     return this.#volume;\n    // }\n}\n\n// class Instrument {\n//     // STATIC DEFAULTS - set default properties\n//     // ================================================\n//     // can be accessed (get/set) from outside as:  ClassName.property\n//     // from inside the class. in 'static' scope as this.property, else as ClassName.property\n//     static baseNoteDefault = 24; // midi notes from lowest 0 upwards\n//     static transposeDefault = 2; // default transpose\n//     static typeDefault = \"MembraneSynth\"; // default synth type = Sampler\n//     static gainDefault = 0.6;\n//     static patternDefault = [0]; // default = one hit\n//\n//     static buffers = {}; // place for ToneBuffers\n//     static playMidiNote = undefined;\n//     static presetSampler = {\n//         synthType: \"Sampler\",\n//         gain: 1,\n//         volume: 0.6,\n//         baseNote: 48,\n//         transpose: 0,\n//         triggerFunction: {\n//             arguments: \"_synth, _note, _time\",\n//             body: `_synth.triggerAttack(_note, '@16n');`,\n//         },\n//         settings: {\n//             C3: \"./audio/hit/hit.mp3\",\n//         },\n//     };\n\n//     name = \"Synth\";\n//     isPlaying = false;\n//     midiChan = 1;\n//     envSettings = {\n//         attack: 0.1,\n//         decay: 0.1,\n//         sustain: 0.2,\n//         release: 0.01,\n//     }; // attk, dec, sus, rel\n//     #pattern = Instrument.patternDefault;\n//     #synth = undefined;\n//     #envelope = [];\n//     #eqSettings = {\n//         high: 0,\n//         highFrequency: 5000,\n//         mid: 0,\n//         lowFrequency: 400,\n//         low: 0,\n//     };\n//     #eq = new Tone.EQ3();\n//     #sequence = undefined;\n//     #ticks = 0;\n//     #rand = 0;\n//     #rawPattern = \"#\";\n//     #midiPattern = [\"C3\"];\n//     #preset = Instrument.presetSampler;\n//     #settings = this.#preset.settings;\n//     #transpose = this.#preset.transpose;\n//     #type = this.#preset.synthType;\n//     #baseNote = this.#preset.baseNote;\n//     #triggerFunction = new Function(\n//         this.#preset.triggerFunction.arguments,\n//         this.#preset.triggerFunction.body\n//     );\n//     #volume = this.#preset.gain * this.#preset.volume;\n//     #gain = new Tone.Gain(Instrument.gainDefault);\n//     #sampleUrl = \"\";\n//     #buffer = \"\";\n\n//     // CONSTRUCTOR - executed with every new instance\n//     // ================================================\n//     constructor(message) {\n//         // define properties every new Instrument will have\n//         // this.#synthType = Instrument.typeDefault;\n//         // create tone elements: synth -> gain -> masterOut\n//         // the synth creates the sound\n//         // console.log(`new Instrument with message:\n//         // ${JSON.stringify(message)}\n//         // `);\n\n//         this.name = message.name;\n//         this.assignMidiChan(this.name);\n//         this.#rand = message.random || 0;\n//         this.#volume = message.volume || this.#volume;\n\n//         // if new instrument is in presets list get content from static stored presets\n//         if (message.type == \"preset\") {\n//             this.#preset = message.preset;\n//             this.#settings = message.preset.settings;\n//             this.#transpose = message.preset.transpose;\n//             this.#baseNote = this.#preset.baseNote;\n//             this.#type = message.preset.synthType;\n//             this.#triggerFunction = new Function(\n//                 message.preset.triggerFunction.arguments,\n//                 message.preset.triggerFunction.body\n//             );\n//         }\n\n//         // check if new name = a sample folder\n//         if (message.type == \"sampler\") this.#sampleUrl = message.sample.file[0][1];\n\n//         // pattern\n//         this.#pattern = message.pattern || this.#pattern;\n//         this.#rawPattern = message.rawPattern || this.#rawPattern; // #-1#2#1#2#---\n//         this.#midiPattern = this.#translatePatternToMidi(this.#pattern);\n\n//         // connect this synth to master Gain node\n//         this.#gain.connect(Instrument.masterGain);\n//         this.setVolume(this.#volume);\n\n//         // STARTING\n//         // =============\n//         // start instrument - if preset, than immediately\n//         if (message.type == \"preset\") this.#createPreset();\n//         // start sampler, on Buffer callback\n//         if (message.type == \"sampler\") {\n//             this.#buffer = Instrument.buffers[this.name];\n//             this.#createSampler();\n//             // this.printInfo();\n//         }\n//         // this.printInfo();\n//         this.constantLog();\n//     }\n\n//     printInfo() {\n//         console.log(`\n//         Instrument:\n//         name: ${this.name}\n//         type: ${this.#type}\n//         isPlaying: ${this.isPlaying}\n//         pattern: ${this.#pattern}\n//         rawPattern: ${this.#rawPattern}\n//         midiPattern: ${this.#midiPattern}\n//         random: ${this.#rand}\n//         basenote: ${this.#baseNote}\n//         `);\n//     }\n//     constantLog() {\n//         const logEvent = new Tone.ToneEvent((time, chord) => {\n//             // console.log(`loop to display or send data ${time}`);\n//         });\n//         logEvent.start();\n//         // loop it every measure for 8 measures\n//         logEvent.loop = true;\n//         logEvent.loopEnd = \"32n\";\n//     }\n\n//     assignMidiChan(name) {\n//         switch (name) {\n//             case \"kick\":\n//                 this.midiChan = 1;\n//                 break;\n//             case \"snare\":\n//                 this.midiChan = 2;\n//                 break;\n//             case \"hh\":\n//                 this.midiChan = 3;\n//                 break;\n//             case \"bass\":\n//                 this.midiChan = 4;\n//                 break;\n//             case \"string\":\n//                 this.midiChan = 5;\n//                 break;\n//             case \"hit\":\n//                 this.midiChan = 6;\n//                 break;\n//             case \"fx\":\n//                 this.midiChan = 7;\n//                 break;\n//         }\n//     }\n\n//     // PUBLIC FUNCTIONS - to use inside, prepend a 'this.'\n//     // ====================================================\n//     start() {\n//         this.#sequence.start(this.#quant(), 0);\n//         this.isPlaying = true;\n//         this.#ticks = 0;\n//     }\n\n//     restart() {\n//         // console.log(\"Tone.now()\", Tone.now());\n//         if (this.isPlaying) this.#sequence.stop(Tone.now());\n//         this.#sequence.clear();\n//         this.#ticks = 0;\n//         this.#initSequence();\n//         this.start();\n//     }\n\n//     stop(quant) {\n//         // console.log(\"stop() quant: \", quant);\n//         if (quant == undefined) this.#sequence.stop(); // stop just before next quant\n//         if (quant != undefined) this.#sequence.stop(quant); // stop just before next quant\n//         this.isPlaying = false;\n//         this.#ticks = 0;\n//         // console.log(\"this.#sequence.state: \", this.#sequence.state);\n//     }\n\n//     clear() {\n//         if (this.isPlaying) this.#sequence.stop();\n//         this.#sequence.clear();\n//         // this.#rawPattern = [];\n//         // this.#midiPattern = [];\n//         this.isPlaying = false;\n//         this.#ticks = 0;\n//     }\n\n//     getEq() {\n//         return this.#eqSettings;\n//     }\n//     setEq(message) {\n//         this.#eqSettings.high = message.high;\n//         this.#eqSettings.highFrequency = message.highFrequency;\n//         this.#eqSettings.mid = message.mid;\n//         this.#eqSettings.lowFrequency = message.lowFrequency;\n//         this.#eqSettings.low = message.low;\n//         this.#eq.set(this.#eqSettings);\n//     }\n//     getEnv() {\n//         return this.envSettings;\n//     }\n//     setEnv(message) {\n//         if (this.#type != \"Sampler\") {\n//             // no envelope at Samplers\n//             this.envSettings.attack = message.attack;\n//             this.envSettings.decay = message.decay;\n//             this.envSettings.sustain = message.sustain;\n//             this.envSettings.release = message.release;\n\n//             this.#synth.envelope.attack = this.envSettings.attack;\n//             this.#synth.envelope.decay = this.envSettings.decay;\n//             this.#synth.envelope.sustain = this.envSettings.sustain;\n//             this.#synth.envelope.release = this.envSettings.release;\n//         }\n//     }\n\n//     // PRIVATE FUNCTIONS - start with #\n//     // =========================================\n//     #createPreset() {\n//         // create Synth\n//         this.#initSynth();\n//         // this.#synth.connect(this.#gain);\n//         this.#synth.connect(this.#eq);\n//         this.#eq.connect(this.#gain);\n//         // create sequence - the sequence calls the synth at time+note defined by the pattern\n//         this.#initSequence();\n//         this.start();\n//         this.isPlaying = true;\n//     }\n\n//     #createSampler() {\n//         this.#settings.C3 = this.#buffer;\n//         // create Synth\n//         this.#initSynth();\n//         // this.#synth.connect(this.#gain);\n//         this.#synth.connect(this.#eq);\n//         this.#eq.connect(this.#gain);\n//         // create sequence - the sequence calls the synth at time+note defined by the pattern\n//         this.#initSequence();\n//         this.start();\n//         this.isPlaying = true;\n//     }\n\n//     // init synth\n//     #initSynth = () => {\n//         this.#synth = new Tone[this.#type](this.#settings);\n//         this.#synth.attack = 0.01;\n//     };\n\n//     // init a sequence\n//     #initSequence = () => {\n//         this.#ticks = 0;\n//         this.#sequence = new Tone.Sequence(this.#callbackSequence, this.#midiPattern, \"16n\"); // '8n' == speed, eight bars/second\n//     };\n//     // callback for sequence\n//     #callbackSequence = (time, note) => {\n//         this.#triggerFunction(this.#synth, note, time);\n//         this.#ticks++;\n//         // random\n//         const events = this.#midiPattern.filter((x) => x); // (filter(x => x)) removes undefined/null/NaN from array\n//         const patternTicks = events.length;\n//         if (this.#rand > 0) {\n//             if (this.#ticks % (patternTicks * this.#rand) == 0) {\n//                 // console.log(\"rand: \", this.#rand);\n//                 this.#createRandomPattern();\n//             }\n//         }\n//         // MIDI\n//         const diffTime = WebMidi.time - Tone.now() * 1000;\n//         const midiTime = Tone.Time(\"@16n\").toSeconds() * 1000;\n//         const toneDiff = Tone.now() - midiTime + this.midiChan * 10;\n//         const chanDelay = this.midiChan * 7;\n//         const sendTime = midiTime + diffTime + chanDelay + 500;\n\n//         Instrument.playMidiNote({\n//             note: note,\n//             channel: this.midiChan,\n//             velocity: this.#volume,\n//             duration: 10,\n//             time: sendTime, // midiChan short delay for MIDI connection\n//         });\n\n//         // setTimeout(() => {\n//         //     App.MIDIOutput.playNote(note, this.midiChan, {\n//         //         time: sendTime,\n//         //         velocity: this.#volume,\n//         //         duration: 200,\n//         //     });\n//         // }, toneDiff);\n\n//         // console.log(`\n//         // :::midiTime: ${midiTime}\n//         // ::send time: ${sendTime}\n//         // webMidiTime: ${WebMidi.time}\n//         // :::Tone.now: ${Tone.now() * 1000}\n//         // :::diffTime: ${diffTime}\n//         // :chan Delay: ${chanDelay}\n//         // :::toneDiff: ${toneDiff}\n//         //         `);\n//     };\n\n//     #createRandomPattern() {\n//         // console.log(\"new sequence cylce (seq * rand)\");\n//         // console.log(\"this.#sequence: \", this.#sequence.events[0]);\n//         let length = this.#pattern.length;\n//         let pattern = [];\n//         for (let i = 0; i < length; i++) {\n//             // console.log(\"this.#sequence.events[i]\", this.#sequence.events[i]);\n//             pattern.push(this.#sequence.events[i]);\n//             // console.log(\"pattern: \", pattern);\n//         }\n//         for (var i = length - 1; i >= 0; i--) {\n//             let randomIndex = Math.floor(Math.random() * (i + 1));\n//             let itemAtIndex = pattern[randomIndex];\n//             pattern[randomIndex] = pattern[i];\n//             pattern[i] = itemAtIndex;\n//         }\n//         // console.log(\"pattern randomized: \", pattern);\n//         this.#sequence.set({ events: pattern });\n//         this.#midiPattern = pattern;\n//     }\n\n//\n\n//     // get quant\n//     #quant = () => {\n//         // get time\n//         let now = Tone.TransportTime().valueOf();\n//         // set quantize factor\n//         let factor = 1;\n//         // get quant time\n//         let quant = Tone.Time(now).quantize(factor);\n//         let playTime = quant;\n\n//         // console.log(`now: ${now}. quant factor: ${factor}. quant: ${quant}`);\n\n//         // if transport starts, set quant to 0\n//         if (now == 0) {\n//             playTime = 0;\n//         } else if (now >= 0 && now <= 0.01) {\n//             playTime = 0.01;\n//         } else if (quant < now) {\n//             playTime = now + 0.5;\n//             playTime = Tone.Time(playTime).quantize(factor);\n//             // console.log(\"quant < now. new calc: \", `now: ${now}, playTime: ${playTime}. quant factor: ${factor}. quant: ${quant}`)\n//         }\n//         // console.log(`now: ${now} - play at: ${playTime}`);\n\n//         // safety: if below 0 than playTime is zero\n//         if (playTime < 0) playTime = 0;\n//         // return quant playTime\n//         return playTime;\n//     };\n// }\n\nexport { Instrument };\n","// WELLE - parser\n// =============================================================\n\n/*\nmanage semantics returns\ndelegate input to tone, sockets, html\n*/\n\n// libraries, functions, classes\nimport { App, Socket } from \"/index\";\n\n// function to interpret input and send to TONE via transport or to html etc.\nexport const parser = (input) => {\n    // show parser input\n    // if (App.debug) console.log(`Parser inputs: ${JSON.stringify(input, null, 2)}`);\n\n    switch (input.event) {\n        case \"plainStartEvent\":\n            App.plainStartInstruments({\n                instruments: input.phrases,\n                random: input.random,\n            });\n            // App.sendMidiSelectedInstState();\n            break;\n\n        case \"assignPattern\":\n            App.assignPattern({\n                instruments: input.phrases,\n                pattern: input.pattern,\n                rawPattern: input.patternString,\n                volume: input.volume[0],\n                random: input.random,\n            });\n            setTimeout(() => {\n                // App.sendMidiSelectedInstState();\n            }, 100);\n            break;\n\n        case \"copyPattern\":\n            App.copyPattern({\n                source: [input.source],\n                destinations: input.phrases,\n            });\n            // App.sendMidiSelectedInstState();\n            break;\n\n        case \"playAllEvent\":\n            App.playAll();\n            break;\n\n        case \"stopAllEvent\":\n            App.stopAll();\n            break;\n\n        case \"stopEvent\":\n            App.stopInstruments(input.phrases);\n            break;\n\n        case \"questionEvent\":\n            // App.setSelectedEq();\n            // App.setEnvToSelected();\n            break;\n\n        case \"setVolume\":\n            App.setVolume({ instruments: input.phrases, volume: input.volume });\n            // App.sendMidiSelectedInstState();\n            break;\n\n        case \"savePartEvent\":\n            App.savePart(input.phrase);\n            break;\n\n        case \"setBPM\":\n            App.setBpm({ bpm: input.bpm, factor: input.factor });\n            break;\n\n        case \"deleteEvent\":\n            App.delete(input.phrases);\n            break;\n        case \"deleteWordEvent\":\n            // App.deletePreset(input.phrase);\n            break;\n\n        case \"deleteAllEvent\":\n            App.deleteAll();\n            break;\n\n        case \"saveEvent\":\n            break;\n\n        case \"joinEvent\":\n            // App.setUser(input.phrase);\n            // Socket.emit(\"newUser\", { user: input.phrase });\n            break;\n\n        case \"restartEvent\":\n            break;\n\n        case \"storeEvent\":\n            // const preset = App.createPreset(input.phrase);\n            // console.log(`preset ${preset.name}: ${JSON.stringify(preset, null, 0)}`);\n            // if (preset) Socket.emit(\"storePreset\", preset);\n            break;\n\n        case \"loadEvent\":\n            // const name = input.phrase;\n            // App.loadPreset(name);\n            break;\n\n        case \"uploadEvent\":\n            break;\n\n        case \"recordEvent\":\n            const recordAction = input.phrase;\n            // console.log(`Record action: ${recordAction}`);\n            if (recordAction == \"start\") App.handleRecord();\n            if (recordAction == \"stop\") App.handleRecord();\n            break;\n\n        case \"muteAllEvent\":\n            break;\n\n        case \"unmuteAllEvent\":\n            break;\n\n        case \"emptyEvent\":\n            break;\n    } // EO_Switch\n}; // EO parser\n","export const en = {};\nexport const de = {};\n\nde.headings = {\n    files: \"Dateien\",\n    settings: \"Einstellungen\",\n    transport: \"Transport\",\n    instruments: \"Instrumente\",\n    console: \"Konsole\",\n    packs: \"Klang Kollektionen\",\n    tutorial: \"Anleitung\",\n    overview: \"Überblick\",\n    parts: \"Momente\",\n    instList: \"Aktive Instrumente\",\n};\nen.headings = {\n    files: \"files\",\n    settings: \"settings\",\n    transport: \"transport\",\n    instruments: \"instruments\",\n    console: \"console\",\n    packs: \"sample packs\",\n    tutorial: \"tutorial\",\n    overview: \"overview\",\n    parts: \"snaphots\",\n    instList: \"active instruments\",\n};\n\nen.tutorial = `\n<h3>overview</h3>\n<p>\nGet to know WELLE. It is basically a <b>text-based 8-step sequencer</b> with predefined sample sounds.\nWELLE is played by entering commands in the input field called \"console\".\nAll available sounds are listed under \"instruments\" - click on them to hear what they sound like. \nBy using the different console commands you can play patterns and melodies. \nYou can save so-called snapshots of your currently playing instruments on-the-fly and recall them later.\nAlso you can record and download your music. Or send the instruments as MIDI messages to \nyour preferred synthesizer, sampler or DAW (the MIDI channels 1-14 correspond to the order of the samples).\n</p>\n<p>\nIn WELLE a pattern is a combination of a note \"#\" and a pause \"-\". \nA note can have a number behind it, e.g. \"#3\" or \"#-12\", \nso the sample is pitched higher or lower than the default \"#\". The pitch numbers correspond to keys on a keyboard.\nIf you enter a pattern shorter than 8 notes, it will be repeated to fill 8 steps.\nIf your pattern is longer than 8 notes, it will be reduced to 8 steps.\n</p>\n<p>\nWhile in the input field you can access the input history: use the arrow keys (up & down) \nto recall and use previous input text again.\n</p>\n<p>\nHAVE FUN !\n</p>\n<h3>console commands</h3>\n\n<p><span class=\"commands\">></span> | start the sequencer or unmute single/ multiple instruments</p>\n<p><span class=\"commands\">.</span> | stop the sequencer or mute single/ multiple instruments</p>\n<p><span class=\"commands\">#</span> | sign for a note</p>\n<p><span class=\"commands\">-</span> | sign for a pause</p>\n<p><span class=\"commands\">#3</span> | pitch for a note, can be positive or negative, e.g. #2, #-12</p>\n<p><span class=\"commands\">0.4</span> | volume for an instrument, range 0.0 to 1.0</p>\n<p><span class=\"commands\">&2</span> | set random value for an instrument. notes will be reordered after 2 cycles. Set & 0 for no randomization. </p>\n<p><span class=\"commands\">/</span> | clear one, multiple or all instruments and snapshots. To clear one write the name behind the command</p>\n<p><span class=\"commands\">+</span> | copy instrument pattern to one or more instruments and start them</p>\n<p><span class=\"commands\">=</span> | save current instruments as snapshots. </p>\n<p><span class=\"commands\">bpm</span> | set BPM for the sequencer, e.g. bpm 170. Add a number for transition in seconds, e.g. bpm 170 4</p>\n<p><span class=\"commands\">record start</span> | start recording the sound (instead of hitting record button)</p>\n<p><span class=\"commands\">record stop</span> | stop recording the sound (instead of hitting record button)</p>\n\n<h3>playing sounds</h3>\n\n<p><span class=\"commands\">bass</span> | the simplest way to start an instrument is to just type its name in the console and hit enter. 8 steps will be filled with a note #.</p>\n<p><span class=\"commands\">bass #-#</span> | the instrument name followed by signs for notes and pause will define a pattern. If less than 8 signs are entered, they will be duplicated until 8 steps are filled.</p>\n<p><span class=\"commands\">bass #-#3-#-12</span> | note signs followed by positive or negative number will change pitch</p>\n<p><span class=\"commands\">. bass</span> | a dot before the instrument name will mute it</p>\n<p><span class=\"commands\">> bass</span> | a greater sign before the instrument name will unmute it</p>\n<p><span class=\"commands\">bass 0.3</span> | setting the volume of an instrument with a range between 0.0 and 1.0</p>\n<p><span class=\"commands\">bass &3</span> | setting random parameter, e.g. after ho many cycles notes will be reordered randomly</p>\n<p><span class=\"commands\">bass 0.6 ###2## &2</span> | setting multiple parameters at once</p>\n<p><span class=\"commands\">bass hh kick ###2##</span> | all commands can be set for multiple instruments</p>\n<p><span class=\"commands\">bass + string hh</span> | copy pattern from one instrument to one or more other instruments</p>\n<p><span class=\"commands\">/ bass</span> | delete instrument or snapshot</p>\n<p><span class=\"commands\">/ bass hh</span> | delete multiple instruments or snapshots</p>\n<p><span class=\"commands\">/ </span> | delete all instruments and snapshots</p>\n<p><span class=\"commands\">= pizza</span> | save a snapshot of current instruments. will generate a button after the console. clicking the button recalls the stored values. multiple different snapshots can be stored. Names can be whatever, only existing instrument names are forbidden.</p>\n<p><span class=\"commands\">bpm 150 </span> | change bpm to 150</p>\n<p><span class=\"commands\">bpm 70 4</span> | change bpm to 70 in 4 seconds</p>\n\n<h3>using midi</h3>\n\n<p>\nWELLE can work as text-based MIDI sequencer. It will send MIDI start/stop/clock commands. To enable MIDI go to settings and select a MIDI device.\nThe first 14 instruments are assigned to MIDI channels 1-14 and will transmit note on, note off and velocity values. \nThere will be a big and varying latency caused by the Webaudio timing, so using both internal sounds and sounds trigger via MIDI is not synchronous: \nmute the website's sound in the settings and only use MIDI sounds.\n</p>\n\n`;\nde.tutorial = `\n<h3>Überblick</h3>\nWelle ist ein <b>textbasierter 8-Schritt-Sequenzer</b> mit vordefinierten Sample-Klängen. \nWELLE wird durch die Eingabe von Befehlen in das Eingabefeld namens \"Konsole\" gespielt. \nAlle verfügbaren Sounds sind unter \"Instrumente\" aufgelistet - klicke sie an, um zu hören, wie sie klingen. \nMit den verschiedenen Konsolenbefehlen können Patterns und Melodien abgespielt werden. \nSo genannte \"Momente\" der aktuell gespielten Instrumente können gespeichert und später wieder abgerufen werden. \nAußerdem kann die Musik aufgenommen und heruntergeladen werden. \nDie Instrumente können auch als MIDI-Befehle an Synthesizer, Sampler oder DAW gesendet werden (die MIDI-Kanäle 1-14 entsprechen der Reihenfolge der Samples).\n\n<p>\nIn WELLE ist ein Pattern eine Kombination aus einer Note \"#\" und einer Pause \"-\". \nHinter einer Note kann eine Zahl stehen, z.B. \"#3\" oder \"#-12\", so dass das Sample in einer höheren oder niedrigeren Tonhöhe abgespielt wird. \nDie Tonhöhe wird in Halbtonschritten angehoben bzw. abgesenkt. \nWenn ein Pattern eingeben wird, das kürzer als 8 Noten ist, wird es wiederholt, \nbis 8 Schritte ausgefüllt sind. \nWenn das Pattern länger als 8 Noten ist, wird es auf 8 Schritte reduziert.\n</p>\n\nIm Eingabefeld kann auf die Eingabehistorie zugegriffen werden: Pfeiltasten verwenden (aufwärts und abwärts), \num vorherige Eingaben abzurufen und erneut zu verwenden.\n\n<p>Viel Spaß!</p>\n\n<h3>Konsolenbefehle</h3>\n\n<p><span class=\"commands\">></span> | startet den Sequenzer oder schaltet ein oder mehrere Instrumente an</p>\n<p><span class=\"commands\">.</span> | stoppt den Sequenzer oder schaltet ein oder mehrere Instrumente stumm</p>\n<p><span class=\"commands\">#</span> | Zeichen für eine Note</p>\n<p><span class=\"commands\">-</span> | Zeichen für eine Pause</p>\n<p><span class=\"commands\">#3</span> | Tonhöhe für eine Note, kann positib oder negativ sein, z.B. #2, #-12</p>\n<p><span class=\"commands\">0.4</span> | Lautstärke für ein Instrument, zwischen 0.0 und 1.0</p>\n<p><span class=\"commands\">&2</span> | Setzt den Zufallswert für ein Instrument. Die Noten werden nach 2 Zyklen neu sortiert. Zurücksetzen mit &0 .</p>\n<p><span class=\"commands\">/</span> | ein, mehrere oder alle Instrumente und Momente löschen. Um ein Instrument zu löschen z.B.: / bass</p>\n<p><span class=\"commands\">+</span> | Pattern auf ein oder mehrere Instrumente kopieren und diese starten</p>\n<p><span class=\"commands\">=</span> | speichert aktivierte Instrumente als \"Momente\". </p>\n<p><span class=\"commands\">bpm</span> | BPM für den Sequenzer festlegen, z. B. bpm 170. Fügen Sie eine Zahl für den Übergang in Sekunden hinzu, z. B. bpm 170 4</p>\n<p><span class=\"commands\">record start</span> | Starten Sie die Aufnahme des Tons (anstatt die Aufnahmetaste zu drücken)</p>\n<p><span class=\"commands\">record stop</span> | die Aufnahme stoppen (anstatt die Aufnahmetaste zu drücken)</p>\n\n<h3>Instrumente spielen</h3>\n\n<p><span class=\"commands\">bass</span> | Der einfachste Weg, ein Instrument zu starten, ist, seinen Namen in die Konsole einzugeben und die Eingabetaste zu drücken. 8 Schritte werden mit der Note # gefüllt.</p>\n<p><span class=\"commands\">bass #-#</span> | der Instrumentenname, gefolgt von Zeichen für Noten und Pause, definiert ein Pattern. Wenn weniger als 8 Zeichen eingegeben werden, werden sie dupliziert, bis 8 Schritte gefüllt sind.</p>\n<p><span class=\"commands\">bass #-#3-#-12</span> | Notenzeichen, gefolgt von einer positiven oder negativen Zahl, ändern die Tonhöhe</p>\n<p><span class=\"commands\">. bass</span> | ein Punkt vor dem Namen des Instruments schaltet es stumm</p>\n<p><span class=\"commands\">> bass</span> | ein Größerzeichen vor dem Namen des Instruments hebt dessen Stummschaltung auf</p>\n<p><span class=\"commands\">bass 0.3</span> | Einstellung der Lautstärke eines Instruments im Bereich zwischen 0.0 und 1.0</p>\n<p><span class=\"commands\">bass &3</span> | Einstellung des Zufallsparameters, z.B. nach wie vielen Zyklen werden die Noten zufällig neu geordnet</p>\n<p><span class=\"commands\">bass 0.6 ###2## &2</span> | Einstellen mehrerer Parameter auf einmal</p>\n<p><span class=\"commands\">bass hh kick ###2##</span> | alle Befehle können auf mehrere Instrumente angewendet werden</p>\n<p><span class=\"commands\">bass + string hh</span> | Kopieren eines Patterns von einem Instrument auf ein oder mehrere andere Instrumente</p>\n<p><span class=\"commands\">/ bass</span> | Löschen von aktiven Instrument oder Moment</p>\n<p><span class=\"commands\">/ bass hh</span> | Löschen von mehreren aktiven Instrumenten und Momenten</p>\n<p><span class=\"commands\">/ </span> | Löschen von allen aktiven Instrumenten und Momenten</p>\n<p><span class=\"commands\">= pizza</span> | Speichert die aktiven Instrumente als \"Moment\" und erzeugt eine Schaltfläche hinter der Konsole. Durch Anklicken der Schaltfläche werden die gespeicherten Werte wieder aufgerufen. Es können mehrere verschiedene Momente gespeichert werden. Die Namen können beliebig sein, nur bestehende Instrumentennamen sind verboten.</p>\n<p><span class=\"commands\">bpm 150 </span> | Wechseln von BPM zu 150</p>\n<p><span class=\"commands\">bpm 70 4</span> | Wechseln von BPM zu 70 in 4 Sekunden.</p>\n\n<h3>MIDI benutzen</h3>\n\n<p>\nWELLE kann als textbasierter MIDI-Sequenzer arbeiten. WELLE sendet MIDI Start/Stop/Taktbefehle. Um MIDI zu aktivieren, gehen Sie zu den Einstellungen und wählen Sie ein MIDI-Gerät aus.\nDie ersten 14 Instrumente sind jetzt den MIDI-Kanälen 1-14 zugeordnet und senden Note On, Note Off und Velocity-Werte. \nWELLE hat beim Gebrauch von MIDI eine Latenz, die durch das Webaudio-Timing verursacht wird, so dass die Verwendung von internen Sounds und Sounds, die über MIDI angespielt werden, nicht synchron ist: \nSchalten Sie den Sound der Website in den Einstellungen stumm und verwenden Sie nur MIDI-Sounds.\n</p>\n`;\n\nen.info = `\n<p>\nWELLE is a web-based music environment and was developed as \npart of the research project Tangible Signals by Jens Vetter, \nsupervised by Martin Kaltenbrunner \nat the Tangible Music Lab, University of Art and Design  Linz, Austria.\nThe research project is funded with the \nDOC fellowship by the Austrian Academy of Sciences, starting June 2019.\n</p>\n<p>\nLink to research project website: <a href=\"https://tamlab.ufg.at/projects/tangible-signals/\" title=\"go to Tangible Music Lab's project website\">tamlab.ufg.at/projects/tangible-signals/</a>.\nThe source code is published here: <a href=\"https://github.com/JnsVttr/Welle\" title=\"go to Github WELLE code\">github.com/welle</a>.\nThis website was build with the Webaudio framework <a href=\"https://tonejs.github.io/\" title=\"Tone.js\">Tone.js</a> and\n<a href=\"https://ohmlang.github.io/\" title=\"Ohm\">Ohm.js</a>.\n</p>\n<p>© Jens Vetter</p>\n`;\n\nde.info = `\n<p>\nWELLE ist ein barrierefreies webbasiertes Musikprogramm. Die Website wurde entwickelt als Teil \ndes Forschungsprojekts Tangible Signals von Jens Vetter, \nunter der Leitung von Martin Kaltenbrunner \nam Tangible Music Lab, Kunstuniversität Linz, Österreich.\nDas Forschungsprojekt wird gefördert durch das \nDOC-Stipendium der Österreichischen Akademie der Wissenschaften, Juni 2019.\n</p>\n<p>Projektwebsite \"Tangible Signals\": <a href=\"https://tamlab.ufg.at/projects/tangible-signals/\" title=\"go to Tangible Music Lab's project website\">tamlab.ufg.at/projects/tangible-signals</a></p>\n\n<p>\nQuellcode auf Github: <a href=\"https://github.com/JnsVttr/Welle\" title=\"go to Github WELLE code\">github.com/welle</a>.\nDiese Website nutzt das Webaudio framework <a href=\"https://tonejs.github.io/\" title=\"Tone.js\">Tone.js</a> und \n<a href=\"https://ohmlang.github.io/\" title=\"Ohm\">Ohm.js</a>.\n</p>\n<p>© Jens Vetter</p>\n`;\n","export const tutorial = {};\n\ntutorial.start = `\n\n\n\n<table style=\"width:100%\">\n  \n  <tr>\n    <td>start the sequencer:</td>\n    <td>></td>\n  </tr>\n  <tr>\n    <td>stop the sequencer:</td>\n    <td>.</td>\n  </tr>\n  <tr>\n    <td>play instrument by name:</td>\n    <td>kick</td>\n  </tr>\n  <tr>\n    <td>stop instrument by name: </td>\n    <td>. kick</td>\n  </tr>\n  <tr>\n    <td>play with a pattern: </td>\n    <td>kick #-#-#--</td>\n  </tr>\n  \n  <tr>\n    <td>play a pattern with melody: </td>\n    <td>fatbass  #2 #4 #5 - #4 #3 #2</td>\n  </tr>\n  \n  <tr>\n    <td>assign pattern to multiple instruments:</td>\n    <td>kick hh string #----#---</td>\n  </tr>\n  <tr>\n    <td>copy a pattern to another instrument:</td>\n    <td>string + hh</td>\n  </tr>\n  <tr>\n    <td>set volume (0.0 - 1.0): </td>\n    <td>kick 0.3</td>\n  </tr>\n  <tr>\n    <td><b>randomizing</b> a pattern is a great way <br> \n    to get movement in the sound. You can randomize <br> \n    positions of notes in a pattern.<br>\n    corresponding to the number, the pattern will be <br>\n    freshly randomized after that number of cycles:</td>\n    <td></td>\n  </tr>\n  <tr>\n    <td>set random:</td>\n    <td>kick &3</td>\n  </tr>\n  <tr>\n    <td>set multiple values (instrument, <br> volume, pattern, random):</td>\n    <td>kick 0.5 #-#3#2#3--   &4</td>\n  </tr>\n  <tr>\n    <td>delete instrument or part: </td>\n    <td>/ kick</td>\n  </tr>\n  <tr>\n    <td>delete multiple instruments or parts: </td>\n    <td>/ kick somepart hh</td>\n  </tr>\n  <tr>\n    <td>delete all: </td>\n    <td>/ </td>\n  </tr>\n  \n  <tr>\n    <td><b>snapshots</b> are great to compose.<br> they save the current instruments and Bpm. <br> choose any name, as long as its <br> not an instrument name:</td>\n    <td></td>\n  </tr>\n  <tr>\n    <td>save a snapshot:   </td>\n    <td>= someName</td>\n  </tr>\n  <tr>\n    <td>play snapshot:  </td>\n    <td>someName</td>\n  </tr>\n  \n  <tr>\n    <td><b>BPM</b> - the BPM is stored in the snapshots<br> \n    so that you can play with different speeds.<br>\n    if you apply a number to the command, it <br>\n    will take some seconds to smoothly change the BPM:</td>\n    <td></td>\n  </tr>\n  <tr>\n    <td>change BPM: </td>\n    <td>bpm 80</td>\n  </tr>\n  <tr>\n    <td>change BPM over 2 seconds: </td>\n    <td>bpm 80 2</td>\n  </tr>\n\n  <tr>\n    <td><b>recording</b> (on desktop, not on smartphone): <br>\n    hit the record button (or type the command) to <br> \n    record what you hear. <br>\n    and once you stopped it you can download the <br>\n    .webm file webm appearing below the record button. </td>\n    <td></td>\n  </tr>\n  <tr>\n    <td>start recording: </td>\n    <td>record start</td>\n  </tr>\n  <tr>\n    <td>stop recording: </td>\n    <td>record stop</td>\n  </tr>\n</table>\n`;\n\n/*\n\n<h3 class=\"w3-medium\">Overview</h3>\n\n\n\n<h3 class=\"w3-medium\">Start</h3>\n<p>\n    Welle is an accessible web-based music environment based on pattern notation.\n    The main element is the 'console', an input field, which can be used to enter music commands, \n    e.g. starting or stopping instruments, assign different sound patterns, volume, \n    randomization, etc.\n</p>\n<p>\n    To start we will exercise some of the basic commands to create some sound. \n    Please try to write one of the following notations in the input field below and hit enter \n    (this will start the according instrument and stop it after a short loop): <br>\n    <code>hh</code>, <code>drum</code>, <code>kick</code>, <code>string</code>\n</p>\n<p>\n    <input\n        class=\"tutorialInput\"\n        type=\"text\"\n        size=\"50\"\n        title=\"tutorial\"\n        autocomplete=\"off\"\n        value=\"\"\n    />\n</p>\n<p> all available instruments are listed at the top of this page. </p>\n\n\n\n<h3 class=\"w3-medium\">Pattern</h3>\n<p>\n    Now let's try to add a pattern to the instrument. A pattern consists of two symbols, a '#' for a note \n    and a '-' for a pause. A pattern is a combination of both, e.g. <code>#---##-#--#-</code>. \n    The pattern has to be written after the instrument's name, with an empty space in between.\n</p>\n<p> \n    Try to create a pattern for the 'hh' instrument with different rhythms. Type in the input field below for example: <br>\n    <code>hh #-#---#-</code>\n</p>\n<p>\n    <input\n        class=\"tutorialInput\"\n        type=\"text\"\n        size=\"50\"\n        title=\"tutorial\"\n        autocomplete=\"off\"\n        value=\"\"\n    />\n</p>\n*/\n","import * as Tone from \"tone\";\nimport { livecode, semantics } from \"/html/ohm/semantic2021\";\nimport { Instrument } from \"/js/instrument\";\nimport { parser } from \"/js/parser\";\nimport { Socket } from \"/index\";\nimport { en, de } from \"/js/text\";\nimport { tutorial } from \"/js/tutorial\";\nimport WebMidi from \"webmidi\";\nimport { App } from \"..\";\n\n// ============================================\n// WELLE APP\n// ============================================\n\n/*\nWEBMIDI API https://djipco.github.io/webmidi/latest/classes/Output.html#method_playNote\n\n\nStructure of App:\ngrid = main storage array for note events of the sample-based instruments (sampler). \n        depends on how many samples are loaded. max 14 samples.\n*/\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n// ===========================================================================\n\nclass WelleApp {\n    // debug\n    debug = true;\n\n    // general\n    user = \"local\";\n    id = \"xxx\";\n    session = [];\n    tutorial = false;\n    // assign text from file\n    english = en;\n    german = de;\n    language = \"en\";\n\n    #toneStarted = false;\n    bpm = 120;\n    // buttons\n    buttons = {\n        language: {\n            valueEN: \"english\",\n            valueDE: \"deutsch\",\n            titleEN: \"change language to english\",\n            titleDE: \"ändere Sprache zu deutsch\",\n        },\n        mute: {\n            state: true,\n            valueENoff: \"mute all\",\n            valueDEoff: \"Audio aus\",\n            titleENoff: \"mute all audio output\",\n            titleDEoff: \"Audio stumm\",\n            valueENon: \"unmute all\",\n            valueDEon: \"Audio an\",\n            titleENon: \"unmute all audio output\",\n            titleDEon: \"Audio anschalten\",\n        },\n        muteHelper: {\n            state: true,\n            valueENoff: \"mute helper sounds\",\n            valueDEoff: \"Hilfsklänge aus\",\n            titleENoff: \"mute helper sounds\",\n            titleDEoff: \"Hilfsklänge ausschalten\",\n            valueENon: \"unmute helper sounds\",\n            valueDEon: \"Hilfklänge an\",\n            titleENon: \"unmute helper sounds\",\n            titleDEon: \"Hilfsklänge anschalten\",\n        },\n        muteMetronom: {\n            state: true,\n            valueENoff: \"mute metronom\",\n            valueDEoff: \"Metronom aus\",\n            titleENoff: \"mute metronom\",\n            titleDEoff: \"Metronom ausschalten\",\n            valueENon: \"unmute metronom\",\n            valueDEon: \"Metronom an\",\n            titleENon: \"unmute metronom\",\n            titleDEon: \"Metronom anschalten\",\n        },\n        play: {\n            state: false,\n            valueoff: \"PLAY\",\n            valueon: \"STOP\",\n            titleoff: \"start transport\",\n            titleon: \"stop transport\",\n        },\n        record: {\n            state: false,\n            valueoff: \"RECORD\",\n            valueon: \"STOP RECORD\",\n            titleoff: \"record\",\n            titleon: \"stop record\",\n        },\n    };\n    // console\n    #consoleInput = \"\";\n    #consolePointer = 0;\n    #consoleMaxLength = 1;\n    #consoleArray = Array(1).fill({ message: \"&nbsp;\" });\n    #consoleID = \"console\";\n    // sound\n    #playSound = true; // bool html\n    #playAlerts = true; // bool html\n    #playMetronom = false; // bool html\n    #alerts = {}; // incoming alerts list from server\n    samples = []; // incoming sample list from server\n    samplePacks = [];\n    currentSamplePack = \"default\";\n    presetData = undefined;\n    instruments = []; // create instruments based on the samples list\n    activeInstruments = []; // store acivated instruments\n    grid = undefined;\n    beat = 0;\n    parts = {}; // storage for all the saved parts\n    toneID = 0;\n    configLoopStarted = false;\n    // metronom\n    metronom1 = undefined;\n    metronom2 = undefined;\n    createMetronom() {\n        this.metronom1 = new Tone.PluckSynth().connect(Instrument.audioOutput);\n        this.metronom2 = new Tone.PluckSynth().connect(Instrument.audioOutput);\n        // set metronom volume\n        this.metronom1.volume.value = -10;\n        this.metronom2.volume.value = -20;\n    }\n    disposeMetronom() {\n        this.metronom1.dispose();\n        this.metronom2.dispose();\n    }\n\n    // recorder\n    recorder = new Tone.Recorder();\n    recording = undefined;\n    // MIDI\n    selectedMIDIDevice = undefined;\n    MIDIOutput = undefined;\n    MIDIInput = undefined;\n    midiChanInput = 15;\n    midiChanOutput = 16;\n    midiTransferOngoing = false;\n    incomingSequence = [null, null, null, null, null, null, null, null];\n    incomingSequenceCount = 0;\n\n    midiCountPattern = 0;\n    midiCountEq = 0;\n    midiCountEnv = 0;\n    midiPattern = [0, 0, 0, 0, 0, 0, 0, 0];\n    midiEq = { high: 0, highFrequency: 5000, mid: 0, lowFrequency: 400, low: 0 };\n    midiEnv = { attack: 0, decay: 0, sustain: 0, release: 0 };\n    // MIDI Interaction (name, vol, env, pattern, eq?)\n    selected = {\n        name: \"\",\n        vol: 1,\n        env: [0.1, 0.2, 0.3, 0.1],\n        eq: [],\n        pattern: [1, null, 1, null],\n    };\n    // html\n    instDiv = \"instruments\";\n    partDiv = \"parts\";\n    bpmDiv = \"input_bpm\";\n    instListDiv = \"listOfInstruments\";\n    // #presetsDiv = \"presets\";\n    #sessionDiv = \"session\";\n    #infoDiv = \"info\";\n    tutorialDiv = \"c.tutorial\";\n    // functions\n    // map function\n    map = (value, x1, y1, x2, y2) => Math.round((((value - x1) * (y2 - x2)) / (y1 - x1) + x2) * 100) / 100;\n\n    //\n    // construct \"App\" and evaluate functions\n\n    constructor() {\n        // print some info\n        this.printInfo();\n        this.createMetronom();\n\n        // set initial BPM and render to Page\n        this.setBpm({ bpm: this.bpm });\n\n        // connect audio to Tone master - assign Instrument class masterOut to Tone master\n        // Instrument.masterGain.connect(Tone.getDestination());\n        Instrument.masterGain.connect(Instrument.audioOutput);\n        Instrument.audioOutput.connect(Tone.getDestination());\n        Instrument.masterGain.connect(this.recorder);\n        // Instrument.playMidiNote = this.playMidiNote;\n\n        // render info + tutorial\n        // this.renderExternal();\n\n        // window eventlisteners\n        window.addEventListener(\"load\", () => {\n            console.log(`Document window loaded.`);\n            this.renderConsole();\n\n            // sound\n            this.muteApp(!this.#playSound);\n            window.document.getElementById(`mute-button`).addEventListener(\"click\", (c) => {\n                const val = c.target.value;\n                console.log(`mute-button value: ${val}, \n                language: ${this.language}, state: ${this.buttons.mute.state}`);\n\n                if (this.#playSound == true) {\n                    this.#playSound = false;\n                    this.buttons.mute.state = false;\n                    this.muteApp(!this.#playSound);\n                } else {\n                    this.#playSound = true;\n                    this.buttons.mute.state = true;\n                    this.muteApp(!this.#playSound);\n                }\n                if (this.language == \"en\") {\n                    if (this.#playSound) {\n                        window.document.getElementById(`mute-button`).value = this.buttons.mute.valueENoff;\n                    } else {\n                        window.document.getElementById(`mute-button`).value = this.buttons.mute.valueENon;\n                    }\n                }\n                if (this.language == \"de\") {\n                    if (this.#playSound) {\n                        window.document.getElementById(`mute-button`).value = this.buttons.mute.valueDEoff;\n                    } else {\n                        window.document.getElementById(`mute-button`).value = this.buttons.mute.valueDEon;\n                    }\n                }\n            });\n\n            // alerts\n            this.handleAlerts(this.#playAlerts);\n            window.document.getElementById(`muteHelper-button`).addEventListener(\"click\", (c) => {\n                const val = c.target.value;\n                console.log(`muteHelper-button value: ${val}, \n                language: ${this.language}, state: ${this.buttons.mute.state}`);\n\n                if (this.#playAlerts == true) {\n                    this.#playAlerts = false;\n                    this.buttons.muteHelper.state = false;\n                    this.handleAlerts(this.#playAlerts);\n                } else {\n                    this.#playAlerts = true;\n                    this.buttons.muteHelper.state = true;\n                    this.handleAlerts(this.#playAlerts);\n                }\n                if (this.language == \"en\") {\n                    if (this.#playAlerts) {\n                        window.document.getElementById(`muteHelper-button`).value = this.buttons.muteHelper.valueENoff;\n                    } else {\n                        window.document.getElementById(`muteHelper-button`).value = this.buttons.muteHelper.valueENon;\n                    }\n                }\n                if (this.language == \"de\") {\n                    if (this.#playAlerts) {\n                        window.document.getElementById(`muteHelper-button`).value = this.buttons.muteHelper.valueDEoff;\n                    } else {\n                        window.document.getElementById(`muteHelper-button`).value = this.buttons.muteHelper.valueDEon;\n                    }\n                }\n            });\n\n            // metronom\n            window.document.getElementById(`muteMetronom-button`).addEventListener(\"click\", (c) => {\n                const val = c.target.value;\n                console.log(`muteMetronom-button value: ${val}, \n                language: ${this.language}, state: ${this.buttons.muteMetronom.state}`);\n\n                if (this.#playMetronom == true) {\n                    this.#playMetronom = false;\n                    this.buttons.muteMetronom.state = false;\n                } else {\n                    this.#playMetronom = true;\n                    this.buttons.muteMetronom.state = true;\n                }\n                if (this.language == \"en\") {\n                    if (this.#playMetronom) {\n                        window.document.getElementById(`muteMetronom-button`).value =\n                            this.buttons.muteMetronom.valueENoff;\n                    } else {\n                        window.document.getElementById(`muteMetronom-button`).value =\n                            this.buttons.muteMetronom.valueENon;\n                    }\n                }\n                if (this.language == \"de\") {\n                    if (this.#playMetronom) {\n                        window.document.getElementById(`muteMetronom-button`).value =\n                            this.buttons.muteMetronom.valueDEoff;\n                    } else {\n                        window.document.getElementById(`muteMetronom-button`).value =\n                            this.buttons.muteMetronom.valueDEon;\n                    }\n                }\n            });\n\n            // record button\n            window.document.getElementById(`rec-button`).addEventListener(\"click\", (c) => {\n                this.handleRecord();\n            });\n            // Midi select\n            window.document.getElementById(`midiSelect`).addEventListener(\"click\", (c) => {\n                // console.log(`select click.. ${c.target}`);\n                this.startMIDI();\n            });\n            window.document.getElementById(`midiSelect`).addEventListener(\"change\", (c) => {\n                console.log(`select change.. ${c.target.value}`);\n                this.selectMIDIdevice(c.target.value);\n            });\n\n            // save composition\n            window.document.getElementById(`compositionSave-button`).addEventListener(\"click\", (c) => {\n                this.createPreset(\"composition\");\n            });\n\n            // select samplePack\n            window.document.getElementById(`selectInstruments`).addEventListener(\"change\", (c) => {\n                // console.log(`select samplePack.. ${c.target.value}`);\n                this.selectSamplePack(c.target.value);\n            });\n        });\n\n        this.setLanguage(\"english\");\n    }\n\n    // ===========================================================================\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n\n    // ============================================\n    // print start info\n    // ============================================\n    printInfo() {\n        if (this.debug)\n            console.log(`\n            Welle App created.\n            ==\n            debug state: ${this.debug}\n            user: ${this.user}\n            muteSound: ${!this.#playSound}\n            muteAlerts: ${!this.#playAlerts}\n            bpm: ${this.bpm}\n\n        `);\n    }\n\n    addSamplePacks(message) {\n        let packs = undefined;\n        if (message != undefined) {\n            if (message.packs != undefined) {\n                packs = message.packs;\n                packs.forEach((pack) => {\n                    this.samplePacks.push(pack);\n                });\n            }\n        }\n        if (this.samplePacks.length == packs.length) {\n            console.log(`App samplePacks: ${this.samplePacks}`);\n            const selectBox = window.document.getElementById(\"selectInstruments\");\n\n            this.samplePacks.map((singlePack) => {\n                // console.log(`samplePack: ${singlePack}`);\n                let option = document.createElement(\"option\");\n                option.text = singlePack;\n                selectBox.add(option);\n            });\n        }\n    }\n    selectSamplePack(pack) {\n        console.log(`okay, select this samplePack: ${pack} at index ${this.samplePacks.indexOf(pack)}`);\n        this.deleteAll();\n        this.clearSamplePlayer();\n        console.log(\"selectSamplePack, check Tone: Tone.Transport.context.state\", Tone.Transport.context.state);\n\n        // document.getElementById(\"selectInstruments\").value = this.samplePacks.indexOf(pack);\n        document.getElementById(\"selectInstruments\").value = pack;\n        setTimeout(() => {\n            this.currentSamplePack = pack;\n            console.log(`current samplePack: ${this.currentSamplePack}, socket request files`);\n            if (pack == \"default\") Socket.emit(\"requestSampleFiles\");\n            else Socket.emit(\"requestSampleFiles\", { samplePack: pack });\n            // this.currentSamplePack = pack;\n        }, 100);\n    }\n\n    clearSamplePlayer() {\n        console.log(\"clear samplePlayer\");\n        console.log(\"clear Tone.Transport\");\n        // Tone.Transport.stop();\n        // Tone.Transport.cancel(0);\n        // Tone.Transport.clear();\n        // Tone.Transport.scheduleRepeat(() => {\n        //     // console.log(\"empty transport\");\n        // }, \"8n\");\n        // // clear Metronom\n        // this.disposeMetronom();\n\n        console.log(\"clear instruments (buffer, gain, synth)\");\n        setTimeout(() => {\n            Object.keys(this.instruments).forEach((key) => {\n                // console.log(`check instrument for reset: `, this.instruments[key]);\n                this.instruments[key].buffer.dispose();\n                this.instruments[key].gain.dispose();\n                this.instruments[key].ampEnv.dispose();\n                this.instruments[key].synth.dispose();\n                // console.log(`check instrument for reset again: `, this.instruments[key]);\n                delete this.instruments[key];\n            });\n            this.instruments = [];\n            console.log(\"delete, check grid: \", this.grid);\n            // this.grid.forEach((key) => {\n            //     console.log(\"delete, check grid[key]: \", this.grid[key], key);\n            //     // delete key;\n            // });\n            for (let i = 0; i < this.grid.length; i++) {\n                // console.log(\"delete, check grid[key]: \", this.grid[i]);\n                delete this.grid[i];\n            }\n            this.grid = undefined;\n            console.log(\"delete, check grid deleted: \", this.grid);\n            this.parts = {};\n            this.samples = []; // incoming sample list from server\n            this.activeInstruments = []; // store acivated instruments\n            this.beat = 0;\n            console.log(\n                `clear samplePlayer, this.instruments: ${this.instruments}. Instrument class audio: `,\n                Instrument.audioOutput\n            );\n            // Instrument.audioOutput.dispose();\n            // Instrument.masterGain.dispose();\n            // Instrument.audioOutput = new Tone.Gain(0.9); // master output for Tone -> Speaker\n            // Instrument.masterGain = new Tone.Gain(0.9);\n            Tone.Transport.stop();\n            Tone.Transport.cancel(0);\n            console.log(`clear by Tone ID ${this.toneID}`);\n            Tone.Transport.clear(this.toneID);\n            Tone.Transport.scheduleRepeat(() => {\n                // console.log(\"empty transport\");\n            }, \"8n\");\n            this.configLoopStarted = false;\n            // clear Metronom\n            this.disposeMetronom();\n            this.createMetronom();\n            this.renderContent();\n        }, 50);\n    }\n\n    // ============================================\n    // set language\n    // ============================================\n    setLanguage(lang) {\n        if (lang == \"english\") {\n            this.language = \"en\";\n            // set document\n            document.documentElement.setAttribute(\"lang\", \"en\");\n            document.getElementById(\"language-button\").value = \"deutsch\";\n            document.getElementById(\"language-button\").title = this.buttons.language.titleDE;\n            // change headings\n            document.getElementById(\"h.files\").innerHTML = this.english.headings.files;\n            document.getElementById(\"h.settings\").innerHTML = this.english.headings.settings;\n            document.getElementById(\"h.transport\").innerHTML = this.english.headings.transport;\n            document.getElementById(\"h.instruments\").innerHTML = this.english.headings.instruments;\n            document.getElementById(\"h.console\").innerHTML = this.english.headings.console;\n            document.getElementById(\"h.parts\").innerHTML = this.english.headings.parts;\n            document.getElementById(\"h.instList\").innerHTML = this.english.headings.instList;\n            // document.getElementById(\"h.packs\").innerHTML = this.english.headings.packs;\n            document.getElementById(\"h.tutorial\").innerHTML = this.english.headings.tutorial;\n            // change texts\n            document.getElementById(\"c.tutorial\").innerHTML = this.english.tutorial;\n            document.getElementById(\"c.info\").innerHTML = this.english.info;\n\n            // change buttons\n            if (this.#playSound) document.getElementById(\"mute-button\").value = this.buttons.mute.valueENoff;\n            else document.getElementById(\"mute-button\").value = this.buttons.mute.valueENon;\n            if (this.#playAlerts)\n                document.getElementById(\"muteHelper-button\").value = this.buttons.muteHelper.valueENoff;\n            else document.getElementById(\"muteHelper-button\").value = this.buttons.muteHelper.valueENon;\n            if (this.#playMetronom)\n                document.getElementById(\"muteMetronom-button\").value = this.buttons.muteMetronom.valueENoff;\n            else document.getElementById(\"muteMetronom-button\").value = this.buttons.muteMetronom.valueENon;\n        }\n        if (lang == \"deutsch\") {\n            this.language = \"de\";\n            // set document\n            document.documentElement.setAttribute(\"lang\", \"de\");\n            document.getElementById(\"language-button\").value = \"english\";\n            document.getElementById(\"language-button\").title = this.buttons.language.titleEN;\n            // change headings\n            document.getElementById(\"h.files\").innerHTML = this.german.headings.files;\n            document.getElementById(\"h.settings\").innerHTML = this.german.headings.settings;\n            document.getElementById(\"h.transport\").innerHTML = this.german.headings.transport;\n            document.getElementById(\"h.instruments\").innerHTML = this.german.headings.instruments;\n            document.getElementById(\"h.console\").innerHTML = this.german.headings.console;\n            document.getElementById(\"h.parts\").innerHTML = this.german.headings.parts;\n            document.getElementById(\"h.instList\").innerHTML = this.german.headings.instList;\n            // document.getElementById(\"h.packs\").innerHTML = this.german.headings.packs;\n            document.getElementById(\"h.tutorial\").innerHTML = this.german.headings.tutorial;\n            // change texts\n            document.getElementById(\"c.tutorial\").innerHTML = this.german.tutorial;\n            document.getElementById(\"c.info\").innerHTML = this.german.info;\n\n            // change buttons\n            if (this.#playSound) document.getElementById(\"mute-button\").value = this.buttons.mute.valueDEoff;\n            else document.getElementById(\"mute-button\").value = this.buttons.mute.valueDEon;\n            if (this.#playAlerts)\n                document.getElementById(\"muteHelper-button\").value = this.buttons.muteHelper.valueDEoff;\n            else document.getElementById(\"muteHelper-button\").value = this.buttons.muteHelper.valueDEon;\n            if (this.#playMetronom)\n                document.getElementById(\"muteMetronom-button\").value = this.buttons.muteMetronom.valueDEoff;\n            else document.getElementById(\"muteMetronom-button\").value = this.buttons.muteMetronom.valueDEon;\n        }\n    }\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n\n    // ============================================\n    // Communication with Server, basic setup\n    // ============================================\n    // get samples and alerts as file paths, and store in local objects (name, file, path, buffer)\n    // add alert players\n    // return number of files for controlling further actions\n    // once all samples are arrived, start instrument creation\n    //\n\n    getAlertsNum() {\n        if (Object.keys(this.#alerts).length == 0) return 0;\n        else return Object.keys(this.#alerts).length;\n    }\n\n    getSamplesNum() {\n        if (Object.keys(this.samples).length == 0) return 0;\n        else return Object.keys(this.samples).length;\n    }\n\n    addSamples(files) {\n        files.map((file) => {\n            const name = file.split(\".\")[0];\n            const path = `/audio/${file}`;\n            const buffer = new Tone.ToneAudioBuffer(path, () => {});\n            const content = {\n                name: name,\n                file: file,\n                path: path,\n                buffer: buffer,\n            };\n            this.samples.push(content);\n        });\n        if (this.debug) {\n            let names = [];\n            this.samples.forEach((sample) => {\n                names.push(sample.name);\n            });\n            console.log(`incoming samples: `, names);\n        }\n    }\n\n    addAlerts(files) {\n        files.map((file) => {\n            const name = file.split(\".\")[0];\n            const path = `/alerts/${file}`;\n            const content = { name: name, file: file, path: path };\n            this.#alerts[name] = content;\n            this.#alerts[name].player = new Tone.Player(this.#alerts[name].path).connect(Instrument.audioOutput);\n            this.#alerts[name].player.autostart = false;\n        });\n        if (this.debug) {\n            let names = [];\n            Object.keys(this.#alerts).forEach((key) => {\n                // console.log(this.#alerts[key]);\n                names.push(key);\n            });\n            console.log(\"incoming alerts: \", names);\n        }\n    }\n\n    playAlert(alertName) {\n        if (this.#playAlerts) if (this.#alerts[alertName]) this.#alerts[alertName].player.start();\n    }\n\n    // handle html input alerts/ sounds playmode\n    // if checkboxes are checked, than play alerts or sound\n\n    handleAlerts(checked) {\n        // console.log(`Play Alerts. change to: ${checked}`);\n        this.#playAlerts = checked;\n    }\n    muteApp(state) {\n        // handleSound\n        console.log(`mute App change to: ${state}`);\n        // if mute, than var is false:\n        this.#playSound = !state;\n        if (this.#playSound) {\n            Instrument.audioOutput.gain.rampTo(0.9, 0.03);\n            Instrument.masterGain.gain.rampTo(0.9, 0.03);\n        } else {\n            Instrument.audioOutput.gain.rampTo(0, 0.03);\n            Instrument.masterGain.gain.rampTo(0, 0.03);\n        }\n    }\n\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n\n    // ============================================\n    // Instrument creation\n    // ============================================\n    // make one instrument (Sample Player) for each sample, that arrived from server\n    // and is stored in the #samples list\n\n    makeSynths = (data) => {\n        // console.log(JSON.stringify(data));\n        // message contains: count, this.#samples array\n        // here we will create all Instruments at once for the App\n        // count is passed, is the amount of samples we got from server\n        // make temp array to store synths -> this.#instruments\n        const synths = [];\n        const count = data.count;\n        const samples = data.samples;\n\n        for (let i = 0; i < count; i++) {\n            // we will use the Instrument class to create synths\n            const name = samples[i].name;\n            const buffer = samples[i].buffer;\n            const chan = i;\n            const message = { count: count, name: name, buffer: buffer, chan: chan };\n\n            // console.log(JSON.stringify(message));\n            let synth = new Instrument(message);\n            synths.push(synth);\n        }\n        return synths;\n    };\n\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n\n    // ============================================\n    // STEP SEQUENCER 8x8 creation\n    // code taken from https://medium.com/geekculture/creating-a-step-sequencer-with-tone-js-32ea3002aaf5\n    // ============================================\n\n    makeGrid = (instruments) => {\n        // the grid will have as many subarrays as there are instruments\n        // each sub array corresponds to one row in our sequencer grid\n\n        // parent array to hold each row subarray\n        const rows = [];\n\n        for (const instrument of instruments) {\n            // console.log(`makeGrid for ${instrument.name}`);\n            // declare the subarray\n            const row = [];\n            const sequence = instrument.sequence;\n            // each subarray contains multiple objects that have an assigned note\n            // and a boolean to flag whether they are \"activated\"\n            // each element in the subarray corresponds to one eigth note\n\n            for (let i = 0; i < 8; i++) {\n                let state = false;\n                if (sequence[i] != null) state = true;\n                row.push({\n                    instrument: instrument.name,\n                    note: sequence[i],\n                    isActive: state,\n                    mute: instrument.getMute(),\n                });\n            }\n            rows.push(row);\n        }\n\n        // we now have all rows each containing 16 eighth notes\n        return rows;\n    };\n\n    configLoop = () => {\n        this.configLoopStarted = true;\n        const repeat = (time) => {\n            // console.log(`beat: ${this.beat}`);\n            // update the grid based on changes in the instruments (Sequences, Rand etc.)\n            this.grid = this.makeGrid(this.instruments);\n            // for each step check how many instruments play a note and play it\n            this.grid.forEach((row, index) => {\n                const synth = this.instruments[index].synth;\n                const name = this.instruments[index].name;\n                const ampEnv = this.instruments[index].ampEnv;\n                const event = row[this.beat];\n                const mute = this.instruments[index].getMute();\n                let midiChan = 0;\n                let midiTransmit = true;\n                if (index < 14) midiChan = index;\n                else midiTransmit = false;\n\n                if (mute == false) {\n                    if (event.isActive) {\n                        ampEnv.triggerAttackRelease(\"8n\", time);\n                        synth.triggerAttackRelease(event.note, \"8n\", time);\n                        // MIDI - playnote in time\n                        if (window.welle.app.MIDIOutput != undefined) {\n                            // if midiTransmit = true eg. Midi channel < 14\n                            if (midiTransmit) {\n                                const nextEventTime = Tone.Time(\"@8n\").toSeconds() * 1000;\n                                const diffTime = nextEventTime - WebMidi.time;\n                                this.playMidiNote({\n                                    note: event.note,\n                                    channel: midiChan,\n                                    velocity: this.instruments[index].getVolume(),\n                                    duration: 10,\n                                    time: diffTime, // midiChan short delay for MIDI connection\n                                });\n                            }\n                        }\n                    }\n                }\n                // count beats for randomising\n                if (this.beat == 7) {\n                    this.instruments[index].beatCounter = this.instruments[index].beatCounter + 1;\n                    // console.log(this.instruments[index]);\n                }\n                // update MIDI output at new randomized sequence\n                const randEvent = this.instruments[index].updateRandomizer();\n                if (randEvent == true) {\n                    // send only if instrument = selected instrument\n                    if (name == this.selected.name) {\n                        this.selected.sequence = this.instruments[index].getSequence();\n                        this.sendMidiSelectedInstState(this.selected);\n                    }\n                    this.renderInstruments();\n                }\n            });\n            // play alerts metronom\n            if (this.#playMetronom == true) {\n                if (this.beat == 0) this.metronom1.triggerAttackRelease(\"C3\", \"8n\", time);\n                else this.metronom2.triggerAttackRelease(\"C5\", \"8n\", time);\n            }\n\n            // update the beat counter\n            this.beat = (this.beat + 1) % 8;\n            // send MIDI Clock\n            const nextEventTime = Tone.Time(\"@8n\").toSeconds() * 1000;\n            const diffTime = nextEventTime - WebMidi.time;\n            if (window.welle.app.MIDIOutput != undefined) {\n                window.welle.app.MIDIOutput.sendClock({ time: WebMidi.time + diffTime });\n            }\n        };\n        // Tone.Transport.bpm.value = 120;\n        this.toneID = Tone.Transport.scheduleRepeat(repeat, \"8n\");\n        console.log(\"get Tone.Transport ID: \", this.toneID);\n        // Tone.Transport.state;\n    };\n\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n\n    // ============================================\n    // handle Tone, Start & Stop\n    // ============================================\n    async startTone() {\n        if (this.#toneStarted == false) {\n            await Tone.start();\n            this.#toneStarted = true;\n            // extremly relevant to stability of Tone playback\n            Tone.context.lookAhead = 0.3;\n            console.log(\"Tone debug\", Tone.Transport.context.state);\n        }\n        if (Tone.Transport.context.state != \"running\") {\n            Tone.start();\n            console.log(\"Tone debug\", Tone.Transport.context.state);\n        }\n    }\n    startTransport() {\n        this.beat = 0;\n        if (Tone.Transport.state != \"started\") Tone.Transport.start();\n        // send MIDI start\n        const nextEventTime = Tone.Time(\"@8n\").toSeconds() * 1000;\n        const diffTime = nextEventTime - WebMidi.time;\n        if (window.welle.app.MIDIOutput != undefined) {\n            window.welle.app.MIDIOutput.sendStart({ time: WebMidi.time + diffTime });\n        }\n        // change play button\n        document.getElementById(\"transport-button\").value = \"STOP\";\n        document.getElementById(\"transport-button\").classList.add(\"w3-green\");\n        document.getElementById(\"transport-button\").classList.add(\"w3-hover-green\");\n    }\n    stopTransport() {\n        if (Tone.Transport.state != \"stopped\") Tone.Transport.stop();\n        // send MIDI stop\n        const nextEventTime = Tone.Time(\"@8n\").toSeconds() * 1000;\n        const diffTime = nextEventTime - WebMidi.time;\n        if (window.welle.app.MIDIOutput != undefined) {\n            window.welle.app.MIDIOutput.sendStop({ time: WebMidi.time + diffTime });\n        }\n        // change play button\n        document.getElementById(\"transport-button\").value = \"PLAY\";\n        document.getElementById(\"transport-button\").classList.remove(\"w3-green\");\n        document.getElementById(\"transport-button\").classList.remove(\"w3-hover-green\");\n    }\n\n    playAll() {\n        if (Tone.Transport.state != \"started\") this.startTransport();\n    }\n\n    stopAll() {\n        // this.renderContent();\n        this.stopTransport();\n        this.beat = 0;\n    }\n\n    setBpm(message) {\n        // message = bpm, factor\n        const bpm = Math.min(440, Math.max(1, message.bpm));\n        // if (this.debug) console.log(`BPM math bpm: ${message.bpm}, limit Bpm: ${bpm}`);\n        this.bpm = bpm;\n        if (message.factor) Tone.Transport.bpm.rampTo(bpm, message.factor);\n        else Tone.Transport.bpm.rampTo(bpm, 0.1);\n        // if Transport running\n        // if (Tone.Transport.state == \"started\") {\n        //     if (message.factor) Tone.Transport.bpm.rampTo(bpm, message.factor);\n        //     else Tone.Transport.bpm.rampTo(bpm, 0.1);\n        // }\n        // this.renderContent();\n        this.renderBpm();\n    }\n\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n\n    // ============================================\n    // console sound input\n    // ============================================\n\n    assignPattern(message) {\n        // console.log(`assignPattern. message: ${JSON.stringify(message)}`);\n        console.log(`assignPattern. message:`, message);\n        // checks for instruments\n        // console.log(`assign:\n        // number of instruments: ${message.instruments.length}`);\n        // validate message instruments input, can be multiple instruments at once\n        message.instruments.forEach((inst) => {\n            let valid = false;\n            // compare with list of instruments\n            this.instruments.forEach((entry) => {\n                if (entry.name == inst) {\n                    valid = true;\n                    entry.setMute(false);\n                    entry.updateSequence(message.pattern, message.rawPattern);\n                    if (message.random != undefined) entry.random(message.random);\n                    if (message.volume != undefined) entry.setVolume(message.volume);\n                    this.setSelected(entry);\n                    entry.activate();\n                }\n            });\n            // console.log(`${inst} valid is ${valid}`);\n            if (valid == false) {\n                this.addToConsole({\n                    valid: false,\n                    string: inst,\n                    comment: \"no such instrument\",\n                });\n            }\n        });\n\n        if (Tone.Transport.state != \"started\") this.startTransport();\n        this.renderContent();\n    }\n\n    plainStartInstruments(message) {\n        if (this.debug) console.log(`plainStartInstruments. message: ${JSON.stringify(message)}`);\n\n        let isPart = false;\n        const partName = message.instruments[0];\n        // check for parts if only one instrument\n        if (message.instruments.length == 1) {\n            if (this.parts[partName]) {\n                // console.log(`part ${partName} detected`);\n                isPart = true;\n            }\n        }\n        if (isPart) {\n            this.startPart(partName);\n        } else {\n            // validate instruments input\n            message.instruments.forEach((inst) => {\n                let valid = false;\n                this.instruments.forEach((entry) => {\n                    if (entry.name == inst) {\n                        valid = true;\n                        // if no sequence assigned, create one\n                        if (entry.patternRaw == \"\") entry.updateSequence([0], \"#\");\n                        // in case is muted, unmute\n                        entry.setMute(false);\n                        // assign random and volume\n                        if (message.random != undefined) entry.rand = message.random;\n                        if (message.volume != undefined) entry.setVolume(message.volume);\n                        this.setSelected(entry);\n                        entry.activate();\n                    }\n                });\n                // console.log(`${inst} valid is ${valid}`);\n                if (valid == false) {\n                    this.addToConsole({\n                        valid: false,\n                        string: inst,\n                        comment: \"no such instrument\",\n                    });\n                }\n            });\n\n            if (Tone.Transport.state != \"started\") this.startTransport();\n        }\n        this.renderContent();\n    }\n\n    stopInstruments(instruments) {\n        // validate message instruments input, can be multiple instruments at once\n        instruments.forEach((inst) => {\n            let valid = false;\n            // compare with list of instruments\n            this.instruments.forEach((entry) => {\n                if (entry.name == inst) {\n                    valid = true;\n                    entry.setMute(true);\n                    this.setSelected(entry);\n                }\n            });\n            // console.log(`${inst} valid is ${valid}`);\n            if (valid == false) {\n                this.addToConsole({\n                    valid: false,\n                    string: inst,\n                    comment: \"no such instrument\",\n                });\n            }\n        });\n\n        //if (nothingIsPlaying) this.stopTransport();\n        let running = false;\n        this.instruments.forEach((entry) => {\n            if (entry.getStatus() == true) running = true;\n        });\n        if (!running) this.stopTransport();\n        this.renderContent();\n    }\n\n    setVolume(message) {\n        message.instruments.forEach((inst) => {\n            let valid = false;\n            // compare with list of instruments\n            this.instruments.forEach((entry) => {\n                if (entry.name == inst) {\n                    valid = true;\n                    entry.setVolume(message.volume);\n                    if (message.midi == undefined) {\n                        this.setSelected(entry);\n                        entry.activate();\n                    }\n                }\n            });\n            // console.log(`${inst} valid is ${valid}`);\n            if (valid == false) {\n                this.addToConsole({\n                    valid: false,\n                    string: inst,\n                    comment: \"no such instrument\",\n                });\n            }\n        });\n        this.renderContent();\n    }\n\n    copyPattern(message) {\n        console.log(`incoming message: ${JSON.stringify(message)}`);\n        let source = undefined;\n        let sequence = undefined;\n        let patternRaw = undefined;\n        let destinations = [];\n\n        // check if source exists\n        message.source.forEach((inst) => {\n            let valid = false;\n            // compare with list of instruments\n            this.instruments.forEach((entry) => {\n                if (entry.name == inst) {\n                    valid = true;\n                    source = entry;\n                    sequence = entry.sequence;\n                    patternRaw = entry.patternRaw;\n                    this.setSelected(entry);\n                    entry.activate();\n                }\n            });\n            if (valid == false) {\n                this.addToConsole({\n                    valid: false,\n                    string: inst,\n                    comment: \"no such instrument\",\n                });\n            }\n        });\n\n        if (source != undefined) {\n            // check if destinations exist and copy source pattern\n            message.destinations.forEach((inst) => {\n                let valid = false;\n                // console.log(inst);\n                // compare with list of instruments\n                this.instruments.forEach((entry) => {\n                    if (entry.name == inst) {\n                        valid = true;\n                        // console.log(`${inst} exists`);\n                        destinations.push(inst);\n                    }\n                });\n                if (valid == false) {\n                    this.addToConsole({\n                        valid: false,\n                        string: inst,\n                        comment: \"no such instrument\",\n                    });\n                }\n            });\n        }\n\n        if (source != undefined && destinations.length > 0) {\n            console.log(\n                `success -> copy ${sequence} \n                from ${source} to ${JSON.stringify(destinations)}`\n            );\n            destinations.forEach((inst) => {\n                this.instruments.forEach((entry) => {\n                    if (entry.name == inst) {\n                        entry.patternRaw = patternRaw;\n                        for (let i = 0; i < 8; i++) {\n                            entry.sequence[i] = sequence[i];\n                        }\n                        this.setSelected(entry);\n                        entry.setMute(false);\n                        entry.activate();\n                    }\n                });\n            });\n        } else console.log(`copy error`);\n\n        this.renderContent();\n    }\n\n    delete(names) {\n        console.log(`delete this: ${names}`);\n        let valid = false;\n        names.map((name) => {\n            if (this.parts[name]) {\n                delete this.parts[name];\n                valid = true;\n                // console.log(`delete this part: ${name}`);\n            }\n            // if this inst exists, reset everything\n            this.instruments.forEach((entry) => {\n                if (entry.name == name) {\n                    valid = true;\n                    entry.sequence = [null, null, null, null, null, null, null, null];\n                    entry.patternRaw = \"\";\n                    entry.setVolume(0.6);\n                    entry.deactivate();\n                    this.activeInstruments = this.activeInstruments.filter((item) => item !== entry.name);\n                }\n            });\n        });\n        if (valid == false) {\n            this.addToConsole({\n                valid: false,\n                string: \"\",\n                comment: \"no such instrument or part\",\n            });\n        }\n        this.renderContent();\n    }\n\n    deleteAll() {\n        console.log(`App delete all..`);\n        this.#consoleArray = Array(this.#consoleMaxLength).fill({ message: \"&nbsp;\" });\n        this.renderConsole();\n        // clear & delete every instrument\n        this.instruments.forEach((entry) => {\n            entry.sequence = [null, null, null, null, null, null, null, null];\n            entry.patternRaw = \"\";\n            entry.setVolume(0.6);\n            entry.deactivate();\n            this.activeInstruments = this.activeInstruments.filter((item) => item !== entry.name);\n        });\n        // delete all parts\n        for (let part in this.parts) {\n            // console.log(`delete this part: ${part}`);\n            delete this.parts[part];\n        }\n        // stop Tone\n        this.stopTransport();\n        // render\n        this.renderContent();\n    }\n\n    playOnce(inst) {\n        const player = new Tone.Player().toDestination();\n        // play one of the samples when they all load\n        this.instruments.forEach((entry) => {\n            if (entry.name == inst) {\n                player.buffer = entry.buffer;\n                player.volume.value = -12;\n                player.start();\n            }\n        });\n    }\n\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n\n    // ============================================\n    // Parts\n    // ============================================\n    // parts are snapshots of current instruments/sequences etc.\n    // parts are stored in an array and can be loaded\n\n    savePart(name) {\n        console.log(`save new part : ${name}`);\n\n        // check if name is reserved as instrument\n        // valid = if a part name is not taken by an instrument\n        let valid = true;\n        this.instruments.forEach((entry) => {\n            if (entry.name == name) {\n                valid = false;\n                this.addToConsole({\n                    valid: false,\n                    string: name,\n                    comment: \"name reserved as instrument\",\n                    user: this.user,\n                });\n            }\n        });\n\n        if (valid) {\n            // init new part\n            this.parts[name] = {\n                instrumentCollection: {},\n                bpm: this.bpm,\n            };\n            this.instruments.forEach((entry) => {\n                this.activeInstruments.forEach((instName) => {\n                    if (entry.name == instName) {\n                        this.parts[name].instrumentCollection[entry.name] = {\n                            name: entry.name,\n                            mute: entry.getMute(),\n                            sequence: entry.getSequence(),\n                            patternRaw: entry.getPatternRaw(),\n                            volume: entry.getVolume(),\n                            rand: entry.getRand(),\n                            envSettings: entry.getEnvSettings(),\n                        };\n                    }\n                });\n            });\n\n            console.log(`part ${name} saved in parts`, this.parts[name]);\n        }\n        this.renderParts();\n    }\n\n    startPart(name) {\n        console.log(\"\");\n        console.log(`start part ${name}:`);\n        console.log(this.parts);\n        // STOP - un-click all active all instruments\n        this.instruments.forEach((entry) => {\n            this.activeInstruments.forEach((name) => {\n                if (entry.name == name) {\n                    window.welle.app.stopInstruments([entry.name]);\n                }\n            });\n        });\n\n        // now copy the saved info to each actual instrument\n        this.instruments.forEach((entry) => {\n            this.activeInstruments.forEach((activeName) => {\n                if (entry.name == activeName) {\n                    const storedInst = this.parts[name].instrumentCollection[entry.name];\n                    // only if instrument stored:\n                    if (storedInst != undefined) {\n                        if (entry.name == storedInst.name) {\n                            console.log(`recall inst ${entry.name}, mute: ${storedInst.mute}`);\n                            entry.setSequence(storedInst.sequence, storedInst.patternRaw);\n                            entry.setVolume(storedInst.volume);\n                            entry.setMute(storedInst.mute);\n                            entry.setRand(storedInst.rand);\n                            entry.setEnvSettings(storedInst.envSettings);\n\n                            if (entry.getMute() == false) {\n                                window.welle.app.plainStartInstruments({\n                                    instruments: [entry.name],\n                                    random: null,\n                                });\n                            }\n                        }\n                    }\n                }\n            });\n        });\n\n        // BPM change\n        this.setBpm({ bpm: this.parts[name].bpm });\n        // this.beat = 0;\n        // start Tone Transport\n        if (Tone.Transport.state != \"started\") this.startTransport();\n        // this.renderParts();\n    }\n\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n\n    // ============================================\n    // Selected\n    // ============================================\n    // set last instrument as selected, for HTML display and MIDI interaction\n\n    setSelected(inst) {\n        // set selected instrument and save settings\n        this.selected.name = inst.name;\n        this.selected.vol = inst.getVolume();\n        this.selected.env = inst.getEnvSettings();\n        this.selected.sequence = inst.getSequence();\n        // console.log(`selected inst: ${inst}. Set selected: ${JSON.stringify(this.selected)}`);\n\n        // activate instrument\n        inst.activate();\n        // store all active instruments in an array\n        this.instruments.forEach((entry) => {\n            const status = entry.getStatus();\n            // console.log(`Status inst ${entry.name}: ${status}`);\n            // if inst not already stored, than push in array\n            if (status == true) {\n                let isStored = false;\n                this.activeInstruments.forEach((stored) => {\n                    if (stored == entry.name) isStored = true;\n                });\n                if (isStored == false) this.activeInstruments.push(entry.name);\n            }\n        });\n        // console.log(JSON.stringify(this.activeInstruments));\n\n        //\n        setTimeout(() => {\n            this.activeInstruments.forEach((inst) => {\n                if (inst == this.selected.name)\n                    window.document.getElementById(`inst_${inst}`).classList.add(\"selectedInst\");\n                else window.document.getElementById(`inst_${inst}`).classList.remove(\"selectedInst\");\n            });\n        }, 350);\n        // this.sendMidiSelectedInstState();\n\n        // midi transfer ongoing is a delay for send midi, and not receiving in the same time\n        if (this.midiTransferOngoing == false) {\n            if (window.welle.app.MIDIOutput != undefined) this.sendMidiSelectedInstState(this.selected);\n        }\n    }\n\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n\n    // ============================================\n    // handle main string input\n    // ============================================\n    //\n    //\n\n    handleMainInput(inputString) {\n        // reset console pointer for arrow navigation\n        this.#consolePointer = 0;\n        this.#consoleInput = inputString;\n        // GRAMMAR - send string to validate using semantics & grammar\n        const result = this.#inputValidation(inputString);\n        // console.log(`app handleMainInput Grammar result: ${JSON.stringify(result, null, 4)}`);\n\n        // if Grammar valid:\n        if (result.valid) {\n            // check if result matches instruments and parts\n            // ...\n            // return semantic to parser\n            this.addToConsole({ valid: true, string: inputString, user: this.user });\n            parser(result.semantic);\n        } else this.addToConsole({ valid: false, string: inputString, user: this.user });\n\n        if (!this.tutorial) {\n            // clear Input\n            document.getElementById(\"mainInput\").value = \"\";\n            // FOCUS - focus back on textfield\n            document.getElementById(\"mainInput\").focus();\n        }\n    }\n    #inputValidation = (inputString) => {\n        // if input is valid\n        if (livecode.match(inputString).succeeded()) {\n            // evaluate input through semantics\n            const result = semantics(livecode.match(inputString)).eval();\n            // if result valid in grammar, return result\n            return { valid: true, string: inputString, semantic: result };\n        }\n        // if input is not valid:\n        if (livecode.match(inputString).failed()) {\n            return { valid: false, string: inputString, semantic: null };\n        }\n    };\n    // handleRemoteInput(message) {\n    //     if (this.user != message.user) {\n    //         const result = this.#inputValidation(message.string);\n    //         this.addToConsole({ valid: true, string: message.string, user: message.user });\n    //         parser(result.semantic);\n    //     }\n    // }\n    //\n    //\n    //\n    //\n\n    // ============================================\n    // console\n    // ============================================\n    arrowUp() {\n        // increment pointer, render html\n        this.renderArrows(\"up\");\n        this.playAlert(\"return\");\n    }\n    arrowDown() {\n        // decrement pointer, render html\n        this.renderArrows(\"down\");\n        this.playAlert(\"return\");\n    }\n    renderArrows(dir) {\n        const length = this.#consoleArray.length;\n        // console.log(`App render arrows on array length ${length} with dir '${dir}'.\n        // pointer: ${this.#consolePointer}\n        // pos length - pointer: ${parseInt(length - this.#consolePointer)}\n        // array: ${JSON.stringify(this.#consoleArray)}`);\n        switch (dir) {\n            case \"up\":\n                if (length > 0 && this.#consolePointer < length) {\n                    // set HTML\n                    document.getElementById(\"mainInput\").value = \"\";\n                    const element = this.#consoleArray[length - 1 - this.#consolePointer].message;\n                    if (element != \"&nbsp;\") document.getElementById(\"mainInput\").value = element;\n\n                    // update pointer\n                    if (this.#consolePointer < length) {\n                        this.#consolePointer += 1;\n                    }\n                }\n                break;\n            case \"down\":\n                if (this.#consolePointer > 0) {\n                    // update pointer\n                    this.#consolePointer -= 1;\n                    // set HTML\n                    document.getElementById(\"mainInput\").value = \"\";\n                    if (this.#consolePointer != 0) {\n                        const element = this.#consoleArray[length - this.#consolePointer].message;\n                        if (element != \"&nbsp;\") document.getElementById(\"mainInput\").value = element;\n                    } else {\n                        document.getElementById(\"mainInput\").value = \"\";\n                    }\n                }\n                break;\n        }\n    }\n    addToConsole(message) {\n        switch (message.valid) {\n            case true:\n                if (message.string == \"\") this.playAlert(\"return\");\n                else {\n                    if (message.user == \"local\") {\n                        this.#consoleArray.push({ message: `${message.string}` });\n                    } else {\n                        // here if joined the session\n                        // this.#consoleArray.push({ message: `${message.user}: ${message.string}` });\n                        // if (message.user == this.user) {\n                        //     Socket.emit(\"sessionData\", { user: this.user, string: message.string });\n                        // }\n                    }\n                    this.playAlert(\"return\");\n                }\n                break;\n            case false:\n                // if string is already false, play error, else render string\n                if (message.string.charAt(0) == \"!\") this.playAlert(\"error\");\n                else {\n                    // if not valid, prepend a '!' to string, store in console string array\n                    let string = `! not valid: ${message.string}`;\n                    if (message.comment) string = `! ${message.comment}: ${message.string}`;\n                    this.#consoleArray.push({ message: string });\n                    this.playAlert(\"error\");\n                }\n                break;\n        }\n        // render to Console\n        this.renderConsole();\n    }\n    renderConsole = () => {\n        const length = this.#consoleArray.length;\n        let html = \"\";\n        let pointer = 0;\n        if (length > this.#consoleMaxLength) pointer = length - this.#consoleMaxLength;\n        for (let i = pointer; i < length; i++) {\n            html += `<p id=\"consoleLine\">${this.#consoleArray[i].message}</p>`;\n        }\n        // render array to div\n        document.getElementById(this.#consoleID).innerHTML = \"\";\n        document.getElementById(this.#consoleID).innerHTML += html;\n    };\n\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n\n    // ============================================\n    // HTML - renderer\n    // ============================================\n\n    renderContent() {\n        // add a delay to catch changes\n        setTimeout(() => {\n            this.renderInstrumentsOverview();\n            this.renderInstruments();\n            this.renderParts();\n\n            // this.renderSession();\n            this.renderBpm();\n        }, 200);\n    }\n\n    renderBpm() {\n        document.getElementById(this.bpmDiv).innerHTML = Math.floor(this.bpm);\n    }\n\n    renderInstrumentsOverview() {\n        let html = `<p>`;\n        this.instruments.forEach((entry) => {\n            html += `\n            <a id=\"play_${entry.name}\"\n                title=\"click to play sound: ${entry.name}\" href='#'>${entry.name}</a>\n            `;\n        });\n\n        html += \"</p>\";\n        // replace html content\n        document.getElementById(this.instListDiv).innerHTML = \"\";\n        document.getElementById(this.instListDiv).innerHTML += html;\n\n        // add event listener to play sound\n        this.instruments.forEach((entry) => {\n            document.getElementById(`play_${entry.name}`).addEventListener(\"click\", () => {\n                console.log(`play inst: ${entry.name} once ...`);\n                window.welle.app.playOnce(entry.name);\n            });\n        });\n    }\n\n    renderInstruments() {\n        // create empty html content\n        let html = ``;\n        document.getElementById(this.instDiv).innerHTML = \"\";\n\n        // iterate through storedInstruments collection\n        this.activeInstruments.forEach((inst) => {\n            this.instruments.forEach((entry) => {\n                if (entry.name == inst) {\n                    // round volume\n                    const volume = Math.round(entry.getVolume() * 100) / 100;\n                    // sequence\n                    let sequence = entry.getSequence();\n                    let sequenceRender = \"\";\n                    sequence.forEach((e) => {\n                        if (e == null) sequenceRender += \" - \";\n                        else sequenceRender += \" \" + e + \" \";\n                    });\n                    // checkboxes\n                    const isPlaying = !entry.getMute();\n                    let checkHtml = \"\";\n                    let stateHtml = \">\";\n                    if (isPlaying) {\n                        checkHtml = 'checked=\"checked\"';\n                        stateHtml = \">\";\n                    } else {\n                        stateHtml = \".\";\n                    }\n                    // selected\n                    let selHtml = \"\";\n                    if (entry.name == this.selected.name) selHtml += \"selectedInst\";\n\n                    // create HTML elements for appending\n                    const instHtml = `\n                    <div id=\"inst_${entry.name}\" class=\"${selHtml} instLine\">\n                        <span class=\"stateHtml\">${stateHtml}</span>\n                        <span class=\"instName\">| ${entry.name}</span>\n                        <span id=\"vol_${entry.name}\" class=\"instVol\">| ${volume}</span>\n                        <span id=\"rand_${entry.name}\" class=\"instRand\">| & ${entry.getRand()}</span>\n                        <span id=\"pattern_${entry.name}\" class=\"instPattern\">| ${entry.getPatternRaw()}</span>\n                    </div>`;\n                    html += instHtml;\n                }\n            });\n        });\n        // add html content\n        document.getElementById(this.instDiv).insertAdjacentHTML(\"beforeend\", html);\n    }\n\n    renderParts() {\n        // empty var to store html\n        let html = \"\";\n\n        // iterate through parts collection\n        Object.keys(this.parts).forEach((part) => {\n            const partHtml = `\n                <input\n                    type = \"button\"\n                    class = \"w3-button w3-round w3-border w3-border-black buttonSmall\"\n                    value = \"${part}\"\n                    title = \"snapshot: ${part}\"\n                    id = \"${part}\">\n                </input> `;\n            html += partHtml;\n        });\n\n        // update document\n        document.getElementById(this.partDiv).innerHTML = \"\";\n        document.getElementById(this.partDiv).innerHTML = html;\n\n        // first create html, then event listener\n        Object.keys(this.parts).forEach((part) => {\n            document.getElementById(part).addEventListener(\"click\", () => {\n                window.welle.app.startPart(part);\n            });\n        });\n    }\n\n    // renderExternal() {\n    //     // info text\n    //     // document.getElementById(this.#infoDiv).innerHTML = text.info;\n    //     // tutorial\n    //     let html = tutorial.start;\n    //     document.getElementById(this.tutorialDiv).innerHTML = html;\n    //     // const checks = document.getElementsByTagName(\"input\");\n    //     // console.log(\"these are the inputs: \", checks);\n    //     document.querySelectorAll(\".tutorialInput\").forEach((item) => {\n    //         item.addEventListener(\"keydown\", (e) => {\n    //             if (e.code == \"Enter\") {\n    //                 window.welle.app.tutorial = true;\n    //                 const input = item.value.toLowerCase();\n    //                 console.log(`message from tutorial input: ${input}`);\n    //                 window.welle.app.handleMainInput(input);\n    //                 item.value = \"\";\n    //                 setTimeout(() => {\n    //                     window.welle.app.handleMainInput(\"/\");\n    //                 }, 3000);\n    //             }\n    //         });\n    //     });\n    // }\n\n    // renderSession() {\n    //     if (this.user != \"local\") {\n    //         let html = \"group: \";\n    //         this.session.map((entry) => {\n    //             html += `${entry} `;\n    //         });\n    //         document.getElementById(this.#sessionDiv).innerHTML = html;\n    //     }\n    // }\n    // renderPresets() {\n    //     let html = `<p>`;\n    //     Object.keys(this.#presets).forEach((preset) => {\n    //         html += `\n    //         <a id=\"preset_${this.#presets[preset].name}\" class=\"links\"\n    //         title=\"click to load preset: ${preset}\" href='#'>${this.#presets[preset].name}</a>\n    //         `;\n    //     });\n    //     html += \"</p>\";\n    //     // replace html content\n    //     document.getElementById(this.#presetsDiv).innerHTML = \"\";\n    //     document.getElementById(this.#presetsDiv).innerHTML += html;\n\n    //     // add event listener\n    //     Object.keys(this.#presets).forEach((preset) => {\n    //         document.getElementById(`preset_${preset}`).addEventListener(\"click\", () => {\n    //             console.log(`load preset: ${preset}  ...`);\n    //             window.welle.app.loadPreset(preset);\n    //         });\n    //     });\n    // }\n\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n\n    // ============================================\n    // RECORDER\n    // ============================================\n\n    async handleRecord() {\n        const value = window.document.getElementById(\"rec-button\").value;\n\n        // if (Tone.Transport.state != \"started\") Tone.Transport.start();\n        if (value == \"RECORD\") {\n            console.log(`start recorder`);\n            this.recorder.start();\n            if (document.getElementById(\"downloadFile\") != null) document.getElementById(\"downloadFile\").remove();\n            window.document.getElementById(\"file\").innerHTML = \"recording ...\";\n            if (window.document.getElementById(\"file\").innerHTML != \"\") {\n                console.log(`id file not empty..`);\n                this.recording = undefined;\n            }\n\n            window.document.getElementById(\"rec-button\").value = \"RECORD STOP\";\n            document.getElementById(\"rec-button\").classList.add(\"w3-red\");\n            document.getElementById(\"rec-button\").classList.add(\"w3-hover-red\");\n        } else {\n            window.document.getElementById(\"rec-button\").value = \"RECORD\";\n            document.getElementById(\"rec-button\").classList.remove(\"w3-red\");\n            document.getElementById(\"rec-button\").classList.remove(\"w3-hover-red\");\n            console.log(`stop recorder`);\n\n            if (this.recorder.state == \"started\") {\n                // the recorded audio is returned as a blob\n                this.recording = await this.recorder.stop();\n                console.log(`recording: ${JSON.stringify(this.recording, null, 2)}`);\n                document.getElementById(\n                    \"file\"\n                ).innerHTML = `<a id=\"downloadFile\" title=\"click to download recorded audio file\" href=\"#\">download welle.webm</a>`;\n                document.getElementById(\"file\").classList.add(\"w3-text-green\");\n                document.getElementById(\"downloadFile\").addEventListener(\"click\", (c) => {\n                    console.log(`file link clicked. date: ${new Date()}`);\n                    const recording = window.welle.app.getRecording();\n                    const url = URL.createObjectURL(recording);\n                    const anchorSound = document.createElement(\"a\", { href: url, type: \"audio/mp3\" });\n                    anchorSound.download = \"welle.webm\";\n                    anchorSound.href = url;\n                    document.body.append(anchorSound);\n                    anchorSound.click();\n                    anchorSound.remove();\n                });\n            }\n        }\n    }\n    getRecording() {\n        return this.recording;\n    }\n\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n\n    // ============================================\n    // MIDI\n    // ============================================\n\n    // MIDI handling\n    startMIDI() {\n        if (WebMidi.state == undefined) {\n            WebMidi.enable(function (err) {\n                if (err) {\n                    console.log(\"WebMidi could not be enabled.\", err);\n                } else {\n                    console.log(\"WebMidi enabled!\");\n                }\n                const selectBox = window.document.getElementById(\"midiSelect\");\n\n                WebMidi.outputs.map((output) => {\n                    console.log(`Midi out: ${output.name}`);\n                    let option = document.createElement(\"option\");\n                    option.text = output.name;\n                    selectBox.add(option);\n                });\n            });\n        }\n    }\n\n    selectMIDIdevice(selectedName) {\n        // \"Pro40 MIDI\"\n        const midiOutputs = WebMidi.outputs;\n        const midiInputs = WebMidi.inputs;\n        midiOutputs.map((output) => {\n            const name = output.name;\n            if (name == selectedName) this.MIDIOutput = WebMidi.getOutputByName(name);\n        });\n        if (this.MIDIOutput) console.log(`MIDI Out connected to ${this.MIDIOutput.name}`);\n        // MIDIInput\n        midiInputs.map((input) => {\n            const name = input.name;\n            if (name == selectedName) this.MIDIInput = WebMidi.getInputByName(name);\n        });\n        if (this.MIDIInput) {\n            console.log(`MIDI In connected to ${this.MIDIInput.name}`);\n            this.addMIDIInputListeners();\n        }\n    }\n\n    playMidiNote(message) {\n        // message.note, message.channel, message.velocity, message.duration\n        // console.log(`MIDI message: `, message);\n        if (message == undefined) message = {}; // if no message send, create empty object\n        const note = message.note || \"C3\";\n        let chan = 0;\n        if (message.channel != undefined) chan = message.channel + 1;\n        const vel = message.velocity || 1;\n        const dur = message.duration || 200;\n        let midiTime = 0;\n        if (message.time != undefined) midiTime = message.time;\n        // console.log([note, chan, vel, dur, midiTime]);\n\n        // if MIDI device is connected\n        if (window.welle.app.MIDIOutput != undefined) {\n            // console.log(`play MIDI note ${note}`);\n            window.welle.app.MIDIOutput.playNote(note, chan, {\n                time: WebMidi.time + midiTime,\n                velocity: vel,\n                duration: dur,\n            });\n        }\n    }\n\n    sendMidiSelectedInstState(message) {\n        // send message to MIDI, channels defined in class variables midiChanInput 15, midiChanOutput 16\n        if (window.welle.app.MIDIInput != undefined) {\n            console.log(`Send MIDI Message: `, message);\n            /*\n            CC map, MIDI channel 1\n            Controller (max 120):\n                1-8     = pattern steps of tangible pins (CC0 off, CC>0 on)\n                9       = volume (CC map 0.0-1.0 -> 0-127)\n                10-14   = EQ 5 values\n                16-19   = Env 4 values\n            */\n\n            // Send Volume\n            // ==================================================\n            let vol = message.vol;\n            vol = window.welle.app.map(vol, 0, 1, 0, 126);\n            window.welle.app.MIDIOutput.sendControlChange(\n                9, // cc controller\n                vol, // CC value\n                this.midiChanOutput // channel\n            );\n\n            // Send Pattern\n            // ==================================================\n            const sequence = message.sequence;\n            // send pattern midi messages\n            sequence.map((e, c) => {\n                const cc = 1 + c;\n                if (e == null) {\n                    window.welle.app.MIDIOutput.sendControlChange(cc, 0, this.midiChanOutput);\n                } else {\n                    const midiNum = Tone.Frequency(e).toMidi(); //60\n                    window.welle.app.MIDIOutput.sendControlChange(cc, midiNum, this.midiChanOutput);\n                }\n            });\n\n            // Send ENV\n            // ==================================================\n            // env problem: how to scale numbers? 0.01 - 3.00\n            // solution: multiple of 10, if 0 => 0.01\n            //\n            // wait: in SuperCollider, Envelope values are always 0.0 - 1.0\n            // so maybe I should adapt this to Tonejs\n            const env = [message.env.attack, message.env.decay, message.env.sustain, message.env.release];\n            const newEnv = [];\n\n            env.forEach((e) => {\n                const val = Math.round(e * 10);\n                if (val < 127) newEnv.push(val);\n                else newEnv.push(126);\n            });\n\n            newEnv.map((e, c) => {\n                const cc = 16 + c;\n                window.welle.app.MIDIOutput.sendControlChange(cc, e, this.midiChanOutput);\n            });\n        }\n\n        //     // Send EQ\n        //     // ==================================================\n        //     /*\n        //     settings: {\"high\":0,\"highFrequency\":5000,\"mid\":0,\"lowFrequency\":400,\"low\":0}\n        //     eq SC: [0.5, 0.3, 0.5, 0.7, 0.5]\n        //     map band: -24 / 24 db -> 0.0/1.0\n        //     map freq low: 0-2000 -> 0.0-0.5\n        //     map freq high: 2000-8000 -> 0.5-1.0\n        //     */\n        //     // console.log(`send MIDI eq with this settings: ${JSON.stringify(this.selected.eq)}`);\n        //     const low = this.map(this.selected.eq.low, -12, 12, 0.0, 1.0);\n        //     const lowFreq = this.map(this.selected.eq.lowFrequency, 0, 1000, 0.0, 0.5);\n        //     const mid = this.map(this.selected.eq.mid, -12, 12, 0.0, 1.0);\n        //     const highFreq = this.map(this.selected.eq.highFrequency, 1000, 13000, 0.5, 1.0);\n        //     const high = this.map(this.selected.eq.high, -12, 12, 0.0, 1.0);\n        //     // console.log(`map: [${high}, ${highFreq}, ${mid}, ${lowFreq}, ${low}]`);\n\n        //     // console.log(`MIDI send EQ (original): ${JSON.stringify(this.selected.eq)}`);\n        //     // console.log(\n        //     //    `MIDI send EQ (mapped): [${high}, ${highFreq}, ${mid}, ${lowFreq}, ${low}]`\n        //     // );\n\n        //     const newEq = [high, highFreq, mid, lowFreq, low];\n        //     newEq.map((eq, c) => {\n        //         const cc = 14 - c;\n        //         eq = Math.round(eq * 126);\n        //         window.welle.app.MIDIOutput.sendControlChange(cc, eq, chan);\n        //     });\n\n        //     console.log(\n        //         `MIDI send selected Instr.(ch.${chan}):`,\n        //         this.selected,\n        //         `\n        //         MIDI send vol: ${vol}\n        //         MIDI send pattern: ${newPattern}\n        //         MIDI send EQ (original):\n        //         ${JSON.stringify(this.selected.eq)}\n        //             map band: -24 / 24 db -> 0.0/1.0\n        //             map freq low: 0-1000 -> 0.0-0.5\n        //             map freq high: 1000-13000 -> 0.5-1.0\n        //         MIDI send EQ (mapped): [${high}, ${highFreq}, ${mid}, ${lowFreq}, ${low}]\n        //         MIDI send ENV (original): ${selEnv}\n        //         MIDI send ENV (mapped): ${newEnv}\n        //         `\n        //     );\n        // }\n    }\n\n    addMIDIInputListeners() {\n        // Listen to control change message\n        this.MIDIInput.addListener(\"controlchange\", this.midiChanInput, function (e) {\n            /*\n            midiCountPattern = 0;\n            midiCountEq = 0;\n            midiCountEnv = 0;\n            */\n            const cc = e.controller.number;\n            const val = e.value;\n            const roundFunc = (val) => Math.round(val * 100) / 100;\n            const selected = window.welle.app.selected;\n            let vol = 0;\n\n            // console.log(`Received 'controlchange' message. CC: ${cc}, val: ${val}`);\n\n            // set time out to avoid midi receive/send issues, only valid on input midi channel\n            window.welle.app.midiTransferOngoing = true;\n            setTimeout(() => {\n                window.welle.app.midiTransferOngoing = false;\n            }, 5);\n\n            // only assign, if some instrument is selected\n            if (selected.name != \"\") {\n                // VOLUME\n                if (cc == 9) {\n                    vol = roundFunc(val / 126);\n\n                    window.welle.app.setVolume({\n                        instruments: [selected.name],\n                        volume: vol,\n                        midi: true,\n                    });\n                    // console.log(`In Volume: ${vol} for inst: ${selected.name}`);\n                    console.log(`MIDI input (${selected.name}) vol: ${vol} `);\n                }\n\n                // PATTERN\n                if (cc >= 1 && cc <= 8) {\n                    const index = cc - 1;\n                    // this is a partial sequence update at one index\n                    let sequence = window.welle.app.selected.sequence;\n                    let inst = window.welle.app.selected.name;\n                    let sequenceMidi = [];\n                    let sequencePattern = \"\";\n\n                    if (val == 0) sequence[index] = null;\n                    else sequence[index] = \"C3\";\n\n                    sequence.forEach((e) => {\n                        // convert to pattern\n                        if (e == null) {\n                            // convert to midi note numbers\n                            sequenceMidi.push(null);\n                            sequencePattern += \"-\";\n                        } else {\n                            // convert to midi note numbers, than -48 to match grammar input\n                            sequenceMidi.push(Tone.Frequency(e).toMidi() - 48);\n                            sequencePattern += \"#\";\n                        }\n                    });\n\n                    // find inst in list of instruments, update sequence, render content\n                    window.welle.app.instruments.forEach((entry) => {\n                        if (entry.name == inst) {\n                            entry.updateSequence(sequenceMidi, sequencePattern);\n                            // console.log(`update sequence for ${inst}`);\n                            window.welle.app.renderContent();\n                        }\n                    });\n                }\n\n                // // EQ\n                // if (num >= 10 && num <= 14) {\n                //     const index = num - 10;\n                //     const eqVal = round(val / 126);\n                //     window.welle.app.midiCountEq = window.welle.app.midiCountEq + 1;\n\n                //     window.welle.app.midiEq; // {\"high\":0,\"highFrequency\":5000,\"mid\":0,\"lowFrequency\":400,\"low\":0}\n                //     window.welle.app.midiEq.name = selected.name;\n                //     if (index == 0)\n                //         window.welle.app.midiEq.low = window.welle.app.map(\n                //             eqVal,\n                //             0.0,\n                //             1.0,\n                //             -12,\n                //             12\n                //         );\n                //     if (index == 1)\n                //         window.welle.app.midiEq.lowFrequency = window.welle.app.map(\n                //             eqVal,\n                //             0.0,\n                //             1.0,\n                //             0,\n                //             1000\n                //         );\n                //     if (index == 2)\n                //         window.welle.app.midiEq.mid = window.welle.app.map(\n                //             eqVal,\n                //             0.0,\n                //             1.0,\n                //             -12,\n                //             12\n                //         );\n                //     if (index == 3)\n                //         window.welle.app.midiEq.highFrequency = window.welle.app.map(\n                //             eqVal,\n                //             0.0,\n                //             1.0,\n                //             1000,\n                //             13000\n                //         );\n                //     if (index == 4)\n                //         window.welle.app.midiEq.high = window.welle.app.map(\n                //             eqVal,\n                //             0.0,\n                //             1.0,\n                //             -12,\n                //             12\n                //         );\n\n                //     if (window.welle.app.midiCountEq == 5) {\n                //         window.welle.app.setEqToSelected(window.welle.app.midiEq);\n                //         selected.eq = window.welle.app.midiEq;\n                //         window.welle.app.midiCountEq = 0;\n                //         console.log(\n                //             `MIDI input (${selected.name}) eq: ${selected.eq.low}, ${selected.eq.lowFrequency}, ${selected.eq.mid}, ${selected.eq.highFrequency}, ${selected.eq.high} `\n                //         );\n                //     }\n                // }\n\n                // // ENVELOPE\n                // if (num >= 16 && num <= 19) {\n                //     const index = num - 16;\n                //     const env = round(val / 126);\n                //     window.welle.app.midiCountEnv = window.welle.app.midiCountEnv + 1;\n\n                //     window.welle.app.midiEnv.name = selected.name;\n                //     if (index == 0) window.welle.app.midiEnv.attack = env;\n                //     if (index == 1) window.welle.app.midiEnv.decay = env;\n                //     if (index == 2) window.welle.app.midiEnv.sustain = env;\n                //     if (index == 3) window.welle.app.midiEnv.release = env;\n\n                //     if (window.welle.app.midiCountEnv == 4) {\n                //         window.welle.app.setEnvToSelected(window.welle.app.midiEnv);\n                //         selected.env = window.welle.app.midiEnv;\n                //         window.welle.app.midiCountEnv = 0;\n                //         console.log(\n                //             `MIDI input (${selected.name}) env: ${selected.env.attack}, ${selected.env.decay}, ${selected.env.sustain}, ${selected.env.release}`\n                //         );\n                //     }\n                // }\n            }\n        });\n    }\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n\n    // ============================================\n    // MULTI USER SESSION\n    // ============================================\n\n    updateUsers(users) {\n        if (this.user != \"local\") {\n            this.session = [];\n            this.session = users;\n        }\n        this.renderContent();\n    }\n    setUser(name) {\n        this.user = name;\n        this.session.push(name);\n        console.log(`new user name: ${name}`);\n        // this.renderSession();\n    }\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n\n    // ============================================\n    // presets\n    // ============================================\n\n    createPreset(name) {\n        const preset = {\n            name: name,\n            bpm: this.bpm,\n            samplePack: this.currentSamplePack,\n            parts: this.parts,\n            activeInstruments: [],\n        };\n        // iterate through storedInstruments collection\n        // mute, name, volume, pattern, patternRaw, sequence, random\n        this.activeInstruments.forEach((inst) => {\n            this.instruments.forEach((entry) => {\n                if (entry.name == inst) {\n                    const name = entry.name;\n                    const mute = entry.getMute();\n                    const volume = Math.round(entry.getVolume() * 100) / 100;\n                    const rand = entry.getRand();\n                    const sequence = entry.getSequence();\n                    const pattern = entry.getPattern();\n                    const rawPattern = entry.getPatternRaw();\n\n                    const content = {\n                        name: name,\n                        mute: mute,\n                        rand: rand,\n                        volume: volume,\n                        sequence: sequence,\n                        pattern: pattern,\n                        rawPattern: rawPattern,\n                    };\n                    preset.activeInstruments.push(content);\n                }\n            });\n        });\n        console.log(`preset >${name}: `, preset);\n        Socket.emit(\"storePreset\", { name: name, preset: preset });\n    }\n\n    //\n    //\n    //\n\n    loadPreset(message) {\n        console.log(`App load preset`, message);\n        this.presetData = message;\n        this.muteApp(true);\n        setTimeout(() => {\n            this.muteApp(false);\n        }, 800);\n        // // first delete all:\n        // // this.deleteAll();\n\n        if (message.samplePack) {\n            console.log(`sample pack assigned in preset: ${message.samplePack}`);\n            this.selectSamplePack(message.samplePack);\n        } else {\n            console.log(`no sample pack assigned in preset`);\n        }\n\n        // clear screen\n        // this.renderContent();\n    }\n\n    initPresetData(message) {\n        // assign parts:\n        this.parts = message.parts;\n        // init message for sample creation\n        let initMessage = {};\n        message.activeInstruments.forEach((inst) => {\n            console.log(\"loadPrest for\", inst, inst.name);\n            this.instruments.forEach((entry) => {\n                if (inst.name == entry.name) {\n                    initMessage.instruments = [inst.name];\n                    initMessage.pattern = inst.pattern;\n                    initMessage.random = inst.random;\n                    initMessage.volume = inst.volume;\n                    initMessage.rawPattern = inst.rawPattern;\n                    console.log(\"loadPrest initMessage: \", initMessage);\n                    this.assignPattern(initMessage);\n                    if (inst.mute) entry.setMute(true);\n                }\n            });\n        });\n        this.stopAll();\n        this.renderContent();\n        // reset presetData var\n        this.presetData = undefined;\n    }\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n\n    // // check instruments\n    // checkInstruments(instruments) {\n    //     let returnMessage = {\n    //         validInstruments: undefined,\n    //         existingInstruments: undefined,\n    //         newInstruments: undefined,\n    //     };\n    //     // check if instruments are valid\n    //     const validInstruments = this.checkValidInstruments(instruments);\n\n    //     if (validInstruments) {\n    //         returnMessage.validInstruments = validInstruments;\n    //         // collect existing instruments\n    //         const existingInstruments = this.checkExistingInstruments(validInstruments);\n    //         if (existingInstruments) returnMessage.existingInstruments = existingInstruments;\n    //         // collect new instruments\n    //         const newInstruments = this.checkNewInstruments(validInstruments);\n    //         if (newInstruments) returnMessage.newInstruments = newInstruments;\n    //         // if (this.debug) console.log(`Existing: ${existingInstruments}  New: ${newInstruments}`);\n    //     }\n    //     // if (this.debug)\n    //     //     console.log(`returnMessage checkInstruments: ${JSON.stringify(returnMessage)}`);\n    //     return returnMessage;\n    // }\n\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n\n    // ============================================\n    // general\n    // ============================================\n\n    // addInstruments(presets) {\n    //     for (let preset in presets) {\n    //         const name = preset;\n    //         const fullPreset = { name: name, preset: presets[preset] };\n    //         // if (this.debug)\n    //         //     console.log(`\n    //         // incoming preset name:  ${name}\n    //         // preset: ${JSON.stringify(fullPreset)}\n    //         // `);\n    //         this.#listOfInstruments[name] = fullPreset;\n    //         this.#listOfAllInstruments[name] = fullPreset;\n    //     }\n    // }\n    // printAllInstruments() {\n    //     if (this.debug) {\n    //         console.log(`App all instruments:`);\n    //         for (let i in this.#listOfAllInstruments)\n    //             console.log(`: ${this.#listOfAllInstruments[i].name}`);\n    //         // console.log(`Details: ${JSON.stringify(this.#listOfAllInstruments, null, 0)}`);\n    //     }\n    // }\n\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n\n    // ============================================\n    // Tone - plainStartInstruments\n    // ============================================\n    /*\n    whenever interaction with an instrument, set this.selected to this instrument, copying name, eq, env, pattern\n    mark it visually in page, send midi states\n    */\n\n    // setEqToSelected(message) {\n    //     // console.log(`set selected instrument's EQ...`);\n    //     if (message == undefined) {\n    //         message = {\n    //             name: this.selected.name,\n    //             high: 0,\n    //             highFrequency: 5000,\n    //             mid: 0,\n    //             lowFrequency: 300,\n    //             low: -42,\n    //         };\n    //     }\n    //     this.#instruments[message.name].setEq(message);\n    // }\n    // setEnvToSelected(message) {\n    //     // console.log(`set selected instrument's EQ...`);\n    //     if (message == undefined) {\n    //         message = {\n    //             name: this.selected.name,\n    //             atk: 0.01,\n    //             dec: 0.3,\n    //             sus: 0.2,\n    //             rel: 1.1,\n    //         };\n    //     }\n    //     this.#instruments[message.name].setEnv(message);\n    // }\n\n    // // ============================================\n\n    // // ============================================\n\n    // // ============================================\n\n    // // ============================================\n\n    // // ============================================\n\n    // // ============================================\n\n    // // ============================================\n\n    // // ============================================\n\n    // // check instruments\n    // checkInstruments(instruments) {\n    //     let returnMessage = {\n    //         validInstruments: undefined,\n    //         existingInstruments: undefined,\n    //         newInstruments: undefined,\n    //     };\n    //     // check if instruments are valid\n    //     const validInstruments = this.checkValidInstruments(instruments);\n\n    //     if (validInstruments) {\n    //         returnMessage.validInstruments = validInstruments;\n    //         // collect existing instruments\n    //         const existingInstruments = this.checkExistingInstruments(validInstruments);\n    //         if (existingInstruments) returnMessage.existingInstruments = existingInstruments;\n    //         // collect new instruments\n    //         const newInstruments = this.checkNewInstruments(validInstruments);\n    //         if (newInstruments) returnMessage.newInstruments = newInstruments;\n    //         // if (this.debug) console.log(`Existing: ${existingInstruments}  New: ${newInstruments}`);\n    //     }\n    //     // if (this.debug)\n    //     //     console.log(`returnMessage checkInstruments: ${JSON.stringify(returnMessage)}`);\n    //     return returnMessage;\n    // }\n\n    // checkValidInstruments(instruments) {\n    //     // check if internal instrument list contains the instruments\n    //     const validInstruments = instruments.map((inst) => {\n    //         // if (this.debug)\n    //         //     console.log(\n    //         //         `Valid? check inst: ${inst} in list ${this.#listOfAllInstruments[inst]}`\n    //         //     );\n    //         if (this.#listOfAllInstruments[inst]) return inst;\n    //         else\n    //             this.addToConsole({\n    //                 valid: false,\n    //                 string: inst,\n    //                 comment: \"no such instrument\",\n    //                 user: this.user,\n    //             });\n    //     });\n    //     // if (this.debug)\n    //     //     console.log(\n    //     //         `vaild instruments: ${validInstruments}. Count: ${validInstruments.length}`\n    //     //     );\n    //     // filter null entries\n    //     const result = validInstruments.filter((x) => x);\n    //     if (result.length > 0) return result;\n    //     else return undefined;\n    // }\n\n    // checkExistingInstruments(instruments) {\n    //     const existingInstruments = instruments.map((inst) => {\n    //         if (this.#instruments[inst]) return inst;\n    //     });\n    //     // filter null entries\n    //     const result = existingInstruments.filter((x) => x);\n    //     if (result.length > 0) return result;\n    //     else return undefined;\n    // }\n\n    // checkNewInstruments(instruments) {\n    //     const newInstruments = instruments.map((inst) => {\n    //         if (!this.#instruments[inst]) return inst;\n    //     });\n    //     // filter null entries\n    //     const result = newInstruments.filter((x) => x);\n    //     if (result.length > 0) return result;\n    //     else return undefined;\n    // }\n\n    // createNewInstrument(message) {\n    //     if (this.#listOfSamples[message.name]) {\n    //         message.type = \"sampler\";\n    //         message.sample = this.#listOfSamples[message.name];\n    //     }\n    //     if (this.#listOfInstruments[message.name]) {\n    //         message.type = \"preset\";\n    //         message.preset = this.#listOfInstruments[message.name].preset;\n    //     }\n    //     if (this.debug) console.log(`create new inst ${message.name} as '${message.type}'`);\n    //     this.#instruments[message.name] = new Instrument(message);\n    // }\n\n    // //\n    // //\n    // //\n    // //\n    // //\n    // //\n    // //\n    // //\n\n    // // ============================================\n    // // Tone - delete things\n    // // ============================================\n\n    // // deletePreset(name) {\n    // //     if (this.#presets[name]) {\n    // //         console.log(`delete this preset: ${name}`);\n    // //         delete this.#presets[name];\n    // //         Socket.emit(\"deletePreset\", { name: name });\n    // //     }\n    // // }\n\n    // //\n    // //\n    // //\n    // //\n    // //\n    // //\n    // //\n    // //\n\n    // //\n    // //\n    // //\n    // //\n    // //\n    // //\n    // //\n    // //\n\n    // // ============================================\n    // // Tone - helper QUANT\n    // // ============================================\n    // toneQuant = () => {\n    //     // get time\n    //     const now = Tone.TransportTime().valueOf();\n    //     // set quantize factor\n    //     let factor = 1;\n    //     let factorOffset = 0.5;\n    //     // get quant time\n    //     const quant = Tone.Time(now).quantize(factor);\n    //     let playTime = quant;\n    //     let timeDifference = 0;\n    //     // if (this.debug) console.log(`Tone.now(): ${now}. quant: ${quant}`);\n    //     // if transport starts, set quant to 0\n    //     if (quant < now) {\n    //         playTime = now + factorOffset;\n    //         playTime = Tone.Time(playTime).quantize(factor);\n    //         timeDifference = playTime - now;\n    //         // console.log(\"quant < now. new calc: \", `now: ${now}, playTime: ${playTime}. quant factor: ${factor}. quant: ${quant}`)\n    //     } else timeDifference = quant - now;\n\n    //     if (now == 0) {\n    //         playTime = 0;\n    //         timeDifference = 0;\n    //     } else if (now >= 0 && now <= 0.01) {\n    //         playTime = 0.01;\n    //         timeDifference = playTime;\n    //     }\n    //     // safety: if below 0 than playTime is zero\n    //     if (playTime < 0) playTime = 0;\n    //     if (timeDifference < 0) timeDifference = 0;\n    //     //     console.log(`\n    //     // quant Tone.TransportTime().valueOf() +${factorOffset}-> now: ${now}/ Tone.now: ${Tone.now()} -\n    //     // play at: ${playTime}\n    //     // timeDifference playTime - now() : ${timeDifference}\n    //     // `);\n    //     // return quant playTime\n    //     return timeDifference;\n    // };\n}\n\nexport { WelleApp };\n","// WELLE - main index file //\n// =============================================================\n\n/*\nJS shorthand tipps: https://www.sitepoint.com/shorthand-javascript-techniques/\nJSON online parser: https://jsonformatter.curiousconcept.com/\n\ntutorial: https://medium.com/@sitapati/avoiding-mutable-global-state-in-browser-js-89437eaebaac\nglobal var naming: GlobalVar\n*/\n\n// libraries + class\n// ===================================\nimport io from \"socket.io-client\";\nimport \"regenerator-runtime/runtime\"; // for async functions with parcel bundler\nimport { WelleApp } from \"/js/app\";\nimport { Tone } from \"tone/build/esm/core/Tone\";\n\n// global variables\n// ===================================\nexport const App = new WelleApp();\nexport const Socket = io.connect(); // socket var - server connect, also for exports\nconst debug = true;\nlet presetRequest = false;\n//\n\n// IMPORTANT: teleport functions to document scope by creating\n// window object and storing functions/classes there\nwindow.welle = { name: \"welle\", app: App, instruments: {} };\n// console.log(`\n// Window: this is the document window's name: ${window.welle.name}.\n// And this is the App: ${JSON.stringify(window.welle.app)}`);\n\nfunction checkDevice() {\n    let device = \"else\";\n    var isMac = /(Mac)/i.test(navigator.platform);\n    var isWindows = /(Windows)/i.test(navigator.platform);\n    var isIOS = /(iPhone|iPod|iPad)/i.test(navigator.platform);\n    var isAndroid = /(Android)/i.test(navigator.platform);\n    var isWindowsPhone = /(Windows Phone)/i.test(navigator.platform);\n\n    if (isMac) device = \"mac\";\n    if (isWindows) device = \"windows\";\n    if (isIOS) device = \"ios\";\n    if (isAndroid) device = \"android\";\n    if (isWindowsPhone) device = \"windowsPhone\";\n    return device;\n}\nconsole.log(\"checkdevice: \", checkDevice());\nif (checkDevice() == \"ios\" || checkDevice() == \"android\" || checkDevice() == \"windowsPhone\") {\n    document.getElementById(\"rec-button\").style.display = \"none\";\n    document.getElementById(\"file\").style.display = \"none\";\n    document.getElementById(\"filesDiv\").style.display = \"none\";\n}\n\n// ============================================\n// INPUT - manage text input & key interactions\n// ============================================\n\n// display eventlistener\ndocument.getElementById(\"language-button\").addEventListener(\"click\", (e) => {\n    const val = document.getElementById(\"language-button\").value;\n    console.log(\"change texts and language\", val);\n\n    if (val == \"deutsch\") {\n        App.setLanguage(\"deutsch\");\n    }\n    if (val == \"english\") {\n        App.setLanguage(\"english\");\n    }\n});\n\n// focus on main input field: - maybe not to explore the whole site before..\n// for development\n// document.getElementById(\"mainInput\").focus();\n\n// start Tone.js on keydown\ndocument.getElementById(\"mainDiv\").addEventListener(\"click\", (e) => {\n    App.startTone();\n});\n\n// Eventlistener for Start/ Stop Button\ndocument.getElementById(\"transport-button\").addEventListener(\"click\", () => {\n    const val = document.getElementById(\"transport-button\").value;\n    if (val == \"PLAY\") {\n        App.startTransport();\n    }\n    if (val == \"STOP\") {\n        App.stopTransport();\n    }\n});\n\n// Eventlistener for Input field\ndocument.getElementById(\"mainInput\").addEventListener(\"keydown\", (e) => {\n    // ENTER - in main input field\n    if (e.code == \"Enter\") {\n        App.tutorial = false;\n        // get input string\n        const input = document.getElementById(\"mainInput\").value.toLowerCase();\n        Socket.emit(\"consoleInput\", { id: App.id, input: input });\n        // send input to App to handle\n        App.handleMainInput(input);\n    }\n\n    // arrow functions\n    if (e.code == \"ArrowUp\") {\n        App.arrowUp();\n    }\n    if (e.code == \"ArrowDown\") {\n        App.arrowDown();\n    }\n    // if (e.code=='Digit1') {\n    // \trequestServerFiles (\"samples\");\n    // \tprinter(debug, context, \"request Server Files\", `Index: socket send \"requestServerFiles\", 'samples'.. `)\n    // }\n});\n\n//\n\n// ============================================\n// SOCKET HANDLING\n// ============================================\n\n// SOCKET on initial connection\nSocket.on(\"connect\", function (data) {\n    App.id = Socket.id;\n    console.log(`Socket Connected! Id: ${App.id}, user: ${App.user}`);\n    if (App.getAlertsNum() == 0) Socket.emit(\"requestAlerts\");\n    if (App.getSamplesNum() == 0) Socket.emit(\"requestSampleFiles\");\n    // if (App.getInstrumentsNum() == 0) Socket.emit(\"requestTonePresets\");\n    Socket.emit(\"requestSamplePacks\");\n});\n\n// SOCKET on receiving audioFile Paths\nSocket.on(\"sampleFiles\", (message) => {\n    // console.log(`Socket: get (${message.count}) samples. `);\n    // console.log(`#samples num ... (${App.getSamplesNum()})`);\n\n    // check Transport state:\n    console.log(`configLoop started? ${App.configLoopStarted}`);\n\n    // if (Tone.Transport != undefined) Tone.Transport.get();\n    if (App.getSamplesNum() == 0) {\n        App.addSamples(message.samples);\n    }\n    // create all Instruments + Grid, when loading finished\n    if (App.getSamplesNum() == message.count) {\n        // console.log(`start instrument creation with ${App.getSamplesNum()} samples`);\n        App.instruments = App.makeSynths({ count: App.getSamplesNum(), samples: App.samples });\n        // console.log(`new instruments: `);\n        // console.log(App.instruments);\n        App.grid = App.makeGrid(App.instruments);\n        // console.log(App.grid);\n        if (!App.configLoopStarted) App.configLoop();\n        // App.instruments[1].sequence[0] = \"C3\";\n        // App.instruments[0].sequence[6] = \"C3\";\n        // console.log(`App.instruments .. ${App.instruments[1].sequence}`);\n        // App.startTransport();\n        App.renderContent();\n        console.log(`App files loaded`);\n        document.getElementById(\"loaderDiv\").style.display = \"none\";\n\n        // delay for sample buffers\n        setTimeout(() => {\n            console.log(`is there preset data? : ${App.presetData}`);\n            if (App.presetData != undefined) {\n                App.initPresetData(App.presetData);\n            }\n        }, 500);\n    }\n});\n\nSocket.on(\"samplePacks\", (message) => {\n    let packs = undefined;\n    let numPacks = undefined;\n    if (message != undefined) {\n        if (message.samplePacks != undefined) {\n            packs = message.samplePacks;\n            numPacks = packs.length;\n        }\n    }\n    console.log(`incoming smaplePacks (${numPacks}): ${packs}`);\n    App.addSamplePacks({ packs: packs });\n});\n\n// SOCKET receive alerts - createAlerts(alerts);\nSocket.on(\"alerts\", (message) => {\n    // console.log(`Socket: get (${message.count}) alerts. `);\n    if (App.getAlertsNum() == 0) {\n        App.addAlerts(message.samples);\n    }\n});\n\n// SOCKET new User\nSocket.on(\"allUsers\", (message) => {\n    console.log(`incoming all users: ${message.users}`);\n    App.updateUsers(message.users);\n});\n\n// SOCKET session data\nSocket.on(\"sessionData\", (message) => {\n    console.log(`incoming session data: ${JSON.stringify(message)}`);\n    App.handleRemoteInput(message);\n});\n\n// SOCKET preset URL\nSocket.on(\"presetURL\", (message) => {\n    console.log(`message.url: ${message.url}, file: ${message.file}`);\n    const anchor = document.createElement(\"a\", { href: message.url });\n    anchor.download = \"composition.json\";\n    anchor.href = message.url;\n    anchor.setAttribute(\"visibility\", \"hidden\");\n    anchor.setAttribute(\"display\", \"none\");\n    document.body.append(anchor);\n    anchor.click();\n    anchor.remove();\n});\n\nconst submitComposition = (e) => {\n    e.preventDefault();\n    let message = \"\";\n    let formData = new FormData(document.getElementById(\"compositionForm\"));\n    let options = { body: formData, method: \"POST\" };\n    fetch(\"/upload-preset\", options)\n        .then(function (response) {\n            return response.json();\n        })\n        .then(function (data) {\n            // have the JSON response from the POST operation here\n            console.log(data);\n            message = data.message;\n            document.getElementById(\"jsonFeedbackText\").style.display = \"block\";\n            document.getElementById(\n                \"jsonFeedbackText\"\n            ).innerHTML = `<p><span class=\"serverFeedback\">${message}</span></p>`;\n            if (data.success) {\n                console.log(\"load composition from server : )\");\n                presetRequest = true;\n                Socket.emit(\"requestPreset\");\n                // mute app temporarily\n                setTimeout(() => {\n                    App.playAlert(\"enter\");\n                }, 800);\n            }\n            if (data.success == false) App.playAlert(\"error\");\n        })\n        .catch(function (err) {\n            console.log(err);\n        });\n};\ndocument.getElementById(\"compositionLoad\").addEventListener(\"change\", submitComposition);\n\nSocket.on(\"presetData\", (message) => {\n    if (presetRequest) {\n        console.log(\"preset arrived in client:\", message);\n        presetRequest = false;\n        setTimeout(() => {\n            App.loadPreset(message);\n        }, 200);\n    }\n});\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n// SOCKET receive tonePresets\n// Socket.on(\"tonePresets\", (presets) => {\n//     if (App.getInstrumentsNum() == 0) {\n//         App.addInstruments(presets);\n//         App.printAllInstruments();\n//         App.renderInstrumentsOverview();\n//     }\n// });\n\n// SOCKET presets\n// Socket.on(\"presets\", (presets) => {\n//     console.log(`incoming presets: `, presets);\n//     App.storePresets(presets);\n// });\n"]}