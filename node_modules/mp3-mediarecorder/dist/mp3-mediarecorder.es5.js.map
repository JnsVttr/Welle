{"version":3,"file":"mp3-mediarecorder.es5.js","sources":["../node_modules/event-target-shim/src/event.mjs","../node_modules/event-target-shim/src/event-target.mjs","../src/types/post-message.type.ts","../src/worker.ts","../src/recorder.ts"],"sourcesContent":["/**\n * @typedef {object} PrivateData\n * @property {EventTarget} eventTarget The event target.\n * @property {{type:string}} event The original event object.\n * @property {number} eventPhase The current event phase.\n * @property {EventTarget|null} currentTarget The current event target.\n * @property {boolean} canceled The flag to prevent default.\n * @property {boolean} stopped The flag to stop propagation.\n * @property {boolean} immediateStopped The flag to stop propagation immediately.\n * @property {Function|null} passiveListener The listener if the current listener is passive. Otherwise this is null.\n * @property {number} timeStamp The unix time.\n * @private\n */\n\n/**\n * Private data for event wrappers.\n * @type {WeakMap<Event, PrivateData>}\n * @private\n */\nconst privateData = new WeakMap()\n\n/**\n * Cache for wrapper classes.\n * @type {WeakMap<Object, Function>}\n * @private\n */\nconst wrappers = new WeakMap()\n\n/**\n * Get private data.\n * @param {Event} event The event object to get private data.\n * @returns {PrivateData} The private data of the event.\n * @private\n */\nfunction pd(event) {\n    const retv = privateData.get(event)\n    console.assert(\n        retv != null,\n        \"'this' is expected an Event object, but got\",\n        event\n    )\n    return retv\n}\n\n/**\n * https://dom.spec.whatwg.org/#set-the-canceled-flag\n * @param data {PrivateData} private data.\n */\nfunction setCancelFlag(data) {\n    if (data.passiveListener != null) {\n        if (\n            typeof console !== \"undefined\" &&\n            typeof console.error === \"function\"\n        ) {\n            console.error(\n                \"Unable to preventDefault inside passive event listener invocation.\",\n                data.passiveListener\n            )\n        }\n        return\n    }\n    if (!data.event.cancelable) {\n        return\n    }\n\n    data.canceled = true\n    if (typeof data.event.preventDefault === \"function\") {\n        data.event.preventDefault()\n    }\n}\n\n/**\n * @see https://dom.spec.whatwg.org/#interface-event\n * @private\n */\n/**\n * The event wrapper.\n * @constructor\n * @param {EventTarget} eventTarget The event target of this dispatching.\n * @param {Event|{type:string}} event The original event to wrap.\n */\nfunction Event(eventTarget, event) {\n    privateData.set(this, {\n        eventTarget,\n        event,\n        eventPhase: 2,\n        currentTarget: eventTarget,\n        canceled: false,\n        stopped: false,\n        immediateStopped: false,\n        passiveListener: null,\n        timeStamp: event.timeStamp || Date.now(),\n    })\n\n    // https://heycam.github.io/webidl/#Unforgeable\n    Object.defineProperty(this, \"isTrusted\", { value: false, enumerable: true })\n\n    // Define accessors\n    const keys = Object.keys(event)\n    for (let i = 0; i < keys.length; ++i) {\n        const key = keys[i]\n        if (!(key in this)) {\n            Object.defineProperty(this, key, defineRedirectDescriptor(key))\n        }\n    }\n}\n\n// Should be enumerable, but class methods are not enumerable.\nEvent.prototype = {\n    /**\n     * The type of this event.\n     * @type {string}\n     */\n    get type() {\n        return pd(this).event.type\n    },\n\n    /**\n     * The target of this event.\n     * @type {EventTarget}\n     */\n    get target() {\n        return pd(this).eventTarget\n    },\n\n    /**\n     * The target of this event.\n     * @type {EventTarget}\n     */\n    get currentTarget() {\n        return pd(this).currentTarget\n    },\n\n    /**\n     * @returns {EventTarget[]} The composed path of this event.\n     */\n    composedPath() {\n        const currentTarget = pd(this).currentTarget\n        if (currentTarget == null) {\n            return []\n        }\n        return [currentTarget]\n    },\n\n    /**\n     * Constant of NONE.\n     * @type {number}\n     */\n    get NONE() {\n        return 0\n    },\n\n    /**\n     * Constant of CAPTURING_PHASE.\n     * @type {number}\n     */\n    get CAPTURING_PHASE() {\n        return 1\n    },\n\n    /**\n     * Constant of AT_TARGET.\n     * @type {number}\n     */\n    get AT_TARGET() {\n        return 2\n    },\n\n    /**\n     * Constant of BUBBLING_PHASE.\n     * @type {number}\n     */\n    get BUBBLING_PHASE() {\n        return 3\n    },\n\n    /**\n     * The target of this event.\n     * @type {number}\n     */\n    get eventPhase() {\n        return pd(this).eventPhase\n    },\n\n    /**\n     * Stop event bubbling.\n     * @returns {void}\n     */\n    stopPropagation() {\n        const data = pd(this)\n\n        data.stopped = true\n        if (typeof data.event.stopPropagation === \"function\") {\n            data.event.stopPropagation()\n        }\n    },\n\n    /**\n     * Stop event bubbling.\n     * @returns {void}\n     */\n    stopImmediatePropagation() {\n        const data = pd(this)\n\n        data.stopped = true\n        data.immediateStopped = true\n        if (typeof data.event.stopImmediatePropagation === \"function\") {\n            data.event.stopImmediatePropagation()\n        }\n    },\n\n    /**\n     * The flag to be bubbling.\n     * @type {boolean}\n     */\n    get bubbles() {\n        return Boolean(pd(this).event.bubbles)\n    },\n\n    /**\n     * The flag to be cancelable.\n     * @type {boolean}\n     */\n    get cancelable() {\n        return Boolean(pd(this).event.cancelable)\n    },\n\n    /**\n     * Cancel this event.\n     * @returns {void}\n     */\n    preventDefault() {\n        setCancelFlag(pd(this))\n    },\n\n    /**\n     * The flag to indicate cancellation state.\n     * @type {boolean}\n     */\n    get defaultPrevented() {\n        return pd(this).canceled\n    },\n\n    /**\n     * The flag to be composed.\n     * @type {boolean}\n     */\n    get composed() {\n        return Boolean(pd(this).event.composed)\n    },\n\n    /**\n     * The unix time of this event.\n     * @type {number}\n     */\n    get timeStamp() {\n        return pd(this).timeStamp\n    },\n\n    /**\n     * The target of this event.\n     * @type {EventTarget}\n     * @deprecated\n     */\n    get srcElement() {\n        return pd(this).eventTarget\n    },\n\n    /**\n     * The flag to stop event bubbling.\n     * @type {boolean}\n     * @deprecated\n     */\n    get cancelBubble() {\n        return pd(this).stopped\n    },\n    set cancelBubble(value) {\n        if (!value) {\n            return\n        }\n        const data = pd(this)\n\n        data.stopped = true\n        if (typeof data.event.cancelBubble === \"boolean\") {\n            data.event.cancelBubble = true\n        }\n    },\n\n    /**\n     * The flag to indicate cancellation state.\n     * @type {boolean}\n     * @deprecated\n     */\n    get returnValue() {\n        return !pd(this).canceled\n    },\n    set returnValue(value) {\n        if (!value) {\n            setCancelFlag(pd(this))\n        }\n    },\n\n    /**\n     * Initialize this event object. But do nothing under event dispatching.\n     * @param {string} type The event type.\n     * @param {boolean} [bubbles=false] The flag to be possible to bubble up.\n     * @param {boolean} [cancelable=false] The flag to be possible to cancel.\n     * @deprecated\n     */\n    initEvent() {\n        // Do nothing.\n    },\n}\n\n// `constructor` is not enumerable.\nObject.defineProperty(Event.prototype, \"constructor\", {\n    value: Event,\n    configurable: true,\n    writable: true,\n})\n\n// Ensure `event instanceof window.Event` is `true`.\nif (typeof window !== \"undefined\" && typeof window.Event !== \"undefined\") {\n    Object.setPrototypeOf(Event.prototype, window.Event.prototype)\n\n    // Make association for wrappers.\n    wrappers.set(window.Event.prototype, Event)\n}\n\n/**\n * Get the property descriptor to redirect a given property.\n * @param {string} key Property name to define property descriptor.\n * @returns {PropertyDescriptor} The property descriptor to redirect the property.\n * @private\n */\nfunction defineRedirectDescriptor(key) {\n    return {\n        get() {\n            return pd(this).event[key]\n        },\n        set(value) {\n            pd(this).event[key] = value\n        },\n        configurable: true,\n        enumerable: true,\n    }\n}\n\n/**\n * Get the property descriptor to call a given method property.\n * @param {string} key Property name to define property descriptor.\n * @returns {PropertyDescriptor} The property descriptor to call the method property.\n * @private\n */\nfunction defineCallDescriptor(key) {\n    return {\n        value() {\n            const event = pd(this).event\n            return event[key].apply(event, arguments)\n        },\n        configurable: true,\n        enumerable: true,\n    }\n}\n\n/**\n * Define new wrapper class.\n * @param {Function} BaseEvent The base wrapper class.\n * @param {Object} proto The prototype of the original event.\n * @returns {Function} The defined wrapper class.\n * @private\n */\nfunction defineWrapper(BaseEvent, proto) {\n    const keys = Object.keys(proto)\n    if (keys.length === 0) {\n        return BaseEvent\n    }\n\n    /** CustomEvent */\n    function CustomEvent(eventTarget, event) {\n        BaseEvent.call(this, eventTarget, event)\n    }\n\n    CustomEvent.prototype = Object.create(BaseEvent.prototype, {\n        constructor: { value: CustomEvent, configurable: true, writable: true },\n    })\n\n    // Define accessors.\n    for (let i = 0; i < keys.length; ++i) {\n        const key = keys[i]\n        if (!(key in BaseEvent.prototype)) {\n            const descriptor = Object.getOwnPropertyDescriptor(proto, key)\n            const isFunc = typeof descriptor.value === \"function\"\n            Object.defineProperty(\n                CustomEvent.prototype,\n                key,\n                isFunc\n                    ? defineCallDescriptor(key)\n                    : defineRedirectDescriptor(key)\n            )\n        }\n    }\n\n    return CustomEvent\n}\n\n/**\n * Get the wrapper class of a given prototype.\n * @param {Object} proto The prototype of the original event to get its wrapper.\n * @returns {Function} The wrapper class.\n * @private\n */\nfunction getWrapper(proto) {\n    if (proto == null || proto === Object.prototype) {\n        return Event\n    }\n\n    let wrapper = wrappers.get(proto)\n    if (wrapper == null) {\n        wrapper = defineWrapper(getWrapper(Object.getPrototypeOf(proto)), proto)\n        wrappers.set(proto, wrapper)\n    }\n    return wrapper\n}\n\n/**\n * Wrap a given event to management a dispatching.\n * @param {EventTarget} eventTarget The event target of this dispatching.\n * @param {Object} event The event to wrap.\n * @returns {Event} The wrapper instance.\n * @private\n */\nexport function wrapEvent(eventTarget, event) {\n    const Wrapper = getWrapper(Object.getPrototypeOf(event))\n    return new Wrapper(eventTarget, event)\n}\n\n/**\n * Get the immediateStopped flag of a given event.\n * @param {Event} event The event to get.\n * @returns {boolean} The flag to stop propagation immediately.\n * @private\n */\nexport function isStopped(event) {\n    return pd(event).immediateStopped\n}\n\n/**\n * Set the current event phase of a given event.\n * @param {Event} event The event to set current target.\n * @param {number} eventPhase New event phase.\n * @returns {void}\n * @private\n */\nexport function setEventPhase(event, eventPhase) {\n    pd(event).eventPhase = eventPhase\n}\n\n/**\n * Set the current target of a given event.\n * @param {Event} event The event to set current target.\n * @param {EventTarget|null} currentTarget New current target.\n * @returns {void}\n * @private\n */\nexport function setCurrentTarget(event, currentTarget) {\n    pd(event).currentTarget = currentTarget\n}\n\n/**\n * Set a passive listener of a given event.\n * @param {Event} event The event to set current target.\n * @param {Function|null} passiveListener New passive listener.\n * @returns {void}\n * @private\n */\nexport function setPassiveListener(event, passiveListener) {\n    pd(event).passiveListener = passiveListener\n}\n","import {\n    isStopped,\n    setCurrentTarget,\n    setEventPhase,\n    setPassiveListener,\n    wrapEvent,\n} from \"./event.mjs\"\n\n/**\n * @typedef {object} ListenerNode\n * @property {Function} listener\n * @property {1|2|3} listenerType\n * @property {boolean} passive\n * @property {boolean} once\n * @property {ListenerNode|null} next\n * @private\n */\n\n/**\n * @type {WeakMap<object, Map<string, ListenerNode>>}\n * @private\n */\nconst listenersMap = new WeakMap()\n\n// Listener types\nconst CAPTURE = 1\nconst BUBBLE = 2\nconst ATTRIBUTE = 3\n\n/**\n * Check whether a given value is an object or not.\n * @param {any} x The value to check.\n * @returns {boolean} `true` if the value is an object.\n */\nfunction isObject(x) {\n    return x !== null && typeof x === \"object\" //eslint-disable-line no-restricted-syntax\n}\n\n/**\n * Get listeners.\n * @param {EventTarget} eventTarget The event target to get.\n * @returns {Map<string, ListenerNode>} The listeners.\n * @private\n */\nfunction getListeners(eventTarget) {\n    const listeners = listenersMap.get(eventTarget)\n    if (listeners == null) {\n        throw new TypeError(\n            \"'this' is expected an EventTarget object, but got another value.\"\n        )\n    }\n    return listeners\n}\n\n/**\n * Get the property descriptor for the event attribute of a given event.\n * @param {string} eventName The event name to get property descriptor.\n * @returns {PropertyDescriptor} The property descriptor.\n * @private\n */\nfunction defineEventAttributeDescriptor(eventName) {\n    return {\n        get() {\n            const listeners = getListeners(this)\n            let node = listeners.get(eventName)\n            while (node != null) {\n                if (node.listenerType === ATTRIBUTE) {\n                    return node.listener\n                }\n                node = node.next\n            }\n            return null\n        },\n\n        set(listener) {\n            if (typeof listener !== \"function\" && !isObject(listener)) {\n                listener = null // eslint-disable-line no-param-reassign\n            }\n            const listeners = getListeners(this)\n\n            // Traverse to the tail while removing old value.\n            let prev = null\n            let node = listeners.get(eventName)\n            while (node != null) {\n                if (node.listenerType === ATTRIBUTE) {\n                    // Remove old value.\n                    if (prev !== null) {\n                        prev.next = node.next\n                    } else if (node.next !== null) {\n                        listeners.set(eventName, node.next)\n                    } else {\n                        listeners.delete(eventName)\n                    }\n                } else {\n                    prev = node\n                }\n\n                node = node.next\n            }\n\n            // Add new value.\n            if (listener !== null) {\n                const newNode = {\n                    listener,\n                    listenerType: ATTRIBUTE,\n                    passive: false,\n                    once: false,\n                    next: null,\n                }\n                if (prev === null) {\n                    listeners.set(eventName, newNode)\n                } else {\n                    prev.next = newNode\n                }\n            }\n        },\n        configurable: true,\n        enumerable: true,\n    }\n}\n\n/**\n * Define an event attribute (e.g. `eventTarget.onclick`).\n * @param {Object} eventTargetPrototype The event target prototype to define an event attrbite.\n * @param {string} eventName The event name to define.\n * @returns {void}\n */\nfunction defineEventAttribute(eventTargetPrototype, eventName) {\n    Object.defineProperty(\n        eventTargetPrototype,\n        `on${eventName}`,\n        defineEventAttributeDescriptor(eventName)\n    )\n}\n\n/**\n * Define a custom EventTarget with event attributes.\n * @param {string[]} eventNames Event names for event attributes.\n * @returns {EventTarget} The custom EventTarget.\n * @private\n */\nfunction defineCustomEventTarget(eventNames) {\n    /** CustomEventTarget */\n    function CustomEventTarget() {\n        EventTarget.call(this)\n    }\n\n    CustomEventTarget.prototype = Object.create(EventTarget.prototype, {\n        constructor: {\n            value: CustomEventTarget,\n            configurable: true,\n            writable: true,\n        },\n    })\n\n    for (let i = 0; i < eventNames.length; ++i) {\n        defineEventAttribute(CustomEventTarget.prototype, eventNames[i])\n    }\n\n    return CustomEventTarget\n}\n\n/**\n * EventTarget.\n *\n * - This is constructor if no arguments.\n * - This is a function which returns a CustomEventTarget constructor if there are arguments.\n *\n * For example:\n *\n *     class A extends EventTarget {}\n *     class B extends EventTarget(\"message\") {}\n *     class C extends EventTarget(\"message\", \"error\") {}\n *     class D extends EventTarget([\"message\", \"error\"]) {}\n */\nfunction EventTarget() {\n    /*eslint-disable consistent-return */\n    if (this instanceof EventTarget) {\n        listenersMap.set(this, new Map())\n        return\n    }\n    if (arguments.length === 1 && Array.isArray(arguments[0])) {\n        return defineCustomEventTarget(arguments[0])\n    }\n    if (arguments.length > 0) {\n        const types = new Array(arguments.length)\n        for (let i = 0; i < arguments.length; ++i) {\n            types[i] = arguments[i]\n        }\n        return defineCustomEventTarget(types)\n    }\n    throw new TypeError(\"Cannot call a class as a function\")\n    /*eslint-enable consistent-return */\n}\n\n// Should be enumerable, but class methods are not enumerable.\nEventTarget.prototype = {\n    /**\n     * Add a given listener to this event target.\n     * @param {string} eventName The event name to add.\n     * @param {Function} listener The listener to add.\n     * @param {boolean|{capture?:boolean,passive?:boolean,once?:boolean}} [options] The options for this listener.\n     * @returns {void}\n     */\n    addEventListener(eventName, listener, options) {\n        if (listener == null) {\n            return\n        }\n        if (typeof listener !== \"function\" && !isObject(listener)) {\n            throw new TypeError(\"'listener' should be a function or an object.\")\n        }\n\n        const listeners = getListeners(this)\n        const optionsIsObj = isObject(options)\n        const capture = optionsIsObj\n            ? Boolean(options.capture)\n            : Boolean(options)\n        const listenerType = capture ? CAPTURE : BUBBLE\n        const newNode = {\n            listener,\n            listenerType,\n            passive: optionsIsObj && Boolean(options.passive),\n            once: optionsIsObj && Boolean(options.once),\n            next: null,\n        }\n\n        // Set it as the first node if the first node is null.\n        let node = listeners.get(eventName)\n        if (node === undefined) {\n            listeners.set(eventName, newNode)\n            return\n        }\n\n        // Traverse to the tail while checking duplication..\n        let prev = null\n        while (node != null) {\n            if (\n                node.listener === listener &&\n                node.listenerType === listenerType\n            ) {\n                // Should ignore duplication.\n                return\n            }\n            prev = node\n            node = node.next\n        }\n\n        // Add it.\n        prev.next = newNode\n    },\n\n    /**\n     * Remove a given listener from this event target.\n     * @param {string} eventName The event name to remove.\n     * @param {Function} listener The listener to remove.\n     * @param {boolean|{capture?:boolean,passive?:boolean,once?:boolean}} [options] The options for this listener.\n     * @returns {void}\n     */\n    removeEventListener(eventName, listener, options) {\n        if (listener == null) {\n            return\n        }\n\n        const listeners = getListeners(this)\n        const capture = isObject(options)\n            ? Boolean(options.capture)\n            : Boolean(options)\n        const listenerType = capture ? CAPTURE : BUBBLE\n\n        let prev = null\n        let node = listeners.get(eventName)\n        while (node != null) {\n            if (\n                node.listener === listener &&\n                node.listenerType === listenerType\n            ) {\n                if (prev !== null) {\n                    prev.next = node.next\n                } else if (node.next !== null) {\n                    listeners.set(eventName, node.next)\n                } else {\n                    listeners.delete(eventName)\n                }\n                return\n            }\n\n            prev = node\n            node = node.next\n        }\n    },\n\n    /**\n     * Dispatch a given event.\n     * @param {Event|{type:string}} event The event to dispatch.\n     * @returns {boolean} `false` if canceled.\n     */\n    dispatchEvent(event) {\n        if (event == null || typeof event.type !== \"string\") {\n            throw new TypeError('\"event.type\" should be a string.')\n        }\n\n        // If listeners aren't registered, terminate.\n        const listeners = getListeners(this)\n        const eventName = event.type\n        let node = listeners.get(eventName)\n        if (node == null) {\n            return true\n        }\n\n        // Since we cannot rewrite several properties, so wrap object.\n        const wrappedEvent = wrapEvent(this, event)\n\n        // This doesn't process capturing phase and bubbling phase.\n        // This isn't participating in a tree.\n        let prev = null\n        while (node != null) {\n            // Remove this listener if it's once\n            if (node.once) {\n                if (prev !== null) {\n                    prev.next = node.next\n                } else if (node.next !== null) {\n                    listeners.set(eventName, node.next)\n                } else {\n                    listeners.delete(eventName)\n                }\n            } else {\n                prev = node\n            }\n\n            // Call this listener\n            setPassiveListener(\n                wrappedEvent,\n                node.passive ? node.listener : null\n            )\n            if (typeof node.listener === \"function\") {\n                try {\n                    node.listener.call(this, wrappedEvent)\n                } catch (err) {\n                    if (\n                        typeof console !== \"undefined\" &&\n                        typeof console.error === \"function\"\n                    ) {\n                        console.error(err)\n                    }\n                }\n            } else if (\n                node.listenerType !== ATTRIBUTE &&\n                typeof node.listener.handleEvent === \"function\"\n            ) {\n                node.listener.handleEvent(wrappedEvent)\n            }\n\n            // Break if `event.stopImmediatePropagation` was called.\n            if (isStopped(wrappedEvent)) {\n                break\n            }\n\n            node = node.next\n        }\n        setPassiveListener(wrappedEvent, null)\n        setEventPhase(wrappedEvent, 0)\n        setCurrentTarget(wrappedEvent, null)\n\n        return !wrappedEvent.defaultPrevented\n    },\n}\n\n// `constructor` is not enumerable.\nObject.defineProperty(EventTarget.prototype, \"constructor\", {\n    value: EventTarget,\n    configurable: true,\n    writable: true,\n})\n\n// Ensure `eventTarget instanceof window.EventTarget` is `true`.\nif (\n    typeof window !== \"undefined\" &&\n    typeof window.EventTarget !== \"undefined\"\n) {\n    Object.setPrototypeOf(EventTarget.prototype, window.EventTarget.prototype)\n}\n\nexport { defineEventAttribute, EventTarget }\nexport default EventTarget\n","import { WorkerConfig } from './config.type';\n\nexport enum PostMessageType {\n    INIT_WORKER = 'INIT_WORKER',\n    DATA_AVAILABLE = 'DATA_AVAILABLE',\n    START_RECORDING = 'START_RECORDING',\n    STOP_RECORDING = 'STOP_RECORDING',\n    ERROR = 'ERROR',\n    BLOB_READY = 'BLOB_READY',\n    WORKER_RECORDING = 'WORKER_RECORDING',\n    WORKER_READY = 'WORKER_READY'\n}\n\nexport const initMessage = (wasmURL: string) => ({\n    type: PostMessageType.INIT_WORKER as PostMessageType.INIT_WORKER,\n    wasmURL\n});\nexport const errorMessage = (error: string) => ({ type: PostMessageType.ERROR as PostMessageType.ERROR, error });\nexport const startRecordingMessage = (config: WorkerConfig) => ({\n    type: PostMessageType.START_RECORDING as PostMessageType.START_RECORDING,\n    config\n});\nexport const workerRecordingMessage = () => ({\n    type: PostMessageType.WORKER_RECORDING as PostMessageType.WORKER_RECORDING\n});\nexport const workerReadyMessage = () => ({ type: PostMessageType.WORKER_READY as PostMessageType.WORKER_READY });\n\nexport const dataAvailableMessage = (data: ArrayLike<number>) => ({\n    type: PostMessageType.DATA_AVAILABLE as PostMessageType.DATA_AVAILABLE,\n    data\n});\n\nexport const blobReadyMessage = (blob: Blob) => ({\n    type: PostMessageType.BLOB_READY as PostMessageType.BLOB_READY,\n    blob\n});\nexport const stopRecordingMessage = () => ({\n    type: PostMessageType.STOP_RECORDING as PostMessageType.STOP_RECORDING\n});\n\nexport type WorkerPostMessage = ReturnType<\n    | typeof initMessage\n    | typeof errorMessage\n    | typeof startRecordingMessage\n    | typeof dataAvailableMessage\n    | typeof blobReadyMessage\n    | typeof stopRecordingMessage\n    | typeof workerRecordingMessage\n    | typeof workerReadyMessage\n>;\n","import { WorkerPostMessage } from './types/post-message.type';\nimport { WorkerConfig } from './types/config.type';\n\nexport const mp3EncoderWorker = () => {\n    // from vmsg\n    // Must be in sync with emcc settings!\n    const TOTAL_STACK = 5 * 1024 * 1024;\n    const TOTAL_MEMORY = 128 * 1024 * 1024;\n    const WASM_PAGE_SIZE = 64 * 1024;\n    const ctx = (self as any) as WorkerGlobalScope;\n    const memory = new WebAssembly.Memory({\n        initial: TOTAL_MEMORY / WASM_PAGE_SIZE,\n        maximum: TOTAL_MEMORY / WASM_PAGE_SIZE\n    });\n    let dynamicTop = TOTAL_STACK;\n    let vmsg: VmsgWasm;\n    let isRecording = false;\n    let vmsgRef: number;\n    let pcmLeft: Float32Array;\n\n    const getWasmModuleFallback = (\n        url: string,\n        imports: object\n    ): Promise<WebAssembly.WebAssemblyInstantiatedSource> => {\n        return fetch(url)\n            .then(response => response.arrayBuffer())\n            .then(buffer => WebAssembly.instantiate(buffer, imports));\n    };\n\n    const getWasmModule = (url: string, imports: object): Promise<WebAssembly.WebAssemblyInstantiatedSource> => {\n        if (!WebAssembly.instantiateStreaming) {\n            return getWasmModuleFallback(url, imports);\n        }\n\n        return WebAssembly.instantiateStreaming(fetch(url), imports).catch(() => getWasmModuleFallback(url, imports));\n    };\n\n    const getVmsgImports = (): Record<string, any> => {\n        const onExit = (err: any) => {\n            ctx.postMessage({ type: 'ERROR', error: 'internal' });\n        };\n\n        const sbrk = (increment: number): number => {\n            const oldDynamicTop = dynamicTop;\n            dynamicTop += increment;\n            return oldDynamicTop;\n        };\n\n        const env = {\n            memory,\n            sbrk,\n            exit: onExit,\n            pow: Math.pow,\n            powf: Math.pow,\n            exp: Math.exp,\n            sqrtf: Math.sqrt,\n            cos: Math.cos,\n            log: Math.log,\n            sin: Math.sin\n        };\n\n        return { env };\n    };\n\n    const onStartRecording = (config: WorkerConfig): void => {\n        isRecording = true;\n        vmsgRef = vmsg.vmsg_init(config.sampleRate);\n        if (!vmsgRef || !vmsg) {\n            throw new Error('init_failed');\n        }\n        const pcmLeftRef = new Uint32Array(memory.buffer, vmsgRef, 1)[0];\n        pcmLeft = new Float32Array(memory.buffer, pcmLeftRef);\n    };\n\n    const onStopRecording = (): Blob => {\n        isRecording = false;\n        if (vmsg.vmsg_flush(vmsgRef) < 0) {\n            throw new Error('flush_failed');\n        }\n        const mp3BytesRef = new Uint32Array(memory.buffer, vmsgRef + 4, 1)[0];\n        const size = new Uint32Array(memory.buffer, vmsgRef + 8, 1)[0];\n        const mp3Bytes = new Uint8Array(memory.buffer, mp3BytesRef, size);\n        const blob = new Blob([mp3Bytes], { type: 'audio/mpeg' });\n        vmsg.vmsg_free(vmsgRef);\n        return blob;\n    };\n\n    const onDataReceived = (data: ArrayLike<number>): void => {\n        if (!isRecording) {\n            return;\n        }\n\n        pcmLeft.set(data);\n        const encodedBytesAmount = vmsg.vmsg_encode(vmsgRef, data.length);\n        if (encodedBytesAmount < 0) {\n            throw new Error('encoding_failed');\n        }\n    };\n\n    ctx.onmessage = event => {\n        const message: WorkerPostMessage = event.data;\n        try {\n            switch (message.type) {\n                case 'INIT_WORKER': {\n                    const imports = getVmsgImports();\n                    getWasmModule(message.wasmURL, imports)\n                        .then(wasm => {\n                            vmsg = wasm.instance.exports;\n                            ctx.postMessage({ type: 'WORKER_READY' });\n                        })\n                        .catch(err => {\n                            ctx.postMessage({ type: 'ERROR', error: err.message });\n                        });\n                    break;\n                }\n                case 'START_RECORDING': {\n                    onStartRecording(message.config);\n                    ctx.postMessage({ type: 'WORKER_RECORDING' });\n                    break;\n                }\n\n                case 'DATA_AVAILABLE': {\n                    onDataReceived(message.data);\n                    break;\n                }\n\n                case 'STOP_RECORDING': {\n                    const blob = onStopRecording();\n                    ctx.postMessage({ type: 'BLOB_READY', blob });\n                    break;\n                }\n            }\n        } catch (err) {\n            ctx.postMessage({ type: 'ERROR', error: err.message });\n        }\n    };\n};\n","import { defineEventAttribute, EventTarget } from 'event-target-shim';\nimport {\n    dataAvailableMessage,\n    initMessage,\n    PostMessageType,\n    startRecordingMessage,\n    stopRecordingMessage,\n    WorkerPostMessage\n} from './types/post-message.type';\nimport { GlobalConfig, Mp3MediaRecorderOptions } from './types/config.type';\nimport { mp3EncoderWorker } from './worker';\n\nconst MP3_MIME_TYPE = 'audio/mpeg';\nconst SafeAudioContext: typeof AudioContext = (window as any).AudioContext || (window as any).webkitAudioContext;\nconst createGain = (ctx: AudioContext) => (ctx.createGain || (ctx as any).createGainNode).call(ctx);\nconst createScriptProcessor = (ctx: AudioContext) =>\n    (ctx.createScriptProcessor || (ctx as any).createJavaScriptNode).call(ctx, 4096, 1, 1);\n\nexport const getMp3MediaRecorder = (config: GlobalConfig): Promise<typeof MediaRecorder> => {\n    const workerBlob = new Blob([`(${mp3EncoderWorker.toString()})()`], {\n        type: 'application/javascript'\n    });\n    const worker = new Worker(URL.createObjectURL(workerBlob));\n\n    class Mp3MediaRecorder extends EventTarget {\n        stream: MediaStream;\n        mimeType = MP3_MIME_TYPE;\n        state: RecordingState = 'inactive';\n        audioBitsPerSecond = 0;\n        videoBitsPerSecond = 0;\n\n        private audioContext: AudioContext;\n        private sourceNode: MediaStreamAudioSourceNode;\n        private gainNode: GainNode;\n        private processorNode: ScriptProcessorNode;\n\n        static isTypeSupported = (mimeType: string) => mimeType === MP3_MIME_TYPE;\n\n        constructor(stream: MediaStream, options: Mp3MediaRecorderOptions = {}) {\n            super();\n            const safeOptions = { ...options, audioContext: new SafeAudioContext() };\n            this.stream = stream;\n            this.audioContext = safeOptions.audioContext;\n            this.sourceNode = this.audioContext.createMediaStreamSource(stream);\n            this.gainNode = createGain(this.audioContext);\n            this.gainNode.gain.value = 1;\n            this.processorNode = createScriptProcessor(this.audioContext);\n            this.sourceNode.connect(this.gainNode);\n            this.gainNode.connect(this.processorNode);\n            worker.onmessage = this.onWorkerMessage;\n        }\n\n        start(): void {\n            this.processorNode.onaudioprocess = event => {\n                worker.postMessage(dataAvailableMessage(event.inputBuffer.getChannelData(0)));\n            };\n            this.processorNode.connect(this.audioContext.destination);\n            this.audioContext.resume();\n            worker.postMessage(startRecordingMessage({ sampleRate: this.audioContext.sampleRate }));\n        }\n\n        stop(): void {\n            this.processorNode.disconnect();\n            this.audioContext.suspend();\n            worker.postMessage(stopRecordingMessage());\n        }\n\n        pause(): void {\n            this.audioContext.suspend();\n            this.state = 'paused';\n            this.dispatchEvent(new Event('pause'));\n        }\n\n        resume(): void {\n            this.audioContext.resume();\n            this.state = 'recording';\n            this.dispatchEvent(new Event('resume'));\n        }\n\n        requestData(): void {\n            // not implemented, dataavailable event only fires when encoding is finished\n        }\n\n        private onWorkerMessage = (event: MessageEvent): void => {\n            const message: WorkerPostMessage = event.data;\n\n            switch (message.type) {\n                case PostMessageType.WORKER_RECORDING: {\n                    const event = new Event('start');\n                    this.dispatchEvent(event);\n                    this.state = 'recording';\n                    break;\n                }\n                case PostMessageType.ERROR: {\n                    const error = new DOMException(message.error);\n                    const fallbackEvent = new Event('error');\n                    (fallbackEvent as any).error = error;\n                    const event = window.MediaRecorderErrorEvent\n                        ? new MediaRecorderErrorEvent('error', { error })\n                        : fallbackEvent;\n                    this.dispatchEvent(event);\n                    this.state = 'inactive';\n                    break;\n                }\n                case PostMessageType.BLOB_READY: {\n                    const stopEvent = new Event('stop');\n                    const fallbackDataEvent = new Event('dataavailable');\n                    (fallbackDataEvent as any).data = message.blob;\n                    (fallbackDataEvent as any).timecode = Date.now();\n                    const dataEvent = window.BlobEvent\n                        ? new BlobEvent('dataavailable', {\n                              data: message.blob,\n                              timecode: Date.now()\n                          })\n                        : fallbackDataEvent;\n                    this.dispatchEvent(dataEvent);\n                    this.dispatchEvent(stopEvent);\n                    this.state = 'inactive';\n                    break;\n                }\n            }\n        };\n    }\n\n    defineEventAttribute(Mp3MediaRecorder.prototype, 'start');\n    defineEventAttribute(Mp3MediaRecorder.prototype, 'stop');\n    defineEventAttribute(Mp3MediaRecorder.prototype, 'pause');\n    defineEventAttribute(Mp3MediaRecorder.prototype, 'resume');\n    defineEventAttribute(Mp3MediaRecorder.prototype, 'dataavailable');\n    defineEventAttribute(Mp3MediaRecorder.prototype, 'error');\n\n    return new Promise((resolve, reject) => {\n        const wasmURL = new URL(config.wasmURL, window.location.origin).href;\n        worker.postMessage(initMessage(wasmURL));\n        worker.onmessage = ({ data }: { data: WorkerPostMessage }) => {\n            if (data.type === PostMessageType.WORKER_READY) {\n                resolve(Mp3MediaRecorder as any);\n            } else {\n                const errorMessage = data.type === PostMessageType.ERROR ? data.error : 'Unknown error occurred ';\n                reject(errorMessage);\n            }\n        };\n    });\n};\n"],"names":["privateData","WeakMap","wrappers","pd","event","const","retv","get","console","assert","setCancelFlag","data","passiveListener","cancelable","canceled","preventDefault","error","Event","eventTarget","set","eventPhase","currentTarget","stopped","immediateStopped","timeStamp","Date","now","Object","defineProperty","value","enumerable","key","keys","i","length","defineRedirectDescriptor","prototype","type","target","composedPath","NONE","CAPTURING_PHASE","AT_TARGET","BUBBLING_PHASE","stopPropagation","stopImmediatePropagation","bubbles","defaultPrevented","composed","srcElement","cancelBubble","returnValue","initEvent","configurable","writable","window","setPrototypeOf","defineCallDescriptor","apply","arguments","defineWrapper","BaseEvent","proto","CustomEvent","call","create","constructor","let","descriptor","getOwnPropertyDescriptor","isFunc","getWrapper","wrapper","getPrototypeOf","wrapEvent","Wrapper","isStopped","setEventPhase","setCurrentTarget","setPassiveListener","listenersMap","CAPTURE","BUBBLE","ATTRIBUTE","isObject","x","getListeners","listeners","TypeError","defineEventAttributeDescriptor","eventName","node","listenerType","listener","next","prev","delete","newNode","passive","once","defineEventAttribute","eventTargetPrototype","defineCustomEventTarget","eventNames","CustomEventTarget","EventTarget","Map","Array","isArray","types","addEventListener","options","optionsIsObj","capture","removeEventListener","dispatchEvent","wrappedEvent","err","handleEvent","PostMessageType","initMessage","wasmURL","INIT_WORKER","startRecordingMessage","config","START_RECORDING","dataAvailableMessage","DATA_AVAILABLE","stopRecordingMessage","STOP_RECORDING","mp3EncoderWorker","vmsg","vmsgRef","pcmLeft","TOTAL_MEMORY","WASM_PAGE_SIZE","ctx","self","memory","WebAssembly","Memory","initial","maximum","dynamicTop","isRecording","getWasmModuleFallback","url","imports","fetch","then","response","arrayBuffer","buffer","instantiate","getWasmModule","instantiateStreaming","catch","getVmsgImports","Math","pow","sbrk","increment","oldDynamicTop","env","exit","postMessage","powf","exp","sqrtf","sqrt","cos","log","sin","onStartRecording","vmsg_init","sampleRate","Error","pcmLeftRef","Uint32Array","Float32Array","onStopRecording","vmsg_flush","mp3BytesRef","size","mp3Bytes","Uint8Array","blob","Blob","vmsg_free","onDataReceived","encodedBytesAmount","vmsg_encode","onmessage","message","wasm","instance","exports","MP3_MIME_TYPE","SafeAudioContext","AudioContext","webkitAudioContext","createGain","createGainNode","createScriptProcessor","createJavaScriptNode","getMp3MediaRecorder","workerBlob","toString","worker","Worker","URL","createObjectURL","Mp3MediaRecorder","stream","super","WORKER_RECORDING","this","state","ERROR","DOMException","fallbackEvent","MediaRecorderErrorEvent","BLOB_READY","stopEvent","fallbackDataEvent","timecode","dataEvent","BlobEvent","safeOptions","audioContext","sourceNode","createMediaStreamSource","gainNode","gain","processorNode","connect","onWorkerMessage","start","onaudioprocess","inputBuffer","getChannelData","destination","resume","stop","disconnect","suspend","pause","requestData","mimeType","Promise","resolve","reject","location","origin","href","ref","WORKER_READY","errorMessage"],"mappings":"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"}